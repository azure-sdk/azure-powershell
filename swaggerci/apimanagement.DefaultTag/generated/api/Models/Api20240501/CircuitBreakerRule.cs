// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Extensions;

    /// <summary>Rule configuration to trip the backend.</summary>
    public partial class CircuitBreakerRule :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerRule,
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerRuleInternal
    {

        /// <summary>Backing field for <see cref="AcceptRetryAfter" /> property.</summary>
        private bool? _acceptRetryAfter;

        /// <summary>flag to accept Retry-After header from the backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public bool? AcceptRetryAfter { get => this._acceptRetryAfter; set => this._acceptRetryAfter = value; }

        /// <summary>Backing field for <see cref="FailureCondition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureCondition _failureCondition;

        /// <summary>The conditions for tripping the circuit breaker.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureCondition FailureCondition { get => (this._failureCondition = this._failureCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.CircuitBreakerFailureCondition()); set => this._failureCondition = value; }

        /// <summary>The threshold for opening the circuit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public long? FailureConditionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).Count; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).Count = value ?? default(long); }

        /// <summary>The error reasons which are considered as failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public string[] FailureConditionErrorReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).ErrorReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).ErrorReason = value ?? null /* arrayOf */; }

        /// <summary>The interval during which the failures are counted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? FailureConditionInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).Interval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).Interval = value ?? default(global::System.TimeSpan); }

        /// <summary>The threshold for opening the circuit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public long? FailureConditionPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).Percentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).Percentage = value ?? default(long); }

        /// <summary>The status code ranges which are considered as failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.IFailureStatusCodeRange[] FailureConditionStatusCodeRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).StatusCodeRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureConditionInternal)FailureCondition).StatusCodeRange = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for FailureCondition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureCondition Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerRuleInternal.FailureCondition { get => (this._failureCondition = this._failureCondition ?? new Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.CircuitBreakerFailureCondition()); set { {_failureCondition = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The rule name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="TripDuration" /> property.</summary>
        private global::System.TimeSpan? _tripDuration;

        /// <summary>The duration for which the circuit will be tripped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Origin(Microsoft.Azure.PowerShell.Cmdlets.Api.PropertyOrigin.Owned)]
        public global::System.TimeSpan? TripDuration { get => this._tripDuration; set => this._tripDuration = value; }

        /// <summary>Creates an new <see cref="CircuitBreakerRule" /> instance.</summary>
        public CircuitBreakerRule()
        {

        }
    }
    /// Rule configuration to trip the backend.
    public partial interface ICircuitBreakerRule :
        Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.IJsonSerializable
    {
        /// <summary>flag to accept Retry-After header from the backend.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"flag to accept Retry-After header from the backend.",
        SerializedName = @"acceptRetryAfter",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AcceptRetryAfter { get; set; }
        /// <summary>The threshold for opening the circuit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The threshold for opening the circuit.",
        SerializedName = @"count",
        PossibleTypes = new [] { typeof(long) })]
        long? FailureConditionCount { get; set; }
        /// <summary>The error reasons which are considered as failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The error reasons which are considered as failure.",
        SerializedName = @"errorReasons",
        PossibleTypes = new [] { typeof(string) })]
        string[] FailureConditionErrorReason { get; set; }
        /// <summary>The interval during which the failures are counted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval during which the failures are counted.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? FailureConditionInterval { get; set; }
        /// <summary>The threshold for opening the circuit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The threshold for opening the circuit.",
        SerializedName = @"percentage",
        PossibleTypes = new [] { typeof(long) })]
        long? FailureConditionPercentage { get; set; }
        /// <summary>The status code ranges which are considered as failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The status code ranges which are considered as failure.",
        SerializedName = @"statusCodeRanges",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.IFailureStatusCodeRange) })]
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.IFailureStatusCodeRange[] FailureConditionStatusCodeRange { get; set; }
        /// <summary>The rule name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The duration for which the circuit will be tripped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Api.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration for which the circuit will be tripped.",
        SerializedName = @"tripDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? TripDuration { get; set; }

    }
    /// Rule configuration to trip the backend.
    internal partial interface ICircuitBreakerRuleInternal

    {
        /// <summary>flag to accept Retry-After header from the backend.</summary>
        bool? AcceptRetryAfter { get; set; }
        /// <summary>The conditions for tripping the circuit breaker.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.ICircuitBreakerFailureCondition FailureCondition { get; set; }
        /// <summary>The threshold for opening the circuit.</summary>
        long? FailureConditionCount { get; set; }
        /// <summary>The error reasons which are considered as failure.</summary>
        string[] FailureConditionErrorReason { get; set; }
        /// <summary>The interval during which the failures are counted.</summary>
        global::System.TimeSpan? FailureConditionInterval { get; set; }
        /// <summary>The threshold for opening the circuit.</summary>
        long? FailureConditionPercentage { get; set; }
        /// <summary>The status code ranges which are considered as failure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Api.Models.Api20240501.IFailureStatusCodeRange[] FailureConditionStatusCodeRange { get; set; }
        /// <summary>The rule name.</summary>
        string Name { get; set; }
        /// <summary>The duration for which the circuit will be tripped.</summary>
        global::System.TimeSpan? TripDuration { get; set; }

    }
}