// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>A billing account.</summary>
    public partial class BillingAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AccountStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatus? _accountStatus;

        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatus? AccountStatus { get => this._accountStatus; }

        /// <summary>Backing field for <see cref="AccountStatusReasonCode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatusReasonCode? _accountStatusReasonCode;

        /// <summary>Reason for the specified billing account status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatusReasonCode? AccountStatusReasonCode { get => this._accountStatusReasonCode; }

        /// <summary>Backing field for <see cref="AccountSubType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountSubType? _accountSubType;

        /// <summary>The tier of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountSubType? AccountSubType { get => this._accountSubType; }

        /// <summary>Backing field for <see cref="AccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? _accountType;

        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? AccountType { get => this._accountType; }

        /// <summary>Backing field for <see cref="AgreementType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? _agreementType;

        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? AgreementType { get => this._agreementType; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The billing account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="EnrollmentDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetails _enrollmentDetail;

        /// <summary>The properties of an enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetails EnrollmentDetail { get => (this._enrollmentDetail = this._enrollmentDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.EnrollmentDetails()); set => this._enrollmentDetail = value; }

        /// <summary>The billing cycle for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).BillingCycle; }

        /// <summary>The channel type of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Channel; }

        /// <summary>The cloud of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Cloud; }

        /// <summary>The country code of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).CountryCode; }

        /// <summary>The billing currency for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Currency; }

        /// <summary>The end date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).EndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).EndDate = value ?? null; }

        /// <summary>The billing account extension opted by the company.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ExtendedTermOption? EnrollmentDetailExtendedTermOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).ExtendedTermOption; }

        /// <summary>The contact who receives invoices of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailInvoiceRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).InvoiceRecipient; }

        /// <summary>The language for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Language; }

        /// <summary>Markup status of enrollment, applicable only for indirect enrollments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.MarkupStatus? EnrollmentDetailMarkupStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).MarkupStatus; }

        /// <summary>The purchase order number of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailPoNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).PoNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).PoNumber = value ?? null; }

        /// <summary>The start date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).StartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).StartDate = value ?? null; }

        /// <summary>The support coverage period for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentDetailSupportCoverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).SupportCoverage; }

        /// <summary>The support level offer associated with an enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SupportLevel? EnrollmentDetailSupportLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).SupportLevel; }

        /// <summary>Backing field for <see cref="HasNoBillingProfile" /> property.</summary>
        private bool? _hasNoBillingProfile;

        /// <summary>Indicates whether or not the billing account has any billing profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public bool? HasNoBillingProfile { get => this._hasNoBillingProfile; set => this._hasNoBillingProfile = value; }

        /// <summary>Backing field for <see cref="HasReadAccess" /> property.</summary>
        private bool? _hasReadAccess;

        /// <summary>Indicates whether user has read access to the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public bool? HasReadAccess { get => this._hasReadAccess; set => this._hasReadAccess = value; }

        /// <summary>The billing account name of the partner or the customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string IndirectRelationshipInfoBillingAccountName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfoBillingAccountName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfoBillingAccountName = value ?? null; }

        /// <summary>
        /// The billing profile name of the partner or the customer for an indirect motion. This field is not populated for Enterprise
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string IndirectRelationshipInfoBillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfoBillingProfileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfoBillingProfileName = value ?? null; }

        /// <summary>The display name of the partner or customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string IndirectRelationshipInfoDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfoDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfoDisplayName = value ?? null; }

        /// <summary>Internal Acessors for AccountStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.AccountStatus { get => this._accountStatus; set { {_accountStatus = value;} } }

        /// <summary>Internal Acessors for AccountStatusReasonCode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatusReasonCode? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.AccountStatusReasonCode { get => this._accountStatusReasonCode; set { {_accountStatusReasonCode = value;} } }

        /// <summary>Internal Acessors for AccountSubType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountSubType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.AccountSubType { get => this._accountSubType; set { {_accountSubType = value;} } }

        /// <summary>Internal Acessors for AccountType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.AccountType { get => this._accountType; set { {_accountType = value;} } }

        /// <summary>Internal Acessors for AgreementType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.AgreementType { get => this._agreementType; set { {_agreementType = value;} } }

        /// <summary>Internal Acessors for EnrollmentDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetail { get => (this._enrollmentDetail = this._enrollmentDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.EnrollmentDetails()); set { {_enrollmentDetail = value;} } }

        /// <summary>Internal Acessors for EnrollmentDetailBillingCycle</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailBillingCycle { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).BillingCycle; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).BillingCycle = value; }

        /// <summary>Internal Acessors for EnrollmentDetailChannel</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailChannel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Channel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Channel = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCloud</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailCloud { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Cloud; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Cloud = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCountryCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailCountryCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).CountryCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).CountryCode = value; }

        /// <summary>Internal Acessors for EnrollmentDetailCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Currency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Currency = value; }

        /// <summary>Internal Acessors for EnrollmentDetailExtendedTermOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ExtendedTermOption? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailExtendedTermOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).ExtendedTermOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).ExtendedTermOption = value; }

        /// <summary>Internal Acessors for EnrollmentDetailIndirectRelationshipInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IIndirectRelationshipInfo Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailIndirectRelationshipInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).IndirectRelationshipInfo = value; }

        /// <summary>Internal Acessors for EnrollmentDetailInvoiceRecipient</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailInvoiceRecipient { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).InvoiceRecipient; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).InvoiceRecipient = value; }

        /// <summary>Internal Acessors for EnrollmentDetailLanguage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailLanguage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Language; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).Language = value; }

        /// <summary>Internal Acessors for EnrollmentDetailMarkupStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.MarkupStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailMarkupStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).MarkupStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).MarkupStatus = value; }

        /// <summary>Internal Acessors for EnrollmentDetailSupportCoverage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailSupportCoverage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).SupportCoverage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).SupportCoverage = value; }

        /// <summary>Internal Acessors for EnrollmentDetailSupportLevel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SupportLevel? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.EnrollmentDetailSupportLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).SupportLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetailsInternal)EnrollmentDetail).SupportLevel = value; }

        /// <summary>Internal Acessors for RegistrationNumber</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumber Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.RegistrationNumber { get => (this._registrationNumber = this._registrationNumber ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.RegistrationNumber()); set { {_registrationNumber = value;} } }

        /// <summary>Internal Acessors for RegistrationNumberRequired</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.RegistrationNumberRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Required; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Required = value; }

        /// <summary>Internal Acessors for RegistrationNumberType</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.RegistrationNumberType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Type = value; }

        /// <summary>Internal Acessors for SoldTo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingAccountPropertiesInternal.SoldTo { get => (this._soldTo = this._soldTo ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.AddressDetails()); set { {_soldTo = value;} } }

        /// <summary>Backing field for <see cref="NotificationEmailAddress" /> property.</summary>
        private string _notificationEmailAddress;

        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string NotificationEmailAddress { get => this._notificationEmailAddress; set => this._notificationEmailAddress = value; }

        /// <summary>Backing field for <see cref="PrimaryBillingTenantId" /> property.</summary>
        private string _primaryBillingTenantId;

        /// <summary>
        /// The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments
        /// on the billing account and all purchases are provisioned in this tenant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string PrimaryBillingTenantId { get => this._primaryBillingTenantId; set => this._primaryBillingTenantId = value; }

        /// <summary>Backing field for <see cref="RegistrationNumber" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumber _registrationNumber;

        /// <summary>
        /// Describes the registration number of the organization linked with the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumber RegistrationNumber { get => (this._registrationNumber = this._registrationNumber ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.RegistrationNumber()); set => this._registrationNumber = value; }

        /// <summary>
        /// The unique identification number of the organization linked with the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RegistrationNumberId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Id = value ?? null; }

        /// <summary>Identifies if the registration number is required for the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? RegistrationNumberRequired { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Required; }

        /// <summary>
        /// The types of registration number allowed based on the country of the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string[] RegistrationNumberType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumberInternal)RegistrationNumber).Type; }

        /// <summary>Backing field for <see cref="SoldTo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetails _soldTo;

        /// <summary>
        /// The address of the individual or organization that is responsible for the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetails SoldTo { get => (this._soldTo = this._soldTo ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.AddressDetails()); set => this._soldTo = value; }

        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine1 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).AddressLine1; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).AddressLine1 = value ?? null; }

        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine2 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).AddressLine2; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).AddressLine2 = value ?? null; }

        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToAddressLine3 { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).AddressLine3; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).AddressLine3 = value ?? null; }

        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).City; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).City = value ?? null; }

        /// <summary>Company name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).CompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).CompanyName = value ?? null; }

        /// <summary>Country code uses IS02, 2-digit format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToCountry { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).Country; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).Country = value ?? null; }

        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToDistrict { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).District; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).District = value ?? null; }

        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).Email; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).Email = value ?? null; }

        /// <summary>First name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToFirstName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).FirstName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).FirstName = value ?? null; }

        /// <summary>Indicates if the address is incomplete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? SoldToIsValidAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).IsValidAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).IsValidAddress = value ?? default(bool); }

        /// <summary>Last name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToLastName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).LastName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).LastName = value ?? null; }

        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToMiddleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).MiddleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).MiddleName = value ?? null; }

        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToPhoneNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).PhoneNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).PhoneNumber = value ?? null; }

        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToPostalCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).PostalCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).PostalCode = value ?? null; }

        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SoldToRegion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).Region; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetailsInternal)SoldTo).Region = value ?? null; }

        /// <summary>Creates an new <see cref="BillingAccountProperties" /> instance.</summary>
        public BillingAccountProperties()
        {

        }
    }
    /// A billing account.
    public partial interface IBillingAccountProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>The current status of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the billing account.",
        SerializedName = @"accountStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatus? AccountStatus { get;  }
        /// <summary>Reason for the specified billing account status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Reason for the specified billing account status.",
        SerializedName = @"accountStatusReasonCode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatusReasonCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatusReasonCode? AccountStatusReasonCode { get;  }
        /// <summary>The tier of the account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tier of the account.",
        SerializedName = @"accountSubType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountSubType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountSubType? AccountSubType { get;  }
        /// <summary>The type of customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of customer.",
        SerializedName = @"accountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? AccountType { get;  }
        /// <summary>The type of agreement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of agreement.",
        SerializedName = @"agreementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? AgreementType { get;  }
        /// <summary>The billing account name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing account name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The billing cycle for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing cycle for the enrollment.",
        SerializedName = @"billingCycle",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailBillingCycle { get;  }
        /// <summary>The channel type of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The channel type of the enrollment.",
        SerializedName = @"channel",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailChannel { get;  }
        /// <summary>The cloud of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The cloud of the enrollment.",
        SerializedName = @"cloud",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCloud { get;  }
        /// <summary>The country code of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The country code of the enrollment.",
        SerializedName = @"countryCode",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCountryCode { get;  }
        /// <summary>The billing currency for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing currency for the enrollment.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailCurrency { get;  }
        /// <summary>The end date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end date of the enrollment.",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailEndDate { get; set; }
        /// <summary>The billing account extension opted by the company.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The billing account extension opted by the company.",
        SerializedName = @"extendedTermOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ExtendedTermOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ExtendedTermOption? EnrollmentDetailExtendedTermOption { get;  }
        /// <summary>The contact who receives invoices of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The contact who receives invoices of the enrollment.",
        SerializedName = @"invoiceRecipient",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailInvoiceRecipient { get;  }
        /// <summary>The language for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The language for the enrollment.",
        SerializedName = @"language",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailLanguage { get;  }
        /// <summary>Markup status of enrollment, applicable only for indirect enrollments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Markup status of enrollment, applicable only for indirect enrollments.",
        SerializedName = @"markupStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.MarkupStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.MarkupStatus? EnrollmentDetailMarkupStatus { get;  }
        /// <summary>The purchase order number of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The purchase order number of the enrollment.",
        SerializedName = @"poNumber",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailPoNumber { get; set; }
        /// <summary>The start date of the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start date of the enrollment.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailStartDate { get; set; }
        /// <summary>The support coverage period for the enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The support coverage period for the enrollment.",
        SerializedName = @"supportCoverage",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentDetailSupportCoverage { get;  }
        /// <summary>The support level offer associated with an enrollment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The support level offer associated with an enrollment.",
        SerializedName = @"supportLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SupportLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SupportLevel? EnrollmentDetailSupportLevel { get;  }
        /// <summary>Indicates whether or not the billing account has any billing profiles.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not the billing account has any billing profiles.",
        SerializedName = @"hasNoBillingProfiles",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasNoBillingProfile { get; set; }
        /// <summary>Indicates whether user has read access to the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether user has read access to the billing account.",
        SerializedName = @"hasReadAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HasReadAccess { get; set; }
        /// <summary>The billing account name of the partner or the customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing account name of the partner or the customer for an indirect motion.",
        SerializedName = @"billingAccountName",
        PossibleTypes = new [] { typeof(string) })]
        string IndirectRelationshipInfoBillingAccountName { get; set; }
        /// <summary>
        /// The billing profile name of the partner or the customer for an indirect motion. This field is not populated for Enterprise
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing profile name of the partner or the customer for an indirect motion. This field is not populated for Enterprise Agreement billing accounts.",
        SerializedName = @"billingProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string IndirectRelationshipInfoBillingProfileName { get; set; }
        /// <summary>The display name of the partner or customer for an indirect motion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the partner or customer for an indirect motion.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string IndirectRelationshipInfoDisplayName { get; set; }
        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.",
        SerializedName = @"notificationEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationEmailAddress { get; set; }
        /// <summary>
        /// The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments
        /// on the billing account and all purchases are provisioned in this tenant.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments on the billing account and all purchases are provisioned in this tenant.",
        SerializedName = @"primaryBillingTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string PrimaryBillingTenantId { get; set; }
        /// <summary>
        /// The unique identification number of the organization linked with the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identification number of the organization linked with the billing account.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string RegistrationNumberId { get; set; }
        /// <summary>Identifies if the registration number is required for the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifies if the registration number is required for the billing account.",
        SerializedName = @"required",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RegistrationNumberRequired { get;  }
        /// <summary>
        /// The types of registration number allowed based on the country of the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The types of registration number allowed based on the country of the billing account.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string[] RegistrationNumberType { get;  }
        /// <summary>Address line 1.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address line 1.",
        SerializedName = @"addressLine1",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address line 2.",
        SerializedName = @"addressLine2",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address line 3.",
        SerializedName = @"addressLine3",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToAddressLine3 { get; set; }
        /// <summary>Address city.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address city.",
        SerializedName = @"city",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCity { get; set; }
        /// <summary>Company name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Company name.",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCompanyName { get; set; }
        /// <summary>Country code uses IS02, 2-digit format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Country code uses IS02, 2-digit format.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToCountry { get; set; }
        /// <summary>Address district.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address district.",
        SerializedName = @"district",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToDistrict { get; set; }
        /// <summary>Email address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email address.",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToEmail { get; set; }
        /// <summary>First name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"First name.",
        SerializedName = @"firstName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToFirstName { get; set; }
        /// <summary>Indicates if the address is incomplete.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the address is incomplete.",
        SerializedName = @"isValidAddress",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SoldToIsValidAddress { get; set; }
        /// <summary>Last name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last name.",
        SerializedName = @"lastName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToLastName { get; set; }
        /// <summary>Middle name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Middle name.",
        SerializedName = @"middleName",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Phone number.",
        SerializedName = @"phoneNumber",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Postal code.",
        SerializedName = @"postalCode",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToPostalCode { get; set; }
        /// <summary>Address region.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Address region.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string SoldToRegion { get; set; }

    }
    /// A billing account.
    internal partial interface IBillingAccountPropertiesInternal

    {
        /// <summary>The current status of the billing account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatus? AccountStatus { get; set; }
        /// <summary>Reason for the specified billing account status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingAccountStatusReasonCode? AccountStatusReasonCode { get; set; }
        /// <summary>The tier of the account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountSubType? AccountSubType { get; set; }
        /// <summary>The type of customer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AccountType? AccountType { get; set; }
        /// <summary>The type of agreement.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AgreementType? AgreementType { get; set; }
        /// <summary>The billing account name.</summary>
        string DisplayName { get; set; }
        /// <summary>The properties of an enrollment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentDetails EnrollmentDetail { get; set; }
        /// <summary>The billing cycle for the enrollment.</summary>
        string EnrollmentDetailBillingCycle { get; set; }
        /// <summary>The channel type of the enrollment.</summary>
        string EnrollmentDetailChannel { get; set; }
        /// <summary>The cloud of the enrollment.</summary>
        string EnrollmentDetailCloud { get; set; }
        /// <summary>The country code of the enrollment.</summary>
        string EnrollmentDetailCountryCode { get; set; }
        /// <summary>The billing currency for the enrollment.</summary>
        string EnrollmentDetailCurrency { get; set; }
        /// <summary>The end date of the enrollment.</summary>
        string EnrollmentDetailEndDate { get; set; }
        /// <summary>The billing account extension opted by the company.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ExtendedTermOption? EnrollmentDetailExtendedTermOption { get; set; }
        /// <summary>
        /// The properties of an enrollment which are applicable only for indirect enrollments.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IIndirectRelationshipInfo EnrollmentDetailIndirectRelationshipInfo { get; set; }
        /// <summary>The contact who receives invoices of the enrollment.</summary>
        string EnrollmentDetailInvoiceRecipient { get; set; }
        /// <summary>The language for the enrollment.</summary>
        string EnrollmentDetailLanguage { get; set; }
        /// <summary>Markup status of enrollment, applicable only for indirect enrollments.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.MarkupStatus? EnrollmentDetailMarkupStatus { get; set; }
        /// <summary>The purchase order number of the enrollment.</summary>
        string EnrollmentDetailPoNumber { get; set; }
        /// <summary>The start date of the enrollment.</summary>
        string EnrollmentDetailStartDate { get; set; }
        /// <summary>The support coverage period for the enrollment.</summary>
        string EnrollmentDetailSupportCoverage { get; set; }
        /// <summary>The support level offer associated with an enrollment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SupportLevel? EnrollmentDetailSupportLevel { get; set; }
        /// <summary>Indicates whether or not the billing account has any billing profiles.</summary>
        bool? HasNoBillingProfile { get; set; }
        /// <summary>Indicates whether user has read access to the billing account.</summary>
        bool? HasReadAccess { get; set; }
        /// <summary>The billing account name of the partner or the customer for an indirect motion.</summary>
        string IndirectRelationshipInfoBillingAccountName { get; set; }
        /// <summary>
        /// The billing profile name of the partner or the customer for an indirect motion. This field is not populated for Enterprise
        /// Agreement billing accounts.
        /// </summary>
        string IndirectRelationshipInfoBillingProfileName { get; set; }
        /// <summary>The display name of the partner or customer for an indirect motion.</summary>
        string IndirectRelationshipInfoDisplayName { get; set; }
        /// <summary>
        /// Notification email address for legacy account. Available for agreement type Microsoft Online Services Program.
        /// </summary>
        string NotificationEmailAddress { get; set; }
        /// <summary>
        /// The tenant that was used to set up the billing account. By default, only users from this tenant can get role assignments
        /// on the billing account and all purchases are provisioned in this tenant.
        /// </summary>
        string PrimaryBillingTenantId { get; set; }
        /// <summary>
        /// Describes the registration number of the organization linked with the billing account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRegistrationNumber RegistrationNumber { get; set; }
        /// <summary>
        /// The unique identification number of the organization linked with the billing account.
        /// </summary>
        string RegistrationNumberId { get; set; }
        /// <summary>Identifies if the registration number is required for the billing account.</summary>
        bool? RegistrationNumberRequired { get; set; }
        /// <summary>
        /// The types of registration number allowed based on the country of the billing account.
        /// </summary>
        string[] RegistrationNumberType { get; set; }
        /// <summary>
        /// The address of the individual or organization that is responsible for the billing account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAddressDetails SoldTo { get; set; }
        /// <summary>Address line 1.</summary>
        string SoldToAddressLine1 { get; set; }
        /// <summary>Address line 2.</summary>
        string SoldToAddressLine2 { get; set; }
        /// <summary>Address line 3.</summary>
        string SoldToAddressLine3 { get; set; }
        /// <summary>Address city.</summary>
        string SoldToCity { get; set; }
        /// <summary>Company name.</summary>
        string SoldToCompanyName { get; set; }
        /// <summary>Country code uses IS02, 2-digit format.</summary>
        string SoldToCountry { get; set; }
        /// <summary>Address district.</summary>
        string SoldToDistrict { get; set; }
        /// <summary>Email address.</summary>
        string SoldToEmail { get; set; }
        /// <summary>First name.</summary>
        string SoldToFirstName { get; set; }
        /// <summary>Indicates if the address is incomplete.</summary>
        bool? SoldToIsValidAddress { get; set; }
        /// <summary>Last name.</summary>
        string SoldToLastName { get; set; }
        /// <summary>Middle name.</summary>
        string SoldToMiddleName { get; set; }
        /// <summary>Phone number.</summary>
        string SoldToPhoneNumber { get; set; }
        /// <summary>Postal code.</summary>
        string SoldToPostalCode { get; set; }
        /// <summary>Address region.</summary>
        string SoldToRegion { get; set; }

    }
}