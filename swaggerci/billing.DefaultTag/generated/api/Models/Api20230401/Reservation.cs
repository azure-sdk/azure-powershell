// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The definition of the reservation.</summary>
    public partial class Reservation :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservation,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal
    {

        /// <summary>
        /// The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string[] AppliedScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScope = value ?? null /* arrayOf */; }

        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyDisplayName = value ?? null; }

        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyManagementGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyManagementGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyManagementGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyResourceGroupId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyResourceGroupId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyResourceGroupId = value ?? null; }

        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertySubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertySubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertySubscriptionId = value ?? null; }

        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopePropertyTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopePropertyTenantId = value ?? null; }

        /// <summary>The applied scope type of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopeType; }

        /// <summary>Indicates if the reservation is archived</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? Archived { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Archived; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Archived = value ?? default(bool); }

        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? BenefitStartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BenefitStartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BenefitStartTime = value ?? default(global::System.DateTime); }

        /// <summary>The billing plan options available for this sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationBillingPlan? BillingPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BillingPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BillingPlan = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationBillingPlan)""); }

        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BillingScopeId; }

        /// <summary>Capabilities of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Capability { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Capability; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Capability = value ?? null; }

        /// <summary>The display name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).DisplayName; }

        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).DisplayProvisioningState; }

        /// <summary>The effective date time of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EffectiveDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).EffectiveDateTime; }

        /// <summary>Backing field for <see cref="Etag" /> property.</summary>
        private int? _etag;

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public int? Etag { get => this._etag; set => this._etag = value; }

        /// <summary>The expiry date of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExpiryDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExpiryDate; }

        /// <summary>This is the date-time when the reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpiryDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExpiryDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExpiryDateTime = value ?? default(global::System.DateTime); }

        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ExtendedStatusInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExtendedStatusInfoMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExtendedStatusInfoMessage = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationStatusCode? ExtendedStatusInfoStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExtendedStatusInfoStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExtendedStatusInfoStatusCode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationStatusCode)""); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The id of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>
        /// Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InstanceFlexibility? InstanceFlexibility { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).InstanceFlexibility; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).InstanceFlexibility = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InstanceFlexibility)""); }

        /// <summary>DateTime of the last time the reservation was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastUpdatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).LastUpdatedDateTime; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>The location of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Location { get => this._location; }

        /// <summary>
        /// Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string MergePropertyMergeDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).MergePropertyMergeDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).MergePropertyMergeDestination = value ?? null; }

        /// <summary>
        /// Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string[] MergePropertyMergeSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).MergePropertyMergeSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).MergePropertyMergeSource = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for AppliedScopeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAppliedScopePropertiesAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.AppliedScopeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopeProperty = value; }

        /// <summary>Internal Acessors for AppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.AppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).AppliedScopeType = value; }

        /// <summary>Internal Acessors for BillingScopeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.BillingScopeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BillingScopeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).BillingScopeId = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).DisplayName = value; }

        /// <summary>Internal Acessors for DisplayProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.DisplayProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).DisplayProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).DisplayProvisioningState = value; }

        /// <summary>Internal Acessors for EffectiveDateTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.EffectiveDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).EffectiveDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).EffectiveDateTime = value; }

        /// <summary>Internal Acessors for ExpiryDate</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.ExpiryDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExpiryDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExpiryDate = value; }

        /// <summary>Internal Acessors for ExtendedStatusInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IExtendedStatusInfoAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.ExtendedStatusInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExtendedStatusInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ExtendedStatusInfo = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for LastUpdatedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.LastUpdatedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).LastUpdatedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).LastUpdatedDateTime = value; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Location { get => this._location; set { {_location = value;} } }

        /// <summary>Internal Acessors for MergeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationMergeProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.MergeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).MergeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).MergeProperty = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationProperty Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ReservationProperty()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ProvisioningSubState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.ProvisioningSubState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProvisioningSubState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProvisioningSubState = value; }

        /// <summary>Internal Acessors for Quantity</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Quantity = value; }

        /// <summary>Internal Acessors for Renew</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Renew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Renew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Renew = value; }

        /// <summary>Internal Acessors for RenewSource</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.RenewSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewSource = value; }

        /// <summary>Internal Acessors for ReservedResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ReservedResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ReservedResourceType = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuProperty Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ReservationSkuProperty()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SkuDescription = value; }

        /// <summary>Internal Acessors for SkuName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuPropertyInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuPropertyInternal)Sku).Name = value; }

        /// <summary>Internal Acessors for SplitProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSplitProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.SplitProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SplitProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SplitProperty = value; }

        /// <summary>Internal Acessors for SwapProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSwapProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.SwapProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SwapProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SwapProperty = value; }

        /// <summary>Internal Acessors for Term</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Term = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Internal Acessors for UserFriendlyAppliedScopeType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.UserFriendlyAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UserFriendlyAppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UserFriendlyAppliedScopeType = value; }

        /// <summary>Internal Acessors for UserFriendlyRenewState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.UserFriendlyRenewState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UserFriendlyRenewState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UserFriendlyRenewState = value; }

        /// <summary>Internal Acessors for Utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyUtilization Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.Utilization { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Utilization; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Utilization = value; }

        /// <summary>Internal Acessors for UtilizationTrend</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationInternal.UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UtilizationTrend; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UtilizationTrend = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Represents UPN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProductCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProductCode = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationProperty _property;

        /// <summary>The properties associated to this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationProperty Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ReservationProperty()); set => this._property = value; }

        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProvisioningState; }

        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningSubState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ProvisioningSubState; }

        /// <summary>This is the date when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).PurchaseDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).PurchaseDate = value ?? default(global::System.DateTime); }

        /// <summary>This is the date-time when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PurchaseDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).PurchaseDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).PurchaseDateTime = value ?? default(global::System.DateTime); }

        /// <summary>The number of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Quantity; }

        /// <summary>The renew state of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? Renew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Renew; }

        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewDestination = value ?? null; }

        /// <summary>The renew properties for a reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRenewPropertiesResponse RenewProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewProperty = value ?? null /* model class */; }

        /// <summary>The renew source of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).RenewSource; }

        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ReservedResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ReservedResourceType; }

        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReviewDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ReviewDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).ReviewDateTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuProperty _sku;

        /// <summary>The sku information associated to this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuProperty Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ReservationSkuProperty()); set => this._sku = value; }

        /// <summary>The sku description of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SkuDescription; }

        /// <summary>The name of the reservation sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuPropertyInternal)Sku).Name; }

        /// <summary>
        /// List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string[] SplitPropertySplitDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SplitPropertySplitDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SplitPropertySplitDestination = value ?? null /* arrayOf */; }

        /// <summary>
        /// Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SplitPropertySplitSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SplitPropertySplitSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SplitPropertySplitSource = value ?? null; }

        /// <summary>
        /// Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SwapPropertySwapDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SwapPropertySwapDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SwapPropertySwapDestination = value ?? null; }

        /// <summary>
        /// Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SwapPropertySwapSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SwapPropertySwapSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).SwapPropertySwapSource = value ?? null; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ITags _tag;

        /// <summary>Tags for this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ITags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.Tags()); set => this._tag = value; }

        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).Term; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UserFriendlyAppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UserFriendlyAppliedScopeType; }

        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UserFriendlyRenewState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UserFriendlyRenewState; }

        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationUtilizationAggregates[] UtilizationAggregate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UtilizationAggregate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UtilizationAggregate = value ?? null /* arrayOf */; }

        /// <summary>last 7 day utilization trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UtilizationTrend { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyInternal)Property).UtilizationTrend; }

        /// <summary>Creates an new <see cref="Reservation" /> instance.</summary>
        public Reservation()
        {

        }
    }
    /// The definition of the reservation.
    public partial interface IReservation :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope",
        SerializedName = @"appliedScopes",
        PossibleTypes = new [] { typeof(string) })]
        string[] AppliedScope { get; set; }
        /// <summary>Display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Display name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified identifier of the management group where the benefit must be applied.",
        SerializedName = @"managementGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified identifier of the resource group.",
        SerializedName = @"resourceGroupId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fully-qualified identifier of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant ID where the reservation should apply benefit.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>The applied scope type of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The applied scope type of the reservation.",
        SerializedName = @"appliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedScopeType { get;  }
        /// <summary>Indicates if the reservation is archived</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates if the reservation is archived",
        SerializedName = @"archived",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Archived { get; set; }
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the DateTime when the reservation benefit started.",
        SerializedName = @"benefitStartTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>The billing plan options available for this sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing plan options available for this sku.",
        SerializedName = @"billingPlan",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationBillingPlan) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationBillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subscription that will be charged for purchasing reservation or savings plan",
        SerializedName = @"billingScopeId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingScopeId { get;  }
        /// <summary>Capabilities of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Capabilities of the reservation",
        SerializedName = @"capabilities",
        PossibleTypes = new [] { typeof(string) })]
        string Capability { get; set; }
        /// <summary>The display name of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the reservation",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation for display, e.g. Succeeded",
        SerializedName = @"displayProvisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayProvisioningState { get;  }
        /// <summary>The effective date time of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The effective date time of the reservation",
        SerializedName = @"effectiveDateTime",
        PossibleTypes = new [] { typeof(string) })]
        string EffectiveDateTime { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"etag",
        PossibleTypes = new [] { typeof(int) })]
        int? Etag { get; set; }
        /// <summary>The expiry date of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The expiry date of the reservation",
        SerializedName = @"expiryDate",
        PossibleTypes = new [] { typeof(string) })]
        string ExpiryDate { get;  }
        /// <summary>This is the date-time when the reservation will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the date-time when the reservation will expire.",
        SerializedName = @"expiryDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The message giving detailed information about the status code.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ExtendedStatusInfoMessage { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"statusCode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationStatusCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationStatusCode? ExtendedStatusInfoStatusCode { get; set; }
        /// <summary>The id of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of the reservation.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size flexibility.",
        SerializedName = @"instanceFlexibility",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InstanceFlexibility) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InstanceFlexibility? InstanceFlexibility { get; set; }
        /// <summary>DateTime of the last time the reservation was updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DateTime of the last time the reservation was updated.",
        SerializedName = @"lastUpdatedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedDateTime { get;  }
        /// <summary>The location of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The location of the reservation.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get;  }
        /// <summary>
        /// Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"mergeDestination",
        PossibleTypes = new [] { typeof(string) })]
        string MergePropertyMergeDestination { get; set; }
        /// <summary>
        /// Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"mergeSources",
        PossibleTypes = new [] { typeof(string) })]
        string[] MergePropertyMergeSource { get; set; }
        /// <summary>The name of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the reservation.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Represents UPN</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents UPN",
        SerializedName = @"productCode",
        PossibleTypes = new [] { typeof(string) })]
        string ProductCode { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the reservation, e.g. Succeeded",
        SerializedName = @"provisioningSubState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningSubState { get;  }
        /// <summary>This is the date when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the date when the reservation was purchased.",
        SerializedName = @"purchaseDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>This is the date-time when the reservation was purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the date-time when the reservation was purchased.",
        SerializedName = @"purchaseDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDateTime { get; set; }
        /// <summary>The number of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of the reservation.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(float) })]
        float? Quantity { get;  }
        /// <summary>The renew state of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew state of the reservation",
        SerializedName = @"renew",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Renew { get;  }
        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
        SerializedName = @"renewDestination",
        PossibleTypes = new [] { typeof(string) })]
        string RenewDestination { get; set; }
        /// <summary>The renew properties for a reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The renew properties for a reservation.",
        SerializedName = @"renewProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRenewPropertiesResponse) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRenewPropertiesResponse RenewProperty { get; set; }
        /// <summary>The renew source of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew source of the reservation",
        SerializedName = @"renewSource",
        PossibleTypes = new [] { typeof(string) })]
        string RenewSource { get;  }
        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reserved source type of the reservation, e.g. virtual machine.",
        SerializedName = @"reservedResourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ReservedResourceType { get;  }
        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the date-time when the Azure Hybrid Benefit needs to be reviewed.",
        SerializedName = @"reviewDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>The sku description of the reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The sku description of the reservation",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get;  }
        /// <summary>The name of the reservation sku.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the reservation sku.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get;  }
        /// <summary>
        /// List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"splitDestinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] SplitPropertySplitDestination { get; set; }
        /// <summary>
        /// Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"splitSource",
        PossibleTypes = new [] { typeof(string) })]
        string SplitPropertySplitSource { get; set; }
        /// <summary>
        /// Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"swapDestination",
        PossibleTypes = new [] { typeof(string) })]
        string SwapPropertySwapDestination { get; set; }
        /// <summary>
        /// Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        SerializedName = @"swapSource",
        PossibleTypes = new [] { typeof(string) })]
        string SwapPropertySwapSource { get; set; }
        /// <summary>Tags for this reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tags for this reservation",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ITags Tag { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The term of the reservation, e.g. P1Y",
        SerializedName = @"term",
        PossibleTypes = new [] { typeof(string) })]
        string Term { get;  }
        /// <summary>The type of the reservation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the reservation.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The applied scope type of the reservation for display, e.g. Shared",
        SerializedName = @"userFriendlyAppliedScopeType",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyAppliedScopeType { get;  }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The renew state of the reservation for display, e.g. On",
        SerializedName = @"userFriendlyRenewState",
        PossibleTypes = new [] { typeof(string) })]
        string UserFriendlyRenewState { get;  }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of aggregates of a reservation's utilization",
        SerializedName = @"aggregates",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationUtilizationAggregates) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationUtilizationAggregates[] UtilizationAggregate { get; set; }
        /// <summary>last 7 day utilization trend for a reservation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"last 7 day utilization trend for a reservation",
        SerializedName = @"trend",
        PossibleTypes = new [] { typeof(string) })]
        string UtilizationTrend { get;  }

    }
    /// The definition of the reservation.
    internal partial interface IReservationInternal

    {
        /// <summary>
        /// The array of applied scopes of a reservation. Will be null if the reservation is in Shared scope
        /// </summary>
        string[] AppliedScope { get; set; }
        /// <summary>
        /// Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId
        /// if AppliedScopeType is ManagementGroup
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IAppliedScopePropertiesAutoGenerated AppliedScopeProperty { get; set; }
        /// <summary>Display name</summary>
        string AppliedScopePropertyDisplayName { get; set; }
        /// <summary>
        /// Fully-qualified identifier of the management group where the benefit must be applied.
        /// </summary>
        string AppliedScopePropertyManagementGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the resource group.</summary>
        string AppliedScopePropertyResourceGroupId { get; set; }
        /// <summary>Fully-qualified identifier of the subscription.</summary>
        string AppliedScopePropertySubscriptionId { get; set; }
        /// <summary>Tenant ID where the reservation should apply benefit.</summary>
        string AppliedScopePropertyTenantId { get; set; }
        /// <summary>The applied scope type of the reservation.</summary>
        string AppliedScopeType { get; set; }
        /// <summary>Indicates if the reservation is archived</summary>
        bool? Archived { get; set; }
        /// <summary>This is the DateTime when the reservation benefit started.</summary>
        global::System.DateTime? BenefitStartTime { get; set; }
        /// <summary>The billing plan options available for this sku.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationBillingPlan? BillingPlan { get; set; }
        /// <summary>Subscription that will be charged for purchasing reservation or savings plan</summary>
        string BillingScopeId { get; set; }
        /// <summary>Capabilities of the reservation</summary>
        string Capability { get; set; }
        /// <summary>The display name of the reservation</summary>
        string DisplayName { get; set; }
        /// <summary>The provisioning state of the reservation for display, e.g. Succeeded</summary>
        string DisplayProvisioningState { get; set; }
        /// <summary>The effective date time of the reservation</summary>
        string EffectiveDateTime { get; set; }

        int? Etag { get; set; }
        /// <summary>The expiry date of the reservation</summary>
        string ExpiryDate { get; set; }
        /// <summary>This is the date-time when the reservation will expire.</summary>
        global::System.DateTime? ExpiryDateTime { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IExtendedStatusInfoAutoGenerated ExtendedStatusInfo { get; set; }
        /// <summary>The message giving detailed information about the status code.</summary>
        string ExtendedStatusInfoMessage { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ReservationStatusCode? ExtendedStatusInfoStatusCode { get; set; }
        /// <summary>The id of the reservation.</summary>
        string Id { get; set; }
        /// <summary>
        /// Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size
        /// flexibility.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InstanceFlexibility? InstanceFlexibility { get; set; }
        /// <summary>DateTime of the last time the reservation was updated.</summary>
        global::System.DateTime? LastUpdatedDateTime { get; set; }
        /// <summary>The location of the reservation.</summary>
        string Location { get; set; }
        /// <summary>Properties of reservation merge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationMergeProperties MergeProperty { get; set; }
        /// <summary>
        /// Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string MergePropertyMergeDestination { get; set; }
        /// <summary>
        /// Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string[] MergePropertyMergeSource { get; set; }
        /// <summary>The name of the reservation.</summary>
        string Name { get; set; }
        /// <summary>Represents UPN</summary>
        string ProductCode { get; set; }
        /// <summary>The properties associated to this reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationProperty Property { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        string ProvisioningState { get; set; }
        /// <summary>The provisioning state of the reservation, e.g. Succeeded</summary>
        string ProvisioningSubState { get; set; }
        /// <summary>This is the date when the reservation was purchased.</summary>
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>This is the date-time when the reservation was purchased.</summary>
        global::System.DateTime? PurchaseDateTime { get; set; }
        /// <summary>The number of the reservation.</summary>
        float? Quantity { get; set; }
        /// <summary>The renew state of the reservation</summary>
        bool? Renew { get; set; }
        /// <summary>
        /// Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        /// </summary>
        string RenewDestination { get; set; }
        /// <summary>The renew properties for a reservation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRenewPropertiesResponse RenewProperty { get; set; }
        /// <summary>The renew source of the reservation</summary>
        string RenewSource { get; set; }
        /// <summary>The reserved source type of the reservation, e.g. virtual machine.</summary>
        string ReservedResourceType { get; set; }
        /// <summary>This is the date-time when the Azure Hybrid Benefit needs to be reviewed.</summary>
        global::System.DateTime? ReviewDateTime { get; set; }
        /// <summary>The sku information associated to this reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSkuProperty Sku { get; set; }
        /// <summary>The sku description of the reservation</summary>
        string SkuDescription { get; set; }
        /// <summary>The name of the reservation sku.</summary>
        string SkuName { get; set; }
        /// <summary>Properties of reservation split</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSplitProperties SplitProperty { get; set; }
        /// <summary>
        /// List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string[] SplitPropertySplitDestination { get; set; }
        /// <summary>
        /// Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string SplitPropertySplitSource { get; set; }
        /// <summary>Properties of reservation swap</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationSwapProperties SwapProperty { get; set; }
        /// <summary>
        /// Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string SwapPropertySwapDestination { get; set; }
        /// <summary>
        /// Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        /// </summary>
        string SwapPropertySwapSource { get; set; }
        /// <summary>Tags for this reservation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ITags Tag { get; set; }
        /// <summary>The term of the reservation, e.g. P1Y</summary>
        string Term { get; set; }
        /// <summary>The type of the reservation.</summary>
        string Type { get; set; }
        /// <summary>The applied scope type of the reservation for display, e.g. Shared</summary>
        string UserFriendlyAppliedScopeType { get; set; }
        /// <summary>The renew state of the reservation for display, e.g. On</summary>
        string UserFriendlyRenewState { get; set; }
        /// <summary>Reservation utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationPropertyUtilization Utilization { get; set; }
        /// <summary>The array of aggregates of a reservation's utilization</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReservationUtilizationAggregates[] UtilizationAggregate { get; set; }
        /// <summary>last 7 day utilization trend for a reservation</summary>
        string UtilizationTrend { get; set; }

    }
}