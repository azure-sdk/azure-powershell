// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>An invoice.</summary>
    public partial class Invoice :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoice,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1 __proxyResourceWithTags1 = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.ProxyResourceWithTags1();

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AmountDueCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDueCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AmountDueValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDueValue; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AmountRefundedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRefundedCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AmountRefundedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRefundedValue; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AmountRequestedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRequestedCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AmountRequestedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRequestedValue; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string AzurePrepaymentAppliedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentAppliedCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? AzurePrepaymentAppliedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentAppliedValue; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BilledAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmountCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? BilledAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmountValue; }

        /// <summary>
        /// The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the
        /// void invoices only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BilledDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledDocumentId; }

        /// <summary>The name of the billing profile for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BillingProfileDisplayName; }

        /// <summary>The ID of the billing profile for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BillingProfileId; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreditAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmountCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? CreditAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmountValue; }

        /// <summary>
        /// The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit
        /// notes only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreditForDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditForDocumentId; }

        /// <summary>The date when the invoice was generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? Date { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoiceDate; }

        /// <summary>
        /// List of documents available to download and view such as invoice, credit note, or tax receipt.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceDocument[] Document { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Document; }

        /// <summary>The type of the document.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceDocumentType? DocumentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).DocumentType; }

        /// <summary>The due date for the invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? DueDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).DueDate; }

        /// <summary>List of failed payments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IFailedPayment[] FailedPayment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FailedPayment; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string FreeAzureCreditAppliedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditAppliedCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? FreeAzureCreditAppliedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditAppliedValue; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Id; }

        /// <summary>Invoice type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceType? InvoiceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoiceType; }

        /// <summary>
        /// Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts
        /// with agreement type Microsoft Customer Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public bool? IsMonthlyInvoice { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).IsMonthlyInvoice; }

        /// <summary>Internal Acessors for AmountDue</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountDue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDue = value; }

        /// <summary>Internal Acessors for AmountDueCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountDueCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDueCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDueCurrency = value; }

        /// <summary>Internal Acessors for AmountDueValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountDueValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDueValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountDueValue = value; }

        /// <summary>Internal Acessors for AmountRefundedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountRefundedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRefundedCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRefundedCurrency = value; }

        /// <summary>Internal Acessors for AmountRefundedValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountRefundedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRefundedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRefundedValue = value; }

        /// <summary>Internal Acessors for AmountRequestedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountRequestedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRequestedCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRequestedCurrency = value; }

        /// <summary>Internal Acessors for AmountRequestedValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AmountRequestedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRequestedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AmountRequestedValue = value; }

        /// <summary>Internal Acessors for AzurePrepaymentApplied</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AzurePrepaymentApplied { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentApplied; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentApplied = value; }

        /// <summary>Internal Acessors for AzurePrepaymentAppliedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AzurePrepaymentAppliedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentAppliedCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentAppliedCurrency = value; }

        /// <summary>Internal Acessors for AzurePrepaymentAppliedValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.AzurePrepaymentAppliedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentAppliedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).AzurePrepaymentAppliedValue = value; }

        /// <summary>Internal Acessors for BilledAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.BilledAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmount = value; }

        /// <summary>Internal Acessors for BilledAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.BilledAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmountCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmountCurrency = value; }

        /// <summary>Internal Acessors for BilledAmountValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.BilledAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmountValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledAmountValue = value; }

        /// <summary>Internal Acessors for BilledDocumentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.BilledDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledDocumentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BilledDocumentId = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).BillingProfileId = value; }

        /// <summary>Internal Acessors for CreditAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.CreditAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmount = value; }

        /// <summary>Internal Acessors for CreditAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.CreditAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmountCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmountCurrency = value; }

        /// <summary>Internal Acessors for CreditAmountValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.CreditAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmountValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditAmountValue = value; }

        /// <summary>Internal Acessors for CreditForDocumentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.CreditForDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditForDocumentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).CreditForDocumentId = value; }

        /// <summary>Internal Acessors for Date</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.Date { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoiceDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoiceDate = value; }

        /// <summary>Internal Acessors for Document</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceDocument[] Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.Document { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Document; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Document = value; }

        /// <summary>Internal Acessors for DocumentType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceDocumentType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.DocumentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).DocumentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).DocumentType = value; }

        /// <summary>Internal Acessors for DueDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.DueDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).DueDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).DueDate = value; }

        /// <summary>Internal Acessors for FailedPayment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IFailedPayment[] Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.FailedPayment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FailedPayment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FailedPayment = value; }

        /// <summary>Internal Acessors for FreeAzureCreditApplied</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.FreeAzureCreditApplied { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditApplied; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditApplied = value; }

        /// <summary>Internal Acessors for FreeAzureCreditAppliedCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.FreeAzureCreditAppliedCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditAppliedCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditAppliedCurrency = value; }

        /// <summary>Internal Acessors for FreeAzureCreditAppliedValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.FreeAzureCreditAppliedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditAppliedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).FreeAzureCreditAppliedValue = value; }

        /// <summary>Internal Acessors for InvoiceType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.InvoiceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoiceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoiceType = value; }

        /// <summary>Internal Acessors for IsMonthlyInvoice</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.IsMonthlyInvoice { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).IsMonthlyInvoice; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).IsMonthlyInvoice = value; }

        /// <summary>Internal Acessors for Payment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IPayment[] Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.Payment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Payment; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Payment = value; }

        /// <summary>Internal Acessors for PeriodEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.PeriodEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoicePeriodEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoicePeriodEndDate = value; }

        /// <summary>Internal Acessors for PeriodStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.PeriodStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoicePeriodStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoicePeriodStartDate = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.InvoiceProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for PurchaseOrderNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.PurchaseOrderNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).PurchaseOrderNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).PurchaseOrderNumber = value; }

        /// <summary>Internal Acessors for RebillDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IRebillDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RebillDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetail = value; }

        /// <summary>Internal Acessors for RebillDetailCreditNoteDocumentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RebillDetailCreditNoteDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetailCreditNoteDocumentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetailCreditNoteDocumentId = value; }

        /// <summary>Internal Acessors for RebillDetailInvoiceDocumentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RebillDetailInvoiceDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetailInvoiceDocumentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetailInvoiceDocumentId = value; }

        /// <summary>Internal Acessors for RefundDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IRefundDetailsSummary Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetail = value; }

        /// <summary>Internal Acessors for RefundDetailAmountRefunded</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailAmountRefunded { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailAmountRefunded; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailAmountRefunded = value; }

        /// <summary>Internal Acessors for RefundDetailAmountRequested</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailAmountRequested { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailAmountRequested; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailAmountRequested = value; }

        /// <summary>Internal Acessors for RefundDetailApprovedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailApprovedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailApprovedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailApprovedOn = value; }

        /// <summary>Internal Acessors for RefundDetailCompletedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailCompletedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailCompletedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailCompletedOn = value; }

        /// <summary>Internal Acessors for RefundDetailRebillInvoiceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailRebillInvoiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRebillInvoiceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRebillInvoiceId = value; }

        /// <summary>Internal Acessors for RefundDetailRefundOperationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailRefundOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundOperationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundOperationId = value; }

        /// <summary>Internal Acessors for RefundDetailRefundReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundReasonCode? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailRefundReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundReason = value; }

        /// <summary>Internal Acessors for RefundDetailRefundStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailRefundStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundStatus = value; }

        /// <summary>Internal Acessors for RefundDetailRequestedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailRequestedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRequestedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRequestedOn = value; }

        /// <summary>Internal Acessors for RefundDetailTransactionCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.RefundDetailTransactionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailTransactionCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailTransactionCount = value; }

        /// <summary>Internal Acessors for SpecialTaxationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SpecialTaxationType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.SpecialTaxationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SpecialTaxationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SpecialTaxationType = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for SubTotal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.SubTotal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotal = value; }

        /// <summary>Internal Acessors for SubTotalCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.SubTotalCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotalCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotalCurrency = value; }

        /// <summary>Internal Acessors for SubTotalValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.SubTotalValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotalValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotalValue = value; }

        /// <summary>Internal Acessors for SubscriptionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.SubscriptionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubscriptionDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubscriptionDisplayName = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubscriptionId = value; }

        /// <summary>Internal Acessors for TaxAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.TaxAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmount = value; }

        /// <summary>Internal Acessors for TaxAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.TaxAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmountCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmountCurrency = value; }

        /// <summary>Internal Acessors for TaxAmountValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.TaxAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmountValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmountValue = value; }

        /// <summary>Internal Acessors for TotalAmount</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.TotalAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmount = value; }

        /// <summary>Internal Acessors for TotalAmountCurrency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.TotalAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmountCurrency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmountCurrency = value; }

        /// <summary>Internal Acessors for TotalAmountValue</summary>
        float? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceInternal.TotalAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmountValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmountValue = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Name; }

        /// <summary>List of payments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IPayment[] Payment { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Payment; }

        /// <summary>
        /// The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PeriodEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoicePeriodEndDate; }

        /// <summary>
        /// The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PeriodStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).InvoicePeriodStartDate; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceProperties _property;

        /// <summary>An invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.InvoiceProperties()); set => this._property = value; }

        /// <summary>An optional purchase order number for the invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PurchaseOrderNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).PurchaseOrderNumber; }

        /// <summary>The ID of credit note.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RebillDetailCreditNoteDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetailCreditNoteDocumentId; }

        /// <summary>The ID of invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RebillDetailInvoiceDocumentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RebillDetailInvoiceDocumentId; }

        /// <summary>Date when the refund was approved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RefundDetailApprovedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailApprovedOn; }

        /// <summary>Date when the refund was completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RefundDetailCompletedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailCompletedOn; }

        /// <summary>The invoice ID of the rebill invoice for a refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RefundDetailRebillInvoiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRebillInvoiceId; }

        /// <summary>The ID of refund operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RefundDetailRefundOperationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundOperationId; }

        /// <summary>The reason for refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundReasonCode? RefundDetailRefundReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundReason; }

        /// <summary>The status of refund request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundStatus? RefundDetailRefundStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRefundStatus; }

        /// <summary>Date when the refund was requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? RefundDetailRequestedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailRequestedOn; }

        /// <summary>The number of transactions refunded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public int? RefundDetailTransactionCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).RefundDetailTransactionCount; }

        /// <summary>
        /// Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax
        /// calculation logic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SpecialTaxationType? SpecialTaxationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SpecialTaxationType; }

        /// <summary>The current status of the invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).Status; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubTotalCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotalCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? SubTotalValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubTotalValue; }

        /// <summary>The name of the billing subscription for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubscriptionDisplayName; }

        /// <summary>The ID of the subscription for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).SubscriptionId; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType)""); }

        /// <summary>
        /// Dictionary of metadata associated with the resource. It may not be populated for all resource types. Maximum key/value
        /// length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? /
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag = value ?? null /* model class */; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TaxAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmountCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? TaxAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TaxAmountValue; }

        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TotalAmountCurrency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmountCurrency; }

        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public float? TotalAmountValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoicePropertiesInternal)Property).TotalAmountValue; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Type; }

        /// <summary>Creates an new <see cref="Invoice" /> instance.</summary>
        public Invoice()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
            await eventListener.AssertObjectIsValid(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
        }
    }
    /// An invoice.
    public partial interface IInvoice :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1
    {
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AmountDueCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AmountDueValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AmountRefundedCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AmountRefundedValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AmountRequestedCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AmountRequestedValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string AzurePrepaymentAppliedCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? AzurePrepaymentAppliedValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string BilledAmountCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? BilledAmountValue { get;  }
        /// <summary>
        /// The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the
        /// void invoices only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the void invoices only.",
        SerializedName = @"billedDocumentId",
        PossibleTypes = new [] { typeof(string) })]
        string BilledDocumentId { get;  }
        /// <summary>The name of the billing profile for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the billing profile for which the invoice is generated.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The ID of the billing profile for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the billing profile for which the invoice is generated.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string CreditAmountCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? CreditAmountValue { get;  }
        /// <summary>
        /// The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit
        /// notes only.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit notes only.",
        SerializedName = @"creditForDocumentId",
        PossibleTypes = new [] { typeof(string) })]
        string CreditForDocumentId { get;  }
        /// <summary>The date when the invoice was generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date when the invoice was generated.",
        SerializedName = @"invoiceDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Date { get;  }
        /// <summary>
        /// List of documents available to download and view such as invoice, credit note, or tax receipt.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of documents available to download and view such as invoice, credit note, or tax receipt.",
        SerializedName = @"documents",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceDocument) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceDocument[] Document { get;  }
        /// <summary>The type of the document.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of the document.",
        SerializedName = @"documentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceDocumentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceDocumentType? DocumentType { get;  }
        /// <summary>The due date for the invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The due date for the invoice.",
        SerializedName = @"dueDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DueDate { get;  }
        /// <summary>List of failed payments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of failed payments.",
        SerializedName = @"failedPayments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IFailedPayment) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IFailedPayment[] FailedPayment { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string FreeAzureCreditAppliedCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? FreeAzureCreditAppliedValue { get;  }
        /// <summary>Invoice type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Invoice type.",
        SerializedName = @"invoiceType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceType? InvoiceType { get;  }
        /// <summary>
        /// Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts
        /// with agreement type Microsoft Customer Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.",
        SerializedName = @"isMonthlyInvoice",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsMonthlyInvoice { get;  }
        /// <summary>List of payments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of payments.",
        SerializedName = @"payments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IPayment) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IPayment[] Payment { get;  }
        /// <summary>
        /// The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.",
        SerializedName = @"invoicePeriodEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PeriodEndDate { get;  }
        /// <summary>
        /// The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.",
        SerializedName = @"invoicePeriodStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PeriodStartDate { get;  }
        /// <summary>An optional purchase order number for the invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"An optional purchase order number for the invoice.",
        SerializedName = @"purchaseOrderNumber",
        PossibleTypes = new [] { typeof(string) })]
        string PurchaseOrderNumber { get;  }
        /// <summary>The ID of credit note.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of credit note.",
        SerializedName = @"creditNoteDocumentId",
        PossibleTypes = new [] { typeof(string) })]
        string RebillDetailCreditNoteDocumentId { get;  }
        /// <summary>The ID of invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of invoice.",
        SerializedName = @"invoiceDocumentId",
        PossibleTypes = new [] { typeof(string) })]
        string RebillDetailInvoiceDocumentId { get;  }
        /// <summary>Date when the refund was approved.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date when the refund was approved.",
        SerializedName = @"approvedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RefundDetailApprovedOn { get;  }
        /// <summary>Date when the refund was completed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date when the refund was completed.",
        SerializedName = @"completedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RefundDetailCompletedOn { get;  }
        /// <summary>The invoice ID of the rebill invoice for a refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The invoice ID of the rebill invoice for a refund.",
        SerializedName = @"rebillInvoiceId",
        PossibleTypes = new [] { typeof(string) })]
        string RefundDetailRebillInvoiceId { get;  }
        /// <summary>The ID of refund operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of refund operation.",
        SerializedName = @"refundOperationId",
        PossibleTypes = new [] { typeof(string) })]
        string RefundDetailRefundOperationId { get;  }
        /// <summary>The reason for refund.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reason for refund.",
        SerializedName = @"refundReason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundReasonCode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundReasonCode? RefundDetailRefundReason { get;  }
        /// <summary>The status of refund request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of refund request.",
        SerializedName = @"refundStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundStatus? RefundDetailRefundStatus { get;  }
        /// <summary>Date when the refund was requested.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date when the refund was requested.",
        SerializedName = @"requestedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RefundDetailRequestedOn { get;  }
        /// <summary>The number of transactions refunded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of transactions refunded.",
        SerializedName = @"transactionCount",
        PossibleTypes = new [] { typeof(int) })]
        int? RefundDetailTransactionCount { get;  }
        /// <summary>
        /// Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax
        /// calculation logic.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax calculation logic.",
        SerializedName = @"specialTaxationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SpecialTaxationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SpecialTaxationType? SpecialTaxationType { get;  }
        /// <summary>The current status of the invoice.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the invoice.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceStatus? Status { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string SubTotalCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? SubTotalValue { get;  }
        /// <summary>The name of the billing subscription for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the billing subscription for which the invoice is generated.",
        SerializedName = @"subscriptionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionDisplayName { get;  }
        /// <summary>The ID of the subscription for which the invoice is generated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the subscription for which the invoice is generated.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string TaxAmountCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? TaxAmountValue { get;  }
        /// <summary>The currency for the amount value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The currency for the amount value.",
        SerializedName = @"currency",
        PossibleTypes = new [] { typeof(string) })]
        string TotalAmountCurrency { get;  }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(float) })]
        float? TotalAmountValue { get;  }

    }
    /// An invoice.
    internal partial interface IInvoiceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1Internal
    {
        /// <summary>The amount due as of now.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount AmountDue { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AmountDueCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? AmountDueValue { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AmountRefundedCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? AmountRefundedValue { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AmountRequestedCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? AmountRequestedValue { get; set; }
        /// <summary>
        /// The amount of Azure prepayment applied to the charges. This field is applicable to billing accounts with agreement type
        /// Microsoft Customer Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount AzurePrepaymentApplied { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string AzurePrepaymentAppliedCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? AzurePrepaymentAppliedValue { get; set; }
        /// <summary>The total charges for the invoice billing period.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount BilledAmount { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string BilledAmountCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? BilledAmountValue { get; set; }
        /// <summary>
        /// The Id of the active invoice which is originally billed after this invoice was voided. This field is applicable to the
        /// void invoices only.
        /// </summary>
        string BilledDocumentId { get; set; }
        /// <summary>The name of the billing profile for which the invoice is generated.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The ID of the billing profile for which the invoice is generated.</summary>
        string BillingProfileId { get; set; }
        /// <summary>
        /// The total refund for returns and cancellations during the invoice billing period. This field is applicable to billing
        /// accounts with agreement type Microsoft Customer Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount CreditAmount { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string CreditAmountCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? CreditAmountValue { get; set; }
        /// <summary>
        /// The Id of the invoice which got voided and this credit note was issued as a result. This field is applicable to the credit
        /// notes only.
        /// </summary>
        string CreditForDocumentId { get; set; }
        /// <summary>The date when the invoice was generated.</summary>
        global::System.DateTime? Date { get; set; }
        /// <summary>
        /// List of documents available to download and view such as invoice, credit note, or tax receipt.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceDocument[] Document { get; set; }
        /// <summary>The type of the document.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceDocumentType? DocumentType { get; set; }
        /// <summary>The due date for the invoice.</summary>
        global::System.DateTime? DueDate { get; set; }
        /// <summary>List of failed payments.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IFailedPayment[] FailedPayment { get; set; }
        /// <summary>
        /// The amount of free Azure credits applied to the charges. This field is applicable to billing accounts with agreement type
        /// Microsoft Customer Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount FreeAzureCreditApplied { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string FreeAzureCreditAppliedCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? FreeAzureCreditAppliedValue { get; set; }
        /// <summary>Invoice type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceType? InvoiceType { get; set; }
        /// <summary>
        /// Specifies if the invoice is generated as part of monthly invoicing cycle or not. This field is applicable to billing accounts
        /// with agreement type Microsoft Customer Agreement.
        /// </summary>
        bool? IsMonthlyInvoice { get; set; }
        /// <summary>List of payments.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IPayment[] Payment { get; set; }
        /// <summary>
        /// The end date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
        /// </summary>
        global::System.DateTime? PeriodEndDate { get; set; }
        /// <summary>
        /// The start date of the billing period for which the invoice is generated. The date is in MM-DD-YYYY format.
        /// </summary>
        global::System.DateTime? PeriodStartDate { get; set; }
        /// <summary>An invoice.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IInvoiceProperties Property { get; set; }
        /// <summary>An optional purchase order number for the invoice.</summary>
        string PurchaseOrderNumber { get; set; }
        /// <summary>Rebill details for an invoice.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IRebillDetails RebillDetail { get; set; }
        /// <summary>The ID of credit note.</summary>
        string RebillDetailCreditNoteDocumentId { get; set; }
        /// <summary>The ID of invoice.</summary>
        string RebillDetailInvoiceDocumentId { get; set; }
        /// <summary>The details of a refund request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IRefundDetailsSummary RefundDetail { get; set; }
        /// <summary>The amount refunded.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount RefundDetailAmountRefunded { get; set; }
        /// <summary>The amount of refund requested.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount RefundDetailAmountRequested { get; set; }
        /// <summary>Date when the refund was approved.</summary>
        global::System.DateTime? RefundDetailApprovedOn { get; set; }
        /// <summary>Date when the refund was completed.</summary>
        global::System.DateTime? RefundDetailCompletedOn { get; set; }
        /// <summary>The invoice ID of the rebill invoice for a refund.</summary>
        string RefundDetailRebillInvoiceId { get; set; }
        /// <summary>The ID of refund operation.</summary>
        string RefundDetailRefundOperationId { get; set; }
        /// <summary>The reason for refund.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundReasonCode? RefundDetailRefundReason { get; set; }
        /// <summary>The status of refund request.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.RefundStatus? RefundDetailRefundStatus { get; set; }
        /// <summary>Date when the refund was requested.</summary>
        global::System.DateTime? RefundDetailRequestedOn { get; set; }
        /// <summary>The number of transactions refunded.</summary>
        int? RefundDetailTransactionCount { get; set; }
        /// <summary>
        /// Identifies the type of tax calculation used for the invoice. The field is applicable only to invoices with special tax
        /// calculation logic.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SpecialTaxationType? SpecialTaxationType { get; set; }
        /// <summary>The current status of the invoice.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.InvoiceStatus? Status { get; set; }
        /// <summary>
        /// The pre-tax amount due. This field is applicable to billing accounts with agreement type Microsoft Customer Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount SubTotal { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string SubTotalCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? SubTotalValue { get; set; }
        /// <summary>The name of the billing subscription for which the invoice is generated.</summary>
        string SubscriptionDisplayName { get; set; }
        /// <summary>The ID of the subscription for which the invoice is generated.</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The amount of tax charged for the billing period. This field is applicable to billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount TaxAmount { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string TaxAmountCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? TaxAmountValue { get; set; }
        /// <summary>
        /// The amount due when the invoice was generated. This field is applicable to billing accounts with agreement type Microsoft
        /// Customer Agreement.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IAmount TotalAmount { get; set; }
        /// <summary>The currency for the amount value.</summary>
        string TotalAmountCurrency { get; set; }
        /// <summary>
        /// The amount value. For example, if the currency is USD, then a value of 600 would be $600.00.
        /// </summary>
        float? TotalAmountValue { get; set; }

    }
}