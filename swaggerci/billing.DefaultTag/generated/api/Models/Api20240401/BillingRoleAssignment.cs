// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The properties of the billing role assignment.</summary>
    public partial class BillingRoleAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1 __proxyResourceWithTags1 = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.ProxyResourceWithTags1();

        /// <summary>The name of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingAccountDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingAccountId; }

        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingProfileDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingProfileId; }

        /// <summary>
        /// The ID of the billing request that was created for the role assignment. This is only applicable to cross tenant role assignments
        /// or role assignments created through the billing request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingRequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingRequestId; }

        /// <summary>The object ID of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalId; }

        /// <summary>The principal PUID of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalPuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalPuid; }

        /// <summary>The tenant Id of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalTenantId; }

        /// <summary>
        /// The email address of the user who created the role assignment. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CreatedByUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByUserEmailAddress; }

        /// <summary>The date the role assignment was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedOn; }

        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CustomerDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CustomerId; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Id; }

        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).InvoiceSectionDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).InvoiceSectionId; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for BillingAccountDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.BillingAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingAccountDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingAccountDisplayName = value; }

        /// <summary>Internal Acessors for BillingAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.BillingAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingAccountId = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingProfileId = value; }

        /// <summary>Internal Acessors for BillingRequestId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.BillingRequestId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingRequestId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).BillingRequestId = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CreatedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalId = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalPuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CreatedByPrincipalPuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalPuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalPuid = value; }

        /// <summary>Internal Acessors for CreatedByPrincipalTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CreatedByPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByPrincipalTenantId = value; }

        /// <summary>Internal Acessors for CreatedByUserEmailAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CreatedByUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByUserEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedByUserEmailAddress = value; }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CreatedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CreatedOn = value; }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CustomerDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CustomerDisplayName = value; }

        /// <summary>Internal Acessors for CustomerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).CustomerId = value; }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).InvoiceSectionDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).InvoiceSectionDisplayName = value; }

        /// <summary>Internal Acessors for InvoiceSectionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).InvoiceSectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).InvoiceSectionId = value; }

        /// <summary>Internal Acessors for ModifiedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.ModifiedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalId = value; }

        /// <summary>Internal Acessors for ModifiedByPrincipalPuid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.ModifiedByPrincipalPuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalPuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalPuid = value; }

        /// <summary>Internal Acessors for ModifiedByPrincipalTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.ModifiedByPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalTenantId = value; }

        /// <summary>Internal Acessors for ModifiedByUserEmailAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.ModifiedByUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByUserEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByUserEmailAddress = value; }

        /// <summary>Internal Acessors for ModifiedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.ModifiedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedOn = value; }

        /// <summary>Internal Acessors for PrincipalDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.PrincipalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalDisplayName = value; }

        /// <summary>Internal Acessors for PrincipalTenantName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.PrincipalTenantName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantName = value; }

        /// <summary>Internal Acessors for PrincipalType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.PrincipalType? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.PrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.BillingRoleAssignmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Type = value; }

        /// <summary>The principal PUID of the user who modified the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ModifiedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalId; }

        /// <summary>The principal PUID of the user who modified the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ModifiedByPrincipalPuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalPuid; }

        /// <summary>The tenant Id of the user who modified the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ModifiedByPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByPrincipalTenantId; }

        /// <summary>
        /// The email address of the user who modified the role assignment. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ModifiedByUserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedByUserEmailAddress; }

        /// <summary>The date the role assignment was modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? ModifiedOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ModifiedOn; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Name; }

        /// <summary>The display name of the principal to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalDisplayName; }

        /// <summary>The object id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalId = value ?? null; }

        /// <summary>The principal PUID of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalPuid { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalPuid; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalPuid = value ?? null; }

        /// <summary>The principal tenant id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantId = value ?? null; }

        /// <summary>
        /// The friendly name of the tenant of the user to whom the role was assigned. This will be 'Primary Tenant' for the primary
        /// tenant of the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string PrincipalTenantName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalTenantName; }

        /// <summary>The type of a role Assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.PrincipalType? PrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).PrincipalType; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentProperties _property;

        /// <summary>The properties of the billing role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.BillingRoleAssignmentProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="RetryAfter" /> property.</summary>
        private int? _retryAfter;

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        public int? RetryAfter { get => this._retryAfter; set => this._retryAfter = value; }

        /// <summary>The ID of the role definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RoleDefinitionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).RoleDefinitionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).RoleDefinitionId = value ?? null; }

        /// <summary>The scope at which the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).Scope = value ?? null; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.CreatedByType)""); }

        /// <summary>
        /// Dictionary of metadata associated with the resource. It may not be populated for all resource types. Maximum key/value
        /// length supported of 256 characters. Keys/value should not empty value nor null. Keys can not contain < > % & \ ? /
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1Internal)__proxyResourceWithTags1).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api50.IResourceInternal)__proxyResourceWithTags1).Type; }

        /// <summary>
        /// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported
        /// only for billing accounts with agreement type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UserAuthenticationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).UserAuthenticationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).UserAuthenticationType = value ?? null; }

        /// <summary>
        /// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string UserEmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).UserEmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentPropertiesInternal)Property).UserEmailAddress = value ?? null; }

        /// <summary>Creates an new <see cref="BillingRoleAssignment" /> instance.</summary>
        public BillingRoleAssignment()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("Location", out var __locationHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal)this).Location = System.Linq.Enumerable.FirstOrDefault(__locationHeader0) is string __headerLocationHeader0 ? __headerLocationHeader0 : (string)null;
            }
            if (headers.TryGetValues("Retry-After", out var __retryAfterHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentInternal)this).RetryAfter = System.Linq.Enumerable.FirstOrDefault(__retryAfterHeader1) is string __headerRetryAfterHeader1 ? int.TryParse( __headerRetryAfterHeader1, out int __headerRetryAfterHeader1Value ) ? __headerRetryAfterHeader1Value : default(int?) : default(int?);
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
            await eventListener.AssertObjectIsValid(nameof(__proxyResourceWithTags1), __proxyResourceWithTags1);
        }
    }
    /// The properties of the billing role assignment.
    public partial interface IBillingRoleAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1
    {
        /// <summary>The name of the billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the billing account.",
        SerializedName = @"billingAccountDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified ID that uniquely identifies a billing account.",
        SerializedName = @"billingAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingAccountId { get;  }
        /// <summary>The name of the billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the billing profile.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get;  }
        /// <summary>
        /// The ID of the billing request that was created for the role assignment. This is only applicable to cross tenant role assignments
        /// or role assignments created through the billing request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the billing request that was created for the role assignment. This is only applicable to cross tenant role assignments or role assignments created through the billing request.",
        SerializedName = @"billingRequestId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingRequestId { get;  }
        /// <summary>The object ID of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The object ID of the user who created the role assignment.",
        SerializedName = @"createdByPrincipalId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalId { get;  }
        /// <summary>The principal PUID of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal PUID of the user who created the role assignment.",
        SerializedName = @"createdByPrincipalPuid",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalPuid { get;  }
        /// <summary>The tenant Id of the user who created the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant Id of the user who created the role assignment.",
        SerializedName = @"createdByPrincipalTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByPrincipalTenantId { get;  }
        /// <summary>
        /// The email address of the user who created the role assignment. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The email address of the user who created the role assignment. This is supported only for billing accounts with agreement type Enterprise Agreement.",
        SerializedName = @"createdByUserEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedByUserEmailAddress { get;  }
        /// <summary>The date the role assignment was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date the role assignment was created.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the customer.",
        SerializedName = @"customerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified ID that uniquely identifies a customer.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get;  }
        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the invoice section.",
        SerializedName = @"invoiceSectionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionId { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>The principal PUID of the user who modified the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal PUID of the user who modified the role assignment.",
        SerializedName = @"modifiedByPrincipalId",
        PossibleTypes = new [] { typeof(string) })]
        string ModifiedByPrincipalId { get;  }
        /// <summary>The principal PUID of the user who modified the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal PUID of the user who modified the role assignment.",
        SerializedName = @"modifiedByPrincipalPuid",
        PossibleTypes = new [] { typeof(string) })]
        string ModifiedByPrincipalPuid { get;  }
        /// <summary>The tenant Id of the user who modified the role assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant Id of the user who modified the role assignment.",
        SerializedName = @"modifiedByPrincipalTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ModifiedByPrincipalTenantId { get;  }
        /// <summary>
        /// The email address of the user who modified the role assignment. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The email address of the user who modified the role assignment. This is supported only for billing accounts with agreement type Enterprise Agreement.",
        SerializedName = @"modifiedByUserEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string ModifiedByUserEmailAddress { get;  }
        /// <summary>The date the role assignment was modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date the role assignment was modified.",
        SerializedName = @"modifiedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ModifiedOn { get;  }
        /// <summary>The display name of the principal to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the principal to whom the role was assigned.",
        SerializedName = @"principalDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalDisplayName { get;  }
        /// <summary>The object id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object id of the user to whom the role was assigned.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get; set; }
        /// <summary>The principal PUID of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal PUID of the user to whom the role was assigned.",
        SerializedName = @"principalPuid",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalPuid { get; set; }
        /// <summary>The principal tenant id of the user to whom the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal tenant id of the user to whom the role was assigned.",
        SerializedName = @"principalTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalTenantId { get; set; }
        /// <summary>
        /// The friendly name of the tenant of the user to whom the role was assigned. This will be 'Primary Tenant' for the primary
        /// tenant of the billing account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The friendly name of the tenant of the user to whom the role was assigned. This will be 'Primary Tenant' for the primary tenant of the billing account.",
        SerializedName = @"principalTenantName",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalTenantName { get;  }
        /// <summary>The type of a role Assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of a role Assignment.",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.PrincipalType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.PrincipalType? PrincipalType { get;  }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource during a long-running operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ProvisioningState? ProvisioningState { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Retry-After",
        PossibleTypes = new [] { typeof(int) })]
        int? RetryAfter { get; set; }
        /// <summary>The ID of the role definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the role definition.",
        SerializedName = @"roleDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string RoleDefinitionId { get; set; }
        /// <summary>The scope at which the role was assigned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scope at which the role was assigned.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>
        /// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported
        /// only for billing accounts with agreement type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.",
        SerializedName = @"userAuthenticationType",
        PossibleTypes = new [] { typeof(string) })]
        string UserAuthenticationType { get; set; }
        /// <summary>
        /// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement type Enterprise Agreement.",
        SerializedName = @"userEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string UserEmailAddress { get; set; }

    }
    /// The properties of the billing role assignment.
    internal partial interface IBillingRoleAssignmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IProxyResourceWithTags1Internal
    {
        /// <summary>The name of the billing account.</summary>
        string BillingAccountDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing account.</summary>
        string BillingAccountId { get; set; }
        /// <summary>The name of the billing profile.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        string BillingProfileId { get; set; }
        /// <summary>
        /// The ID of the billing request that was created for the role assignment. This is only applicable to cross tenant role assignments
        /// or role assignments created through the billing request.
        /// </summary>
        string BillingRequestId { get; set; }
        /// <summary>The object ID of the user who created the role assignment.</summary>
        string CreatedByPrincipalId { get; set; }
        /// <summary>The principal PUID of the user who created the role assignment.</summary>
        string CreatedByPrincipalPuid { get; set; }
        /// <summary>The tenant Id of the user who created the role assignment.</summary>
        string CreatedByPrincipalTenantId { get; set; }
        /// <summary>
        /// The email address of the user who created the role assignment. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        string CreatedByUserEmailAddress { get; set; }
        /// <summary>The date the role assignment was created.</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>The name of the customer.</summary>
        string CustomerDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        string CustomerId { get; set; }
        /// <summary>The name of the invoice section.</summary>
        string InvoiceSectionDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionId { get; set; }

        string Location { get; set; }
        /// <summary>The principal PUID of the user who modified the role assignment.</summary>
        string ModifiedByPrincipalId { get; set; }
        /// <summary>The principal PUID of the user who modified the role assignment.</summary>
        string ModifiedByPrincipalPuid { get; set; }
        /// <summary>The tenant Id of the user who modified the role assignment.</summary>
        string ModifiedByPrincipalTenantId { get; set; }
        /// <summary>
        /// The email address of the user who modified the role assignment. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        string ModifiedByUserEmailAddress { get; set; }
        /// <summary>The date the role assignment was modified.</summary>
        global::System.DateTime? ModifiedOn { get; set; }
        /// <summary>The display name of the principal to whom the role was assigned.</summary>
        string PrincipalDisplayName { get; set; }
        /// <summary>The object id of the user to whom the role was assigned.</summary>
        string PrincipalId { get; set; }
        /// <summary>The principal PUID of the user to whom the role was assigned.</summary>
        string PrincipalPuid { get; set; }
        /// <summary>The principal tenant id of the user to whom the role was assigned.</summary>
        string PrincipalTenantId { get; set; }
        /// <summary>
        /// The friendly name of the tenant of the user to whom the role was assigned. This will be 'Primary Tenant' for the primary
        /// tenant of the billing account.
        /// </summary>
        string PrincipalTenantName { get; set; }
        /// <summary>The type of a role Assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.PrincipalType? PrincipalType { get; set; }
        /// <summary>The properties of the billing role assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20240401.IBillingRoleAssignmentProperties Property { get; set; }
        /// <summary>The provisioning state of the resource during a long-running operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.ProvisioningState? ProvisioningState { get; set; }

        int? RetryAfter { get; set; }
        /// <summary>The ID of the role definition.</summary>
        string RoleDefinitionId { get; set; }
        /// <summary>The scope at which the role was assigned.</summary>
        string Scope { get; set; }
        /// <summary>
        /// The authentication type of the user, whether Organization or MSA, of the user to whom the role was assigned. This is supported
        /// only for billing accounts with agreement type Enterprise Agreement.
        /// </summary>
        string UserAuthenticationType { get; set; }
        /// <summary>
        /// The email address of the user to whom the role was assigned. This is supported only for billing accounts with agreement
        /// type Enterprise Agreement.
        /// </summary>
        string UserEmailAddress { get; set; }

    }
}