// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20240106
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Extensions;

    public partial class CanonicalSupportPlanStatusItem :
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20240106.ICanonicalSupportPlanStatusItem,
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Models.Api20240106.ICanonicalSupportPlanStatusItemInternal
    {

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>Whether the support plan is enabled for this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="SupportPlanType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.SupportPlanType? _supportPlanType;

        /// <summary>Support plan type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.SupportPlanType? SupportPlanType { get => this._supportPlanType; set => this._supportPlanType = value; }

        /// <summary>Backing field for <see cref="WillEmitOneTimeChargeIfReEnabled" /> property.</summary>
        private bool? _willEmitOneTimeChargeIfReEnabled;

        /// <summary>
        /// This indicates that when this support plan is cancelled and then enabled that AddonsRP will emit a one-time charge.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public bool? WillEmitOneTimeChargeIfReEnabled { get => this._willEmitOneTimeChargeIfReEnabled; set => this._willEmitOneTimeChargeIfReEnabled = value; }

        /// <summary>Backing field for <see cref="WillEmitOneTimeChargeWhenEnabled" /> property.</summary>
        private bool? _willEmitOneTimeChargeWhenEnabled;

        /// <summary>
        /// This indicates that when this support plan is enabled if AddonsRP will emit a one-time charge.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Origin(Microsoft.Azure.PowerShell.Cmdlets.Addons.PropertyOrigin.Owned)]
        public bool? WillEmitOneTimeChargeWhenEnabled { get => this._willEmitOneTimeChargeWhenEnabled; set => this._willEmitOneTimeChargeWhenEnabled = value; }

        /// <summary>Creates an new <see cref="CanonicalSupportPlanStatusItem" /> instance.</summary>
        public CanonicalSupportPlanStatusItem()
        {

        }
    }
    public partial interface ICanonicalSupportPlanStatusItem :
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.IJsonSerializable
    {
        /// <summary>Whether the support plan is enabled for this subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the support plan is enabled for this subscription.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Support plan type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Support plan type.",
        SerializedName = @"supportPlanType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.SupportPlanType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.SupportPlanType? SupportPlanType { get; set; }
        /// <summary>
        /// This indicates that when this support plan is cancelled and then enabled that AddonsRP will emit a one-time charge.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This indicates that when this support plan is cancelled and then enabled that AddonsRP will emit a one-time charge.",
        SerializedName = @"willEmitOneTimeChargeIfReEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WillEmitOneTimeChargeIfReEnabled { get; set; }
        /// <summary>
        /// This indicates that when this support plan is enabled if AddonsRP will emit a one-time charge.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Addons.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This indicates that when this support plan is enabled if AddonsRP will emit a one-time charge.",
        SerializedName = @"willEmitOneTimeChargeWhenEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? WillEmitOneTimeChargeWhenEnabled { get; set; }

    }
    internal partial interface ICanonicalSupportPlanStatusItemInternal

    {
        /// <summary>Whether the support plan is enabled for this subscription.</summary>
        bool? Enabled { get; set; }
        /// <summary>Support plan type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Addons.Support.SupportPlanType? SupportPlanType { get; set; }
        /// <summary>
        /// This indicates that when this support plan is cancelled and then enabled that AddonsRP will emit a one-time charge.
        /// </summary>
        bool? WillEmitOneTimeChargeIfReEnabled { get; set; }
        /// <summary>
        /// This indicates that when this support plan is enabled if AddonsRP will emit a one-time charge.
        /// </summary>
        bool? WillEmitOneTimeChargeWhenEnabled { get; set; }

    }
}