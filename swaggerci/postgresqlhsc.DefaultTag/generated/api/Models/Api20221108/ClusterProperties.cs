// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Extensions;

    /// <summary>Properties of the cluster.</summary>
    public partial class ClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdministratorLogin" /> property.</summary>
        private string _administratorLogin;

        /// <summary>The administrator's login name of the servers in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string AdministratorLogin { get => this._administratorLogin; }

        /// <summary>Backing field for <see cref="AdministratorLoginPassword" /> property.</summary>
        private System.Security.SecureString _administratorLoginPassword;

        /// <summary>The password of the administrator login. Required for creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public System.Security.SecureString AdministratorLoginPassword { get => this._administratorLoginPassword; set => this._administratorLoginPassword = value; }

        /// <summary>Backing field for <see cref="CitusVersion" /> property.</summary>
        private string _citusVersion;

        /// <summary>The Citus extension version on all cluster servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string CitusVersion { get => this._citusVersion; set => this._citusVersion = value; }

        /// <summary>Backing field for <see cref="CoordinatorEnablePublicIPAccess" /> property.</summary>
        private bool? _coordinatorEnablePublicIPAccess;

        /// <summary>If public access is enabled on coordinator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public bool? CoordinatorEnablePublicIPAccess { get => this._coordinatorEnablePublicIPAccess; set => this._coordinatorEnablePublicIPAccess = value; }

        /// <summary>Backing field for <see cref="CoordinatorServerEdition" /> property.</summary>
        private string _coordinatorServerEdition;

        /// <summary>
        /// The edition of a coordinator server (default: GeneralPurpose). Required for creation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string CoordinatorServerEdition { get => this._coordinatorServerEdition; set => this._coordinatorServerEdition = value; }

        /// <summary>Backing field for <see cref="CoordinatorStorageQuotaInMb" /> property.</summary>
        private int? _coordinatorStorageQuotaInMb;

        /// <summary>
        /// The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public int? CoordinatorStorageQuotaInMb { get => this._coordinatorStorageQuotaInMb; set => this._coordinatorStorageQuotaInMb = value; }

        /// <summary>Backing field for <see cref="CoordinatorVCore" /> property.</summary>
        private int? _coordinatorVCore;

        /// <summary>
        /// The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public int? CoordinatorVCore { get => this._coordinatorVCore; set => this._coordinatorVCore = value; }

        /// <summary>Backing field for <see cref="EarliestRestoreTime" /> property.</summary>
        private global::System.DateTime? _earliestRestoreTime;

        /// <summary>The earliest restore point time (ISO8601 format) for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public global::System.DateTime? EarliestRestoreTime { get => this._earliestRestoreTime; }

        /// <summary>Backing field for <see cref="EnableHa" /> property.</summary>
        private bool? _enableHa;

        /// <summary>If high availability (HA) is enabled or not for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public bool? EnableHa { get => this._enableHa; set => this._enableHa = value; }

        /// <summary>Backing field for <see cref="EnableShardsOnCoordinator" /> property.</summary>
        private bool? _enableShardsOnCoordinator;

        /// <summary>
        /// If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard
        /// rebalancing after value is changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public bool? EnableShardsOnCoordinator { get => this._enableShardsOnCoordinator; set => this._enableShardsOnCoordinator = value; }

        /// <summary>Backing field for <see cref="MaintenanceWindow" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindow _maintenanceWindow;

        /// <summary>Maintenance window of a cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindow MaintenanceWindow { get => (this._maintenanceWindow = this._maintenanceWindow ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.MaintenanceWindow()); set => this._maintenanceWindow = value; }

        /// <summary>Indicates whether custom maintenance window is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public string MaintenanceWindowCustomWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).CustomWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).CustomWindow = value ?? null; }

        /// <summary>Preferred day of the week for maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).DayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).DayOfWeek = value ?? default(int); }

        /// <summary>Start hour within preferred day of the week for maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).StartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).StartHour = value ?? default(int); }

        /// <summary>Start minute within the start hour for maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).StartMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindowInternal)MaintenanceWindow).StartMinute = value ?? default(int); }

        /// <summary>Internal Acessors for AdministratorLogin</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.AdministratorLogin { get => this._administratorLogin; set { {_administratorLogin = value;} } }

        /// <summary>Internal Acessors for EarliestRestoreTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.EarliestRestoreTime { get => this._earliestRestoreTime; set { {_earliestRestoreTime = value;} } }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.MaintenanceWindow { get => (this._maintenanceWindow = this._maintenanceWindow ?? new Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.MaintenanceWindow()); set { {_maintenanceWindow = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ISimplePrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ReadReplica</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.ReadReplica { get => this._readReplica; set { {_readReplica = value;} } }

        /// <summary>Internal Acessors for ServerName</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerNameItem[] Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.ServerName { get => this._serverName; set { {_serverName = value;} } }

        /// <summary>Internal Acessors for State</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IClusterPropertiesInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Backing field for <see cref="NodeCount" /> property.</summary>
        private int? _nodeCount;

        /// <summary>
        /// Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to
        /// create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot
        /// be 1. Required for creation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public int? NodeCount { get => this._nodeCount; set => this._nodeCount = value; }

        /// <summary>Backing field for <see cref="NodeEnablePublicIPAccess" /> property.</summary>
        private bool? _nodeEnablePublicIPAccess;

        /// <summary>If public access is enabled on worker nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public bool? NodeEnablePublicIPAccess { get => this._nodeEnablePublicIPAccess; set => this._nodeEnablePublicIPAccess = value; }

        /// <summary>Backing field for <see cref="NodeServerEdition" /> property.</summary>
        private string _nodeServerEdition;

        /// <summary>The edition of a node server (default: MemoryOptimized).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string NodeServerEdition { get => this._nodeServerEdition; set => this._nodeServerEdition = value; }

        /// <summary>Backing field for <see cref="NodeStorageQuotaInMb" /> property.</summary>
        private int? _nodeStorageQuotaInMb;

        /// <summary>
        /// The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for
        /// more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public int? NodeStorageQuotaInMb { get => this._nodeStorageQuotaInMb; set => this._nodeStorageQuotaInMb = value; }

        /// <summary>Backing field for <see cref="NodeVCore" /> property.</summary>
        private int? _nodeVCore;

        /// <summary>
        /// The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public int? NodeVCore { get => this._nodeVCore; set => this._nodeVCore = value; }

        /// <summary>Backing field for <see cref="PointInTimeUtc" /> property.</summary>
        private global::System.DateTime? _pointInTimeUtc;

        /// <summary>Date and time in UTC (ISO8601 format) for cluster restore.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public global::System.DateTime? PointInTimeUtc { get => this._pointInTimeUtc; set => this._pointInTimeUtc = value; }

        /// <summary>Backing field for <see cref="PostgresqlVersion" /> property.</summary>
        private string _postgresqlVersion;

        /// <summary>The major PostgreSQL version on all cluster servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string PostgresqlVersion { get => this._postgresqlVersion; set => this._postgresqlVersion = value; }

        /// <summary>Backing field for <see cref="PreferredPrimaryZone" /> property.</summary>
        private string _preferredPrimaryZone;

        /// <summary>Preferred primary availability zone (AZ) for all cluster servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string PreferredPrimaryZone { get => this._preferredPrimaryZone; set => this._preferredPrimaryZone = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ISimplePrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>The private endpoint connections for a cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ISimplePrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>Provisioning state of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ReadReplica" /> property.</summary>
        private string[] _readReplica;

        /// <summary>The array of read replica clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string[] ReadReplica { get => this._readReplica; }

        /// <summary>Backing field for <see cref="ServerName" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerNameItem[] _serverName;

        /// <summary>The list of server names in the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerNameItem[] ServerName { get => this._serverName; }

        /// <summary>Backing field for <see cref="SourceLocation" /> property.</summary>
        private string _sourceLocation;

        /// <summary>The Azure region of source cluster for read replica clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string SourceLocation { get => this._sourceLocation; set => this._sourceLocation = value; }

        /// <summary>Backing field for <see cref="SourceResourceId" /> property.</summary>
        private string _sourceResourceId;

        /// <summary>The resource id of source cluster for read replica clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string SourceResourceId { get => this._sourceResourceId; set => this._sourceResourceId = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        /// <summary>A state of a cluster/server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.PropertyOrigin.Owned)]
        public string State { get => this._state; }

        /// <summary>Creates an new <see cref="ClusterProperties" /> instance.</summary>
        public ClusterProperties()
        {

        }
    }
    /// Properties of the cluster.
    public partial interface IClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.IJsonSerializable
    {
        /// <summary>The administrator's login name of the servers in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The administrator's login name of the servers in the cluster.",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get;  }
        /// <summary>The password of the administrator login. Required for creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the administrator login. Required for creation.",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>The Citus extension version on all cluster servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Citus extension version on all cluster servers.",
        SerializedName = @"citusVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CitusVersion { get; set; }
        /// <summary>If public access is enabled on coordinator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If public access is enabled on coordinator.",
        SerializedName = @"coordinatorEnablePublicIpAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CoordinatorEnablePublicIPAccess { get; set; }
        /// <summary>
        /// The edition of a coordinator server (default: GeneralPurpose). Required for creation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The edition of a coordinator server (default: GeneralPurpose). Required for creation.",
        SerializedName = @"coordinatorServerEdition",
        PossibleTypes = new [] { typeof(string) })]
        string CoordinatorServerEdition { get; set; }
        /// <summary>
        /// The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.",
        SerializedName = @"coordinatorStorageQuotaInMb",
        PossibleTypes = new [] { typeof(int) })]
        int? CoordinatorStorageQuotaInMb { get; set; }
        /// <summary>
        /// The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.",
        SerializedName = @"coordinatorVCores",
        PossibleTypes = new [] { typeof(int) })]
        int? CoordinatorVCore { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The earliest restore point time (ISO8601 format) for the cluster.",
        SerializedName = @"earliestRestoreTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EarliestRestoreTime { get;  }
        /// <summary>If high availability (HA) is enabled or not for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If high availability (HA) is enabled or not for the cluster.",
        SerializedName = @"enableHa",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableHa { get; set; }
        /// <summary>
        /// If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard
        /// rebalancing after value is changed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard rebalancing after value is changed.",
        SerializedName = @"enableShardsOnCoordinator",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnableShardsOnCoordinator { get; set; }
        /// <summary>Indicates whether custom maintenance window is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether custom maintenance window is enabled or not.",
        SerializedName = @"customWindow",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>Preferred day of the week for maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Preferred day of the week for maintenance window.",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>Start hour within preferred day of the week for maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start hour within preferred day of the week for maintenance window.",
        SerializedName = @"startHour",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>Start minute within the start hour for maintenance window.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Start minute within the start hour for maintenance window.",
        SerializedName = @"startMinute",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>
        /// Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to
        /// create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot
        /// be 1. Required for creation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot be 1. Required for creation.",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeCount { get; set; }
        /// <summary>If public access is enabled on worker nodes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If public access is enabled on worker nodes.",
        SerializedName = @"nodeEnablePublicIpAccess",
        PossibleTypes = new [] { typeof(bool) })]
        bool? NodeEnablePublicIPAccess { get; set; }
        /// <summary>The edition of a node server (default: MemoryOptimized).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The edition of a node server (default: MemoryOptimized).",
        SerializedName = @"nodeServerEdition",
        PossibleTypes = new [] { typeof(string) })]
        string NodeServerEdition { get; set; }
        /// <summary>
        /// The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for
        /// more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.",
        SerializedName = @"nodeStorageQuotaInMb",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeStorageQuotaInMb { get; set; }
        /// <summary>
        /// The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for more information.",
        SerializedName = @"nodeVCores",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeVCore { get; set; }
        /// <summary>Date and time in UTC (ISO8601 format) for cluster restore.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date and time in UTC (ISO8601 format) for cluster restore.",
        SerializedName = @"pointInTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PointInTimeUtc { get; set; }
        /// <summary>The major PostgreSQL version on all cluster servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The major PostgreSQL version on all cluster servers.",
        SerializedName = @"postgresqlVersion",
        PossibleTypes = new [] { typeof(string) })]
        string PostgresqlVersion { get; set; }
        /// <summary>Preferred primary availability zone (AZ) for all cluster servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Preferred primary availability zone (AZ) for all cluster servers.",
        SerializedName = @"preferredPrimaryZone",
        PossibleTypes = new [] { typeof(string) })]
        string PreferredPrimaryZone { get; set; }
        /// <summary>The private endpoint connections for a cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The private endpoint connections for a cluster.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ISimplePrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ISimplePrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the cluster",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The array of read replica clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The array of read replica clusters.",
        SerializedName = @"readReplicas",
        PossibleTypes = new [] { typeof(string) })]
        string[] ReadReplica { get;  }
        /// <summary>The list of server names in the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of server names in the cluster",
        SerializedName = @"serverNames",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerNameItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerNameItem[] ServerName { get;  }
        /// <summary>The Azure region of source cluster for read replica clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure region of source cluster for read replica clusters.",
        SerializedName = @"sourceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string SourceLocation { get; set; }
        /// <summary>The resource id of source cluster for read replica clusters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of source cluster for read replica clusters.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceId { get; set; }
        /// <summary>A state of a cluster/server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a cluster/server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get;  }

    }
    /// Properties of the cluster.
    internal partial interface IClusterPropertiesInternal

    {
        /// <summary>The administrator's login name of the servers in the cluster.</summary>
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login. Required for creation.</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>The Citus extension version on all cluster servers.</summary>
        string CitusVersion { get; set; }
        /// <summary>If public access is enabled on coordinator.</summary>
        bool? CoordinatorEnablePublicIPAccess { get; set; }
        /// <summary>
        /// The edition of a coordinator server (default: GeneralPurpose). Required for creation.
        /// </summary>
        string CoordinatorServerEdition { get; set; }
        /// <summary>
        /// The storage of a server in MB. Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        int? CoordinatorStorageQuotaInMb { get; set; }
        /// <summary>
        /// The vCores count of a server (max: 96). Required for creation. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        int? CoordinatorVCore { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for the cluster.</summary>
        global::System.DateTime? EarliestRestoreTime { get; set; }
        /// <summary>If high availability (HA) is enabled or not for the cluster.</summary>
        bool? EnableHa { get; set; }
        /// <summary>
        /// If distributed tables are placed on coordinator or not. Should be set to 'true' on single node clusters. Requires shard
        /// rebalancing after value is changed.
        /// </summary>
        bool? EnableShardsOnCoordinator { get; set; }
        /// <summary>Maintenance window of a cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>Indicates whether custom maintenance window is enabled or not.</summary>
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>Preferred day of the week for maintenance window.</summary>
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>Start hour within preferred day of the week for maintenance window.</summary>
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>Start minute within the start hour for maintenance window.</summary>
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>
        /// Worker node count of the cluster. When node count is 0, it represents a single node configuration with the ability to
        /// create distributed tables on that node. 2 or more worker nodes represent multi-node configuration. Node count value cannot
        /// be 1. Required for creation.
        /// </summary>
        int? NodeCount { get; set; }
        /// <summary>If public access is enabled on worker nodes.</summary>
        bool? NodeEnablePublicIPAccess { get; set; }
        /// <summary>The edition of a node server (default: MemoryOptimized).</summary>
        string NodeServerEdition { get; set; }
        /// <summary>
        /// The storage in MB on each worker node. See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute for
        /// more information.
        /// </summary>
        int? NodeStorageQuotaInMb { get; set; }
        /// <summary>
        /// The compute in vCores on each worker node (max: 104). See https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute
        /// for more information.
        /// </summary>
        int? NodeVCore { get; set; }
        /// <summary>Date and time in UTC (ISO8601 format) for cluster restore.</summary>
        global::System.DateTime? PointInTimeUtc { get; set; }
        /// <summary>The major PostgreSQL version on all cluster servers.</summary>
        string PostgresqlVersion { get; set; }
        /// <summary>Preferred primary availability zone (AZ) for all cluster servers.</summary>
        string PreferredPrimaryZone { get; set; }
        /// <summary>The private endpoint connections for a cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.ISimplePrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Provisioning state of the cluster</summary>
        string ProvisioningState { get; set; }
        /// <summary>The array of read replica clusters.</summary>
        string[] ReadReplica { get; set; }
        /// <summary>The list of server names in the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CosmosDbForPostgreSql.Models.Api20221108.IServerNameItem[] ServerName { get; set; }
        /// <summary>The Azure region of source cluster for read replica clusters.</summary>
        string SourceLocation { get; set; }
        /// <summary>The resource id of source cluster for read replica clusters.</summary>
        string SourceResourceId { get; set; }
        /// <summary>A state of a cluster/server that is visible to user.</summary>
        string State { get; set; }

    }
}