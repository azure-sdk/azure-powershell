// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Extensions;

    /// <summary>Tenant Id information.</summary>
    public partial class TenantIdDescription :
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescription,
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal
    {

        /// <summary>Backing field for <see cref="Country" /> property.</summary>
        private string _country;

        /// <summary>The country/region name of the address for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string Country { get => this._country; }

        /// <summary>Backing field for <see cref="CountryCode" /> property.</summary>
        private string _countryCode;

        /// <summary>The Country/region abbreviation for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string CountryCode { get => this._countryCode; }

        /// <summary>Backing field for <see cref="DefaultDomain" /> property.</summary>
        private string _defaultDomain;

        /// <summary>The default domain for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string DefaultDomain { get => this._defaultDomain; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="Domain" /> property.</summary>
        private string _domain;

        /// <summary>The list of domains for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string Domain { get => this._domain; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>
        /// The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>Internal Acessors for Country</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.Country { get => this._country; set { {_country = value;} } }

        /// <summary>Internal Acessors for CountryCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.CountryCode { get => this._countryCode; set { {_countryCode = value;} } }

        /// <summary>Internal Acessors for DefaultDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.DefaultDomain { get => this._defaultDomain; set { {_defaultDomain = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for Domain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.Domain { get => this._domain; set { {_domain = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for TenantCategory</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.TenantCategory { get => this._tenantCategory; set { {_tenantCategory = value;} } }

        /// <summary>Internal Acessors for TenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.TenantId { get => this._tenantId; set { {_tenantId = value;} } }

        /// <summary>Internal Acessors for TenantType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Subscription.Models.Api20160601.ITenantIdDescriptionInternal.TenantType { get => this._tenantType; set { {_tenantType = value;} } }

        /// <summary>Backing field for <see cref="TenantCategory" /> property.</summary>
        private string _tenantCategory;

        /// <summary>
        /// The category of the tenant. Possible values are TenantCategoryHome,TenantCategoryProjectedBy,TenantCategoryManagedBy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string TenantCategory { get => this._tenantCategory; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>The tenant ID. For example, 00000000-0000-0000-0000-000000000000.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; }

        /// <summary>Backing field for <see cref="TenantType" /> property.</summary>
        private string _tenantType;

        /// <summary>The tenant type. Only available for Home tenant category.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Origin(Microsoft.Azure.PowerShell.Cmdlets.Subscription.PropertyOrigin.Owned)]
        public string TenantType { get => this._tenantType; }

        /// <summary>Creates an new <see cref="TenantIdDescription" /> instance.</summary>
        public TenantIdDescription()
        {

        }
    }
    /// Tenant Id information.
    public partial interface ITenantIdDescription :
        Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.IJsonSerializable
    {
        /// <summary>The country/region name of the address for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The country/region name of the address for the tenant.",
        SerializedName = @"country",
        PossibleTypes = new [] { typeof(string) })]
        string Country { get;  }
        /// <summary>The Country/region abbreviation for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Country/region abbreviation for the tenant.",
        SerializedName = @"countryCode",
        PossibleTypes = new [] { typeof(string) })]
        string CountryCode { get;  }
        /// <summary>The default domain for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The default domain for the tenant.",
        SerializedName = @"defaultDomain",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDomain { get;  }
        /// <summary>The display name of the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the tenant.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The list of domains for the tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of domains for the tenant.",
        SerializedName = @"domains",
        PossibleTypes = new [] { typeof(string) })]
        string Domain { get;  }
        /// <summary>
        /// The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// The category of the tenant. Possible values are TenantCategoryHome,TenantCategoryProjectedBy,TenantCategoryManagedBy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The category of the tenant. Possible values are TenantCategoryHome,TenantCategoryProjectedBy,TenantCategoryManagedBy",
        SerializedName = @"tenantCategory",
        PossibleTypes = new [] { typeof(string) })]
        string TenantCategory { get;  }
        /// <summary>The tenant ID. For example, 00000000-0000-0000-0000-000000000000.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID. For example, 00000000-0000-0000-0000-000000000000.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get;  }
        /// <summary>The tenant type. Only available for Home tenant category.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Subscription.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant type. Only available for Home tenant category.",
        SerializedName = @"tenantType",
        PossibleTypes = new [] { typeof(string) })]
        string TenantType { get;  }

    }
    /// Tenant Id information.
    internal partial interface ITenantIdDescriptionInternal

    {
        /// <summary>The country/region name of the address for the tenant.</summary>
        string Country { get; set; }
        /// <summary>The Country/region abbreviation for the tenant.</summary>
        string CountryCode { get; set; }
        /// <summary>The default domain for the tenant.</summary>
        string DefaultDomain { get; set; }
        /// <summary>The display name of the tenant.</summary>
        string DisplayName { get; set; }
        /// <summary>The list of domains for the tenant.</summary>
        string Domain { get; set; }
        /// <summary>
        /// The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.
        /// </summary>
        string Id { get; set; }
        /// <summary>
        /// The category of the tenant. Possible values are TenantCategoryHome,TenantCategoryProjectedBy,TenantCategoryManagedBy
        /// </summary>
        string TenantCategory { get; set; }
        /// <summary>The tenant ID. For example, 00000000-0000-0000-0000-000000000000.</summary>
        string TenantId { get; set; }
        /// <summary>The tenant type. Only available for Home tenant category.</summary>
        string TenantType { get; set; }

    }
}