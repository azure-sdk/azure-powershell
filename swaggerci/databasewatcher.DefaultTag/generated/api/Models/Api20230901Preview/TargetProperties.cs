// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Extensions;

    /// <summary>The generic properties of a target.</summary>
    public partial class TargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.ITargetProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.ITargetPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ConnectionServerName" /> property.</summary>
        private string _connectionServerName;

        /// <summary>
        /// The server name to use in the connection string when connecting to a target. Port number and instance name must be specified
        /// separately.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Owned)]
        public string ConnectionServerName { get => this._connectionServerName; set => this._connectionServerName = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.ResourceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.ITargetPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for TargetVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecret Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.ITargetPropertiesInternal.TargetVault { get => (this._targetVault = this._targetVault ?? new Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.VaultSecret()); set { {_targetVault = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.ResourceProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.ResourceProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="TargetAuthenticationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.TargetAuthenticationType _targetAuthenticationType;

        /// <summary>The type of authentication to use when connecting to a target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.TargetAuthenticationType TargetAuthenticationType { get => this._targetAuthenticationType; set => this._targetAuthenticationType = value; }

        /// <summary>Backing field for <see cref="TargetType" /> property.</summary>
        private string _targetType;

        /// <summary>Discriminator property for TargetProperties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Owned)]
        public string TargetType { get => this._targetType; set => this._targetType = value; }

        /// <summary>Backing field for <see cref="TargetVault" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecret _targetVault;

        /// <summary>
        /// To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are
        /// stored.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecret TargetVault { get => (this._targetVault = this._targetVault ?? new Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.VaultSecret()); set => this._targetVault = value; }

        /// <summary>
        /// The Azure ResourceId of the Key Vault instance storing database authentication secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Inlined)]
        public string TargetVaultAkvResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecretInternal)TargetVault).AkvResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecretInternal)TargetVault).AkvResourceId = value ?? null; }

        /// <summary>
        /// The path to the Key Vault secret storing the password for authentication to a target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Inlined)]
        public string TargetVaultAkvTargetPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecretInternal)TargetVault).AkvTargetPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecretInternal)TargetVault).AkvTargetPassword = value ?? null; }

        /// <summary>
        /// The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.PropertyOrigin.Inlined)]
        public string TargetVaultAkvTargetUser { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecretInternal)TargetVault).AkvTargetUser; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecretInternal)TargetVault).AkvTargetUser = value ?? null; }

        /// <summary>Creates an new <see cref="TargetProperties" /> instance.</summary>
        public TargetProperties()
        {

        }
    }
    /// The generic properties of a target.
    public partial interface ITargetProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The server name to use in the connection string when connecting to a target. Port number and instance name must be specified
        /// separately.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.",
        SerializedName = @"connectionServerName",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionServerName { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.ResourceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.ResourceProvisioningState? ProvisioningState { get;  }
        /// <summary>The type of authentication to use when connecting to a target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of authentication to use when connecting to a target.",
        SerializedName = @"targetAuthenticationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.TargetAuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.TargetAuthenticationType TargetAuthenticationType { get; set; }
        /// <summary>Discriminator property for TargetProperties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Discriminator property for TargetProperties.",
        SerializedName = @"targetType",
        PossibleTypes = new [] { typeof(string) })]
        string TargetType { get; set; }
        /// <summary>
        /// The Azure ResourceId of the Key Vault instance storing database authentication secrets.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Azure ResourceId of the Key Vault instance storing database authentication secrets.",
        SerializedName = @"akvResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVaultAkvResourceId { get; set; }
        /// <summary>
        /// The path to the Key Vault secret storing the password for authentication to a target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path to the Key Vault secret storing the password for authentication to a target.",
        SerializedName = @"akvTargetPassword",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVaultAkvTargetPassword { get; set; }
        /// <summary>
        /// The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target.",
        SerializedName = @"akvTargetUser",
        PossibleTypes = new [] { typeof(string) })]
        string TargetVaultAkvTargetUser { get; set; }

    }
    /// The generic properties of a target.
    internal partial interface ITargetPropertiesInternal

    {
        /// <summary>
        /// The server name to use in the connection string when connecting to a target. Port number and instance name must be specified
        /// separately.
        /// </summary>
        string ConnectionServerName { get; set; }
        /// <summary>The provisioning state of the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.ResourceProvisioningState? ProvisioningState { get; set; }
        /// <summary>The type of authentication to use when connecting to a target.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Support.TargetAuthenticationType TargetAuthenticationType { get; set; }
        /// <summary>Discriminator property for TargetProperties.</summary>
        string TargetType { get; set; }
        /// <summary>
        /// To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are
        /// stored.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseWatcher.Models.Api20230901Preview.IVaultSecret TargetVault { get; set; }
        /// <summary>
        /// The Azure ResourceId of the Key Vault instance storing database authentication secrets.
        /// </summary>
        string TargetVaultAkvResourceId { get; set; }
        /// <summary>
        /// The path to the Key Vault secret storing the password for authentication to a target.
        /// </summary>
        string TargetVaultAkvTargetPassword { get; set; }
        /// <summary>
        /// The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target.
        /// </summary>
        string TargetVaultAkvTargetUser { get; set; }

    }
}