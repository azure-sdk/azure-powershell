// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Extensions;

    /// <summary>Defines the attributes of the function signature.</summary>
    public partial class SignatureProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Archive" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive _archive;

        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive Archive { get => (this._archive = this._archive ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SignaturePropertiesArchive()); set => this._archive = value; }

        /// <summary>culture of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ArchiveCulture { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Culture; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Culture = value ?? null; }

        /// <summary>name of an archive which defines the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ArchiveName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Name = value ?? null; }

        /// <summary>public key token of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ArchivePublicKeyToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).PublicKeyToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).PublicKeyToken = value ?? null; }

        /// <summary>defines the type of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ArchiveType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Type = value ?? null; }

        /// <summary>version of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ArchiveVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchiveInternal)Archive).Version = value ?? null; }

        /// <summary>Backing field for <see cref="Argument" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] _argument;

        /// <summary>List of arguments of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] Argument { get => this._argument; set => this._argument = value; }

        /// <summary>Backing field for <see cref="FunctionNamespace" /> property.</summary>
        private string _functionNamespace;

        /// <summary>Namespace in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public string FunctionNamespace { get => this._functionNamespace; set => this._functionNamespace = value; }

        /// <summary>Backing field for <see cref="GenericCount" /> property.</summary>
        private int? _genericCount;

        /// <summary>Number of types defined in a generic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public int? GenericCount { get => this._genericCount; set => this._genericCount = value; }

        /// <summary>Backing field for <see cref="GenericType" /> property.</summary>
        private string[] _genericType;

        /// <summary>Types defined if Class is a generic class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public string[] GenericType { get => this._genericType; set => this._genericType = value; }

        /// <summary>Internal Acessors for Archive</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesInternal.Archive { get => (this._archive = this._archive ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SignaturePropertiesArchive()); set { {_archive = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>ClassName in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="SignatureProperties" /> instance.</summary>
        public SignatureProperties()
        {

        }
    }
    /// Defines the attributes of the function signature.
    public partial interface ISignatureProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.IJsonSerializable
    {
        /// <summary>culture of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"culture of an archive",
        SerializedName = @"culture",
        PossibleTypes = new [] { typeof(string) })]
        string ArchiveCulture { get; set; }
        /// <summary>name of an archive which defines the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"name of an archive which defines the function",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ArchiveName { get; set; }
        /// <summary>public key token of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"public key token of an archive",
        SerializedName = @"publicKeyToken",
        PossibleTypes = new [] { typeof(string) })]
        string ArchivePublicKeyToken { get; set; }
        /// <summary>defines the type of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"defines the type of an archive",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ArchiveType { get; set; }
        /// <summary>version of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"version of an archive",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ArchiveVersion { get; set; }
        /// <summary>List of arguments of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of arguments of a function",
        SerializedName = @"arguments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] Argument { get; set; }
        /// <summary>Namespace in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Namespace in which the function is defined",
        SerializedName = @"functionNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string FunctionNamespace { get; set; }
        /// <summary>Number of types defined in a generic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of types defined in a generic",
        SerializedName = @"genericCount",
        PossibleTypes = new [] { typeof(int) })]
        int? GenericCount { get; set; }
        /// <summary>Types defined if Class is a generic class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Types defined if Class is a generic class",
        SerializedName = @"genericTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] GenericType { get; set; }
        /// <summary>Name of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Name of a function",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>ClassName in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"ClassName in which the function is defined",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Defines the attributes of the function signature.
    internal partial interface ISignaturePropertiesInternal

    {
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive Archive { get; set; }
        /// <summary>culture of an archive</summary>
        string ArchiveCulture { get; set; }
        /// <summary>name of an archive which defines the function</summary>
        string ArchiveName { get; set; }
        /// <summary>public key token of an archive</summary>
        string ArchivePublicKeyToken { get; set; }
        /// <summary>defines the type of an archive</summary>
        string ArchiveType { get; set; }
        /// <summary>version of an archive</summary>
        string ArchiveVersion { get; set; }
        /// <summary>List of arguments of a function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] Argument { get; set; }
        /// <summary>Namespace in which the function is defined</summary>
        string FunctionNamespace { get; set; }
        /// <summary>Number of types defined in a generic</summary>
        int? GenericCount { get; set; }
        /// <summary>Types defined if Class is a generic class</summary>
        string[] GenericType { get; set; }
        /// <summary>Name of a function</summary>
        string Name { get; set; }
        /// <summary>ClassName in which the function is defined</summary>
        string Type { get; set; }

    }
}