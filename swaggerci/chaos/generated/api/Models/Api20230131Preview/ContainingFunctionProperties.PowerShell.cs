// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.PowerShell;

    /// <summary>Defines the signature of the function calling the faultable function</summary>
    [System.ComponentModel.TypeConverter(typeof(ContainingFunctionPropertiesTypeConverter))]
    public partial class ContainingFunctionProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ContainingFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ContainingFunctionProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Signature"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).Signature = (Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties) content.GetValueForProperty("Signature",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).Signature, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SignaturePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SignatureArchive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArchive = (Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive) content.GetValueForProperty("SignatureArchive",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArchive, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SignaturePropertiesArchiveTypeConverter.ConvertFrom);
            }
            if (content.Contains("SignatureFunctionNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureFunctionNamespace = (string) content.GetValueForProperty("SignatureFunctionNamespace",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureFunctionNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("SignatureType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureType = (string) content.GetValueForProperty("SignatureType",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureType, global::System.Convert.ToString);
            }
            if (content.Contains("SignatureName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureName = (string) content.GetValueForProperty("SignatureName",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureName, global::System.Convert.ToString);
            }
            if (content.Contains("SignatureGenericType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericType = (string[]) content.GetValueForProperty("SignatureGenericType",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericType, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SignatureGenericCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericCount = (int?) content.GetValueForProperty("SignatureGenericCount",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SignatureArgument"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArgument = (Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[]) content.GetValueForProperty("SignatureArgument",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArgument, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments>(__y, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.FunctionArgumentsTypeConverter.ConvertFrom));
            }
            if (content.Contains("ArchiveName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveName = (string) content.GetValueForProperty("ArchiveName",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveName, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveVersion = (string) content.GetValueForProperty("ArchiveVersion",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveCulture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveCulture = (string) content.GetValueForProperty("ArchiveCulture",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveCulture, global::System.Convert.ToString);
            }
            if (content.Contains("ArchivePublicKeyToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchivePublicKeyToken = (string) content.GetValueForProperty("ArchivePublicKeyToken",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchivePublicKeyToken, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveType = (string) content.GetValueForProperty("ArchiveType",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveType, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ContainingFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ContainingFunctionProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Signature"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).Signature = (Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties) content.GetValueForProperty("Signature",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).Signature, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SignaturePropertiesTypeConverter.ConvertFrom);
            }
            if (content.Contains("SignatureArchive"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArchive = (Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive) content.GetValueForProperty("SignatureArchive",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArchive, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SignaturePropertiesArchiveTypeConverter.ConvertFrom);
            }
            if (content.Contains("SignatureFunctionNamespace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureFunctionNamespace = (string) content.GetValueForProperty("SignatureFunctionNamespace",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureFunctionNamespace, global::System.Convert.ToString);
            }
            if (content.Contains("SignatureType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureType = (string) content.GetValueForProperty("SignatureType",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureType, global::System.Convert.ToString);
            }
            if (content.Contains("SignatureName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureName = (string) content.GetValueForProperty("SignatureName",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureName, global::System.Convert.ToString);
            }
            if (content.Contains("SignatureGenericType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericType = (string[]) content.GetValueForProperty("SignatureGenericType",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericType, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SignatureGenericCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericCount = (int?) content.GetValueForProperty("SignatureGenericCount",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureGenericCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SignatureArgument"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArgument = (Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[]) content.GetValueForProperty("SignatureArgument",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).SignatureArgument, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments>(__y, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.FunctionArgumentsTypeConverter.ConvertFrom));
            }
            if (content.Contains("ArchiveName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveName = (string) content.GetValueForProperty("ArchiveName",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveName, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveVersion = (string) content.GetValueForProperty("ArchiveVersion",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveVersion, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveCulture"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveCulture = (string) content.GetValueForProperty("ArchiveCulture",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveCulture, global::System.Convert.ToString);
            }
            if (content.Contains("ArchivePublicKeyToken"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchivePublicKeyToken = (string) content.GetValueForProperty("ArchivePublicKeyToken",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchivePublicKeyToken, global::System.Convert.ToString);
            }
            if (content.Contains("ArchiveType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveType = (string) content.GetValueForProperty("ArchiveType",((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)this).ArchiveType, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ContainingFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ContainingFunctionProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ContainingFunctionProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ContainingFunctionProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ContainingFunctionProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ContainingFunctionProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Defines the signature of the function calling the faultable function
    [System.ComponentModel.TypeConverter(typeof(ContainingFunctionPropertiesTypeConverter))]
    public partial interface IContainingFunctionProperties

    {

    }
}