// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Extensions;

    public partial class Metadata :
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadata,
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal
    {

        /// <summary>Backing field for <see cref="ContainingFunction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties _containingFunction;

        /// <summary>Containing function which includes the call to faultable function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties ContainingFunction { get => (this._containingFunction = this._containingFunction ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ContainingFunctionProperties()); set => this._containingFunction = value; }

        /// <summary>culture of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureArchiveCulture { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveCulture; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveCulture = value ?? null; }

        /// <summary>name of an archive which defines the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureArchiveName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveName = value ?? null; }

        /// <summary>public key token of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureArchivePublicKeyToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchivePublicKeyToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchivePublicKeyToken = value ?? null; }

        /// <summary>defines the type of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureArchiveType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveType = value ?? null; }

        /// <summary>version of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureArchiveVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).ArchiveVersion = value ?? null; }

        /// <summary>List of arguments of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] ContainingFunctionSignatureArgument { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureArgument; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureArgument = value ?? null /* arrayOf */; }

        /// <summary>Namespace in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureFunctionNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureFunctionNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureFunctionNamespace = value ?? null; }

        /// <summary>Number of types defined in a generic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public int? ContainingFunctionSignatureGenericCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureGenericCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureGenericCount = value ?? default(int); }

        /// <summary>Types defined if Class is a generic class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string[] ContainingFunctionSignatureGenericType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureGenericType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureGenericType = value ?? null /* arrayOf */; }

        /// <summary>Name of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureName = value ?? null; }

        /// <summary>ClassName in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string ContainingFunctionSignatureType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureType = value ?? null; }

        /// <summary>Backing field for <see cref="FaultableFunction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionProperties _faultableFunction;

        /// <summary>function in which fault is injected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionProperties FaultableFunction { get => (this._faultableFunction = this._faultableFunction ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.FaultableFunctionProperties()); set => this._faultableFunction = value; }

        /// <summary>SDK or Custom library in which fault is injected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).Category = value ?? null; }

        /// <summary>faults supported by torch for the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultCapabilityProperties[] FaultableFunctionFaultCapability { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).FaultCapability; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).FaultCapability = value ?? null /* arrayOf */; }

        /// <summary>culture of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureArchiveCulture { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveCulture; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveCulture = value ?? null; }

        /// <summary>name of an archive which defines the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureArchiveName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveName = value ?? null; }

        /// <summary>public key token of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureArchivePublicKeyToken { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchivePublicKeyToken; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchivePublicKeyToken = value ?? null; }

        /// <summary>defines the type of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureArchiveType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveType = value ?? null; }

        /// <summary>version of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureArchiveVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).ArchiveVersion = value ?? null; }

        /// <summary>List of arguments of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] FaultableFunctionSignatureArgument { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureArgument; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureArgument = value ?? null /* arrayOf */; }

        /// <summary>Namespace in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureFunctionNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureFunctionNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureFunctionNamespace = value ?? null; }

        /// <summary>Number of types defined in a generic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public int? FaultableFunctionSignatureGenericCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureGenericCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureGenericCount = value ?? default(int); }

        /// <summary>Types defined if Class is a generic class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string[] FaultableFunctionSignatureGenericType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureGenericType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureGenericType = value ?? null /* arrayOf */; }

        /// <summary>Name of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureName = value ?? null; }

        /// <summary>ClassName in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string FaultableFunctionSignatureType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureType = value ?? null; }

        /// <summary>Internal Acessors for ContainingFunction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.ContainingFunction { get => (this._containingFunction = this._containingFunction ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ContainingFunctionProperties()); set { {_containingFunction = value;} } }

        /// <summary>Internal Acessors for ContainingFunctionSignature</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.ContainingFunctionSignature { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).Signature; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).Signature = value; }

        /// <summary>Internal Acessors for ContainingFunctionSignatureArchive</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.ContainingFunctionSignatureArchive { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureArchive; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionPropertiesInternal)ContainingFunction).SignatureArchive = value; }

        /// <summary>Internal Acessors for FaultableFunction</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionProperties Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.FaultableFunction { get => (this._faultableFunction = this._faultableFunction ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.FaultableFunctionProperties()); set { {_faultableFunction = value;} } }

        /// <summary>Internal Acessors for FaultableFunctionSignature</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.FaultableFunctionSignature { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).Signature; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).Signature = value; }

        /// <summary>Internal Acessors for FaultableFunctionSignatureArchive</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.FaultableFunctionSignatureArchive { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureArchive; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionPropertiesInternal)FaultableFunction).SignatureArchive = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourceProperties Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IMetadataInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SourceProperties()); set { {_source = value;} } }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourceProperties _source;

        /// <summary>defines the location of the code in the class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourceProperties Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.SourceProperties()); set => this._source = value; }

        /// <summary>code path where function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public string SourceCodePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).CodePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).CodePath = value ?? null; }

        /// <summary>column in the code where function ends</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public int? SourceEndColumn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).EndColumn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).EndColumn = value ?? default(int); }

        /// <summary>line in the code where function ends</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public int? SourceEndLine { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).EndLine; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).EndLine = value ?? default(int); }

        /// <summary>column in the code where function starts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public int? SourceStartColumn { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).StartColumn; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).StartColumn = value ?? default(int); }

        /// <summary>line in the code where function starts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Origin(Microsoft.Azure.PowerShell.Cmdlets.Chaos.PropertyOrigin.Inlined)]
        public int? SourceStartLine { get => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).StartLine; set => ((Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourcePropertiesInternal)Source).StartLine = value ?? default(int); }

        /// <summary>Creates an new <see cref="Metadata" /> instance.</summary>
        public Metadata()
        {

        }
    }
    public partial interface IMetadata :
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.IJsonSerializable
    {
        /// <summary>culture of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"culture of an archive",
        SerializedName = @"culture",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureArchiveCulture { get; set; }
        /// <summary>name of an archive which defines the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"name of an archive which defines the function",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureArchiveName { get; set; }
        /// <summary>public key token of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"public key token of an archive",
        SerializedName = @"publicKeyToken",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureArchivePublicKeyToken { get; set; }
        /// <summary>defines the type of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"defines the type of an archive",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureArchiveType { get; set; }
        /// <summary>version of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"version of an archive",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureArchiveVersion { get; set; }
        /// <summary>List of arguments of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of arguments of a function",
        SerializedName = @"arguments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] ContainingFunctionSignatureArgument { get; set; }
        /// <summary>Namespace in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace in which the function is defined",
        SerializedName = @"functionNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureFunctionNamespace { get; set; }
        /// <summary>Number of types defined in a generic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of types defined in a generic",
        SerializedName = @"genericCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ContainingFunctionSignatureGenericCount { get; set; }
        /// <summary>Types defined if Class is a generic class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Types defined if Class is a generic class",
        SerializedName = @"genericTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ContainingFunctionSignatureGenericType { get; set; }
        /// <summary>Name of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a function",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureName { get; set; }
        /// <summary>ClassName in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ClassName in which the function is defined",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ContainingFunctionSignatureType { get; set; }
        /// <summary>SDK or Custom library in which fault is injected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SDK or Custom library in which fault is injected",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionCategory { get; set; }
        /// <summary>faults supported by torch for the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"faults supported by torch for the function",
        SerializedName = @"faultCapabilities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultCapabilityProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultCapabilityProperties[] FaultableFunctionFaultCapability { get; set; }
        /// <summary>culture of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"culture of an archive",
        SerializedName = @"culture",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureArchiveCulture { get; set; }
        /// <summary>name of an archive which defines the function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"name of an archive which defines the function",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureArchiveName { get; set; }
        /// <summary>public key token of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"public key token of an archive",
        SerializedName = @"publicKeyToken",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureArchivePublicKeyToken { get; set; }
        /// <summary>defines the type of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"defines the type of an archive",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureArchiveType { get; set; }
        /// <summary>version of an archive</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"version of an archive",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureArchiveVersion { get; set; }
        /// <summary>List of arguments of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of arguments of a function",
        SerializedName = @"arguments",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments) })]
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] FaultableFunctionSignatureArgument { get; set; }
        /// <summary>Namespace in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace in which the function is defined",
        SerializedName = @"functionNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureFunctionNamespace { get; set; }
        /// <summary>Number of types defined in a generic</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of types defined in a generic",
        SerializedName = @"genericCount",
        PossibleTypes = new [] { typeof(int) })]
        int? FaultableFunctionSignatureGenericCount { get; set; }
        /// <summary>Types defined if Class is a generic class</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Types defined if Class is a generic class",
        SerializedName = @"genericTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] FaultableFunctionSignatureGenericType { get; set; }
        /// <summary>Name of a function</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of a function",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureName { get; set; }
        /// <summary>ClassName in which the function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ClassName in which the function is defined",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string FaultableFunctionSignatureType { get; set; }
        /// <summary>code path where function is defined</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"code path where function is defined",
        SerializedName = @"codePath",
        PossibleTypes = new [] { typeof(string) })]
        string SourceCodePath { get; set; }
        /// <summary>column in the code where function ends</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"column in the code where function ends",
        SerializedName = @"endColumn",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceEndColumn { get; set; }
        /// <summary>line in the code where function ends</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"line in the code where function ends",
        SerializedName = @"endLine",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceEndLine { get; set; }
        /// <summary>column in the code where function starts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"column in the code where function starts",
        SerializedName = @"startColumn",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceStartColumn { get; set; }
        /// <summary>line in the code where function starts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Chaos.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"line in the code where function starts",
        SerializedName = @"startLine",
        PossibleTypes = new [] { typeof(int) })]
        int? SourceStartLine { get; set; }

    }
    internal partial interface IMetadataInternal

    {
        /// <summary>Containing function which includes the call to faultable function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IContainingFunctionProperties ContainingFunction { get; set; }
        /// <summary>Method signature of the containing function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties ContainingFunctionSignature { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive ContainingFunctionSignatureArchive { get; set; }
        /// <summary>culture of an archive</summary>
        string ContainingFunctionSignatureArchiveCulture { get; set; }
        /// <summary>name of an archive which defines the function</summary>
        string ContainingFunctionSignatureArchiveName { get; set; }
        /// <summary>public key token of an archive</summary>
        string ContainingFunctionSignatureArchivePublicKeyToken { get; set; }
        /// <summary>defines the type of an archive</summary>
        string ContainingFunctionSignatureArchiveType { get; set; }
        /// <summary>version of an archive</summary>
        string ContainingFunctionSignatureArchiveVersion { get; set; }
        /// <summary>List of arguments of a function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] ContainingFunctionSignatureArgument { get; set; }
        /// <summary>Namespace in which the function is defined</summary>
        string ContainingFunctionSignatureFunctionNamespace { get; set; }
        /// <summary>Number of types defined in a generic</summary>
        int? ContainingFunctionSignatureGenericCount { get; set; }
        /// <summary>Types defined if Class is a generic class</summary>
        string[] ContainingFunctionSignatureGenericType { get; set; }
        /// <summary>Name of a function</summary>
        string ContainingFunctionSignatureName { get; set; }
        /// <summary>ClassName in which the function is defined</summary>
        string ContainingFunctionSignatureType { get; set; }
        /// <summary>function in which fault is injected</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultableFunctionProperties FaultableFunction { get; set; }
        /// <summary>SDK or Custom library in which fault is injected</summary>
        string FaultableFunctionCategory { get; set; }
        /// <summary>faults supported by torch for the function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFaultCapabilityProperties[] FaultableFunctionFaultCapability { get; set; }
        /// <summary>Method Signature of the faultable function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignatureProperties FaultableFunctionSignature { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISignaturePropertiesArchive FaultableFunctionSignatureArchive { get; set; }
        /// <summary>culture of an archive</summary>
        string FaultableFunctionSignatureArchiveCulture { get; set; }
        /// <summary>name of an archive which defines the function</summary>
        string FaultableFunctionSignatureArchiveName { get; set; }
        /// <summary>public key token of an archive</summary>
        string FaultableFunctionSignatureArchivePublicKeyToken { get; set; }
        /// <summary>defines the type of an archive</summary>
        string FaultableFunctionSignatureArchiveType { get; set; }
        /// <summary>version of an archive</summary>
        string FaultableFunctionSignatureArchiveVersion { get; set; }
        /// <summary>List of arguments of a function</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.IFunctionArguments[] FaultableFunctionSignatureArgument { get; set; }
        /// <summary>Namespace in which the function is defined</summary>
        string FaultableFunctionSignatureFunctionNamespace { get; set; }
        /// <summary>Number of types defined in a generic</summary>
        int? FaultableFunctionSignatureGenericCount { get; set; }
        /// <summary>Types defined if Class is a generic class</summary>
        string[] FaultableFunctionSignatureGenericType { get; set; }
        /// <summary>Name of a function</summary>
        string FaultableFunctionSignatureName { get; set; }
        /// <summary>ClassName in which the function is defined</summary>
        string FaultableFunctionSignatureType { get; set; }
        /// <summary>defines the location of the code in the class</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Chaos.Models.Api20230131Preview.ISourceProperties Source { get; set; }
        /// <summary>code path where function is defined</summary>
        string SourceCodePath { get; set; }
        /// <summary>column in the code where function ends</summary>
        int? SourceEndColumn { get; set; }
        /// <summary>line in the code where function ends</summary>
        int? SourceEndLine { get; set; }
        /// <summary>column in the code where function starts</summary>
        int? SourceStartColumn { get; set; }
        /// <summary>line in the code where function starts</summary>
        int? SourceStartLine { get; set; }

    }
}