// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Extensions;

    /// <summary>Customized accelerator properties payload</summary>
    public partial class CustomizedAcceleratorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.ICustomizedAcceleratorProperties,
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.ICustomizedAcceleratorPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AcceleratorTag" /> property.</summary>
        private string[] _acceleratorTag;

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string[] AcceleratorTag { get => this._acceleratorTag; set => this._acceleratorTag = value; }

        /// <summary>Backing field for <see cref="AcceleratorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorType? _acceleratorType;

        /// <summary>Type of the customized accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorType? AcceleratorType { get => this._acceleratorType; set => this._acceleratorType = value; }

        /// <summary>The type of the auth setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string AuthSettingAuthType { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).AuthSettingAuthType; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).AuthSettingAuthType = value ; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="GitRepository" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepository _gitRepository;

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepository GitRepository { get => (this._gitRepository = this._gitRepository ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.AcceleratorGitRepository()); set => this._gitRepository = value; }

        /// <summary>Git repository branch to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string GitRepositoryBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).Branch; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).Branch = value ?? null; }

        /// <summary>Git repository commit to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string GitRepositoryCommit { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).Commit; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).Commit = value ?? null; }

        /// <summary>Git repository tag to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string GitRepositoryGitTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).GitTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).GitTag = value ?? null; }

        /// <summary>Interval for checking for updates to Git or image repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public int? GitRepositoryIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).IntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).IntervalInSecond = value ?? default(int); }

        /// <summary>
        /// Folder path inside the git repository to consider as the root of the accelerator or fragment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string GitRepositorySubPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).SubPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).SubPath = value ?? null; }

        /// <summary>Git repository URL for the accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Inlined)]
        public string GitRepositoryUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).Url; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).Url = value ; }

        /// <summary>Backing field for <see cref="IconUrl" /> property.</summary>
        private string _iconUrl;

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string IconUrl { get => this._iconUrl; set => this._iconUrl = value; }

        /// <summary>Backing field for <see cref="Import" /> property.</summary>
        private string[] _import;

        /// <summary>Imports references all imports that this accelerator/fragment depends upon.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public string[] Import { get => this._import; }

        /// <summary>Internal Acessors for GitRepository</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepository Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.ICustomizedAcceleratorPropertiesInternal.GitRepository { get => (this._gitRepository = this._gitRepository ?? new Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.AcceleratorGitRepository()); set { {_gitRepository = value;} } }

        /// <summary>Internal Acessors for GitRepositoryAuthSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorAuthSetting Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.ICustomizedAcceleratorPropertiesInternal.GitRepositoryAuthSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).AuthSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepositoryInternal)GitRepository).AuthSetting = value; }

        /// <summary>Internal Acessors for Import</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.ICustomizedAcceleratorPropertiesInternal.Import { get => this._import; set { {_import = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.ICustomizedAcceleratorPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorProvisioningState? _provisioningState;

        /// <summary>State of the customized accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Origin(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="CustomizedAcceleratorProperties" /> instance.</summary>
        public CustomizedAcceleratorProperties()
        {

        }
    }
    /// Customized accelerator properties payload
    public partial interface ICustomizedAcceleratorProperties :
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"acceleratorTags",
        PossibleTypes = new [] { typeof(string) })]
        string[] AcceleratorTag { get; set; }
        /// <summary>Type of the customized accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the customized accelerator.",
        SerializedName = @"acceleratorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorType? AcceleratorType { get; set; }
        /// <summary>The type of the auth setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The type of the auth setting.",
        SerializedName = @"authType",
        PossibleTypes = new [] { typeof(string) })]
        string AuthSettingAuthType { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Git repository branch to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git repository branch to be used.",
        SerializedName = @"branch",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryBranch { get; set; }
        /// <summary>Git repository commit to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git repository commit to be used.",
        SerializedName = @"commit",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryCommit { get; set; }
        /// <summary>Git repository tag to be used.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Git repository tag to be used.",
        SerializedName = @"gitTag",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryGitTag { get; set; }
        /// <summary>Interval for checking for updates to Git or image repository.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Interval for checking for updates to Git or image repository.",
        SerializedName = @"intervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? GitRepositoryIntervalInSecond { get; set; }
        /// <summary>
        /// Folder path inside the git repository to consider as the root of the accelerator or fragment.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Folder path inside the git repository to consider as the root of the accelerator or fragment.",
        SerializedName = @"subPath",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositorySubPath { get; set; }
        /// <summary>Git repository URL for the accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Git repository URL for the accelerator.",
        SerializedName = @"url",
        PossibleTypes = new [] { typeof(string) })]
        string GitRepositoryUrl { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"iconUrl",
        PossibleTypes = new [] { typeof(string) })]
        string IconUrl { get; set; }
        /// <summary>Imports references all imports that this accelerator/fragment depends upon.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Imports references all imports that this accelerator/fragment depends upon.",
        SerializedName = @"imports",
        PossibleTypes = new [] { typeof(string) })]
        string[] Import { get;  }
        /// <summary>State of the customized accelerator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of the customized accelerator.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorProvisioningState? ProvisioningState { get;  }

    }
    /// Customized accelerator properties payload
    internal partial interface ICustomizedAcceleratorPropertiesInternal

    {
        string[] AcceleratorTag { get; set; }
        /// <summary>Type of the customized accelerator.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorType? AcceleratorType { get; set; }
        /// <summary>The type of the auth setting.</summary>
        string AuthSettingAuthType { get; set; }

        string Description { get; set; }

        string DisplayName { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorGitRepository GitRepository { get; set; }
        /// <summary>Properties of the auth setting payload.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Models.Api202401Preview.IAcceleratorAuthSetting GitRepositoryAuthSetting { get; set; }
        /// <summary>Git repository branch to be used.</summary>
        string GitRepositoryBranch { get; set; }
        /// <summary>Git repository commit to be used.</summary>
        string GitRepositoryCommit { get; set; }
        /// <summary>Git repository tag to be used.</summary>
        string GitRepositoryGitTag { get; set; }
        /// <summary>Interval for checking for updates to Git or image repository.</summary>
        int? GitRepositoryIntervalInSecond { get; set; }
        /// <summary>
        /// Folder path inside the git repository to consider as the root of the accelerator or fragment.
        /// </summary>
        string GitRepositorySubPath { get; set; }
        /// <summary>Git repository URL for the accelerator.</summary>
        string GitRepositoryUrl { get; set; }

        string IconUrl { get; set; }
        /// <summary>Imports references all imports that this accelerator/fragment depends upon.</summary>
        string[] Import { get; set; }
        /// <summary>State of the customized accelerator.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.AppPlatform.Support.CustomizedAcceleratorProvisioningState? ProvisioningState { get; set; }

    }
}