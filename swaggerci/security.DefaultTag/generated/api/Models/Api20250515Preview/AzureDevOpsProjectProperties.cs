// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>Azure DevOps Project properties.</summary>
    public partial class AzureDevOpsProjectProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ActionableRemediation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediation _actionableRemediation;

        /// <summary>Configuration payload for PR Annotations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediation ActionableRemediation { get => (this._actionableRemediation = this._actionableRemediation ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ActionableRemediation()); set => this._actionableRemediation = value; }

        /// <summary>Gets or sets list of categories and severity levels.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ICategoryConfiguration[] ActionableRemediationCategoryConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).CategoryConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).CategoryConfiguration = value ?? null /* arrayOf */; }

        /// <summary>
        /// Update Settings.
        ///
        /// Enabled - Resource should inherit configurations from parent.
        /// Disabled - Resource should not inherit configurations from parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.InheritFromParentState? ActionableRemediationInheritFromParentState { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).InheritFromParentState; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).InheritFromParentState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.InheritFromParentState)""); }

        /// <summary>
        /// ActionableRemediation Setting.
        /// None - the setting was never set.
        /// Enabled - ActionableRemediation is enabled.
        /// Disabled - ActionableRemediation is disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ActionableRemediationState? ActionableRemediationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ActionableRemediationState)""); }

        /// <summary>
        /// Configuration of PR Annotations on default branch.
        ///
        /// Enabled - PR Annotations are enabled on the resource's default branch.
        /// Disabled - PR Annotations are disabled on the resource's default branch.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.AnnotateDefaultBranchState? BranchConfigurationAnnotateDefaultBranch { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).BranchConfigurationAnnotateDefaultBranch; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).BranchConfigurationAnnotateDefaultBranch = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.AnnotateDefaultBranchState)""); }

        /// <summary>Gets or sets branches that should have annotations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[] BranchConfigurationBranchName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).BranchConfigurationBranchName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).BranchConfigurationBranchName = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for ActionableRemediation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediation Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectPropertiesInternal.ActionableRemediation { get => (this._actionableRemediation = this._actionableRemediation ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ActionableRemediation()); set { {_actionableRemediation = value;} } }

        /// <summary>Internal Acessors for ActionableRemediationBranchConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ITargetBranchConfiguration Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectPropertiesInternal.ActionableRemediationBranchConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).BranchConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediationInternal)ActionableRemediation).BranchConfiguration = value; }

        /// <summary>Internal Acessors for ProjectId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectPropertiesInternal.ProjectId { get => this._projectId; set { {_projectId = value;} } }

        /// <summary>Internal Acessors for ProvisioningStatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectPropertiesInternal.ProvisioningStatusMessage { get => this._provisioningStatusMessage; set { {_provisioningStatusMessage = value;} } }

        /// <summary>Internal Acessors for ProvisioningStatusUpdateTimeUtc</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IAzureDevOpsProjectPropertiesInternal.ProvisioningStatusUpdateTimeUtc { get => this._provisioningStatusUpdateTimeUtc; set { {_provisioningStatusUpdateTimeUtc = value;} } }

        /// <summary>Backing field for <see cref="OnboardingState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.OnboardingState? _onboardingState;

        /// <summary>
        /// Details about resource onboarding status across all connectors.
        ///
        /// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to
        /// top-level resources.
        /// Onboarded - this resource has already been onboarded by the specified connector.
        /// NotOnboarded - this resource has not been onboarded to any connector.
        /// NotApplicable - the onboarding state is not applicable to the current endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.OnboardingState? OnboardingState { get => this._onboardingState; set => this._onboardingState = value; }

        /// <summary>Backing field for <see cref="ParentOrgName" /> property.</summary>
        private string _parentOrgName;

        /// <summary>Gets or sets parent Azure DevOps Organization name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string ParentOrgName { get => this._parentOrgName; set => this._parentOrgName = value; }

        /// <summary>Backing field for <see cref="ProjectId" /> property.</summary>
        private string _projectId;

        /// <summary>Gets or sets Azure DevOps Project id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string ProjectId { get => this._projectId; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.DevOpsProvisioningState? _provisioningState;

        /// <summary>
        /// The provisioning state of the resource.
        ///
        /// Pending - Provisioning pending.
        /// Failed - Provisioning failed.
        /// Succeeded - Successful provisioning.
        /// Canceled - Provisioning canceled.
        /// PendingDeletion - Deletion pending.
        /// DeletionSuccess - Deletion successful.
        /// DeletionFailure - Deletion failure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.DevOpsProvisioningState? ProvisioningState { get => this._provisioningState; set => this._provisioningState = value; }

        /// <summary>Backing field for <see cref="ProvisioningStatusMessage" /> property.</summary>
        private string _provisioningStatusMessage;

        /// <summary>Gets or sets resource status message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string ProvisioningStatusMessage { get => this._provisioningStatusMessage; }

        /// <summary>Backing field for <see cref="ProvisioningStatusUpdateTimeUtc" /> property.</summary>
        private global::System.DateTime? _provisioningStatusUpdateTimeUtc;

        /// <summary>Gets or sets time when resource was last checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public global::System.DateTime? ProvisioningStatusUpdateTimeUtc { get => this._provisioningStatusUpdateTimeUtc; }

        /// <summary>Creates an new <see cref="AzureDevOpsProjectProperties" /> instance.</summary>
        public AzureDevOpsProjectProperties()
        {

        }
    }
    /// Azure DevOps Project properties.
    public partial interface IAzureDevOpsProjectProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable
    {
        /// <summary>Gets or sets list of categories and severity levels.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets list of categories and severity levels.",
        SerializedName = @"categoryConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ICategoryConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ICategoryConfiguration[] ActionableRemediationCategoryConfiguration { get; set; }
        /// <summary>
        /// Update Settings.
        ///
        /// Enabled - Resource should inherit configurations from parent.
        /// Disabled - Resource should not inherit configurations from parent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Update Settings.

        Enabled - Resource should inherit configurations from parent.
        Disabled - Resource should not inherit configurations from parent.",
        SerializedName = @"inheritFromParentState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.InheritFromParentState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.InheritFromParentState? ActionableRemediationInheritFromParentState { get; set; }
        /// <summary>
        /// ActionableRemediation Setting.
        /// None - the setting was never set.
        /// Enabled - ActionableRemediation is enabled.
        /// Disabled - ActionableRemediation is disabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ActionableRemediation Setting.
        None - the setting was never set.
        Enabled - ActionableRemediation is enabled.
        Disabled - ActionableRemediation is disabled.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ActionableRemediationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ActionableRemediationState? ActionableRemediationState { get; set; }
        /// <summary>
        /// Configuration of PR Annotations on default branch.
        ///
        /// Enabled - PR Annotations are enabled on the resource's default branch.
        /// Disabled - PR Annotations are disabled on the resource's default branch.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration of PR Annotations on default branch.

        Enabled - PR Annotations are enabled on the resource's default branch.
        Disabled - PR Annotations are disabled on the resource's default branch.",
        SerializedName = @"annotateDefaultBranch",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.AnnotateDefaultBranchState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.AnnotateDefaultBranchState? BranchConfigurationAnnotateDefaultBranch { get; set; }
        /// <summary>Gets or sets branches that should have annotations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets branches that should have annotations.",
        SerializedName = @"branchNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] BranchConfigurationBranchName { get; set; }
        /// <summary>
        /// Details about resource onboarding status across all connectors.
        ///
        /// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to
        /// top-level resources.
        /// Onboarded - this resource has already been onboarded by the specified connector.
        /// NotOnboarded - this resource has not been onboarded to any connector.
        /// NotApplicable - the onboarding state is not applicable to the current endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details about resource onboarding status across all connectors.

        OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources.
        Onboarded - this resource has already been onboarded by the specified connector.
        NotOnboarded - this resource has not been onboarded to any connector.
        NotApplicable - the onboarding state is not applicable to the current endpoint.",
        SerializedName = @"onboardingState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.OnboardingState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.OnboardingState? OnboardingState { get; set; }
        /// <summary>Gets or sets parent Azure DevOps Organization name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets parent Azure DevOps Organization name.",
        SerializedName = @"parentOrgName",
        PossibleTypes = new [] { typeof(string) })]
        string ParentOrgName { get; set; }
        /// <summary>Gets or sets Azure DevOps Project id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets Azure DevOps Project id.",
        SerializedName = @"projectId",
        PossibleTypes = new [] { typeof(string) })]
        string ProjectId { get;  }
        /// <summary>
        /// The provisioning state of the resource.
        ///
        /// Pending - Provisioning pending.
        /// Failed - Provisioning failed.
        /// Succeeded - Successful provisioning.
        /// Canceled - Provisioning canceled.
        /// PendingDeletion - Deletion pending.
        /// DeletionSuccess - Deletion successful.
        /// DeletionFailure - Deletion failure.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioning state of the resource.

        Pending - Provisioning pending.
        Failed - Provisioning failed.
        Succeeded - Successful provisioning.
        Canceled - Provisioning canceled.
        PendingDeletion - Deletion pending.
        DeletionSuccess - Deletion successful.
        DeletionFailure - Deletion failure.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.DevOpsProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.DevOpsProvisioningState? ProvisioningState { get; set; }
        /// <summary>Gets or sets resource status message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets resource status message.",
        SerializedName = @"provisioningStatusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningStatusMessage { get;  }
        /// <summary>Gets or sets time when resource was last checked.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets or sets time when resource was last checked.",
        SerializedName = @"provisioningStatusUpdateTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ProvisioningStatusUpdateTimeUtc { get;  }

    }
    /// Azure DevOps Project properties.
    internal partial interface IAzureDevOpsProjectPropertiesInternal

    {
        /// <summary>Configuration payload for PR Annotations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.IActionableRemediation ActionableRemediation { get; set; }
        /// <summary>Repository branch configuration for PR Annotations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ITargetBranchConfiguration ActionableRemediationBranchConfiguration { get; set; }
        /// <summary>Gets or sets list of categories and severity levels.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20250515Preview.ICategoryConfiguration[] ActionableRemediationCategoryConfiguration { get; set; }
        /// <summary>
        /// Update Settings.
        ///
        /// Enabled - Resource should inherit configurations from parent.
        /// Disabled - Resource should not inherit configurations from parent.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.InheritFromParentState? ActionableRemediationInheritFromParentState { get; set; }
        /// <summary>
        /// ActionableRemediation Setting.
        /// None - the setting was never set.
        /// Enabled - ActionableRemediation is enabled.
        /// Disabled - ActionableRemediation is disabled.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ActionableRemediationState? ActionableRemediationState { get; set; }
        /// <summary>
        /// Configuration of PR Annotations on default branch.
        ///
        /// Enabled - PR Annotations are enabled on the resource's default branch.
        /// Disabled - PR Annotations are disabled on the resource's default branch.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.AnnotateDefaultBranchState? BranchConfigurationAnnotateDefaultBranch { get; set; }
        /// <summary>Gets or sets branches that should have annotations.</summary>
        string[] BranchConfigurationBranchName { get; set; }
        /// <summary>
        /// Details about resource onboarding status across all connectors.
        ///
        /// OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to
        /// top-level resources.
        /// Onboarded - this resource has already been onboarded by the specified connector.
        /// NotOnboarded - this resource has not been onboarded to any connector.
        /// NotApplicable - the onboarding state is not applicable to the current endpoint.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.OnboardingState? OnboardingState { get; set; }
        /// <summary>Gets or sets parent Azure DevOps Organization name.</summary>
        string ParentOrgName { get; set; }
        /// <summary>Gets or sets Azure DevOps Project id.</summary>
        string ProjectId { get; set; }
        /// <summary>
        /// The provisioning state of the resource.
        ///
        /// Pending - Provisioning pending.
        /// Failed - Provisioning failed.
        /// Succeeded - Successful provisioning.
        /// Canceled - Provisioning canceled.
        /// PendingDeletion - Deletion pending.
        /// DeletionSuccess - Deletion successful.
        /// DeletionFailure - Deletion failure.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.DevOpsProvisioningState? ProvisioningState { get; set; }
        /// <summary>Gets or sets resource status message.</summary>
        string ProvisioningStatusMessage { get; set; }
        /// <summary>Gets or sets time when resource was last checked.</summary>
        global::System.DateTime? ProvisioningStatusUpdateTimeUtc { get; set; }

    }
}