// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>Defender for Storage resource properties.</summary>
    public partial class DefenderForStorageSettingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal
    {

        /// <summary>Backing field for <see cref="IsEnabled" /> property.</summary>
        private bool? _isEnabled;

        /// <summary>Indicates whether Defender for Storage is enabled on this storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public bool? IsEnabled { get => this._isEnabled; set => this._isEnabled = value; }

        /// <summary>Backing field for <see cref="MalwareScanning" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningProperties _malwareScanning;

        /// <summary>Properties of Malware Scanning.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningProperties MalwareScanning { get => (this._malwareScanning = this._malwareScanning ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.MalwareScanningProperties()); set => this._malwareScanning = value; }

        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string MalwareScanningOperationStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OperationStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OperationStatusCode = value ?? null; }

        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string MalwareScanningOperationStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OperationStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OperationStatusMessage = value ?? null; }

        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string MalwareScanningScanResultsEventGridTopicResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).ScanResultsEventGridTopicResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).ScanResultsEventGridTopicResourceId = value ?? null; }

        /// <summary>Internal Acessors for MalwareScanning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal.MalwareScanning { get => (this._malwareScanning = this._malwareScanning ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.MalwareScanningProperties()); set { {_malwareScanning = value;} } }

        /// <summary>Internal Acessors for MalwareScanningOnUpload</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOnUploadProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal.MalwareScanningOnUpload { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OnUpload; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OnUpload = value; }

        /// <summary>Internal Acessors for MalwareScanningOperationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal.MalwareScanningOperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OperationStatus = value; }

        /// <summary>Internal Acessors for SensitiveDataDiscovery</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal.SensitiveDataDiscovery { get => (this._sensitiveDataDiscovery = this._sensitiveDataDiscovery ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.SensitiveDataDiscoveryProperties()); set { {_sensitiveDataDiscovery = value;} } }

        /// <summary>Internal Acessors for SensitiveDataDiscoveryOperationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal.SensitiveDataDiscoveryOperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).OperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).OperationStatus = value; }

        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? OnUploadCapGbPerMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OnUploadCapGbPerMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OnUploadCapGbPerMonth = value ?? default(int); }

        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? OnUploadIsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OnUploadIsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningPropertiesInternal)MalwareScanning).OnUploadIsEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="OverrideSubscriptionLevelSetting" /> property.</summary>
        private bool? _overrideSubscriptionLevelSetting;

        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public bool? OverrideSubscriptionLevelSetting { get => this._overrideSubscriptionLevelSetting; set => this._overrideSubscriptionLevelSetting = value; }

        /// <summary>Backing field for <see cref="SensitiveDataDiscovery" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryProperties _sensitiveDataDiscovery;

        /// <summary>Properties of Sensitive Data Discovery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryProperties SensitiveDataDiscovery { get => (this._sensitiveDataDiscovery = this._sensitiveDataDiscovery ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.SensitiveDataDiscoveryProperties()); set => this._sensitiveDataDiscovery = value; }

        /// <summary>Indicates whether Sensitive Data Discovery should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? SensitiveDataDiscoveryIsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).IsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).IsEnabled = value ?? default(bool); }

        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string SensitiveDataDiscoveryOperationStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).OperationStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).OperationStatusCode = value ?? null; }

        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string SensitiveDataDiscoveryOperationStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).OperationStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryPropertiesInternal)SensitiveDataDiscovery).OperationStatusMessage = value ?? null; }

        /// <summary>Creates an new <see cref="DefenderForStorageSettingProperties" /> instance.</summary>
        public DefenderForStorageSettingProperties()
        {

        }
    }
    /// Defender for Storage resource properties.
    public partial interface IDefenderForStorageSettingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable
    {
        /// <summary>Indicates whether Defender for Storage is enabled on this storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Defender for Storage is enabled on this storage account.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get; set; }
        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operation status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string MalwareScanningOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information regarding the success/failure of the operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string MalwareScanningOperationStatusMessage { get; set; }
        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Resource id of an Event Grid Topic to send scan results to.",
        SerializedName = @"scanResultsEventGridTopicResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MalwareScanningScanResultsEventGridTopicResourceId { get; set; }
        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.",
        SerializedName = @"capGBPerMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? OnUploadCapGbPerMonth { get; set; }
        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether On Upload malware scanning should be enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OnUploadIsEnabled { get; set; }
        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the settings defined for this storage account should override the settings defined for the subscription.",
        SerializedName = @"overrideSubscriptionLevelSettings",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OverrideSubscriptionLevelSetting { get; set; }
        /// <summary>Indicates whether Sensitive Data Discovery should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Sensitive Data Discovery should be enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SensitiveDataDiscoveryIsEnabled { get; set; }
        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operation status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string SensitiveDataDiscoveryOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information regarding the success/failure of the operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string SensitiveDataDiscoveryOperationStatusMessage { get; set; }

    }
    /// Defender for Storage resource properties.
    internal partial interface IDefenderForStorageSettingPropertiesInternal

    {
        /// <summary>Indicates whether Defender for Storage is enabled on this storage account.</summary>
        bool? IsEnabled { get; set; }
        /// <summary>Properties of Malware Scanning.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningProperties MalwareScanning { get; set; }
        /// <summary>Properties of On Upload malware scanning.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOnUploadProperties MalwareScanningOnUpload { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus MalwareScanningOperationStatus { get; set; }
        /// <summary>The operation status code.</summary>
        string MalwareScanningOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        string MalwareScanningOperationStatusMessage { get; set; }
        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        string MalwareScanningScanResultsEventGridTopicResourceId { get; set; }
        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        int? OnUploadCapGbPerMonth { get; set; }
        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        bool? OnUploadIsEnabled { get; set; }
        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        bool? OverrideSubscriptionLevelSetting { get; set; }
        /// <summary>Properties of Sensitive Data Discovery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryProperties SensitiveDataDiscovery { get; set; }
        /// <summary>Indicates whether Sensitive Data Discovery should be enabled.</summary>
        bool? SensitiveDataDiscoveryIsEnabled { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus SensitiveDataDiscoveryOperationStatus { get; set; }
        /// <summary>The operation status code.</summary>
        string SensitiveDataDiscoveryOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        string SensitiveDataDiscoveryOperationStatusMessage { get; set; }

    }
}