// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>A summary of the scan results of the blobs that were scanned.</summary>
    public partial class BlobsScanSummary :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IBlobsScanSummary,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IBlobsScanSummaryInternal
    {

        /// <summary>Backing field for <see cref="MaliciousBlobsCount" /> property.</summary>
        private long? _maliciousBlobsCount;

        /// <summary>The number of malicious blobs that were detected during the scan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public long? MaliciousBlobsCount { get => this._maliciousBlobsCount; set => this._maliciousBlobsCount = value; }

        /// <summary>Backing field for <see cref="ScannedBlobsInGb" /> property.</summary>
        private double? _scannedBlobsInGb;

        /// <summary>The number of gigabytes of data that were scanned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public double? ScannedBlobsInGb { get => this._scannedBlobsInGb; set => this._scannedBlobsInGb = value; }

        /// <summary>Backing field for <see cref="SkippedBlobsCount" /> property.</summary>
        private long? _skippedBlobsCount;

        /// <summary>The number of blobs that were skipped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public long? SkippedBlobsCount { get => this._skippedBlobsCount; set => this._skippedBlobsCount = value; }

        /// <summary>Backing field for <see cref="TotalBlobsScanned" /> property.</summary>
        private long? _totalBlobsScanned;

        /// <summary>The total number of blobs that were scanned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public long? TotalBlobsScanned { get => this._totalBlobsScanned; set => this._totalBlobsScanned = value; }

        /// <summary>Creates an new <see cref="BlobsScanSummary" /> instance.</summary>
        public BlobsScanSummary()
        {

        }
    }
    /// A summary of the scan results of the blobs that were scanned.
    public partial interface IBlobsScanSummary :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable
    {
        /// <summary>The number of malicious blobs that were detected during the scan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of malicious blobs that were detected during the scan.",
        SerializedName = @"maliciousBlobsCount",
        PossibleTypes = new [] { typeof(long) })]
        long? MaliciousBlobsCount { get; set; }
        /// <summary>The number of gigabytes of data that were scanned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of gigabytes of data that were scanned.",
        SerializedName = @"scannedBlobsInGB",
        PossibleTypes = new [] { typeof(double) })]
        double? ScannedBlobsInGb { get; set; }
        /// <summary>The number of blobs that were skipped.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of blobs that were skipped.",
        SerializedName = @"skippedBlobsCount",
        PossibleTypes = new [] { typeof(long) })]
        long? SkippedBlobsCount { get; set; }
        /// <summary>The total number of blobs that were scanned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total number of blobs that were scanned.",
        SerializedName = @"totalBlobsScanned",
        PossibleTypes = new [] { typeof(long) })]
        long? TotalBlobsScanned { get; set; }

    }
    /// A summary of the scan results of the blobs that were scanned.
    internal partial interface IBlobsScanSummaryInternal

    {
        /// <summary>The number of malicious blobs that were detected during the scan.</summary>
        long? MaliciousBlobsCount { get; set; }
        /// <summary>The number of gigabytes of data that were scanned.</summary>
        double? ScannedBlobsInGb { get; set; }
        /// <summary>The number of blobs that were skipped.</summary>
        long? SkippedBlobsCount { get; set; }
        /// <summary>The total number of blobs that were scanned.</summary>
        long? TotalBlobsScanned { get; set; }

    }
}