// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>The Defender for Storage resource.</summary>
    public partial class DefenderForStorageSetting :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSetting,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.Resource();

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Id; }

        /// <summary>Indicates whether Defender for Storage is enabled on this storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? IsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).IsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).IsEnabled = value ?? default(bool); }

        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string MalwareScanningOperationStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOperationStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOperationStatusCode = value ?? null; }

        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string MalwareScanningOperationStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOperationStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOperationStatusMessage = value ?? null; }

        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string MalwareScanningScanResultsEventGridTopicResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningScanResultsEventGridTopicResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningScanResultsEventGridTopicResourceId = value ?? null; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for MalwareScanning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal.MalwareScanning { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanning; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanning = value; }

        /// <summary>Internal Acessors for MalwareScanningOnUpload</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOnUploadProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal.MalwareScanningOnUpload { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOnUpload; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOnUpload = value; }

        /// <summary>Internal Acessors for MalwareScanningOperationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal.MalwareScanningOperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).MalwareScanningOperationStatus = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.DefenderForStorageSettingProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SensitiveDataDiscovery</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal.SensitiveDataDiscovery { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscovery; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscovery = value; }

        /// <summary>Internal Acessors for SensitiveDataDiscoveryOperationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingInternal.SensitiveDataDiscoveryOperationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryOperationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryOperationStatus = value; }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Name; }

        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? OnUploadCapGbPerMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).OnUploadCapGbPerMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).OnUploadCapGbPerMonth = value ?? default(int); }

        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? OnUploadIsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).OnUploadIsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).OnUploadIsEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? OverrideSubscriptionLevelSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).OverrideSubscriptionLevelSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).OverrideSubscriptionLevelSetting = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingProperties _property;

        /// <summary>Defender for Storage resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.DefenderForStorageSettingProperties()); set => this._property = value; }

        /// <summary>Indicates whether Sensitive Data Discovery should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? SensitiveDataDiscoveryIsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryIsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryIsEnabled = value ?? default(bool); }

        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string SensitiveDataDiscoveryOperationStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryOperationStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryOperationStatusCode = value ?? null; }

        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string SensitiveDataDiscoveryOperationStatusMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryOperationStatusMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingPropertiesInternal)Property).SensitiveDataDiscoveryOperationStatusMessage = value ?? null; }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="DefenderForStorageSetting" /> instance.</summary>
        public DefenderForStorageSetting()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The Defender for Storage resource.
    public partial interface IDefenderForStorageSetting :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResource
    {
        /// <summary>Indicates whether Defender for Storage is enabled on this storage account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Defender for Storage is enabled on this storage account.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsEnabled { get; set; }
        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operation status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string MalwareScanningOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information regarding the success/failure of the operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string MalwareScanningOperationStatusMessage { get; set; }
        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Resource id of an Event Grid Topic to send scan results to.",
        SerializedName = @"scanResultsEventGridTopicResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string MalwareScanningScanResultsEventGridTopicResourceId { get; set; }
        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.",
        SerializedName = @"capGBPerMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? OnUploadCapGbPerMonth { get; set; }
        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether On Upload malware scanning should be enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OnUploadIsEnabled { get; set; }
        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether the settings defined for this storage account should override the settings defined for the subscription.",
        SerializedName = @"overrideSubscriptionLevelSettings",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OverrideSubscriptionLevelSetting { get; set; }
        /// <summary>Indicates whether Sensitive Data Discovery should be enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether Sensitive Data Discovery should be enabled.",
        SerializedName = @"isEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SensitiveDataDiscoveryIsEnabled { get; set; }
        /// <summary>The operation status code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The operation status code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string SensitiveDataDiscoveryOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information regarding the success/failure of the operation.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string SensitiveDataDiscoveryOperationStatusMessage { get; set; }

    }
    /// The Defender for Storage resource.
    internal partial interface IDefenderForStorageSettingInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal
    {
        /// <summary>Indicates whether Defender for Storage is enabled on this storage account.</summary>
        bool? IsEnabled { get; set; }
        /// <summary>Properties of Malware Scanning.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IMalwareScanningProperties MalwareScanning { get; set; }
        /// <summary>Properties of On Upload malware scanning.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOnUploadProperties MalwareScanningOnUpload { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Malware Scanning enable/disable operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus MalwareScanningOperationStatus { get; set; }
        /// <summary>The operation status code.</summary>
        string MalwareScanningOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        string MalwareScanningOperationStatusMessage { get; set; }
        /// <summary>Optional. Resource id of an Event Grid Topic to send scan results to.</summary>
        string MalwareScanningScanResultsEventGridTopicResourceId { get; set; }
        /// <summary>Defines the max GB to be scanned per Month. Set to -1 if no capping is needed.</summary>
        int? OnUploadCapGbPerMonth { get; set; }
        /// <summary>Indicates whether On Upload malware scanning should be enabled.</summary>
        bool? OnUploadIsEnabled { get; set; }
        /// <summary>
        /// Indicates whether the settings defined for this storage account should override the settings defined for the subscription.
        /// </summary>
        bool? OverrideSubscriptionLevelSetting { get; set; }
        /// <summary>Defender for Storage resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IDefenderForStorageSettingProperties Property { get; set; }
        /// <summary>Properties of Sensitive Data Discovery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.ISensitiveDataDiscoveryProperties SensitiveDataDiscovery { get; set; }
        /// <summary>Indicates whether Sensitive Data Discovery should be enabled.</summary>
        bool? SensitiveDataDiscoveryIsEnabled { get; set; }
        /// <summary>
        /// Upon failure or partial success. Additional data describing Sensitive Data Discovery enable/disable operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20241001Preview.IOperationStatus SensitiveDataDiscoveryOperationStatus { get; set; }
        /// <summary>The operation status code.</summary>
        string SensitiveDataDiscoveryOperationStatusCode { get; set; }
        /// <summary>Additional information regarding the success/failure of the operation.</summary>
        string SensitiveDataDiscoveryOperationStatusMessage { get; set; }

    }
}