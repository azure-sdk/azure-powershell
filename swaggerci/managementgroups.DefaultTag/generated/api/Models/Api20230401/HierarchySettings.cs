// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.Extensions;

    /// <summary>Settings defined at the Management Group scope.</summary>
    public partial class HierarchySettings :
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettings,
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.Resource();

        /// <summary>
        /// Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inlined)]
        public string DefaultManagementGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsPropertiesInternal)Property).DefaultManagementGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsPropertiesInternal)Property).DefaultManagementGroup = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsProperties Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.HierarchySettingsProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.HierarchySettingsProperties()); set => this._property = value; }

        /// <summary>
        /// Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will
        /// require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups
        /// directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inlined)]
        public bool? RequireAuthorizationForGroupCreation { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsPropertiesInternal)Property).RequireAuthorizationForGroupCreation; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsPropertiesInternal)Property).RequireAuthorizationForGroupCreation = value ?? default(bool); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Support.CreatedByType)""); }

        /// <summary>
        /// The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inlined)]
        public string TenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsPropertiesInternal)Property).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsPropertiesInternal)Property).TenantId = value ?? null; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="HierarchySettings" /> instance.</summary>
        public HierarchySettings()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Settings defined at the Management Group scope.
    public partial interface IHierarchySettings :
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResource
    {
        /// <summary>
        /// Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup",
        SerializedName = @"defaultManagementGroup",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultManagementGroup { get; set; }
        /// <summary>
        /// Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will
        /// require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups
        /// directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.",
        SerializedName = @"requireAuthorizationForGroupCreation",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RequireAuthorizationForGroupCreation { get; set; }
        /// <summary>
        /// The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// Settings defined at the Management Group scope.
    internal partial interface IHierarchySettingsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api30.IResourceInternal
    {
        /// <summary>
        /// Settings that sets the default Management Group under which new subscriptions get added in this tenant. For example, /providers/Microsoft.Management/managementGroups/defaultGroup
        /// </summary>
        string DefaultManagementGroup { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ManagementGroupsApi.Models.Api20230401.IHierarchySettingsProperties Property { get; set; }
        /// <summary>
        /// Indicates whether RBAC access is required upon group creation under the root Management Group. If set to true, user will
        /// require Microsoft.Management/managementGroups/write action on the root Management Group scope in order to create new Groups
        /// directly under the root. This will prevent new users from creating new Management Groups, unless they are given access.
        /// </summary>
        bool? RequireAuthorizationForGroupCreation { get; set; }
        /// <summary>
        /// The AAD Tenant ID associated with the hierarchy settings. For example, 00000000-0000-0000-0000-000000000000
        /// </summary>
        string TenantId { get; set; }

    }
}