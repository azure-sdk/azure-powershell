// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201
{
    using Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.PowerShell;

    /// <summary>Device details for configuration.</summary>
    [System.ComponentModel.TypeConverter(typeof(ConfigurationDeviceDetailsTypeConverter))]
    public partial class ConfigurationDeviceDetails
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ConfigurationDeviceDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ConfigurationDeviceDetails(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DisplayInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfo = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo) content.GetValueForProperty("DisplayInfo",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfo, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DisplayInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("HierarchyInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformation = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation) content.GetValueForProperty("HierarchyInformation",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformation, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("TermCommitmentInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformation = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation) content.GetValueForProperty("TermCommitmentInformation",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformation, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.TermCommitmentInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Quantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).Quantity = (int?) content.GetValueForProperty("Quantity",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).Quantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IdentificationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).IdentificationType = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType?) content.GetValueForProperty("IdentificationType",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).IdentificationType, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType.CreateFrom);
            }
            if (content.Contains("DeviceDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DeviceDetail = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[]) content.GetValueForProperty("DeviceDetail",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DeviceDetail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DeviceDetailsTypeConverter.ConvertFrom));
            }
            if (content.Contains("HierarchyInformationProductName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductName = (string) content.GetValueForProperty("HierarchyInformationProductName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationName = (string) content.GetValueForProperty("HierarchyInformationConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayInfoProductFamilyDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoProductFamilyDisplayName = (string) content.GetValueForProperty("DisplayInfoProductFamilyDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoProductFamilyDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayInfoConfigurationDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoConfigurationDisplayName = (string) content.GetValueForProperty("DisplayInfoConfigurationDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoConfigurationDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationProductFamilyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductFamilyName = (string) content.GetValueForProperty("HierarchyInformationProductFamilyName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductFamilyName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationProductLineName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductLineName = (string) content.GetValueForProperty("HierarchyInformationProductLineName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductLineName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationConfigurationIdDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationIdDisplayName = (string) content.GetValueForProperty("HierarchyInformationConfigurationIdDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationIdDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("TermCommitmentInformationTermCommitmentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentType = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType) content.GetValueForProperty("TermCommitmentInformationTermCommitmentType",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentType, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType.CreateFrom);
            }
            if (content.Contains("TermCommitmentInformationTermCommitmentTypeDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentTypeDuration = (global::System.TimeSpan?) content.GetValueForProperty("TermCommitmentInformationTermCommitmentTypeDuration",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentTypeDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("TermCommitmentInformationPendingDaysForTerm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationPendingDaysForTerm = (int?) content.GetValueForProperty("TermCommitmentInformationPendingDaysForTerm",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationPendingDaysForTerm, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ConfigurationDeviceDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ConfigurationDeviceDetails(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DisplayInfo"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfo = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo) content.GetValueForProperty("DisplayInfo",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfo, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DisplayInfoTypeConverter.ConvertFrom);
            }
            if (content.Contains("HierarchyInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformation = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation) content.GetValueForProperty("HierarchyInformation",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformation, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("TermCommitmentInformation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformation = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation) content.GetValueForProperty("TermCommitmentInformation",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformation, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.TermCommitmentInformationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Quantity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).Quantity = (int?) content.GetValueForProperty("Quantity",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).Quantity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IdentificationType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).IdentificationType = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType?) content.GetValueForProperty("IdentificationType",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).IdentificationType, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType.CreateFrom);
            }
            if (content.Contains("DeviceDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DeviceDetail = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[]) content.GetValueForProperty("DeviceDetail",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DeviceDetail, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DeviceDetailsTypeConverter.ConvertFrom));
            }
            if (content.Contains("HierarchyInformationProductName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductName = (string) content.GetValueForProperty("HierarchyInformationProductName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationConfigurationName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationName = (string) content.GetValueForProperty("HierarchyInformationConfigurationName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayInfoProductFamilyDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoProductFamilyDisplayName = (string) content.GetValueForProperty("DisplayInfoProductFamilyDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoProductFamilyDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayInfoConfigurationDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoConfigurationDisplayName = (string) content.GetValueForProperty("DisplayInfoConfigurationDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).DisplayInfoConfigurationDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationProductFamilyName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductFamilyName = (string) content.GetValueForProperty("HierarchyInformationProductFamilyName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductFamilyName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationProductLineName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductLineName = (string) content.GetValueForProperty("HierarchyInformationProductLineName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationProductLineName, global::System.Convert.ToString);
            }
            if (content.Contains("HierarchyInformationConfigurationIdDisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationIdDisplayName = (string) content.GetValueForProperty("HierarchyInformationConfigurationIdDisplayName",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).HierarchyInformationConfigurationIdDisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("TermCommitmentInformationTermCommitmentType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentType = (Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType) content.GetValueForProperty("TermCommitmentInformationTermCommitmentType",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentType, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType.CreateFrom);
            }
            if (content.Contains("TermCommitmentInformationTermCommitmentTypeDuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentTypeDuration = (global::System.TimeSpan?) content.GetValueForProperty("TermCommitmentInformationTermCommitmentTypeDuration",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationTermCommitmentTypeDuration, (v) => v is global::System.TimeSpan _v ? _v : global::System.Xml.XmlConvert.ToTimeSpan( v.ToString() ));
            }
            if (content.Contains("TermCommitmentInformationPendingDaysForTerm"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationPendingDaysForTerm = (int?) content.GetValueForProperty("TermCommitmentInformationPendingDaysForTerm",((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal)this).TermCommitmentInformationPendingDaysForTerm, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ConfigurationDeviceDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ConfigurationDeviceDetails(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ConfigurationDeviceDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ConfigurationDeviceDetails(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ConfigurationDeviceDetails" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ConfigurationDeviceDetails" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Device details for configuration.
    [System.ComponentModel.TypeConverter(typeof(ConfigurationDeviceDetailsTypeConverter))]
    public partial interface IConfigurationDeviceDetails

    {

    }
}