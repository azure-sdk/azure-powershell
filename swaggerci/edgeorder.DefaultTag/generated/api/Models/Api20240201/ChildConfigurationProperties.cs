// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Properties of child configuration.</summary>
    public partial class ChildConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AvailabilityInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformation _availabilityInformation;

        /// <summary>Availability information of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformation AvailabilityInformation { get => (this._availabilityInformation = this._availabilityInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.AvailabilityInformation()); }

        /// <summary>Current availability stage of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? AvailabilityInformationAvailabilityStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).AvailabilityStage; }

        /// <summary>Reason why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? AvailabilityInformationDisabledReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).DisabledReason; }

        /// <summary>Message for why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string AvailabilityInformationDisabledReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).DisabledReasonMessage; }

        /// <summary>Backing field for <see cref="ChildConfigurationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? _childConfigurationType;

        /// <summary>Child configuration type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? ChildConfigurationType { get => this._childConfigurationType; }

        /// <summary>Backing field for <see cref="ChildConfigurationTypes" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] _childConfigurationTypes;

        /// <summary>
        /// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration
        /// filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationTypes { get => this._childConfigurationTypes; }

        /// <summary>Backing field for <see cref="CostInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformation _costInformation;

        /// <summary>Cost information for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformation CostInformation { get => (this._costInformation = this._costInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.CostInformation()); }

        /// <summary>Default url to display billing information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string CostInformationBillingInfoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformationInternal)CostInformation).BillingInfoUrl; }

        /// <summary>Details on the various billing aspects for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IBillingMeterDetails[] CostInformationBillingMeterDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformationInternal)CostInformation).BillingMeterDetail; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescription _description;

        /// <summary>Description related to the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescription Description { get => (this._description = this._description ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.Description()); }

        /// <summary>Attributes for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string[] DescriptionAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Attribute; }

        /// <summary>Keywords for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string[] DescriptionKeyword { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Keyword; }

        /// <summary>Links for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ILink[] DescriptionLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Link; }

        /// <summary>Long description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DescriptionLongDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).LongDescription; }

        /// <summary>Short description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DescriptionShortDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).ShortDescription; }

        /// <summary>Type of description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? DescriptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Type; }

        /// <summary>Backing field for <see cref="Dimension" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensions _dimension;

        /// <summary>Dimensions of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensions Dimension { get => (this._dimension = this._dimension ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.Dimensions()); }

        /// <summary>Depth of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionDepth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Depth; }

        /// <summary>Height of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Height; }

        /// <summary>Length of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Length; }

        /// <summary>Unit for the dimensions of length, height and width.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? DimensionLengthHeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).LengthHeightUnit; }

        /// <summary>Weight of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionWeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Weight; }

        /// <summary>Unit for the dimensions of weight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? DimensionWeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).WeightUnit; }

        /// <summary>Width of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public double? DimensionWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Width; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display Name for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="FilterableProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IFilterableProperty[] _filterableProperty;

        /// <summary>List of filters supported for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IFilterableProperty[] FilterableProperty { get => this._filterableProperty; }

        /// <summary>Backing field for <see cref="FulfilledBy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? _fulfilledBy;

        /// <summary>
        /// The entity responsible for fulfillment of the item at the given hierarchy level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? FulfilledBy { get => this._fulfilledBy; }

        /// <summary>Backing field for <see cref="GroupedChildConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IGroupedChildConfigurations[] _groupedChildConfiguration;

        /// <summary>
        /// Child configurations present for the configuration after applying child configuration filter, grouped by the category
        /// name of the child configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IGroupedChildConfigurations[] GroupedChildConfiguration { get => this._groupedChildConfiguration; }

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation _hierarchyInformation;

        /// <summary>Hierarchy information of a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformation()); }

        /// <summary>Represents Model Display Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationIdDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationIdDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationIdDisplayName = value ?? null; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductName = value ?? null; }

        /// <summary>Backing field for <see cref="ImageInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IImageInformation[] _imageInformation;

        /// <summary>Image information for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IImageInformation[] ImageInformation { get => this._imageInformation; }

        /// <summary>Backing field for <see cref="IsPartOfBaseConfiguration" /> property.</summary>
        private bool? _isPartOfBaseConfiguration;

        /// <summary>
        /// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass
        /// this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public bool? IsPartOfBaseConfiguration { get => this._isPartOfBaseConfiguration; }

        /// <summary>Backing field for <see cref="MaximumQuantity" /> property.</summary>
        private int? _maximumQuantity;

        /// <summary>Maximum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public int? MaximumQuantity { get => this._maximumQuantity; }

        /// <summary>Internal Acessors for AvailabilityInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.AvailabilityInformation { get => (this._availabilityInformation = this._availabilityInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.AvailabilityInformation()); set { {_availabilityInformation = value;} } }

        /// <summary>Internal Acessors for AvailabilityInformationAvailabilityStage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.AvailabilityInformationAvailabilityStage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).AvailabilityStage; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).AvailabilityStage = value; }

        /// <summary>Internal Acessors for AvailabilityInformationDisabledReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.AvailabilityInformationDisabledReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).DisabledReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).DisabledReason = value; }

        /// <summary>Internal Acessors for AvailabilityInformationDisabledReasonMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.AvailabilityInformationDisabledReasonMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).DisabledReasonMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformationInternal)AvailabilityInformation).DisabledReasonMessage = value; }

        /// <summary>Internal Acessors for ChildConfigurationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.ChildConfigurationType { get => this._childConfigurationType; set { {_childConfigurationType = value;} } }

        /// <summary>Internal Acessors for ChildConfigurationTypes</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.ChildConfigurationTypes { get => this._childConfigurationTypes; set { {_childConfigurationTypes = value;} } }

        /// <summary>Internal Acessors for CostInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.CostInformation { get => (this._costInformation = this._costInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.CostInformation()); set { {_costInformation = value;} } }

        /// <summary>Internal Acessors for CostInformationBillingInfoUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.CostInformationBillingInfoUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformationInternal)CostInformation).BillingInfoUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformationInternal)CostInformation).BillingInfoUrl = value; }

        /// <summary>Internal Acessors for CostInformationBillingMeterDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IBillingMeterDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.CostInformationBillingMeterDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformationInternal)CostInformation).BillingMeterDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformationInternal)CostInformation).BillingMeterDetail = value; }

        /// <summary>Internal Acessors for Description</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescription Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.Description { get => (this._description = this._description ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.Description()); set { {_description = value;} } }

        /// <summary>Internal Acessors for DescriptionAttribute</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DescriptionAttribute { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Attribute; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Attribute = value; }

        /// <summary>Internal Acessors for DescriptionKeyword</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DescriptionKeyword { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Keyword; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Keyword = value; }

        /// <summary>Internal Acessors for DescriptionLink</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ILink[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DescriptionLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Link; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Link = value; }

        /// <summary>Internal Acessors for DescriptionLongDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DescriptionLongDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).LongDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).LongDescription = value; }

        /// <summary>Internal Acessors for DescriptionShortDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DescriptionShortDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).ShortDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).ShortDescription = value; }

        /// <summary>Internal Acessors for DescriptionType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DescriptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescriptionInternal)Description).Type = value; }

        /// <summary>Internal Acessors for Dimension</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensions Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.Dimension { get => (this._dimension = this._dimension ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.Dimensions()); set { {_dimension = value;} } }

        /// <summary>Internal Acessors for DimensionDepth</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionDepth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Depth; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Depth = value; }

        /// <summary>Internal Acessors for DimensionHeight</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Height; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Height = value; }

        /// <summary>Internal Acessors for DimensionLength</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionLength { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Length; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Length = value; }

        /// <summary>Internal Acessors for DimensionLengthHeightUnit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionLengthHeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).LengthHeightUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).LengthHeightUnit = value; }

        /// <summary>Internal Acessors for DimensionWeight</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionWeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Weight; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Weight = value; }

        /// <summary>Internal Acessors for DimensionWeightUnit</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionWeightUnit { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).WeightUnit; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).WeightUnit = value; }

        /// <summary>Internal Acessors for DimensionWidth</summary>
        double? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DimensionWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Width; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensionsInternal)Dimension).Width = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for FilterableProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IFilterableProperty[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.FilterableProperty { get => this._filterableProperty; set { {_filterableProperty = value;} } }

        /// <summary>Internal Acessors for FulfilledBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.FulfilledBy { get => this._fulfilledBy; set { {_fulfilledBy = value;} } }

        /// <summary>Internal Acessors for GroupedChildConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IGroupedChildConfigurations[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.GroupedChildConfiguration { get => this._groupedChildConfiguration; set { {_groupedChildConfiguration = value;} } }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformation()); set { {_hierarchyInformation = value;} } }

        /// <summary>Internal Acessors for ImageInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IImageInformation[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.ImageInformation { get => this._imageInformation; set { {_imageInformation = value;} } }

        /// <summary>Internal Acessors for IsPartOfBaseConfiguration</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.IsPartOfBaseConfiguration { get => this._isPartOfBaseConfiguration; set { {_isPartOfBaseConfiguration = value;} } }

        /// <summary>Internal Acessors for MaximumQuantity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.MaximumQuantity { get => this._maximumQuantity; set { {_maximumQuantity = value;} } }

        /// <summary>Internal Acessors for MinimumQuantity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.MinimumQuantity { get => this._minimumQuantity; set { {_minimumQuantity = value;} } }

        /// <summary>Internal Acessors for ProvisioningSupport</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.ProvisioningSupport { get => this._provisioningSupport; set { {_provisioningSupport = value;} } }

        /// <summary>Internal Acessors for Specification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ISpecification[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.Specification { get => this._specification; set { {_specification = value;} } }

        /// <summary>Internal Acessors for SupportedTermCommitmentDuration</summary>
        global::System.TimeSpan[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IChildConfigurationPropertiesInternal.SupportedTermCommitmentDuration { get => this._supportedTermCommitmentDuration; set { {_supportedTermCommitmentDuration = value;} } }

        /// <summary>Backing field for <see cref="MinimumQuantity" /> property.</summary>
        private int? _minimumQuantity;

        /// <summary>Minimum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public int? MinimumQuantity { get => this._minimumQuantity; }

        /// <summary>Backing field for <see cref="ProvisioningSupport" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? _provisioningSupport;

        /// <summary>Determining nature of provisioning that the configuration supports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? ProvisioningSupport { get => this._provisioningSupport; }

        /// <summary>Backing field for <see cref="Specification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ISpecification[] _specification;

        /// <summary>Specifications of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ISpecification[] Specification { get => this._specification; }

        /// <summary>Backing field for <see cref="SupportedTermCommitmentDuration" /> property.</summary>
        private global::System.TimeSpan[] _supportedTermCommitmentDuration;

        /// <summary>The Term Commitment Durations that are supported for a configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public global::System.TimeSpan[] SupportedTermCommitmentDuration { get => this._supportedTermCommitmentDuration; }

        /// <summary>Creates an new <see cref="ChildConfigurationProperties" /> instance.</summary>
        public ChildConfigurationProperties()
        {

        }
    }
    /// Properties of child configuration.
    public partial interface IChildConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Current availability stage of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current availability stage of the product.",
        SerializedName = @"availabilityStage",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? AvailabilityInformationAvailabilityStage { get;  }
        /// <summary>Reason why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Reason why the product is disabled.",
        SerializedName = @"disabledReason",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? AvailabilityInformationDisabledReason { get;  }
        /// <summary>Message for why the product is disabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Message for why the product is disabled.",
        SerializedName = @"disabledReasonMessage",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityInformationDisabledReasonMessage { get;  }
        /// <summary>Child configuration type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Child configuration type.",
        SerializedName = @"childConfigurationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? ChildConfigurationType { get;  }
        /// <summary>
        /// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration
        /// filter.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Different types of child configurations which exist for this configuration, these can be used to populate the child configuration filter.",
        SerializedName = @"childConfigurationTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationTypes { get;  }
        /// <summary>Default url to display billing information.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Default url to display billing information.",
        SerializedName = @"billingInfoUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CostInformationBillingInfoUrl { get;  }
        /// <summary>Details on the various billing aspects for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details on the various billing aspects for the product system.",
        SerializedName = @"billingMeterDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IBillingMeterDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IBillingMeterDetails[] CostInformationBillingMeterDetail { get;  }
        /// <summary>Attributes for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Attributes for the product system.",
        SerializedName = @"attributes",
        PossibleTypes = new [] { typeof(string) })]
        string[] DescriptionAttribute { get;  }
        /// <summary>Keywords for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Keywords for the product system.",
        SerializedName = @"keywords",
        PossibleTypes = new [] { typeof(string) })]
        string[] DescriptionKeyword { get;  }
        /// <summary>Links for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Links for the product system.",
        SerializedName = @"links",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ILink) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ILink[] DescriptionLink { get;  }
        /// <summary>Long description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Long description of the product system.",
        SerializedName = @"longDescription",
        PossibleTypes = new [] { typeof(string) })]
        string DescriptionLongDescription { get;  }
        /// <summary>Short description of the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Short description of the product system.",
        SerializedName = @"shortDescription",
        PossibleTypes = new [] { typeof(string) })]
        string DescriptionShortDescription { get;  }
        /// <summary>Type of description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of description.",
        SerializedName = @"descriptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? DescriptionType { get;  }
        /// <summary>Depth of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Depth of the device.",
        SerializedName = @"depth",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionDepth { get;  }
        /// <summary>Height of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Height of the device.",
        SerializedName = @"height",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionHeight { get;  }
        /// <summary>Length of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Length of the device.",
        SerializedName = @"length",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionLength { get;  }
        /// <summary>Unit for the dimensions of length, height and width.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit for the dimensions of length, height and width.",
        SerializedName = @"lengthHeightUnit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? DimensionLengthHeightUnit { get;  }
        /// <summary>Weight of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Weight of the device.",
        SerializedName = @"weight",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionWeight { get;  }
        /// <summary>Unit for the dimensions of weight.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unit for the dimensions of weight.",
        SerializedName = @"weightUnit",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? DimensionWeightUnit { get;  }
        /// <summary>Width of the device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Width of the device.",
        SerializedName = @"width",
        PossibleTypes = new [] { typeof(double) })]
        double? DimensionWidth { get;  }
        /// <summary>Display Name for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Display Name for the product system.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>List of filters supported for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of filters supported for a product.",
        SerializedName = @"filterableProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IFilterableProperty) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IFilterableProperty[] FilterableProperty { get;  }
        /// <summary>
        /// The entity responsible for fulfillment of the item at the given hierarchy level.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The entity responsible for fulfillment of the item at the given hierarchy level.",
        SerializedName = @"fulfilledBy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? FulfilledBy { get;  }
        /// <summary>
        /// Child configurations present for the configuration after applying child configuration filter, grouped by the category
        /// name of the child configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Child configurations present for the configuration after applying child configuration filter, grouped by the category name of the child configuration.",
        SerializedName = @"groupedChildConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IGroupedChildConfigurations) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IGroupedChildConfigurations[] GroupedChildConfiguration { get;  }
        /// <summary>Represents Model Display Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents Model Display Name.",
        SerializedName = @"configurationIdDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationIdDisplayName { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Image information for the product system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Image information for the product system.",
        SerializedName = @"imageInformation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IImageInformation) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IImageInformation[] ImageInformation { get;  }
        /// <summary>
        /// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass
        /// this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.",
        SerializedName = @"isPartOfBaseConfiguration",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsPartOfBaseConfiguration { get;  }
        /// <summary>Maximum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Maximum quantity a customer can order while choosing this configuration.",
        SerializedName = @"maximumQuantity",
        PossibleTypes = new [] { typeof(int) })]
        int? MaximumQuantity { get;  }
        /// <summary>Minimum quantity a customer can order while choosing this configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Minimum quantity a customer can order while choosing this configuration.",
        SerializedName = @"minimumQuantity",
        PossibleTypes = new [] { typeof(int) })]
        int? MinimumQuantity { get;  }
        /// <summary>Determining nature of provisioning that the configuration supports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Determining nature of provisioning that the configuration supports.",
        SerializedName = @"provisioningSupport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? ProvisioningSupport { get;  }
        /// <summary>Specifications of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifications of the configuration.",
        SerializedName = @"specifications",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ISpecification) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ISpecification[] Specification { get;  }
        /// <summary>The Term Commitment Durations that are supported for a configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Term Commitment Durations that are supported for a configuration.",
        SerializedName = @"supportedTermCommitmentDurations",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan[] SupportedTermCommitmentDuration { get;  }

    }
    /// Properties of child configuration.
    internal partial interface IChildConfigurationPropertiesInternal

    {
        /// <summary>Availability information of the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAvailabilityInformation AvailabilityInformation { get; set; }
        /// <summary>Current availability stage of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AvailabilityStage? AvailabilityInformationAvailabilityStage { get; set; }
        /// <summary>Reason why the product is disabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DisabledReason? AvailabilityInformationDisabledReason { get; set; }
        /// <summary>Message for why the product is disabled.</summary>
        string AvailabilityInformationDisabledReasonMessage { get; set; }
        /// <summary>Child configuration type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType? ChildConfigurationType { get; set; }
        /// <summary>
        /// Different types of child configurations which exist for this configuration, these can be used to populate the child configuration
        /// filter.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ChildConfigurationType[] ChildConfigurationTypes { get; set; }
        /// <summary>Cost information for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ICostInformation CostInformation { get; set; }
        /// <summary>Default url to display billing information.</summary>
        string CostInformationBillingInfoUrl { get; set; }
        /// <summary>Details on the various billing aspects for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IBillingMeterDetails[] CostInformationBillingMeterDetail { get; set; }
        /// <summary>Description related to the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDescription Description { get; set; }
        /// <summary>Attributes for the product system.</summary>
        string[] DescriptionAttribute { get; set; }
        /// <summary>Keywords for the product system.</summary>
        string[] DescriptionKeyword { get; set; }
        /// <summary>Links for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ILink[] DescriptionLink { get; set; }
        /// <summary>Long description of the product system.</summary>
        string DescriptionLongDescription { get; set; }
        /// <summary>Short description of the product system.</summary>
        string DescriptionShortDescription { get; set; }
        /// <summary>Type of description.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DescriptionType? DescriptionType { get; set; }
        /// <summary>Dimensions of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDimensions Dimension { get; set; }
        /// <summary>Depth of the device.</summary>
        double? DimensionDepth { get; set; }
        /// <summary>Height of the device.</summary>
        double? DimensionHeight { get; set; }
        /// <summary>Length of the device.</summary>
        double? DimensionLength { get; set; }
        /// <summary>Unit for the dimensions of length, height and width.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.LengthHeightUnit? DimensionLengthHeightUnit { get; set; }
        /// <summary>Weight of the device.</summary>
        double? DimensionWeight { get; set; }
        /// <summary>Unit for the dimensions of weight.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.WeightMeasurementUnit? DimensionWeightUnit { get; set; }
        /// <summary>Width of the device.</summary>
        double? DimensionWidth { get; set; }
        /// <summary>Display Name for the product system.</summary>
        string DisplayName { get; set; }
        /// <summary>List of filters supported for a product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IFilterableProperty[] FilterableProperty { get; set; }
        /// <summary>
        /// The entity responsible for fulfillment of the item at the given hierarchy level.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.FulfillmentType? FulfilledBy { get; set; }
        /// <summary>
        /// Child configurations present for the configuration after applying child configuration filter, grouped by the category
        /// name of the child configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IGroupedChildConfigurations[] GroupedChildConfiguration { get; set; }
        /// <summary>Hierarchy information of a product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents Model Display Name.</summary>
        string HierarchyInformationConfigurationIdDisplayName { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Image information for the product system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IImageInformation[] ImageInformation { get; set; }
        /// <summary>
        /// Flag to indicate if the child configuration is part of the base configuration, which means the customer need not pass
        /// this configuration in OptInAdditionalConfigurations while placing an order, it will be shipped by default.
        /// </summary>
        bool? IsPartOfBaseConfiguration { get; set; }
        /// <summary>Maximum quantity a customer can order while choosing this configuration.</summary>
        int? MaximumQuantity { get; set; }
        /// <summary>Minimum quantity a customer can order while choosing this configuration.</summary>
        int? MinimumQuantity { get; set; }
        /// <summary>Determining nature of provisioning that the configuration supports.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? ProvisioningSupport { get; set; }
        /// <summary>Specifications of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ISpecification[] Specification { get; set; }
        /// <summary>The Term Commitment Durations that are supported for a configuration.</summary>
        global::System.TimeSpan[] SupportedTermCommitmentDuration { get; set; }

    }
}