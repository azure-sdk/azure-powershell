// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Represents product details.</summary>
    public partial class ProductDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetails,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal
    {

        /// <summary>Backing field for <see cref="ChildConfigurationDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails[] _childConfigurationDeviceDetail;

        /// <summary>Details of all child configurations that are part of the order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails[] ChildConfigurationDeviceDetail { get => this._childConfigurationDeviceDetail; }

        /// <summary>Backing field for <see cref="DisplayInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo _displayInfo;

        /// <summary>Display details of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo DisplayInfo { get => (this._displayInfo = this._displayInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DisplayInfo()); set => this._displayInfo = value; }

        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName; }

        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName; }

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation _hierarchyInformation;

        /// <summary>Hierarchy of the product which uniquely identifies the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformation()); set => this._hierarchyInformation = value; }

        /// <summary>Represents Model Display Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationIdDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationIdDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationIdDisplayName = value ?? null; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductName = value ?? null; }

        /// <summary>Backing field for <see cref="IdentificationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? _identificationType;

        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get => this._identificationType; }

        /// <summary>Internal Acessors for ChildConfigurationDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ChildConfigurationDeviceDetail { get => this._childConfigurationDeviceDetail; set { {_childConfigurationDeviceDetail = value;} } }

        /// <summary>Internal Acessors for DisplayInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.DisplayInfo { get => (this._displayInfo = this._displayInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DisplayInfo()); set { {_displayInfo = value;} } }

        /// <summary>Internal Acessors for DisplayInfoConfigurationDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName = value; }

        /// <summary>Internal Acessors for DisplayInfoProductFamilyDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName = value; }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformation()); set { {_hierarchyInformation = value;} } }

        /// <summary>Internal Acessors for IdentificationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.IdentificationType { get => this._identificationType; set { {_identificationType = value;} } }

        /// <summary>Internal Acessors for ParentDeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetail { get => (this._parentDeviceDetail = this._parentDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DeviceDetails()); set { {_parentDeviceDetail = value;} } }

        /// <summary>Internal Acessors for ParentDeviceDetailDisplaySerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailDisplaySerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DisplaySerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DisplaySerialNumber = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailManagementResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceId = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailManagementResourceTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceTenantId = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailProvisioningDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailProvisioningDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetail = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailProvisioningSupport</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailProvisioningSupport { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningSupport; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningSupport = value; }

        /// <summary>Internal Acessors for ParentDeviceDetailSerialNumber</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).SerialNumber = value; }

        /// <summary>
        /// Internal Acessors for ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationMessage
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DevicePresenceVerificationMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DevicePresenceVerificationMessage = value; }

        /// <summary>
        /// Internal Acessors for ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationStatus
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DevicePresenceVerificationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DevicePresenceVerificationStatus = value; }

        /// <summary>Internal Acessors for ParentProvisioningDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentProvisioningDetail { get => (this._parentProvisioningDetail = this._parentProvisioningDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ProvisioningDetails()); set { {_parentProvisioningDetail = value;} } }

        /// <summary>Internal Acessors for ParentProvisioningDetailDevicePresenceVerification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDevicePresenceVerificationDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentProvisioningDetailDevicePresenceVerification { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerification; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerification = value; }

        /// <summary>Internal Acessors for ParentProvisioningDetailUniqueDeviceIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentProvisioningDetailUniqueDeviceIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).UniqueDeviceIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).UniqueDeviceIdentifier = value; }

        /// <summary>
        /// Internal Acessors for ParentProvisioningDetailsDevicePresenceVerificationMessage
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentProvisioningDetailsDevicePresenceVerificationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerificationMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerificationMessage = value; }

        /// <summary>Internal Acessors for ParentProvisioningDetailsDevicePresenceVerificationStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ParentProvisioningDetailsDevicePresenceVerificationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerificationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerificationStatus = value; }

        /// <summary>Internal Acessors for ProductDoubleEncryptionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ProductDoubleEncryptionStatus { get => this._productDoubleEncryptionStatus; set { {_productDoubleEncryptionStatus = value;} } }

        /// <summary>Internal Acessors for ProvisioningDetailDevicePresenceVerification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDevicePresenceVerificationDetails Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ProvisioningDetailDevicePresenceVerification { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailDevicePresenceVerification; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailDevicePresenceVerification = value; }

        /// <summary>Internal Acessors for ProvisioningDetailUniqueDeviceIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.ProvisioningDetailUniqueDeviceIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailUniqueDeviceIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailUniqueDeviceIdentifier = value; }

        /// <summary>Internal Acessors for TermCommitmentInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.TermCommitmentInformation { get => (this._termCommitmentInformation = this._termCommitmentInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.TermCommitmentInformation()); set { {_termCommitmentInformation = value;} } }

        /// <summary>Internal Acessors for TermCommitmentInformationPendingDaysForTerm</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.TermCommitmentInformationPendingDaysForTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).PendingDaysForTerm; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).PendingDaysForTerm = value; }

        /// <summary>Internal Acessors for TermCommitmentInformationTermCommitmentTypeDuration</summary>
        global::System.TimeSpan? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProductDetailsInternal.TermCommitmentInformationTermCommitmentTypeDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentTypeDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentTypeDuration = value; }

        /// <summary>Backing field for <see cref="OptInAdditionalConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAdditionalConfiguration[] _optInAdditionalConfiguration;

        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAdditionalConfiguration[] OptInAdditionalConfiguration { get => this._optInAdditionalConfiguration; set => this._optInAdditionalConfiguration = value; }

        /// <summary>Backing field for <see cref="ParentDeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails _parentDeviceDetail;

        /// <summary>Device details of the parent configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails ParentDeviceDetail { get => (this._parentDeviceDetail = this._parentDeviceDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DeviceDetails()); }

        /// <summary>Device serial number to be displayed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailDisplaySerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DisplaySerialNumber; }

        /// <summary>Management Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailManagementResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceId; }

        /// <summary>Management Resource Tenant ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailManagementResourceTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ManagementResourceTenantId; }

        /// <summary>Determining nature of provisioning that the configuration supports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? ParentDeviceDetailProvisioningSupport { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningSupport; }

        /// <summary>Device serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).SerialNumber; }

        /// <summary>Insights on current status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DevicePresenceVerificationMessage; }

        /// <summary>Proof of possession status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).DevicePresenceVerificationStatus; }

        /// <summary>Backing field for <see cref="ParentProvisioningDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetails _parentProvisioningDetail;

        /// <summary>Device Provisioning Details for Parent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetails ParentProvisioningDetail { get => (this._parentProvisioningDetail = this._parentProvisioningDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ProvisioningDetails()); set => this._parentProvisioningDetail = value; }

        /// <summary>Auto Provisioning Details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus? ParentProvisioningDetailAutoProvisioningStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).AutoProvisioningStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).AutoProvisioningStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus)""); }

        /// <summary>Management Resource ArmId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailManagementResourceArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ManagementResourceArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ManagementResourceArmId = value ?? null; }

        /// <summary>Provisioning Resource Arm ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailProvisioningArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ProvisioningArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ProvisioningArmId = value ?? null; }

        /// <summary>Provisioning End Point.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailProvisioningEndPoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ProvisioningEndPoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ProvisioningEndPoint = value ?? null; }

        /// <summary>Quantity of the devices.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public int? ParentProvisioningDetailQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).Quantity = value ?? default(int); }

        /// <summary>Arc Enabled Resource Arm id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailReadyToConnectArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ReadyToConnectArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).ReadyToConnectArmId = value ?? null; }

        /// <summary>Serial Number for the Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).SerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).SerialNumber = value ?? null; }

        /// <summary>Unique Identity for a Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailUniqueDeviceIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).UniqueDeviceIdentifier; }

        /// <summary>Vendor Name for the Device , (for 1P devices - Microsoft).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailVendorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).VendorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).VendorName = value ?? null; }

        /// <summary>Insights on current status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ParentProvisioningDetailsDevicePresenceVerificationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerificationMessage; }

        /// <summary>Proof of possession status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? ParentProvisioningDetailsDevicePresenceVerificationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetailsInternal)ParentProvisioningDetail).DevicePresenceVerificationStatus; }

        /// <summary>Backing field for <see cref="ProductDoubleEncryptionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? _productDoubleEncryptionStatus;

        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDoubleEncryptionStatus { get => this._productDoubleEncryptionStatus; }

        /// <summary>Auto Provisioning Details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus? ProvisioningDetailAutoProvisioningStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailAutoProvisioningStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailAutoProvisioningStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus)""); }

        /// <summary>Management Resource ArmId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailManagementResourceArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailManagementResourceArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailManagementResourceArmId = value ?? null; }

        /// <summary>Provisioning Resource Arm ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailProvisioningArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailProvisioningArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailProvisioningArmId = value ?? null; }

        /// <summary>Provisioning End Point.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailProvisioningEndPoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailProvisioningEndPoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailProvisioningEndPoint = value ?? null; }

        /// <summary>Quantity of the devices.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public int? ProvisioningDetailQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailQuantity = value ?? default(int); }

        /// <summary>Arc Enabled Resource Arm id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailReadyToConnectArmId { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailReadyToConnectArmId; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailReadyToConnectArmId = value ?? null; }

        /// <summary>Serial Number for the Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailSerialNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailSerialNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailSerialNumber = value ?? null; }

        /// <summary>Unique Identity for a Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailUniqueDeviceIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailUniqueDeviceIdentifier; }

        /// <summary>Vendor Name for the Device , (for 1P devices - Microsoft).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string ProvisioningDetailVendorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailVendorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetailsInternal)ParentDeviceDetail).ProvisioningDetailVendorName = value ?? null; }

        /// <summary>Backing field for <see cref="TermCommitmentInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation _termCommitmentInformation;

        /// <summary>Term Commitment Information of the Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation TermCommitmentInformation { get => (this._termCommitmentInformation = this._termCommitmentInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.TermCommitmentInformation()); }

        /// <summary>Number of Days Pending for Term Commitment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public int? TermCommitmentInformationPendingDaysForTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).PendingDaysForTerm; }

        /// <summary>Term Commitment Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType? TermCommitmentInformationTermCommitmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType)""); }

        /// <summary>Term Commitment Duration. Currently Supporting P365D, P1095D</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? TermCommitmentInformationTermCommitmentTypeDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentTypeDuration; }

        /// <summary>Creates an new <see cref="ProductDetails" /> instance.</summary>
        public ProductDetails()
        {

        }
    }
    /// Represents product details.
    public partial interface IProductDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>Details of all child configurations that are part of the order item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details of all child configurations that are part of the order item.",
        SerializedName = @"childConfigurationDeviceDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails[] ChildConfigurationDeviceDetail { get;  }
        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Configuration display name.",
        SerializedName = @"configurationDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoConfigurationDisplayName { get;  }
        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product family display name.",
        SerializedName = @"productFamilyDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoProductFamilyDisplayName { get;  }
        /// <summary>Represents Model Display Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents Model Display Name.",
        SerializedName = @"configurationIdDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationIdDisplayName { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identification type of the configuration.",
        SerializedName = @"identificationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get;  }
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of additional configurations customer wants in the order item apart from the ones included in the base configuration.",
        SerializedName = @"optInAdditionalConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAdditionalConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAdditionalConfiguration[] OptInAdditionalConfiguration { get; set; }
        /// <summary>Device serial number to be displayed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device serial number to be displayed.",
        SerializedName = @"displaySerialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailDisplaySerialNumber { get;  }
        /// <summary>Management Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Management Resource Id.",
        SerializedName = @"managementResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailManagementResourceId { get;  }
        /// <summary>Management Resource Tenant ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Management Resource Tenant ID.",
        SerializedName = @"managementResourceTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailManagementResourceTenantId { get;  }
        /// <summary>Determining nature of provisioning that the configuration supports.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Determining nature of provisioning that the configuration supports.",
        SerializedName = @"provisioningSupport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? ParentDeviceDetailProvisioningSupport { get;  }
        /// <summary>Device serial number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Device serial number.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailSerialNumber { get;  }
        /// <summary>Insights on current status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Insights on current status.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationMessage { get;  }
        /// <summary>Proof of possession status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Proof of possession status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationStatus { get;  }
        /// <summary>Auto Provisioning Details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Auto Provisioning Details.",
        SerializedName = @"autoProvisioningStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus? ParentProvisioningDetailAutoProvisioningStatus { get; set; }
        /// <summary>Management Resource ArmId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Management Resource ArmId.",
        SerializedName = @"managementResourceArmId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailManagementResourceArmId { get; set; }
        /// <summary>Provisioning Resource Arm ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning Resource Arm ID.",
        SerializedName = @"provisioningArmId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailProvisioningArmId { get; set; }
        /// <summary>Provisioning End Point.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning End Point.",
        SerializedName = @"provisioningEndPoint",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailProvisioningEndPoint { get; set; }
        /// <summary>Quantity of the devices.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity of the devices.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? ParentProvisioningDetailQuantity { get; set; }
        /// <summary>Arc Enabled Resource Arm id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Arc Enabled Resource Arm id.",
        SerializedName = @"readyToConnectArmId",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailReadyToConnectArmId { get; set; }
        /// <summary>Serial Number for the Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Serial Number for the Device.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailSerialNumber { get; set; }
        /// <summary>Unique Identity for a Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique Identity for a Device.",
        SerializedName = @"uniqueDeviceIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailUniqueDeviceIdentifier { get;  }
        /// <summary>Vendor Name for the Device , (for 1P devices - Microsoft).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vendor Name for the Device , (for 1P devices - Microsoft).",
        SerializedName = @"vendorName",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailVendorName { get; set; }
        /// <summary>Insights on current status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Insights on current status.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ParentProvisioningDetailsDevicePresenceVerificationMessage { get;  }
        /// <summary>Proof of possession status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Proof of possession status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? ParentProvisioningDetailsDevicePresenceVerificationStatus { get;  }
        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Double encryption status of the configuration. Read-only field.",
        SerializedName = @"productDoubleEncryptionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDoubleEncryptionStatus { get;  }
        /// <summary>Auto Provisioning Details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Auto Provisioning Details.",
        SerializedName = @"autoProvisioningStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus? ProvisioningDetailAutoProvisioningStatus { get; set; }
        /// <summary>Management Resource ArmId.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Management Resource ArmId.",
        SerializedName = @"managementResourceArmId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailManagementResourceArmId { get; set; }
        /// <summary>Provisioning Resource Arm ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning Resource Arm ID.",
        SerializedName = @"provisioningArmId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailProvisioningArmId { get; set; }
        /// <summary>Provisioning End Point.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Provisioning End Point.",
        SerializedName = @"provisioningEndPoint",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailProvisioningEndPoint { get; set; }
        /// <summary>Quantity of the devices.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quantity of the devices.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisioningDetailQuantity { get; set; }
        /// <summary>Arc Enabled Resource Arm id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Arc Enabled Resource Arm id.",
        SerializedName = @"readyToConnectArmId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailReadyToConnectArmId { get; set; }
        /// <summary>Serial Number for the Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Serial Number for the Device.",
        SerializedName = @"serialNumber",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailSerialNumber { get; set; }
        /// <summary>Unique Identity for a Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique Identity for a Device.",
        SerializedName = @"uniqueDeviceIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailUniqueDeviceIdentifier { get;  }
        /// <summary>Vendor Name for the Device , (for 1P devices - Microsoft).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Vendor Name for the Device , (for 1P devices - Microsoft).",
        SerializedName = @"vendorName",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningDetailVendorName { get; set; }
        /// <summary>Number of Days Pending for Term Commitment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of Days Pending for Term Commitment",
        SerializedName = @"pendingDaysForTerm",
        PossibleTypes = new [] { typeof(int) })]
        int? TermCommitmentInformationPendingDaysForTerm { get;  }
        /// <summary>Term Commitment Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Term Commitment Type",
        SerializedName = @"termCommitmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType? TermCommitmentInformationTermCommitmentType { get; set; }
        /// <summary>Term Commitment Duration. Currently Supporting P365D, P1095D</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Term Commitment Duration. Currently Supporting P365D, P1095D",
        SerializedName = @"termCommitmentTypeDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? TermCommitmentInformationTermCommitmentTypeDuration { get;  }

    }
    /// Represents product details.
    internal partial interface IProductDetailsInternal

    {
        /// <summary>Details of all child configurations that are part of the order item.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails[] ChildConfigurationDeviceDetail { get; set; }
        /// <summary>Display details of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo DisplayInfo { get; set; }
        /// <summary>Configuration display name.</summary>
        string DisplayInfoConfigurationDisplayName { get; set; }
        /// <summary>Product family display name.</summary>
        string DisplayInfoProductFamilyDisplayName { get; set; }
        /// <summary>Hierarchy of the product which uniquely identifies the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents Model Display Name.</summary>
        string HierarchyInformationConfigurationIdDisplayName { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get; set; }
        /// <summary>
        /// List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAdditionalConfiguration[] OptInAdditionalConfiguration { get; set; }
        /// <summary>Device details of the parent configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails ParentDeviceDetail { get; set; }
        /// <summary>Device serial number to be displayed.</summary>
        string ParentDeviceDetailDisplaySerialNumber { get; set; }
        /// <summary>Management Resource Id.</summary>
        string ParentDeviceDetailManagementResourceId { get; set; }
        /// <summary>Management Resource Tenant ID.</summary>
        string ParentDeviceDetailManagementResourceTenantId { get; set; }
        /// <summary>Provisioning Details for the device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetails ParentDeviceDetailProvisioningDetail { get; set; }
        /// <summary>Determining nature of provisioning that the configuration supports.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.ProvisioningSupport? ParentDeviceDetailProvisioningSupport { get; set; }
        /// <summary>Device serial number.</summary>
        string ParentDeviceDetailSerialNumber { get; set; }
        /// <summary>Insights on current status.</summary>
        string ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationMessage { get; set; }
        /// <summary>Proof of possession status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? ParentDeviceDetailsProvisioningDetailsDevicePresenceVerificationStatus { get; set; }
        /// <summary>Device Provisioning Details for Parent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IProvisioningDetails ParentProvisioningDetail { get; set; }
        /// <summary>Auto Provisioning Details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus? ParentProvisioningDetailAutoProvisioningStatus { get; set; }
        /// <summary>Proof of possession details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDevicePresenceVerificationDetails ParentProvisioningDetailDevicePresenceVerification { get; set; }
        /// <summary>Management Resource ArmId.</summary>
        string ParentProvisioningDetailManagementResourceArmId { get; set; }
        /// <summary>Provisioning Resource Arm ID.</summary>
        string ParentProvisioningDetailProvisioningArmId { get; set; }
        /// <summary>Provisioning End Point.</summary>
        string ParentProvisioningDetailProvisioningEndPoint { get; set; }
        /// <summary>Quantity of the devices.</summary>
        int? ParentProvisioningDetailQuantity { get; set; }
        /// <summary>Arc Enabled Resource Arm id.</summary>
        string ParentProvisioningDetailReadyToConnectArmId { get; set; }
        /// <summary>Serial Number for the Device.</summary>
        string ParentProvisioningDetailSerialNumber { get; set; }
        /// <summary>Unique Identity for a Device.</summary>
        string ParentProvisioningDetailUniqueDeviceIdentifier { get; set; }
        /// <summary>Vendor Name for the Device , (for 1P devices - Microsoft).</summary>
        string ParentProvisioningDetailVendorName { get; set; }
        /// <summary>Insights on current status.</summary>
        string ParentProvisioningDetailsDevicePresenceVerificationMessage { get; set; }
        /// <summary>Proof of possession status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DevicePresenceVerificationStatus? ParentProvisioningDetailsDevicePresenceVerificationStatus { get; set; }
        /// <summary>Double encryption status of the configuration. Read-only field.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.DoubleEncryptionStatus? ProductDoubleEncryptionStatus { get; set; }
        /// <summary>Auto Provisioning Details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.AutoProvisioningStatus? ProvisioningDetailAutoProvisioningStatus { get; set; }
        /// <summary>Proof of possession details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDevicePresenceVerificationDetails ProvisioningDetailDevicePresenceVerification { get; set; }
        /// <summary>Management Resource ArmId.</summary>
        string ProvisioningDetailManagementResourceArmId { get; set; }
        /// <summary>Provisioning Resource Arm ID.</summary>
        string ProvisioningDetailProvisioningArmId { get; set; }
        /// <summary>Provisioning End Point.</summary>
        string ProvisioningDetailProvisioningEndPoint { get; set; }
        /// <summary>Quantity of the devices.</summary>
        int? ProvisioningDetailQuantity { get; set; }
        /// <summary>Arc Enabled Resource Arm id.</summary>
        string ProvisioningDetailReadyToConnectArmId { get; set; }
        /// <summary>Serial Number for the Device.</summary>
        string ProvisioningDetailSerialNumber { get; set; }
        /// <summary>Unique Identity for a Device.</summary>
        string ProvisioningDetailUniqueDeviceIdentifier { get; set; }
        /// <summary>Vendor Name for the Device , (for 1P devices - Microsoft).</summary>
        string ProvisioningDetailVendorName { get; set; }
        /// <summary>Term Commitment Information of the Device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation TermCommitmentInformation { get; set; }
        /// <summary>Number of Days Pending for Term Commitment</summary>
        int? TermCommitmentInformationPendingDaysForTerm { get; set; }
        /// <summary>Term Commitment Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType? TermCommitmentInformationTermCommitmentType { get; set; }
        /// <summary>Term Commitment Duration. Currently Supporting P365D, P1095D</summary>
        global::System.TimeSpan? TermCommitmentInformationTermCommitmentTypeDuration { get; set; }

    }
}