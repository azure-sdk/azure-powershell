// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Extensions;

    /// <summary>Device details for configuration.</summary>
    public partial class ConfigurationDeviceDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetails,
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal
    {

        /// <summary>Backing field for <see cref="DeviceDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[] _deviceDetail;

        /// <summary>List of device details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[] DeviceDetail { get => this._deviceDetail; }

        /// <summary>Backing field for <see cref="DisplayInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo _displayInfo;

        /// <summary>Display details of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo DisplayInfo { get => (this._displayInfo = this._displayInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DisplayInfo()); set => this._displayInfo = value; }

        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName; }

        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName; }

        /// <summary>Backing field for <see cref="HierarchyInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation _hierarchyInformation;

        /// <summary>Hierarchy of the product which uniquely identifies the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformation()); }

        /// <summary>Represents Model Display Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationIdDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationIdDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationIdDisplayName = value ?? null; }

        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationConfigurationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ConfigurationName = value ?? null; }

        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductFamilyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductFamilyName = value ?? null; }

        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductLineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductLineName = value ?? null; }

        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public string HierarchyInformationProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformationInternal)HierarchyInformation).ProductName = value ?? null; }

        /// <summary>Backing field for <see cref="IdentificationType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? _identificationType;

        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get => this._identificationType; }

        /// <summary>Internal Acessors for DeviceDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[] Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.DeviceDetail { get => this._deviceDetail; set { {_deviceDetail = value;} } }

        /// <summary>Internal Acessors for DisplayInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.DisplayInfo { get => (this._displayInfo = this._displayInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.DisplayInfo()); set { {_displayInfo = value;} } }

        /// <summary>Internal Acessors for DisplayInfoConfigurationDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.DisplayInfoConfigurationDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ConfigurationDisplayName = value; }

        /// <summary>Internal Acessors for DisplayInfoProductFamilyDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.DisplayInfoProductFamilyDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfoInternal)DisplayInfo).ProductFamilyDisplayName = value; }

        /// <summary>Internal Acessors for HierarchyInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.HierarchyInformation { get => (this._hierarchyInformation = this._hierarchyInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.HierarchyInformation()); set { {_hierarchyInformation = value;} } }

        /// <summary>Internal Acessors for IdentificationType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.IdentificationType { get => this._identificationType; set { {_identificationType = value;} } }

        /// <summary>Internal Acessors for Quantity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.Quantity { get => this._quantity; set { {_quantity = value;} } }

        /// <summary>Internal Acessors for TermCommitmentInformation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.TermCommitmentInformation { get => (this._termCommitmentInformation = this._termCommitmentInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.TermCommitmentInformation()); set { {_termCommitmentInformation = value;} } }

        /// <summary>Internal Acessors for TermCommitmentInformationPendingDaysForTerm</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.TermCommitmentInformationPendingDaysForTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).PendingDaysForTerm; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).PendingDaysForTerm = value; }

        /// <summary>Internal Acessors for TermCommitmentInformationTermCommitmentTypeDuration</summary>
        global::System.TimeSpan? Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IConfigurationDeviceDetailsInternal.TermCommitmentInformationTermCommitmentTypeDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentTypeDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentTypeDuration = value; }

        /// <summary>Backing field for <see cref="Quantity" /> property.</summary>
        private int? _quantity;

        /// <summary>Quantity of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        public int? Quantity { get => this._quantity; }

        /// <summary>Backing field for <see cref="TermCommitmentInformation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation _termCommitmentInformation;

        /// <summary>Term Commitment Information of the Device.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation TermCommitmentInformation { get => (this._termCommitmentInformation = this._termCommitmentInformation ?? new Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.TermCommitmentInformation()); }

        /// <summary>Number of Days Pending for Term Commitment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public int? TermCommitmentInformationPendingDaysForTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).PendingDaysForTerm; }

        /// <summary>Term Commitment Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType? TermCommitmentInformationTermCommitmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType)""); }

        /// <summary>Term Commitment Duration. Currently Supporting P365D, P1095D</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Origin(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? TermCommitmentInformationTermCommitmentTypeDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformationInternal)TermCommitmentInformation).TermCommitmentTypeDuration; }

        /// <summary>Creates an new <see cref="ConfigurationDeviceDetails" /> instance.</summary>
        public ConfigurationDeviceDetails()
        {

        }
    }
    /// Device details for configuration.
    public partial interface IConfigurationDeviceDetails :
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.IJsonSerializable
    {
        /// <summary>List of device details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of device details.",
        SerializedName = @"deviceDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[] DeviceDetail { get;  }
        /// <summary>Configuration display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Configuration display name.",
        SerializedName = @"configurationDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoConfigurationDisplayName { get;  }
        /// <summary>Product family display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Product family display name.",
        SerializedName = @"productFamilyDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayInfoProductFamilyDisplayName { get;  }
        /// <summary>Represents Model Display Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents Model Display Name.",
        SerializedName = @"configurationIdDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationIdDisplayName { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents configuration name that uniquely identifies configuration.",
        SerializedName = @"configurationName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product family name that uniquely identifies product family.",
        SerializedName = @"productFamilyName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product line name that uniquely identifies product line.",
        SerializedName = @"productLineName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents product name that uniquely identifies product.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string HierarchyInformationProductName { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Identification type of the configuration.",
        SerializedName = @"identificationType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get;  }
        /// <summary>Quantity of the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Quantity of the product.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(int) })]
        int? Quantity { get;  }
        /// <summary>Number of Days Pending for Term Commitment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Number of Days Pending for Term Commitment",
        SerializedName = @"pendingDaysForTerm",
        PossibleTypes = new [] { typeof(int) })]
        int? TermCommitmentInformationPendingDaysForTerm { get;  }
        /// <summary>Term Commitment Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Term Commitment Type",
        SerializedName = @"termCommitmentType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType) })]
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType? TermCommitmentInformationTermCommitmentType { get; set; }
        /// <summary>Term Commitment Duration. Currently Supporting P365D, P1095D</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Term Commitment Duration. Currently Supporting P365D, P1095D",
        SerializedName = @"termCommitmentTypeDuration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? TermCommitmentInformationTermCommitmentTypeDuration { get;  }

    }
    /// Device details for configuration.
    internal partial interface IConfigurationDeviceDetailsInternal

    {
        /// <summary>List of device details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDeviceDetails[] DeviceDetail { get; set; }
        /// <summary>Display details of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IDisplayInfo DisplayInfo { get; set; }
        /// <summary>Configuration display name.</summary>
        string DisplayInfoConfigurationDisplayName { get; set; }
        /// <summary>Product family display name.</summary>
        string DisplayInfoProductFamilyDisplayName { get; set; }
        /// <summary>Hierarchy of the product which uniquely identifies the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IHierarchyInformation HierarchyInformation { get; set; }
        /// <summary>Represents Model Display Name.</summary>
        string HierarchyInformationConfigurationIdDisplayName { get; set; }
        /// <summary>Represents configuration name that uniquely identifies configuration.</summary>
        string HierarchyInformationConfigurationName { get; set; }
        /// <summary>Represents product family name that uniquely identifies product family.</summary>
        string HierarchyInformationProductFamilyName { get; set; }
        /// <summary>Represents product line name that uniquely identifies product line.</summary>
        string HierarchyInformationProductLineName { get; set; }
        /// <summary>Represents product name that uniquely identifies product.</summary>
        string HierarchyInformationProductName { get; set; }
        /// <summary>Identification type of the configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.IdentificationType? IdentificationType { get; set; }
        /// <summary>Quantity of the product.</summary>
        int? Quantity { get; set; }
        /// <summary>Term Commitment Information of the Device.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.ITermCommitmentInformation TermCommitmentInformation { get; set; }
        /// <summary>Number of Days Pending for Term Commitment</summary>
        int? TermCommitmentInformationPendingDaysForTerm { get; set; }
        /// <summary>Term Commitment Type</summary>
        Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Support.TermCommitmentType? TermCommitmentInformationTermCommitmentType { get; set; }
        /// <summary>Term Commitment Duration. Currently Supporting P365D, P1095D</summary>
        global::System.TimeSpan? TermCommitmentInformationTermCommitmentTypeDuration { get; set; }

    }
}