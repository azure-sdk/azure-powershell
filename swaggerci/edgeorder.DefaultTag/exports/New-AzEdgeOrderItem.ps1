
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an order item.
Existing order item cannot be updated with this api and should instead be updated with the Update order item\nAPI.
.Description
Create an order item.
Existing order item cannot be updated with this api and should instead be updated with the Update order item\nAPI.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IOrderItemResource
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ADDRESSDETAIL <IAddressDetails>: Represents shipping and return address for order item.
  [ForwardAddressClassification <AddressClassification?>]: Type of address based on its usage context.
  [ForwardAddressContactDetailsContactName <String>]: Contact name of the person.
  [ForwardAddressContactDetailsEmailList <String[]>]: List of Email-ids to be notified about job progress.
  [ForwardAddressContactDetailsMobile <String>]: Mobile number of the contact person.
  [ForwardAddressContactDetailsPhone <String>]: Phone number of the contact person.
  [ForwardAddressContactDetailsPhoneExtension <String>]: Phone extension number of the contact person.
  [ForwardAddressShippingAddressCity <String>]: Name of the City.
  [ForwardAddressShippingAddressCompanyName <String>]: Name of the company.
  [ForwardAddressShippingAddressCountry <String>]: Name of the Country.
  [ForwardAddressShippingAddressPostalCode <String>]: Postal code.
  [ForwardAddressShippingAddressStateOrProvince <String>]: Name of the State or Province.
  [ForwardAddressShippingAddressStreetAddress1 <String>]: Street Address line 1.
  [ForwardAddressShippingAddressStreetAddress2 <String>]: Street Address line 2.
  [ForwardAddressShippingAddressStreetAddress3 <String>]: Street Address line 3.
  [ForwardAddressShippingAddressType <AddressType?>]: Type of address.
  [ForwardAddressShippingAddressZipExtendedCode <String>]: Extended Zip Code.
  [ReturnAddressClassification <AddressClassification?>]: Type of address based on its usage context.
  [ReturnAddressContactDetailsContactName <String>]: Contact name of the person.
  [ReturnAddressContactDetailsEmailList <String[]>]: List of Email-ids to be notified about job progress.
  [ReturnAddressContactDetailsMobile <String>]: Mobile number of the contact person.
  [ReturnAddressContactDetailsPhone <String>]: Phone number of the contact person.
  [ReturnAddressContactDetailsPhoneExtension <String>]: Phone extension number of the contact person.
  [ReturnAddressShippingAddressCity <String>]: Name of the City.
  [ReturnAddressShippingAddressCompanyName <String>]: Name of the company.
  [ReturnAddressShippingAddressCountry <String>]: Name of the Country.
  [ReturnAddressShippingAddressPostalCode <String>]: Postal code.
  [ReturnAddressShippingAddressStateOrProvince <String>]: Name of the State or Province.
  [ReturnAddressShippingAddressStreetAddress1 <String>]: Street Address line 1.
  [ReturnAddressShippingAddressStreetAddress2 <String>]: Street Address line 2.
  [ReturnAddressShippingAddressStreetAddress3 <String>]: Street Address line 3.
  [ReturnAddressShippingAddressType <AddressType?>]: Type of address.
  [ReturnAddressShippingAddressZipExtendedCode <String>]: Extended Zip Code.

ORDERITEMDETAIL <IOrderItemDetails>: Represents order item details.
  OrderItemType <OrderItemType>: Order item type.
  ProductDetail <IProductDetails>: Represents product details.
    [HierarchyInformationConfigurationIdDisplayName <String>]: Represents Model Display Name.
    [HierarchyInformationConfigurationName <String>]: Represents configuration name that uniquely identifies configuration.
    [HierarchyInformationProductFamilyName <String>]: Represents product family name that uniquely identifies product family.
    [HierarchyInformationProductLineName <String>]: Represents product line name that uniquely identifies product line.
    [HierarchyInformationProductName <String>]: Represents product name that uniquely identifies product.
    [OptInAdditionalConfiguration <IAdditionalConfiguration[]>]: List of additional configurations customer wants in the order item apart from the ones included in the base configuration.
      Quantity <Int32>: Quantity of the product.
      [HierarchyInformationConfigurationIdDisplayName <String>]: Represents Model Display Name.
      [HierarchyInformationConfigurationName <String>]: Represents configuration name that uniquely identifies configuration.
      [HierarchyInformationProductFamilyName <String>]: Represents product family name that uniquely identifies product family.
      [HierarchyInformationProductLineName <String>]: Represents product line name that uniquely identifies product line.
      [HierarchyInformationProductName <String>]: Represents product name that uniquely identifies product.
      [ProvisioningDetail <IProvisioningDetails[]>]: List Provisioning Details for Devices in Additional Config.
        [AutoProvisioningStatus <AutoProvisioningStatus?>]: Auto Provisioning Details.
        [ManagementResourceArmId <String>]: Management Resource ArmId.
        [ProvisioningArmId <String>]: Provisioning Resource Arm ID.
        [ProvisioningEndPoint <String>]: Provisioning End Point.
        [Quantity <Int32?>]: Quantity of the devices.
        [ReadyToConnectArmId <String>]: Arc Enabled Resource Arm id.
        [SerialNumber <String>]: Serial Number for the Device.
        [VendorName <String>]: Vendor Name for the Device , (for 1P devices - Microsoft).
    [ParentProvisioningDetailAutoProvisioningStatus <AutoProvisioningStatus?>]: Auto Provisioning Details.
    [ParentProvisioningDetailManagementResourceArmId <String>]: Management Resource ArmId.
    [ParentProvisioningDetailProvisioningArmId <String>]: Provisioning Resource Arm ID.
    [ParentProvisioningDetailProvisioningEndPoint <String>]: Provisioning End Point.
    [ParentProvisioningDetailQuantity <Int32?>]: Quantity of the devices.
    [ParentProvisioningDetailReadyToConnectArmId <String>]: Arc Enabled Resource Arm id.
    [ParentProvisioningDetailSerialNumber <String>]: Serial Number for the Device.
    [ParentProvisioningDetailVendorName <String>]: Vendor Name for the Device , (for 1P devices - Microsoft).
    [ProvisioningDetailAutoProvisioningStatus <AutoProvisioningStatus?>]: Auto Provisioning Details.
    [ProvisioningDetailManagementResourceArmId <String>]: Management Resource ArmId.
    [ProvisioningDetailProvisioningArmId <String>]: Provisioning Resource Arm ID.
    [ProvisioningDetailProvisioningEndPoint <String>]: Provisioning End Point.
    [ProvisioningDetailQuantity <Int32?>]: Quantity of the devices.
    [ProvisioningDetailReadyToConnectArmId <String>]: Arc Enabled Resource Arm id.
    [ProvisioningDetailSerialNumber <String>]: Serial Number for the Device.
    [ProvisioningDetailVendorName <String>]: Vendor Name for the Device , (for 1P devices - Microsoft).
    [TermCommitmentInformationTermCommitmentType <TermCommitmentType?>]: Term Commitment Type
  [EncryptionPreferenceDoubleEncryptionStatus <DoubleEncryptionStatus?>]: Double encryption status as entered by the customer. It is compulsory to give this parameter if the 'Deny' or 'Disabled' policy is configured.
  [ManagementResourcePreferencePreferredManagementResourceId <String>]: Customer preferred Management resource ARM ID.
  [NotificationEmailList <String[]>]: Additional notification email list.
  [OrderItemMode <OrderMode?>]: Defines the mode of the Order item.
  [PreferenceNotificationPreference <INotificationPreference[]>]: Notification preferences.
    SendNotification <Boolean>: Notification is required or not.
    StageName <NotificationStageName>: Name of the stage.
  [SiteDetailSiteId <String>]: Unique Id, Identifying A Site.
  [TermCommitmentPreferencePreferredTermCommitmentDuration <TimeSpan?>]: Customer preferred Term Duration.
  [TermCommitmentPreferencePreferredTermCommitmentType <TermCommitmentType?>]: Term Commitment Type
  [TransportPreferencePreferredShipmentType <TransportShipmentTypes?>]: Indicates Shipment Logistics type that the customer preferred.
.Link
https://learn.microsoft.com/powershell/module/az.edgeorder/new-azedgeorderitem
#>
function New-AzEdgeOrderItem {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IOrderItemResource])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Alias('OrderItemName')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Path')]
    [System.String]
    # The name of the order item.
    ${Name},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    # The value must be an UUID.
    ${SubscriptionId},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [System.String]
    # The geo-location where the resource lives
    ${Location},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [System.String]
    # Id of the order to which order item belongs to.
    ${OrderId},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IOrderItemDetails]
    # Represents order item details.
    # To construct, see NOTES section for ORDERITEMDETAIL properties and create a hash table.
    ${OrderItemDetail},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api20240201.IAddressDetails]
    # Represents shipping and return address for order item.
    # To construct, see NOTES section for ADDRESSDETAIL properties and create a hash table.
    ${AddressDetail},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [System.String]
    # Identity type
    ${IdentityType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api50.IResourceIdentityUserAssignedIdentities]))]
    [System.Collections.Hashtable]
    # User Assigned Identities
    ${IdentityUserAssignedIdentity},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.Info(PossibleTypes=([Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Models.Api50.ITrackedResourceTags]))]
    [System.Collections.Hashtable]
    # Resource tags.
    ${Tag},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            CreateExpanded = 'Az.EdgeOrder.private\New-AzEdgeOrderItem_CreateExpanded';
        }
        if (('CreateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $testPlayback = $false
            $PSBoundParameters['HttpPipelinePrepend'] | Foreach-Object { if ($_) { $testPlayback = $testPlayback -or ('Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.PipelineMock' -eq $_.Target.GetType().FullName -and 'Playback' -eq $_.Target.Mode) } }
            if ($testPlayback) {
                $PSBoundParameters['SubscriptionId'] = . (Join-Path $PSScriptRoot '..' 'utils' 'Get-SubscriptionIdTestSafe.ps1')
            } else {
                $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
            }
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.EdgeOrder.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
