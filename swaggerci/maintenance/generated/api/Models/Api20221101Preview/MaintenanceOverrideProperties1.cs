// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Extensions;

    /// <summary>Definition of a MaintenanceOverrideProperties</summary>
    public partial class MaintenanceOverrideProperties1 :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties1,
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties1Internal
    {

        /// <summary>Backing field for <see cref="EndDateTime" /> property.</summary>
        private global::System.DateTime? _endDateTime;

        /// <summary>
        /// Effective end date of the maintenance override window in YYYY-MM-DD hh:mm format. The window will be created in the time
        /// zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date.
        /// If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public global::System.DateTime? EndDateTime { get => this._endDateTime; set => this._endDateTime = value; }

        /// <summary>Backing field for <see cref="OverrideProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties _overrideProperty;

        /// <summary>Gets or sets overrideProperties of the maintenanceConfiguration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties OverrideProperty { get => (this._overrideProperty = this._overrideProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.MaintenanceOverrideProperties()); set => this._overrideProperty = value; }

        /// <summary>Backing field for <see cref="StartDateTime" /> property.</summary>
        private global::System.DateTime? _startDateTime;

        /// <summary>
        /// Effective start date of the maintenance override window in YYYY-MM-DD hh:mm format. The start date can be set to either
        /// the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings
        /// according to that time zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public global::System.DateTime? StartDateTime { get => this._startDateTime; set => this._startDateTime = value; }

        /// <summary>Backing field for <see cref="TimeZone" /> property.</summary>
        private string _timeZone;

        /// <summary>
        /// Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
        /// Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Origin(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.PropertyOrigin.Owned)]
        public string TimeZone { get => this._timeZone; set => this._timeZone = value; }

        /// <summary>Creates an new <see cref="MaintenanceOverrideProperties1" /> instance.</summary>
        public MaintenanceOverrideProperties1()
        {

        }
    }
    /// Definition of a MaintenanceOverrideProperties
    public partial interface IMaintenanceOverrideProperties1 :
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Effective end date of the maintenance override window in YYYY-MM-DD hh:mm format. The window will be created in the time
        /// zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date.
        /// If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Effective end date of the maintenance override window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
        SerializedName = @"endDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndDateTime { get; set; }
        /// <summary>Gets or sets overrideProperties of the maintenanceConfiguration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets overrideProperties of the maintenanceConfiguration",
        SerializedName = @"overrideProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties OverrideProperty { get; set; }
        /// <summary>
        /// Effective start date of the maintenance override window in YYYY-MM-DD hh:mm format. The start date can be set to either
        /// the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings
        /// according to that time zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Effective start date of the maintenance override window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
        SerializedName = @"startDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartDateTime { get; set; }
        /// <summary>
        /// Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
        /// Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZone { get; set; }

    }
    /// Definition of a MaintenanceOverrideProperties
    internal partial interface IMaintenanceOverrideProperties1Internal

    {
        /// <summary>
        /// Effective end date of the maintenance override window in YYYY-MM-DD hh:mm format. The window will be created in the time
        /// zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date.
        /// If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.
        /// </summary>
        global::System.DateTime? EndDateTime { get; set; }
        /// <summary>Gets or sets overrideProperties of the maintenanceConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Maintenance.Models.Api20221101Preview.IMaintenanceOverrideProperties OverrideProperty { get; set; }
        /// <summary>
        /// Effective start date of the maintenance override window in YYYY-MM-DD hh:mm format. The start date can be set to either
        /// the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings
        /// according to that time zone.
        /// </summary>
        global::System.DateTime? StartDateTime { get; set; }
        /// <summary>
        /// Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.
        /// Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.
        /// </summary>
        string TimeZone { get; set; }

    }
}