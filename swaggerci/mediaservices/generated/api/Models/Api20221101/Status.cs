// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    public partial class Status :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IStatus,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IStatusInternal
    {

        /// <summary>Backing field for <see cref="HealthDescription" /> property.</summary>
        private string[] _healthDescription;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string[] HealthDescription { get => this._healthDescription; set => this._healthDescription = value; }

        /// <summary>Backing field for <see cref="HealthStatus" /> property.</summary>
        private string _healthStatus;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string HealthStatus { get => this._healthStatus; set => this._healthStatus = value; }

        /// <summary>Backing field for <see cref="Ingestion" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestion _ingestion;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestion Ingestion { get => (this._ingestion = this._ingestion ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.Ingestion()); set => this._ingestion = value; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IngestionBeginTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).BeginTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).BeginTime = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IngestionEndReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).EndReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).EndReason = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IngestionEndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).EndTime = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestInterruption[] IngestionIngestInterruption { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).IngestInterruption; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).IngestInterruption = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IngestionStreamName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).StreamName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestionInternal)Ingestion).StreamName = value ?? null; }

        /// <summary>Backing field for <see cref="LastUpdatedTime" /> property.</summary>
        private string _lastUpdatedTime;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string LastUpdatedTime { get => this._lastUpdatedTime; set => this._lastUpdatedTime = value; }

        /// <summary>Internal Acessors for Ingestion</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestion Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IStatusInternal.Ingestion { get => (this._ingestion = this._ingestion ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.Ingestion()); set { {_ingestion = value;} } }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private string _state;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="TrackStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ITrackStatus[] _trackStatus;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ITrackStatus[] TrackStatus { get => this._trackStatus; set => this._trackStatus = value; }

        /// <summary>Creates an new <see cref="Status" /> instance.</summary>
        public Status()
        {

        }
    }
    public partial interface IStatus :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"healthDescription",
        PossibleTypes = new [] { typeof(string) })]
        string[] HealthDescription { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"healthStatus",
        PossibleTypes = new [] { typeof(string) })]
        string HealthStatus { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"beginTime",
        PossibleTypes = new [] { typeof(string) })]
        string IngestionBeginTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"endReason",
        PossibleTypes = new [] { typeof(string) })]
        string IngestionEndReason { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(string) })]
        string IngestionEndTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"ingestInterruptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestInterruption) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestInterruption[] IngestionIngestInterruption { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"streamName",
        PossibleTypes = new [] { typeof(string) })]
        string IngestionStreamName { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(string) })]
        string LastUpdatedTime { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(string) })]
        string State { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"trackStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ITrackStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ITrackStatus[] TrackStatus { get; set; }

    }
    internal partial interface IStatusInternal

    {
        string[] HealthDescription { get; set; }

        string HealthStatus { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestion Ingestion { get; set; }

        string IngestionBeginTime { get; set; }

        string IngestionEndReason { get; set; }

        string IngestionEndTime { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.IIngestInterruption[] IngestionIngestInterruption { get; set; }

        string IngestionStreamName { get; set; }

        string LastUpdatedTime { get; set; }

        string State { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20221101.ITrackStatus[] TrackStatus { get; set; }

    }
}