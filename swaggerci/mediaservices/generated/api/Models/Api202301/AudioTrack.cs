// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>Represents an audio track in the asset.</summary>
    public partial class AudioTrack :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IAudioTrack,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IAudioTrackInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.ITrackBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.ITrackBase __trackBase = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.TrackBase();

        /// <summary>Backing field for <see cref="BitRate" /> property.</summary>
        private int? _bitRate;

        /// <summary>The stream bit rate for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public int? BitRate { get => this._bitRate; }

        /// <summary>Backing field for <see cref="DashSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IDashSettings _dashSetting;

        /// <summary>The DASH specific setting for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IDashSettings DashSetting { get => (this._dashSetting = this._dashSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.DashSettings()); set => this._dashSetting = value; }

        /// <summary>The role for the DASH setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string DashSettingRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IDashSettingsInternal)DashSetting).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IDashSettingsInternal)DashSetting).Role = value ?? null; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>
        /// The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="FileName" /> property.</summary>
        private string _fileName;

        /// <summary>
        /// The file name to the source file. This file is located in the storage container of the asset.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string FileName { get => this._fileName; set => this._fileName = value; }

        /// <summary>The characteristics for the HLS setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string HlSettingCharacteristic { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettingsInternal)HlsSetting).Characteristic; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettingsInternal)HlsSetting).Characteristic = value ?? null; }

        /// <summary>The default for the HLS setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? HlSettingDefault { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettingsInternal)HlsSetting).Default; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettingsInternal)HlsSetting).Default = value ?? default(bool); }

        /// <summary>The forced for the HLS setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? HlSettingForced { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettingsInternal)HlsSetting).Forced; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettingsInternal)HlsSetting).Forced = value ?? default(bool); }

        /// <summary>Backing field for <see cref="HlsSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettings _hlsSetting;

        /// <summary>The HLS specific setting for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettings HlsSetting { get => (this._hlsSetting = this._hlsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.HlsSettings()); set => this._hlsSetting = value; }

        /// <summary>Backing field for <see cref="LanguageCode" /> property.</summary>
        private string _languageCode;

        /// <summary>The RFC5646 language code for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public string LanguageCode { get => this._languageCode; set => this._languageCode = value; }

        /// <summary>Internal Acessors for BitRate</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IAudioTrackInternal.BitRate { get => this._bitRate; set { {_bitRate = value;} } }

        /// <summary>Internal Acessors for DashSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IDashSettings Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IAudioTrackInternal.DashSetting { get => (this._dashSetting = this._dashSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.DashSettings()); set { {_dashSetting = value;} } }

        /// <summary>Internal Acessors for HlsSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettings Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IAudioTrackInternal.HlsSetting { get => (this._hlsSetting = this._hlsSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.HlsSettings()); set { {_hlsSetting = value;} } }

        /// <summary>Backing field for <see cref="Mpeg4TrackId" /> property.</summary>
        private int? _mpeg4TrackId;

        /// <summary>The MPEG-4 audio track ID for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public int? Mpeg4TrackId { get => this._mpeg4TrackId; set => this._mpeg4TrackId = value; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.ITrackBaseInternal)__trackBase).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.ITrackBaseInternal)__trackBase).OdataType = value ; }

        /// <summary>Creates an new <see cref="AudioTrack" /> instance.</summary>
        public AudioTrack()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackBase), __trackBase);
            await eventListener.AssertObjectIsValid(nameof(__trackBase), __trackBase);
        }
    }
    /// Represents an audio track in the asset.
    public partial interface IAudioTrack :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.ITrackBase
    {
        /// <summary>The stream bit rate for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The stream bit rate for the audio track.",
        SerializedName = @"bitRate",
        PossibleTypes = new [] { typeof(int) })]
        int? BitRate { get;  }
        /// <summary>The role for the DASH setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The role for the DASH setting.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(string) })]
        string DashSettingRole { get; set; }
        /// <summary>
        /// The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The file name to the source file. This file is located in the storage container of the asset.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The file name to the source file. This file is located in the storage container of the asset.",
        SerializedName = @"fileName",
        PossibleTypes = new [] { typeof(string) })]
        string FileName { get; set; }
        /// <summary>The characteristics for the HLS setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The characteristics for the HLS setting.",
        SerializedName = @"characteristics",
        PossibleTypes = new [] { typeof(string) })]
        string HlSettingCharacteristic { get; set; }
        /// <summary>The default for the HLS setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default for the HLS setting.",
        SerializedName = @"default",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HlSettingDefault { get; set; }
        /// <summary>The forced for the HLS setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The forced for the HLS setting.",
        SerializedName = @"forced",
        PossibleTypes = new [] { typeof(bool) })]
        bool? HlSettingForced { get; set; }
        /// <summary>The RFC5646 language code for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The RFC5646 language code for the audio track.",
        SerializedName = @"languageCode",
        PossibleTypes = new [] { typeof(string) })]
        string LanguageCode { get; set; }
        /// <summary>The MPEG-4 audio track ID for the audio track.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The MPEG-4 audio track ID for the audio track.",
        SerializedName = @"mpeg4TrackId",
        PossibleTypes = new [] { typeof(int) })]
        int? Mpeg4TrackId { get; set; }

    }
    /// Represents an audio track in the asset.
    internal partial interface IAudioTrackInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.ITrackBaseInternal
    {
        /// <summary>The stream bit rate for the audio track.</summary>
        int? BitRate { get; set; }
        /// <summary>The DASH specific setting for the audio track.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IDashSettings DashSetting { get; set; }
        /// <summary>The role for the DASH setting.</summary>
        string DashSettingRole { get; set; }
        /// <summary>
        /// The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.
        /// </summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The file name to the source file. This file is located in the storage container of the asset.
        /// </summary>
        string FileName { get; set; }
        /// <summary>The characteristics for the HLS setting.</summary>
        string HlSettingCharacteristic { get; set; }
        /// <summary>The default for the HLS setting.</summary>
        bool? HlSettingDefault { get; set; }
        /// <summary>The forced for the HLS setting.</summary>
        bool? HlSettingForced { get; set; }
        /// <summary>The HLS specific setting for the audio track.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api202301.IHlsSettings HlsSetting { get; set; }
        /// <summary>The RFC5646 language code for the audio track.</summary>
        string LanguageCode { get; set; }
        /// <summary>The MPEG-4 audio track ID for the audio track.</summary>
        int? Mpeg4TrackId { get; set; }

    }
}