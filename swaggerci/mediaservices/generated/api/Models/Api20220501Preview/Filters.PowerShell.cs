// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.PowerShell;

    /// <summary>
    /// Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media
    /// before encoding.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(FiltersTypeConverter))]
    public partial class Filters
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.Filters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFilters" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFilters DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new Filters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.Filters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFilters" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFilters DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new Filters(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.Filters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal Filters(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Deinterlace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Deinterlace = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IDeinterlace) content.GetValueForProperty("Deinterlace",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Deinterlace, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.DeinterlaceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Crop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Crop = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IRectangle) content.GetValueForProperty("Crop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Crop, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("Rotation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Rotation = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation?) content.GetValueForProperty("Rotation",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Rotation, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation.CreateFrom);
            }
            if (content.Contains("Overlay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Overlay = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IOverlay[]) content.GetValueForProperty("Overlay",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Overlay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IOverlay>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.OverlayTypeConverter.ConvertFrom));
            }
            if (content.Contains("DeinterlaceParity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceParity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity?) content.GetValueForProperty("DeinterlaceParity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceParity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity.CreateFrom);
            }
            if (content.Contains("DeinterlaceMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceMode = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode?) content.GetValueForProperty("DeinterlaceMode",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceMode, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode.CreateFrom);
            }
            if (content.Contains("CropLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropLeft = (string) content.GetValueForProperty("CropLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropLeft, global::System.Convert.ToString);
            }
            if (content.Contains("CropTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropTop = (string) content.GetValueForProperty("CropTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropTop, global::System.Convert.ToString);
            }
            if (content.Contains("CropWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropWidth = (string) content.GetValueForProperty("CropWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropWidth, global::System.Convert.ToString);
            }
            if (content.Contains("CropHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropHeight = (string) content.GetValueForProperty("CropHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropHeight, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.Filters"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal Filters(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Deinterlace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Deinterlace = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IDeinterlace) content.GetValueForProperty("Deinterlace",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Deinterlace, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.DeinterlaceTypeConverter.ConvertFrom);
            }
            if (content.Contains("Crop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Crop = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IRectangle) content.GetValueForProperty("Crop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Crop, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("Rotation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Rotation = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation?) content.GetValueForProperty("Rotation",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Rotation, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation.CreateFrom);
            }
            if (content.Contains("Overlay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Overlay = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IOverlay[]) content.GetValueForProperty("Overlay",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).Overlay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IOverlay>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.OverlayTypeConverter.ConvertFrom));
            }
            if (content.Contains("DeinterlaceParity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceParity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity?) content.GetValueForProperty("DeinterlaceParity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceParity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity.CreateFrom);
            }
            if (content.Contains("DeinterlaceMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceMode = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode?) content.GetValueForProperty("DeinterlaceMode",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).DeinterlaceMode, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode.CreateFrom);
            }
            if (content.Contains("CropLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropLeft = (string) content.GetValueForProperty("CropLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropLeft, global::System.Convert.ToString);
            }
            if (content.Contains("CropTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropTop = (string) content.GetValueForProperty("CropTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropTop, global::System.Convert.ToString);
            }
            if (content.Contains("CropWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropWidth = (string) content.GetValueForProperty("CropWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropWidth, global::System.Convert.ToString);
            }
            if (content.Contains("CropHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropHeight = (string) content.GetValueForProperty("CropHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFiltersInternal)this).CropHeight, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="Filters" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="Filters" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFilters FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media
    /// before encoding.
    [System.ComponentModel.TypeConverter(typeof(FiltersTypeConverter))]
    public partial interface IFilters

    {

    }
}