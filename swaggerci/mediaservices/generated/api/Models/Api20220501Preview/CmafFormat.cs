// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>A CMAF based output format.</summary>
    public partial class CmafFormat :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.ICmafFormat,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.ICmafFormatInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IMultiBitrateFormat"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IMultiBitrateFormat __multiBitrateFormat = new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.MultiBitrateFormat();

        /// <summary>
        /// The file naming pattern used for the creation of output files. The following macros are supported in the file name: {Basename}
        /// - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included)
        /// of the input video file is less than 32 characters long, the base name of input video files will be used. If the length
        /// of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total
        /// length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index}
        /// - A unique index for thumbnails. Only applicable to thumbnails. {AudioStream} - string "Audio" plus audio stream number(start
        /// from 1). {Bitrate} - The audio/video bitrate in kbps. Not applicable to thumbnails. {Codec} - The type of the audio/video
        /// codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string FilenamePattern { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFormatInternal)__multiBitrateFormat).FilenamePattern; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFormatInternal)__multiBitrateFormat).FilenamePattern = value ; }

        /// <summary>The discriminator for derived types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public string OdataType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFormatInternal)__multiBitrateFormat).OdataType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IFormatInternal)__multiBitrateFormat).OdataType = value ; }

        /// <summary>
        /// The list of output files to produce. Each entry in the list is a set of audio and video layer labels to be muxed together
        /// .
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IOutputFile[] OutputFile { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IMultiBitrateFormatInternal)__multiBitrateFormat).OutputFile; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IMultiBitrateFormatInternal)__multiBitrateFormat).OutputFile = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StreamingFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType? _streamingFormat;

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType? StreamingFormat { get => this._streamingFormat; set => this._streamingFormat = value; }

        /// <summary>Creates an new <see cref="CmafFormat" /> instance.</summary>
        public CmafFormat()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__multiBitrateFormat), __multiBitrateFormat);
            await eventListener.AssertObjectIsValid(nameof(__multiBitrateFormat), __multiBitrateFormat);
        }
    }
    /// A CMAF based output format.
    public partial interface ICmafFormat :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IMultiBitrateFormat
    {
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"streamingFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType? StreamingFormat { get; set; }

    }
    /// A CMAF based output format.
    internal partial interface ICmafFormatInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220501Preview.IMultiBitrateFormatInternal
    {
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType? StreamingFormat { get; set; }

    }
}