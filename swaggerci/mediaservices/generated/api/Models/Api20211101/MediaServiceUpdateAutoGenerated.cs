// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>A Media Services account update.</summary>
    public partial class MediaServiceUpdateAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal
    {

        /// <summary>The behavior for IP access control in Key Delivery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction? AccessControlDefaultAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).AccessControlDefaultAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).AccessControlDefaultAction = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction)""); }

        /// <summary>
        /// The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must
        /// be empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string[] AccessControlIPAllowList { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).AccessControlIPAllowList; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).AccessControlIPAllowList = value ?? null /* arrayOf */; }

        /// <summary>The current status of the Key Vault mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionStatus; }

        /// <summary>The type of key used to encrypt the Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType? EncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType)""); }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentity _identity;

        /// <summary>The Managed Identity for the Media Services account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.MediaServiceIdentity()); set => this._identity = value; }

        /// <summary>The Principal ID of the identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>The Tenant ID of the identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).Type = value ?? null; }

        /// <summary>
        /// Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public bool? IdentityUseSystemAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).IdentityUseSystemAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).IdentityUseSystemAssignedIdentity = value ?? default(bool); }

        /// <summary>The user assigned managed identities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IUserAssignedManagedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// The current key used to encrypt the Media Services account, including the key version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyCurrentKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyVaultPropertyCurrentKeyIdentifier; }

        /// <summary>
        /// The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1)
        /// or reference a key without a version (for example https://vault/keys/mykey).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>The Media Services account ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string MediaServiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).MediaServiceId; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAccountEncryption Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IResourceIdentity Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.EncryptionIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionIdentity = value; }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionKeyVaultProperty = value; }

        /// <summary>Internal Acessors for EncryptionStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).EncryptionStatus = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.MediaServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for KeyDelivery</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IKeyDelivery Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.KeyDelivery { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyDelivery; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyDelivery = value; }

        /// <summary>Internal Acessors for KeyDeliveryAccessControl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAccessControl Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.KeyDeliveryAccessControl { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyDeliveryAccessControl; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyDeliveryAccessControl = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyCurrentKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.KeyVaultPropertyCurrentKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyVaultPropertyCurrentKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).KeyVaultPropertyCurrentKeyIdentifier = value; }

        /// <summary>Internal Acessors for MediaServiceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.MediaServiceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).MediaServiceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).MediaServiceId = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.MediaServicePropertiesAutoGenerated()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateAutoGeneratedInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).ProvisioningState = value; }

        /// <summary>The Private Endpoint Connections created for the Media Service account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).PrivateEndpointConnection; }

        /// <summary>The user assigned managed identity's ARM ID to use when accessing a resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string PropertiesEncryptionIdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).IdentityUserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).IdentityUserAssignedIdentity = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGenerated _property;

        /// <summary>The resource properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGenerated Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.MediaServicePropertiesAutoGenerated()); set => this._property = value; }

        /// <summary>Provisioning state of the Media Services account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).ProvisioningState; }

        /// <summary>
        /// Whether or not public network access is allowed for resources under the Media Services account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess)""); }

        /// <summary>The storage accounts for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStorageAccount[] StorageAccount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).StorageAccount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).StorageAccount = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication? StorageAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).StorageAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGeneratedInternal)Property).StorageAuthentication = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateTags _tag;

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.MediaServiceUpdateTags()); set => this._tag = value; }

        /// <summary>Creates an new <see cref="MediaServiceUpdateAutoGenerated" /> instance.</summary>
        public MediaServiceUpdateAutoGenerated()
        {

        }
    }
    /// A Media Services account update.
    public partial interface IMediaServiceUpdateAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>The behavior for IP access control in Key Delivery.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The behavior for IP access control in Key Delivery.",
        SerializedName = @"defaultAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction? AccessControlDefaultAction { get; set; }
        /// <summary>
        /// The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must
        /// be empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.",
        SerializedName = @"ipAllowList",
        PossibleTypes = new [] { typeof(string) })]
        string[] AccessControlIPAllowList { get; set; }
        /// <summary>The current status of the Key Vault mapping.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current status of the Key Vault mapping.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string EncryptionStatus { get;  }
        /// <summary>The type of key used to encrypt the Account Key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of key used to encrypt the Account Key.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType? EncryptionType { get; set; }
        /// <summary>The Principal ID of the identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Principal ID of the identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>The Tenant ID of the identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Tenant ID of the identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityType { get; set; }
        /// <summary>
        /// Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.",
        SerializedName = @"useSystemAssignedIdentity",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IdentityUseSystemAssignedIdentity { get; set; }
        /// <summary>The user assigned managed identities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user assigned managed identities.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IUserAssignedManagedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IUserAssignedManagedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// The current key used to encrypt the Media Services account, including the key version.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current key used to encrypt the Media Services account, including the key version.",
        SerializedName = @"currentKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyCurrentKeyIdentifier { get;  }
        /// <summary>
        /// The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1)
        /// or reference a key without a version (for example https://vault/keys/mykey).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>The Media Services account ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Media Services account ID.",
        SerializedName = @"mediaServiceId",
        PossibleTypes = new [] { typeof(string) })]
        string MediaServiceId { get;  }
        /// <summary>The Private Endpoint Connections created for the Media Service account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Private Endpoint Connections created for the Media Service account.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>The user assigned managed identity's ARM ID to use when accessing a resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The user assigned managed identity's ARM ID to use when accessing a resource.",
        SerializedName = @"userAssignedIdentity",
        PossibleTypes = new [] { typeof(string) })]
        string PropertiesEncryptionIdentityUserAssignedIdentity { get; set; }
        /// <summary>Provisioning state of the Media Services account.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Media Services account.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Whether or not public network access is allowed for resources under the Media Services account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for resources under the Media Services account.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The storage accounts for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage accounts for this resource.",
        SerializedName = @"storageAccounts",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStorageAccount) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStorageAccount[] StorageAccount { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"storageAuthentication",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication? StorageAuthentication { get; set; }
        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource tags.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateTags Tag { get; set; }

    }
    /// A Media Services account update.
    internal partial interface IMediaServiceUpdateAutoGeneratedInternal

    {
        /// <summary>The behavior for IP access control in Key Delivery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DefaultAction? AccessControlDefaultAction { get; set; }
        /// <summary>
        /// The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must
        /// be empty.
        /// </summary>
        string[] AccessControlIPAllowList { get; set; }
        /// <summary>The account encryption properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAccountEncryption Encryption { get; set; }
        /// <summary>The Key Vault identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IResourceIdentity EncryptionIdentity { get; set; }
        /// <summary>The properties of the key used to encrypt the account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>The current status of the Key Vault mapping.</summary>
        string EncryptionStatus { get; set; }
        /// <summary>The type of key used to encrypt the Account Key.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.AccountEncryptionKeyType? EncryptionType { get; set; }
        /// <summary>The Managed Identity for the Media Services account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceIdentity Identity { get; set; }
        /// <summary>The Principal ID of the identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The Tenant ID of the identity.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        string IdentityType { get; set; }
        /// <summary>
        /// Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.
        /// </summary>
        bool? IdentityUseSystemAssignedIdentity { get; set; }
        /// <summary>The user assigned managed identities.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IUserAssignedManagedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The Key Delivery properties for Media Services account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IKeyDelivery KeyDelivery { get; set; }
        /// <summary>The access control properties for Key Delivery.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IAccessControl KeyDeliveryAccessControl { get; set; }
        /// <summary>
        /// The current key used to encrypt the Media Services account, including the key version.
        /// </summary>
        string KeyVaultPropertyCurrentKeyIdentifier { get; set; }
        /// <summary>
        /// The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1)
        /// or reference a key without a version (for example https://vault/keys/mykey).
        /// </summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>The Media Services account ID.</summary>
        string MediaServiceId { get; set; }
        /// <summary>The Private Endpoint Connections created for the Media Service account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The user assigned managed identity's ARM ID to use when accessing a resource.</summary>
        string PropertiesEncryptionIdentityUserAssignedIdentity { get; set; }
        /// <summary>The resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServicePropertiesAutoGenerated Property { get; set; }
        /// <summary>Provisioning state of the Media Services account.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Whether or not public network access is allowed for resources under the Media Services account.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The storage accounts for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IStorageAccount[] StorageAccount { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StorageAuthentication? StorageAuthentication { get; set; }
        /// <summary>Resource tags.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20211101.IMediaServiceUpdateTags Tag { get; set; }

    }
}