// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301
{
    using Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.PowerShell;

    /// <summary>
    /// Describes all the settings to be used when encoding the input video with the Standard Encoder.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(StandardEncoderPresetTypeConverter))]
    public partial class StandardEncoderPreset
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.StandardEncoderPreset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPreset"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPreset DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new StandardEncoderPreset(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.StandardEncoderPreset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPreset"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPreset DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new StandardEncoderPreset(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="StandardEncoderPreset" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="StandardEncoderPreset" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPreset FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.StandardEncoderPreset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal StandardEncoderPreset(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Filter = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IFilters) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Filter, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.FiltersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Codec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Codec = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.ICodec[]) content.GetValueForProperty("Codec",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Codec, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.ICodec>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.CodecTypeConverter.ConvertFrom));
            }
            if (content.Contains("Format"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Format = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IFormat[]) content.GetValueForProperty("Format",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Format, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IFormat>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.FormatTypeConverter.ConvertFrom));
            }
            if (content.Contains("OdataType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IPresetInternal)this).OdataType = (string) content.GetValueForProperty("OdataType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IPresetInternal)this).OdataType, global::System.Convert.ToString);
            }
            if (content.Contains("FilterDeinterlace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterDeinterlace = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IDeinterlace) content.GetValueForProperty("FilterDeinterlace",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterDeinterlace, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.DeinterlaceTypeConverter.ConvertFrom);
            }
            if (content.Contains("FilterRotation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterRotation = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation?) content.GetValueForProperty("FilterRotation",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterRotation, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation.CreateFrom);
            }
            if (content.Contains("FilterOverlay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterOverlay = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IOverlay[]) content.GetValueForProperty("FilterOverlay",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterOverlay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IOverlay>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.OverlayTypeConverter.ConvertFrom));
            }
            if (content.Contains("FilterCrop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterCrop = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IRectangle) content.GetValueForProperty("FilterCrop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterCrop, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeinterlaceParity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceParity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity?) content.GetValueForProperty("DeinterlaceParity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceParity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity.CreateFrom);
            }
            if (content.Contains("DeinterlaceMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceMode = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode?) content.GetValueForProperty("DeinterlaceMode",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceMode, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode.CreateFrom);
            }
            if (content.Contains("CropLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropLeft = (string) content.GetValueForProperty("CropLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropLeft, global::System.Convert.ToString);
            }
            if (content.Contains("CropTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropTop = (string) content.GetValueForProperty("CropTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropTop, global::System.Convert.ToString);
            }
            if (content.Contains("CropWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropWidth = (string) content.GetValueForProperty("CropWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropWidth, global::System.Convert.ToString);
            }
            if (content.Contains("CropHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropHeight = (string) content.GetValueForProperty("CropHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropHeight, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.StandardEncoderPreset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal StandardEncoderPreset(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Filter = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IFilters) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Filter, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.FiltersTypeConverter.ConvertFrom);
            }
            if (content.Contains("Codec"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Codec = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.ICodec[]) content.GetValueForProperty("Codec",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Codec, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.ICodec>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.CodecTypeConverter.ConvertFrom));
            }
            if (content.Contains("Format"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Format = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IFormat[]) content.GetValueForProperty("Format",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).Format, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IFormat>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.FormatTypeConverter.ConvertFrom));
            }
            if (content.Contains("OdataType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IPresetInternal)this).OdataType = (string) content.GetValueForProperty("OdataType",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IPresetInternal)this).OdataType, global::System.Convert.ToString);
            }
            if (content.Contains("FilterDeinterlace"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterDeinterlace = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IDeinterlace) content.GetValueForProperty("FilterDeinterlace",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterDeinterlace, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.DeinterlaceTypeConverter.ConvertFrom);
            }
            if (content.Contains("FilterRotation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterRotation = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation?) content.GetValueForProperty("FilterRotation",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterRotation, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation.CreateFrom);
            }
            if (content.Contains("FilterOverlay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterOverlay = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IOverlay[]) content.GetValueForProperty("FilterOverlay",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterOverlay, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IOverlay>(__y, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.OverlayTypeConverter.ConvertFrom));
            }
            if (content.Contains("FilterCrop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterCrop = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IRectangle) content.GetValueForProperty("FilterCrop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).FilterCrop, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.RectangleTypeConverter.ConvertFrom);
            }
            if (content.Contains("DeinterlaceParity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceParity = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity?) content.GetValueForProperty("DeinterlaceParity",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceParity, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity.CreateFrom);
            }
            if (content.Contains("DeinterlaceMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceMode = (Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode?) content.GetValueForProperty("DeinterlaceMode",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).DeinterlaceMode, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode.CreateFrom);
            }
            if (content.Contains("CropLeft"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropLeft = (string) content.GetValueForProperty("CropLeft",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropLeft, global::System.Convert.ToString);
            }
            if (content.Contains("CropTop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropTop = (string) content.GetValueForProperty("CropTop",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropTop, global::System.Convert.ToString);
            }
            if (content.Contains("CropWidth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropWidth = (string) content.GetValueForProperty("CropWidth",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropWidth, global::System.Convert.ToString);
            }
            if (content.Contains("CropHeight"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropHeight = (string) content.GetValueForProperty("CropHeight",((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220301.IStandardEncoderPresetInternal)this).CropHeight, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Describes all the settings to be used when encoding the input video with the Standard Encoder.
    [System.ComponentModel.TypeConverter(typeof(StandardEncoderPresetTypeConverter))]
    public partial interface IStandardEncoderPreset

    {

    }
}