// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Extensions;

    /// <summary>
    /// Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media
    /// before encoding.
    /// </summary>
    public partial class Filters :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFilters,
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFiltersInternal
    {

        /// <summary>Backing field for <see cref="Crop" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangle _crop;

        /// <summary>The parameters for the rectangular window with which to crop the input video.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangle Crop { get => (this._crop = this._crop ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Rectangle()); set => this._crop = value; }

        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropHeight { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Height; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Height = value ?? null; }

        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropLeft { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Left; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Left = value ?? null; }

        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropTop { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Top; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Top = value ?? null; }

        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string CropWidth { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Width; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangleInternal)Crop).Width = value ?? null; }

        /// <summary>Backing field for <see cref="Deinterlace" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlace _deinterlace;

        /// <summary>The de-interlacing settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlace Deinterlace { get => (this._deinterlace = this._deinterlace ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Deinterlace()); set => this._deinterlace = value; }

        /// <summary>The deinterlacing mode. Defaults to AutoPixelAdaptive.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode? DeinterlaceMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlaceInternal)Deinterlace).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlaceInternal)Deinterlace).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode)""); }

        /// <summary>The field parity for de-interlacing, defaults to Auto.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity? DeinterlaceParity { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlaceInternal)Deinterlace).Parity; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlaceInternal)Deinterlace).Parity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity)""); }

        /// <summary>Backing field for <see cref="FadeIn" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade _fadeIn;

        /// <summary>Describes the properties of a Fade effect applied to the input media.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade FadeIn { get => (this._fadeIn = this._fadeIn ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Fade()); set => this._fadeIn = value; }

        /// <summary>
        /// The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a
        /// color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value
        /// to stream duration (For example, 10% to fade 10% of stream duration)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? FadeInDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeIn).Duration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeIn).Duration = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords
        /// or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string FadeInFadeColor { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeIn).Color; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeIn).Color = value ?? null; }

        /// <summary>
        /// The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start
        /// at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For
        /// example, 10% to start at 10% of stream duration). Default is 0
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string FadeInStart { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeIn).Start; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeIn).Start = value ?? null; }

        /// <summary>Backing field for <see cref="FadeOut" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade _fadeOut;

        /// <summary>Describes the properties of a Fade effect applied to the input media.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade FadeOut { get => (this._fadeOut = this._fadeOut ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Fade()); set => this._fadeOut = value; }

        /// <summary>
        /// The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a
        /// color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value
        /// to stream duration (For example, 10% to fade 10% of stream duration)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public global::System.TimeSpan? FadeOutDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeOut).Duration; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeOut).Duration = value ?? default(global::System.TimeSpan); }

        /// <summary>
        /// The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords
        /// or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string FadeOutFadeColor { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeOut).Color; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeOut).Color = value ?? null; }

        /// <summary>
        /// The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start
        /// at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For
        /// example, 10% to start at 10% of stream duration). Default is 0
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Inlined)]
        public string FadeOutStart { get => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeOut).Start; set => ((Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFadeInternal)FadeOut).Start = value ?? null; }

        /// <summary>Internal Acessors for Crop</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangle Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFiltersInternal.Crop { get => (this._crop = this._crop ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Rectangle()); set { {_crop = value;} } }

        /// <summary>Internal Acessors for Deinterlace</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFiltersInternal.Deinterlace { get => (this._deinterlace = this._deinterlace ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Deinterlace()); set { {_deinterlace = value;} } }

        /// <summary>Internal Acessors for FadeIn</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFiltersInternal.FadeIn { get => (this._fadeIn = this._fadeIn ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Fade()); set { {_fadeIn = value;} } }

        /// <summary>Internal Acessors for FadeOut</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFiltersInternal.FadeOut { get => (this._fadeOut = this._fadeOut ?? new Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.Fade()); set { {_fadeOut = value;} } }

        /// <summary>Backing field for <see cref="Overlay" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IOverlay[] _overlay;

        /// <summary>
        /// The properties of overlays to be applied to the input video. These could be audio, image or video overlays.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IOverlay[] Overlay { get => this._overlay; set => this._overlay = value; }

        /// <summary>Backing field for <see cref="Rotation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation? _rotation;

        /// <summary>
        /// The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation? Rotation { get => this._rotation; set => this._rotation = value; }

        /// <summary>Creates an new <see cref="Filters" /> instance.</summary>
        public Filters()
        {

        }
    }
    /// Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media
    /// before encoding.
    public partial interface IFilters :
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"height",
        PossibleTypes = new [] { typeof(string) })]
        string CropHeight { get; set; }
        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"left",
        PossibleTypes = new [] { typeof(string) })]
        string CropLeft { get; set; }
        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"top",
        PossibleTypes = new [] { typeof(string) })]
        string CropTop { get; set; }
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
        SerializedName = @"width",
        PossibleTypes = new [] { typeof(string) })]
        string CropWidth { get; set; }
        /// <summary>The deinterlacing mode. Defaults to AutoPixelAdaptive.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The deinterlacing mode. Defaults to AutoPixelAdaptive.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode? DeinterlaceMode { get; set; }
        /// <summary>The field parity for de-interlacing, defaults to Auto.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The field parity for de-interlacing, defaults to Auto.",
        SerializedName = @"parity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity? DeinterlaceParity { get; set; }
        /// <summary>
        /// The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a
        /// color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value
        /// to stream duration (For example, 10% to fade 10% of stream duration)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value to stream duration (For example, 10% to fade 10% of stream duration)",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? FadeInDuration { get; set; }
        /// <summary>
        /// The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords
        /// or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000",
        SerializedName = @"fadeColor",
        PossibleTypes = new [] { typeof(string) })]
        string FadeInFadeColor { get; set; }
        /// <summary>
        /// The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start
        /// at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For
        /// example, 10% to start at 10% of stream duration). Default is 0
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Default is 0",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(string) })]
        string FadeInStart { get; set; }
        /// <summary>
        /// The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a
        /// color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value
        /// to stream duration (For example, 10% to fade 10% of stream duration)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value to stream duration (For example, 10% to fade 10% of stream duration)",
        SerializedName = @"duration",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? FadeOutDuration { get; set; }
        /// <summary>
        /// The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords
        /// or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000",
        SerializedName = @"fadeColor",
        PossibleTypes = new [] { typeof(string) })]
        string FadeOutFadeColor { get; set; }
        /// <summary>
        /// The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start
        /// at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For
        /// example, 10% to start at 10% of stream duration). Default is 0
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Default is 0",
        SerializedName = @"start",
        PossibleTypes = new [] { typeof(string) })]
        string FadeOutStart { get; set; }
        /// <summary>
        /// The properties of overlays to be applied to the input video. These could be audio, image or video overlays.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The properties of overlays to be applied to the input video. These could be audio, image or video overlays.",
        SerializedName = @"overlays",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IOverlay),typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IAudioOverlay) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IOverlay[] Overlay { get; set; }
        /// <summary>
        /// The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto",
        SerializedName = @"rotation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation) })]
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation? Rotation { get; set; }

    }
    /// Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media
    /// before encoding.
    internal partial interface IFiltersInternal

    {
        /// <summary>The parameters for the rectangular window with which to crop the input video.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IRectangle Crop { get; set; }
        /// <summary>
        /// The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        string CropHeight { get; set; }
        /// <summary>
        /// The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the
        /// video (For example, 50%).
        /// </summary>
        string CropLeft { get; set; }
        /// <summary>
        /// The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video
        /// (For example, 50%).
        /// </summary>
        string CropTop { get; set; }
        /// <summary>
        /// The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of
        /// the video (For example, 50%).
        /// </summary>
        string CropWidth { get; set; }
        /// <summary>The de-interlacing settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IDeinterlace Deinterlace { get; set; }
        /// <summary>The deinterlacing mode. Defaults to AutoPixelAdaptive.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceMode? DeinterlaceMode { get; set; }
        /// <summary>The field parity for de-interlacing, defaults to Auto.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.DeinterlaceParity? DeinterlaceParity { get; set; }
        /// <summary>Describes the properties of a Fade effect applied to the input media.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade FadeIn { get; set; }
        /// <summary>
        /// The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a
        /// color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value
        /// to stream duration (For example, 10% to fade 10% of stream duration)
        /// </summary>
        global::System.TimeSpan? FadeInDuration { get; set; }
        /// <summary>
        /// The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords
        /// or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000
        /// </summary>
        string FadeInFadeColor { get; set; }
        /// <summary>
        /// The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start
        /// at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For
        /// example, 10% to start at 10% of stream duration). Default is 0
        /// </summary>
        string FadeInStart { get; set; }
        /// <summary>Describes the properties of a Fade effect applied to the input media.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IFade FadeOut { get; set; }
        /// <summary>
        /// The Duration of the fade effect in the video. The value can be in ISO 8601 format (For example, PT05S to fade In/Out a
        /// color during 5 seconds), or a frame count (For example, 10 to fade 10 frames from the start time), or a relative value
        /// to stream duration (For example, 10% to fade 10% of stream duration)
        /// </summary>
        global::System.TimeSpan? FadeOutDuration { get; set; }
        /// <summary>
        /// The Color for the fade In/Out. it can be on the CSS Level1 colors https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color_keywords
        /// or an RGB/hex value: e.g: rgb(255,0,0), 0xFF0000 or #FF0000
        /// </summary>
        string FadeOutFadeColor { get; set; }
        /// <summary>
        /// The position in the input video from where to start fade. The value can be in ISO 8601 format (For example, PT05S to start
        /// at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For
        /// example, 10% to start at 10% of stream duration). Default is 0
        /// </summary>
        string FadeOutStart { get; set; }
        /// <summary>
        /// The properties of overlays to be applied to the input video. These could be audio, image or video overlays.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Models.Api20220701.IOverlay[] Overlay { get; set; }
        /// <summary>
        /// The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.Rotation? Rotation { get; set; }

    }
}