// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    /// <summary>The type of the stream event. Format: StreamEvent/{eventType}</summary>
    public partial struct LiveEventStreamEventType :
        System.IEquatable<LiveEventStreamEventType>
    {
        /// <summary>Ingest session begins.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventBeginIngest = @"StreamEvent/BeginIngest";

        /// <summary>Fragment dropped.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventChunkDropped = @"StreamEvent/ChunkDropped";

        /// <summary>Timestamp discontinuity detected.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventDiscontinuity = @"StreamEvent/Discontinuity";

        /// <summary>Ingest session ends.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventEndIngest = @"StreamEvent/EndIngest";

        /// <summary>First fragment received on ingest media track.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventFirstChunkReceived = @"StreamEvent/FirstChunkReceived";

        /// <summary>Ingest session denied.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventInvalidConnection = @"StreamEvent/InvalidConnection";

        /// <summary>Unaligned video keyframes detected.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventUnalignedKeyFrames = @"StreamEvent/UnalignedKeyFrames";

        /// <summary>
        /// Unaligned presentation detected, meaning two fragments across two quality levels are not time aligned.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType StreamEventUnalignedPresentation = @"StreamEvent/UnalignedPresentation";

        /// <summary>the value for an instance of the <see cref="LiveEventStreamEventType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to LiveEventStreamEventType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="LiveEventStreamEventType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new LiveEventStreamEventType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type LiveEventStreamEventType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type LiveEventStreamEventType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is LiveEventStreamEventType && Equals((LiveEventStreamEventType)obj);
        }

        /// <summary>Returns hashCode for enum LiveEventStreamEventType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="LiveEventStreamEventType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private LiveEventStreamEventType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for LiveEventStreamEventType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to LiveEventStreamEventType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="LiveEventStreamEventType" />.</param>

        public static implicit operator LiveEventStreamEventType(string value)
        {
            return new LiveEventStreamEventType(value);
        }

        /// <summary>Implicit operator to convert LiveEventStreamEventType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="LiveEventStreamEventType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum LiveEventStreamEventType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum LiveEventStreamEventType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.LiveEventStreamEventType e2)
        {
            return e2.Equals(e1);
        }
    }
}