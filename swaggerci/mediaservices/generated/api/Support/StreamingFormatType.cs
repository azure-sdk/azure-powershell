// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support
{

    public partial struct StreamingFormatType :
        System.IEquatable<StreamingFormatType>
    {
        /// <summary>
        /// DASH streaming is supported in this format. DASH media presentation description file is included in the output.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType Dash = @"Dash";

        /// <summary>
        /// HLS streaming is supported in this format. HLS manifest files(master and variants manifest files) are included in the
        /// output.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType Hls = @"Hls";

        /// <summary>
        /// HLS and DASH streaming are both supported in this format. HLS manifest files(master and variants manifest files) and DASH
        /// media presentation description file are included in the output. This is the default streaming format.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType HlsAndDash = @"HlsAndDash";

        /// <summary>the value for an instance of the <see cref="StreamingFormatType" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to StreamingFormatType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="StreamingFormatType" />.</param>
        internal static object CreateFrom(object value)
        {
            return new StreamingFormatType(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type StreamingFormatType</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type StreamingFormatType (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is StreamingFormatType && Equals((StreamingFormatType)obj);
        }

        /// <summary>Returns hashCode for enum StreamingFormatType</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="StreamingFormatType"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private StreamingFormatType(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for StreamingFormatType</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to StreamingFormatType</summary>
        /// <param name="value">the value to convert to an instance of <see cref="StreamingFormatType" />.</param>

        public static implicit operator StreamingFormatType(string value)
        {
            return new StreamingFormatType(value);
        }

        /// <summary>Implicit operator to convert StreamingFormatType to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="StreamingFormatType" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum StreamingFormatType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum StreamingFormatType</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType e1, Microsoft.Azure.PowerShell.Cmdlets.MediaServices.Support.StreamingFormatType e2)
        {
            return e2.Equals(e1);
        }
    }
}