// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SignalR.Models.Api20230301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.Extensions;

    /// <summary>Serverless settings.</summary>
    public partial class ServerlessSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Models.Api20230301Preview.IServerlessSettings,
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Models.Api20230301Preview.IServerlessSettingsInternal
    {

        /// <summary>Backing field for <see cref="ConnectionTimeoutInSecond" /> property.</summary>
        private int? _connectionTimeoutInSecond;

        /// <summary>
        /// Gets or sets Client Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last message is sent.
        /// You can set the timeout to a longer period if messages are expected to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this session.
        /// The service considers the client disconnected if it hasn't received a message (including keep-alive) in this interval.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SignalR.Origin(Microsoft.Azure.PowerShell.Cmdlets.SignalR.PropertyOrigin.Owned)]
        public int? ConnectionTimeoutInSecond { get => this._connectionTimeoutInSecond; set => this._connectionTimeoutInSecond = value; }

        /// <summary>Creates an new <see cref="ServerlessSettings" /> instance.</summary>
        public ServerlessSettings()
        {

        }
    }
    /// Serverless settings.
    public partial interface IServerlessSettings :
        Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Gets or sets Client Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last message is sent.
        /// You can set the timeout to a longer period if messages are expected to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this session.
        /// The service considers the client disconnected if it hasn't received a message (including keep-alive) in this interval.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SignalR.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gets or sets Client Connection Timeout. Optional to be set.
        Value in seconds.
        Default value is 30 seconds.
        Customer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,
        and want the client to disconnect more quickly after the last message is sent.
        You can set the timeout to a longer period if messages are expected to be sent in longer intervals,
        and they want to keep the same client connection alive during this session.
        The service considers the client disconnected if it hasn't received a message (including keep-alive) in this interval.",
        SerializedName = @"connectionTimeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? ConnectionTimeoutInSecond { get; set; }

    }
    /// Serverless settings.
    internal partial interface IServerlessSettingsInternal

    {
        /// <summary>
        /// Gets or sets Client Connection Timeout. Optional to be set.
        /// Value in seconds.
        /// Default value is 30 seconds.
        /// Customer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,
        /// and want the client to disconnect more quickly after the last message is sent.
        /// You can set the timeout to a longer period if messages are expected to be sent in longer intervals,
        /// and they want to keep the same client connection alive during this session.
        /// The service considers the client disconnected if it hasn't received a message (including keep-alive) in this interval.
        /// </summary>
        int? ConnectionTimeoutInSecond { get; set; }

    }
}