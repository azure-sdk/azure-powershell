// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Extensions;

    /// <summary>The parameters for updating a container registry.</summary>
    public partial class RegistryUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParameters,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal
    {

        /// <summary>The value that indicates whether the admin user is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public bool? AdminUserEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).AdminUserEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).AdminUserEnabled = value ?? default(bool); }

        /// <summary>Enable a single data endpoint per region for serving data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public bool? DataEndpointEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).DataEndpointEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).DataEndpointEnabled = value ?? default(bool); }

        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? EncryptionStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).EncryptionStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).EncryptionStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus)""); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).ExportPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).ExportPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus)""); }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityProperties _identity;

        /// <summary>The identity of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityProperties Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IdentityProperties()); set => this._identity = value; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).PrincipalId = value ?? null; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).TenantId = value ?? null; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType)""); }

        /// <summary>
        /// The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
        /// providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyIdentity = value ?? null; }

        /// <summary>Key vault uri to access the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyKeyIdentifier = value ?? null; }

        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public bool? KeyVaultPropertyKeyRotationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyKeyRotationEnabled; }

        /// <summary>Timestamp of the last successful key rotation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp; }

        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public string KeyVaultPropertyVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyVersionedKeyIdentifier; }

        /// <summary>Internal Acessors for Encryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IEncryptionProperty Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.Encryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).Encryption = value; }

        /// <summary>Internal Acessors for EncryptionKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.EncryptionKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).EncryptionKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).EncryptionKeyVaultProperty = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IdentityProperties()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for KeyVaultPropertyKeyRotationEnabled</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.KeyVaultPropertyKeyRotationEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyKeyRotationEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyKeyRotationEnabled = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyLastKeyRotationTimestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.KeyVaultPropertyLastKeyRotationTimestamp { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyLastKeyRotationTimestamp = value; }

        /// <summary>Internal Acessors for KeyVaultPropertyVersionedKeyIdentifier</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.KeyVaultPropertyVersionedKeyIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyVersionedKeyIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).KeyVaultPropertyVersionedKeyIdentifier = value; }

        /// <summary>Internal Acessors for NetworkRuleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.INetworkRuleSet Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.NetworkRuleSet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleSet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleSet = value; }

        /// <summary>Internal Acessors for Policy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IPolicies Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.Policy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).Policy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).Policy = value; }

        /// <summary>Internal Acessors for PolicyExportPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IExportPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.PolicyExportPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyExportPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyExportPolicy = value; }

        /// <summary>Internal Acessors for PolicyQuarantinePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IQuarantinePolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.PolicyQuarantinePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyQuarantinePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyQuarantinePolicy = value; }

        /// <summary>Internal Acessors for PolicyRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.PolicyRetentionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyRetentionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyRetentionPolicy = value; }

        /// <summary>Internal Acessors for PolicyTrustPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ITrustPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.PolicyTrustPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyTrustPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PolicyTrustPolicy = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParameters Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.RegistryPropertiesUpdateParameters()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RetentionPolicyLastUpdatedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.RetentionPolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyLastUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyLastUpdatedTime = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISku Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SkuTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersInternal.SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISkuInternal)Sku).Tier = value; }

        /// <summary>
        /// Whether to allow trusted Azure services to access a network restricted registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions? NetworkRuleBypassOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleBypassOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleBypassOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions)""); }

        /// <summary>The default action of allow or deny when no other rules match.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction? NetworkRuleSetDefaultAction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleSetDefaultAction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleSetDefaultAction = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction)""); }

        /// <summary>The IP ACL rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIPRule[] NetworkRuleSetIPRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleSetIPRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).NetworkRuleSetIPRule = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParameters _property;

        /// <summary>The properties that the container registry will be updated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParameters Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.RegistryPropertiesUpdateParameters()); set => this._property = value; }

        /// <summary>Whether or not public network access is allowed for the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess)""); }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).QuarantinePolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).QuarantinePolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public int? RetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyDay = value ?? default(int); }

        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public global::System.DateTime? RetentionPolicyLastUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyLastUpdatedTime; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).RetentionPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISku _sku;

        /// <summary>The SKU of the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.Sku()); set => this._sku = value; }

        /// <summary>The SKU name of the container registry. Required for registry creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName)""); }

        /// <summary>The SKU tier based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISkuInternal)Sku).Tier; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersTags _tag;

        /// <summary>The tags for the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.RegistryUpdateParametersTags()); set => this._tag = value; }

        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).TrustPolicyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).TrustPolicyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus)""); }

        /// <summary>The type of trust policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).TrustPolicyType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParametersInternal)Property).TrustPolicyType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType)""); }

        /// <summary>Creates an new <see cref="RegistryUpdateParameters" /> instance.</summary>
        public RegistryUpdateParameters()
        {

        }
    }
    /// The parameters for updating a container registry.
    public partial interface IRegistryUpdateParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.IJsonSerializable
    {
        /// <summary>The value that indicates whether the admin user is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the admin user is enabled.",
        SerializedName = @"adminUserEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AdminUserEnabled { get; set; }
        /// <summary>Enable a single data endpoint per region for serving data.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable a single data endpoint per region for serving data.",
        SerializedName = @"dataEndpointEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataEndpointEnabled { get; set; }
        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether or not the encryption is enabled for container registry.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? EncryptionStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
        /// providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of user identities associated with the resource. The user identity
        dictionary key references will be ARM resource ids in the form:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
            providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client id of the identity which will be used to access key vault.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyIdentity { get; set; }
        /// <summary>Key vault uri to access the encryption key.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key vault uri to access the encryption key.",
        SerializedName = @"keyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Auto key rotation status for a CMK enabled registry.",
        SerializedName = @"keyRotationEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? KeyVaultPropertyKeyRotationEnabled { get;  }
        /// <summary>Timestamp of the last successful key rotation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Timestamp of the last successful key rotation.",
        SerializedName = @"lastKeyRotationTimestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get;  }
        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified key identifier that includes the version of the key that is actually used for encryption.",
        SerializedName = @"versionedKeyIdentifier",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultPropertyVersionedKeyIdentifier { get;  }
        /// <summary>
        /// Whether to allow trusted Azure services to access a network restricted registry.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to allow trusted Azure services to access a network restricted registry.",
        SerializedName = @"networkRuleBypassOptions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions? NetworkRuleBypassOption { get; set; }
        /// <summary>The default action of allow or deny when no other rules match.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default action of allow or deny when no other rules match.",
        SerializedName = @"defaultAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction? NetworkRuleSetDefaultAction { get; set; }
        /// <summary>The IP ACL rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IP ACL rules.",
        SerializedName = @"ipRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIPRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>Whether or not public network access is allowed for the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public network access is allowed for the container registry.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get; set; }
        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of days to retain an untagged manifest after which it gets purged.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RetentionPolicyDay { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp when the policy was last updated.",
        SerializedName = @"lastUpdatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RetentionPolicyLastUpdatedTime { get;  }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get; set; }
        /// <summary>The SKU name of the container registry. Required for registry creation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU name of the container registry. Required for registry creation.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName? SkuName { get; set; }
        /// <summary>The SKU tier based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The SKU tier based on the SKU name.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? SkuTier { get;  }
        /// <summary>The tags for the container registry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tags for the container registry.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersTags Tag { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The value that indicates whether the policy is enabled or not.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get; set; }
        /// <summary>The type of trust policy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of trust policy.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get; set; }

    }
    /// The parameters for updating a container registry.
    internal partial interface IRegistryUpdateParametersInternal

    {
        /// <summary>The value that indicates whether the admin user is enabled.</summary>
        bool? AdminUserEnabled { get; set; }
        /// <summary>Enable a single data endpoint per region for serving data.</summary>
        bool? DataEndpointEnabled { get; set; }
        /// <summary>The encryption settings of container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IEncryptionProperty Encryption { get; set; }
        /// <summary>Key vault properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IKeyVaultProperties EncryptionKeyVaultProperty { get; set; }
        /// <summary>Indicates whether or not the encryption is enabled for container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.EncryptionStatus? EncryptionStatus { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ExportPolicyStatus? ExportPolicyStatus { get; set; }
        /// <summary>The identity of the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityProperties Identity { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.ResourceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The list of user identities associated with the resource. The user identity
        /// dictionary key references will be ARM resource ids in the form:
        /// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
        /// providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIdentityPropertiesUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>The client id of the identity which will be used to access key vault.</summary>
        string KeyVaultPropertyIdentity { get; set; }
        /// <summary>Key vault uri to access the encryption key.</summary>
        string KeyVaultPropertyKeyIdentifier { get; set; }
        /// <summary>Auto key rotation status for a CMK enabled registry.</summary>
        bool? KeyVaultPropertyKeyRotationEnabled { get; set; }
        /// <summary>Timestamp of the last successful key rotation.</summary>
        global::System.DateTime? KeyVaultPropertyLastKeyRotationTimestamp { get; set; }
        /// <summary>
        /// The fully qualified key identifier that includes the version of the key that is actually used for encryption.
        /// </summary>
        string KeyVaultPropertyVersionedKeyIdentifier { get; set; }
        /// <summary>
        /// Whether to allow trusted Azure services to access a network restricted registry.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.NetworkRuleBypassOptions? NetworkRuleBypassOption { get; set; }
        /// <summary>The network rule set for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.INetworkRuleSet NetworkRuleSet { get; set; }
        /// <summary>The default action of allow or deny when no other rules match.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.DefaultAction? NetworkRuleSetDefaultAction { get; set; }
        /// <summary>The IP ACL rules.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IIPRule[] NetworkRuleSetIPRule { get; set; }
        /// <summary>The policies for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IPolicies Policy { get; set; }
        /// <summary>The export policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IExportPolicy PolicyExportPolicy { get; set; }
        /// <summary>The quarantine policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IQuarantinePolicy PolicyQuarantinePolicy { get; set; }
        /// <summary>The retention policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRetentionPolicy PolicyRetentionPolicy { get; set; }
        /// <summary>The content trust policy for a container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ITrustPolicy PolicyTrustPolicy { get; set; }
        /// <summary>The properties that the container registry will be updated with.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryPropertiesUpdateParameters Property { get; set; }
        /// <summary>Whether or not public network access is allowed for the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? QuarantinePolicyStatus { get; set; }
        /// <summary>The number of days to retain an untagged manifest after which it gets purged.</summary>
        int? RetentionPolicyDay { get; set; }
        /// <summary>The timestamp when the policy was last updated.</summary>
        global::System.DateTime? RetentionPolicyLastUpdatedTime { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? RetentionPolicyStatus { get; set; }
        /// <summary>The SKU of the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.ISku Sku { get; set; }
        /// <summary>The SKU name of the container registry. Required for registry creation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuName? SkuName { get; set; }
        /// <summary>The SKU tier based on the SKU name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.SkuTier? SkuTier { get; set; }
        /// <summary>The tags for the container registry.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Models.Api20221201.IRegistryUpdateParametersTags Tag { get; set; }
        /// <summary>The value that indicates whether the policy is enabled or not.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.PolicyStatus? TrustPolicyStatus { get; set; }
        /// <summary>The type of trust policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerRegistry.Support.TrustPolicyType? TrustPolicyType { get; set; }

    }
}