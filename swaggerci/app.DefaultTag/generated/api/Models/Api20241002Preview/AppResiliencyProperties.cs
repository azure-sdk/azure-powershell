// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>App Resiliency resource specific properties</summary>
    public partial class AppResiliencyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CircuitBreakerPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicy _circuitBreakerPolicy;

        /// <summary>Policy that defines circuit breaker conditions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicy CircuitBreakerPolicy { get => (this._circuitBreakerPolicy = this._circuitBreakerPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.CircuitBreakerPolicy()); set => this._circuitBreakerPolicy = value; }

        /// <summary>Number of consecutive errors before the circuit breaker opens</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? CircuitBreakerPolicyConsecutiveError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicyInternal)CircuitBreakerPolicy).ConsecutiveError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicyInternal)CircuitBreakerPolicy).ConsecutiveError = value ?? default(int); }

        /// <summary>
        /// The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails
        /// as well as closing the circuit breaker if the check succeeds. Defaults to 10s.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? CircuitBreakerPolicyIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicyInternal)CircuitBreakerPolicy).IntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicyInternal)CircuitBreakerPolicy).IntervalInSecond = value ?? default(int); }

        /// <summary>
        /// Maximum percentage of hosts that will be ejected after failure threshold has been met
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? CircuitBreakerPolicyMaxEjectionPercent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicyInternal)CircuitBreakerPolicy).MaxEjectionPercent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicyInternal)CircuitBreakerPolicy).MaxEjectionPercent = value ?? default(int); }

        /// <summary>Backing field for <see cref="HttpConnectionPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPool _httpConnectionPool;

        /// <summary>Defines parameters for http connection pooling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPool HttpConnectionPool { get => (this._httpConnectionPool = this._httpConnectionPool ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.HttpConnectionPool()); set => this._httpConnectionPool = value; }

        /// <summary>Maximum number of pending http1 requests allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? HttpConnectionPoolHttp1MaxPendingRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPoolInternal)HttpConnectionPool).Http1MaxPendingRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPoolInternal)HttpConnectionPool).Http1MaxPendingRequest = value ?? default(int); }

        /// <summary>Maximum number of http2 requests allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? HttpConnectionPoolHttp2MaxRequest { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPoolInternal)HttpConnectionPool).Http2MaxRequest; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPoolInternal)HttpConnectionPool).Http2MaxRequest = value ?? default(int); }

        /// <summary>Backing field for <see cref="HttpRetryPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicy _httpRetryPolicy;

        /// <summary>Policy that defines http request retry conditions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicy HttpRetryPolicy { get => (this._httpRetryPolicy = this._httpRetryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.HttpRetryPolicy()); set => this._httpRetryPolicy = value; }

        /// <summary>Maximum number of times a request will retry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? HttpRetryPolicyMaxRetry { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MaxRetry; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MaxRetry = value ?? default(int); }

        /// <summary>Errors that can trigger a retry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] MatchError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MatchError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MatchError = value ?? null /* arrayOf */; }

        /// <summary>Headers that must be present for a request to be retried</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHeaderMatch[] MatchHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MatchHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MatchHeader = value ?? null /* arrayOf */; }

        /// <summary>Additional http status codes that can trigger a retry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int[] MatchHttpStatusCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MatchHttpStatusCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).MatchHttpStatusCode = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for CircuitBreakerPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.CircuitBreakerPolicy { get => (this._circuitBreakerPolicy = this._circuitBreakerPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.CircuitBreakerPolicy()); set { {_circuitBreakerPolicy = value;} } }

        /// <summary>Internal Acessors for HttpConnectionPool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPool Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.HttpConnectionPool { get => (this._httpConnectionPool = this._httpConnectionPool ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.HttpConnectionPool()); set { {_httpConnectionPool = value;} } }

        /// <summary>Internal Acessors for HttpRetryPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.HttpRetryPolicy { get => (this._httpRetryPolicy = this._httpRetryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.HttpRetryPolicy()); set { {_httpRetryPolicy = value;} } }

        /// <summary>Internal Acessors for HttpRetryPolicyMatch</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyMatches Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.HttpRetryPolicyMatch { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).Match; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).Match = value; }

        /// <summary>Internal Acessors for HttpRetryPolicyRetryBackOff</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyRetryBackOff Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.HttpRetryPolicyRetryBackOff { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).RetryBackOff; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).RetryBackOff = value; }

        /// <summary>Internal Acessors for TcpConnectionPool</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpConnectionPool Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.TcpConnectionPool { get => (this._tcpConnectionPool = this._tcpConnectionPool ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.TcpConnectionPool()); set { {_tcpConnectionPool = value;} } }

        /// <summary>Internal Acessors for TcpRetryPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpRetryPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.TcpRetryPolicy { get => (this._tcpRetryPolicy = this._tcpRetryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.TcpRetryPolicy()); set { {_tcpRetryPolicy = value;} } }

        /// <summary>Internal Acessors for TimeoutPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppResiliencyPropertiesInternal.TimeoutPolicy { get => (this._timeoutPolicy = this._timeoutPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.TimeoutPolicy()); set { {_timeoutPolicy = value;} } }

        /// <summary>Initial delay, in milliseconds, before retrying a request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public long? RetryBackOffInitialDelayInMillisecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).RetryBackOffInitialDelayInMillisecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).RetryBackOffInitialDelayInMillisecond = value ?? default(long); }

        /// <summary>Maximum interval, in milliseconds, between retries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public long? RetryBackOffMaxIntervalInMillisecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).RetryBackOffMaxIntervalInMillisecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyInternal)HttpRetryPolicy).RetryBackOffMaxIntervalInMillisecond = value ?? default(long); }

        /// <summary>Backing field for <see cref="TcpConnectionPool" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpConnectionPool _tcpConnectionPool;

        /// <summary>Defines parameters for tcp connection pooling</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpConnectionPool TcpConnectionPool { get => (this._tcpConnectionPool = this._tcpConnectionPool ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.TcpConnectionPool()); set => this._tcpConnectionPool = value; }

        /// <summary>Maximum number of tcp connections allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? TcpConnectionPoolMaxConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpConnectionPoolInternal)TcpConnectionPool).MaxConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpConnectionPoolInternal)TcpConnectionPool).MaxConnection = value ?? default(int); }

        /// <summary>Backing field for <see cref="TcpRetryPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpRetryPolicy _tcpRetryPolicy;

        /// <summary>Policy that defines tcp request retry conditions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpRetryPolicy TcpRetryPolicy { get => (this._tcpRetryPolicy = this._tcpRetryPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.TcpRetryPolicy()); set => this._tcpRetryPolicy = value; }

        /// <summary>Maximum number of attempts to connect to the tcp service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? TcpRetryPolicyMaxConnectAttempt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpRetryPolicyInternal)TcpRetryPolicy).MaxConnectAttempt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpRetryPolicyInternal)TcpRetryPolicy).MaxConnectAttempt = value ?? default(int); }

        /// <summary>Backing field for <see cref="TimeoutPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicy _timeoutPolicy;

        /// <summary>Policy to set request timeouts</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicy TimeoutPolicy { get => (this._timeoutPolicy = this._timeoutPolicy ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.TimeoutPolicy()); set => this._timeoutPolicy = value; }

        /// <summary>Timeout, in seconds, for a request to initiate a connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? TimeoutPolicyConnectionTimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicyInternal)TimeoutPolicy).ConnectionTimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicyInternal)TimeoutPolicy).ConnectionTimeoutInSecond = value ?? default(int); }

        /// <summary>Timeout, in seconds, for a request to respond</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? TimeoutPolicyResponseTimeoutInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicyInternal)TimeoutPolicy).ResponseTimeoutInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicyInternal)TimeoutPolicy).ResponseTimeoutInSecond = value ?? default(int); }

        /// <summary>Creates an new <see cref="AppResiliencyProperties" /> instance.</summary>
        public AppResiliencyProperties()
        {

        }
    }
    /// App Resiliency resource specific properties
    public partial interface IAppResiliencyProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Number of consecutive errors before the circuit breaker opens</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of consecutive errors before the circuit breaker opens",
        SerializedName = @"consecutiveErrors",
        PossibleTypes = new [] { typeof(int) })]
        int? CircuitBreakerPolicyConsecutiveError { get; set; }
        /// <summary>
        /// The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails
        /// as well as closing the circuit breaker if the check succeeds. Defaults to 10s.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails as well as closing the circuit breaker if the check succeeds. Defaults to 10s.",
        SerializedName = @"intervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? CircuitBreakerPolicyIntervalInSecond { get; set; }
        /// <summary>
        /// Maximum percentage of hosts that will be ejected after failure threshold has been met
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum percentage of hosts that will be ejected after failure threshold has been met",
        SerializedName = @"maxEjectionPercent",
        PossibleTypes = new [] { typeof(int) })]
        int? CircuitBreakerPolicyMaxEjectionPercent { get; set; }
        /// <summary>Maximum number of pending http1 requests allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of pending http1 requests allowed",
        SerializedName = @"http1MaxPendingRequests",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpConnectionPoolHttp1MaxPendingRequest { get; set; }
        /// <summary>Maximum number of http2 requests allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of http2 requests allowed",
        SerializedName = @"http2MaxRequests",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpConnectionPoolHttp2MaxRequest { get; set; }
        /// <summary>Maximum number of times a request will retry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of times a request will retry",
        SerializedName = @"maxRetries",
        PossibleTypes = new [] { typeof(int) })]
        int? HttpRetryPolicyMaxRetry { get; set; }
        /// <summary>Errors that can trigger a retry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Errors that can trigger a retry",
        SerializedName = @"errors",
        PossibleTypes = new [] { typeof(string) })]
        string[] MatchError { get; set; }
        /// <summary>Headers that must be present for a request to be retried</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Headers that must be present for a request to be retried",
        SerializedName = @"headers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHeaderMatch) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHeaderMatch[] MatchHeader { get; set; }
        /// <summary>Additional http status codes that can trigger a retry</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional http status codes that can trigger a retry",
        SerializedName = @"httpStatusCodes",
        PossibleTypes = new [] { typeof(int) })]
        int[] MatchHttpStatusCode { get; set; }
        /// <summary>Initial delay, in milliseconds, before retrying a request</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Initial delay, in milliseconds, before retrying a request",
        SerializedName = @"initialDelayInMilliseconds",
        PossibleTypes = new [] { typeof(long) })]
        long? RetryBackOffInitialDelayInMillisecond { get; set; }
        /// <summary>Maximum interval, in milliseconds, between retries</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum interval, in milliseconds, between retries",
        SerializedName = @"maxIntervalInMilliseconds",
        PossibleTypes = new [] { typeof(long) })]
        long? RetryBackOffMaxIntervalInMillisecond { get; set; }
        /// <summary>Maximum number of tcp connections allowed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of tcp connections allowed",
        SerializedName = @"maxConnections",
        PossibleTypes = new [] { typeof(int) })]
        int? TcpConnectionPoolMaxConnection { get; set; }
        /// <summary>Maximum number of attempts to connect to the tcp service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of attempts to connect to the tcp service",
        SerializedName = @"maxConnectAttempts",
        PossibleTypes = new [] { typeof(int) })]
        int? TcpRetryPolicyMaxConnectAttempt { get; set; }
        /// <summary>Timeout, in seconds, for a request to initiate a connection</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timeout, in seconds, for a request to initiate a connection",
        SerializedName = @"connectionTimeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutPolicyConnectionTimeoutInSecond { get; set; }
        /// <summary>Timeout, in seconds, for a request to respond</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Timeout, in seconds, for a request to respond",
        SerializedName = @"responseTimeoutInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? TimeoutPolicyResponseTimeoutInSecond { get; set; }

    }
    /// App Resiliency resource specific properties
    internal partial interface IAppResiliencyPropertiesInternal

    {
        /// <summary>Policy that defines circuit breaker conditions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICircuitBreakerPolicy CircuitBreakerPolicy { get; set; }
        /// <summary>Number of consecutive errors before the circuit breaker opens</summary>
        int? CircuitBreakerPolicyConsecutiveError { get; set; }
        /// <summary>
        /// The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails
        /// as well as closing the circuit breaker if the check succeeds. Defaults to 10s.
        /// </summary>
        int? CircuitBreakerPolicyIntervalInSecond { get; set; }
        /// <summary>
        /// Maximum percentage of hosts that will be ejected after failure threshold has been met
        /// </summary>
        int? CircuitBreakerPolicyMaxEjectionPercent { get; set; }
        /// <summary>Defines parameters for http connection pooling</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpConnectionPool HttpConnectionPool { get; set; }
        /// <summary>Maximum number of pending http1 requests allowed</summary>
        int? HttpConnectionPoolHttp1MaxPendingRequest { get; set; }
        /// <summary>Maximum number of http2 requests allowed</summary>
        int? HttpConnectionPoolHttp2MaxRequest { get; set; }
        /// <summary>Policy that defines http request retry conditions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicy HttpRetryPolicy { get; set; }
        /// <summary>Conditions that must be met for a request to be retried</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyMatches HttpRetryPolicyMatch { get; set; }
        /// <summary>Maximum number of times a request will retry</summary>
        int? HttpRetryPolicyMaxRetry { get; set; }
        /// <summary>Settings for retry backoff characteristics</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHttpRetryPolicyRetryBackOff HttpRetryPolicyRetryBackOff { get; set; }
        /// <summary>Errors that can trigger a retry</summary>
        string[] MatchError { get; set; }
        /// <summary>Headers that must be present for a request to be retried</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IHeaderMatch[] MatchHeader { get; set; }
        /// <summary>Additional http status codes that can trigger a retry</summary>
        int[] MatchHttpStatusCode { get; set; }
        /// <summary>Initial delay, in milliseconds, before retrying a request</summary>
        long? RetryBackOffInitialDelayInMillisecond { get; set; }
        /// <summary>Maximum interval, in milliseconds, between retries</summary>
        long? RetryBackOffMaxIntervalInMillisecond { get; set; }
        /// <summary>Defines parameters for tcp connection pooling</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpConnectionPool TcpConnectionPool { get; set; }
        /// <summary>Maximum number of tcp connections allowed</summary>
        int? TcpConnectionPoolMaxConnection { get; set; }
        /// <summary>Policy that defines tcp request retry conditions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITcpRetryPolicy TcpRetryPolicy { get; set; }
        /// <summary>Maximum number of attempts to connect to the tcp service</summary>
        int? TcpRetryPolicyMaxConnectAttempt { get; set; }
        /// <summary>Policy to set request timeouts</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ITimeoutPolicy TimeoutPolicy { get; set; }
        /// <summary>Timeout, in seconds, for a request to initiate a connection</summary>
        int? TimeoutPolicyConnectionTimeoutInSecond { get; set; }
        /// <summary>Timeout, in seconds, for a request to respond</summary>
        int? TimeoutPolicyResponseTimeoutInSecond { get; set; }

    }
}