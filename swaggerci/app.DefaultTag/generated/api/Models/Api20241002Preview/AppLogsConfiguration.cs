// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Configuration of application logs</summary>
    public partial class AppLogsConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppLogsConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppLogsConfigurationInternal
    {

        /// <summary>Backing field for <see cref="Destination" /> property.</summary>
        private string _destination;

        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Destination { get => this._destination; set => this._destination = value; }

        /// <summary>Log analytics customer id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string LogAnalyticConfigurationCustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfigurationInternal)LogAnalyticsConfiguration).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfigurationInternal)LogAnalyticsConfiguration).CustomerId = value ?? null; }

        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? LogAnalyticConfigurationDynamicJsonColumn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfigurationInternal)LogAnalyticsConfiguration).DynamicJsonColumn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfigurationInternal)LogAnalyticsConfiguration).DynamicJsonColumn = value ?? default(bool); }

        /// <summary>Log analytics customer key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string LogAnalyticConfigurationSharedKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfigurationInternal)LogAnalyticsConfiguration).SharedKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfigurationInternal)LogAnalyticsConfiguration).SharedKey = value ?? null; }

        /// <summary>Backing field for <see cref="LogAnalyticsConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfiguration _logAnalyticsConfiguration;

        /// <summary>
        /// Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfiguration LogAnalyticsConfiguration { get => (this._logAnalyticsConfiguration = this._logAnalyticsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.LogAnalyticsConfiguration()); set => this._logAnalyticsConfiguration = value; }

        /// <summary>Internal Acessors for LogAnalyticsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IAppLogsConfigurationInternal.LogAnalyticsConfiguration { get => (this._logAnalyticsConfiguration = this._logAnalyticsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.LogAnalyticsConfiguration()); set { {_logAnalyticsConfiguration = value;} } }

        /// <summary>Creates an new <see cref="AppLogsConfiguration" /> instance.</summary>
        public AppLogsConfiguration()
        {

        }
    }
    /// Configuration of application logs
    public partial interface IAppLogsConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
        SerializedName = @"destination",
        PossibleTypes = new [] { typeof(string) })]
        string Destination { get; set; }
        /// <summary>Log analytics customer id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log analytics customer id",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticConfigurationCustomerId { get; set; }
        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether to parse json string log into dynamic json columns",
        SerializedName = @"dynamicJsonColumns",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogAnalyticConfigurationDynamicJsonColumn { get; set; }
        /// <summary>Log analytics customer key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log analytics customer key",
        SerializedName = @"sharedKey",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticConfigurationSharedKey { get; set; }

    }
    /// Configuration of application logs
    internal partial interface IAppLogsConfigurationInternal

    {
        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        string Destination { get; set; }
        /// <summary>Log analytics customer id</summary>
        string LogAnalyticConfigurationCustomerId { get; set; }
        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        bool? LogAnalyticConfigurationDynamicJsonColumn { get; set; }
        /// <summary>Log analytics customer key</summary>
        string LogAnalyticConfigurationSharedKey { get; set; }
        /// <summary>
        /// Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ILogAnalyticsConfiguration LogAnalyticsConfiguration { get; set; }

    }
}