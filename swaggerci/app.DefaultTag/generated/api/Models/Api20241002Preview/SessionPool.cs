// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Container App session pool.</summary>
    public partial class SessionPool :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPool,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.TrackedResource();

        /// <summary>The container type of the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ContainerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ContainerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType)""); }

        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer[] CustomContainerTemplateContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplateContainer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplateContainer = value ?? null /* arrayOf */; }

        /// <summary>The cooldown period of a session in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? DynamicPoolConfigurationCooldownPeriodInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).DynamicPoolConfigurationCooldownPeriodInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).DynamicPoolConfigurationCooldownPeriodInSecond = value ?? default(int); }

        /// <summary>The execution type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).DynamicPoolConfigurationExecutionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).DynamicPoolConfigurationExecutionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType)""); }

        /// <summary>Resource ID of the session pool's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string EnvironmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).EnvironmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).EnvironmentId = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>Target port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).IngressTargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).IngressTargetPort = value ?? default(int); }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Internal Acessors for CustomContainerTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplate Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.CustomContainerTemplate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplate = value; }

        /// <summary>Internal Acessors for CustomContainerTemplateIngress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionIngress Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.CustomContainerTemplateIngress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplateIngress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplateIngress = value; }

        /// <summary>Internal Acessors for CustomContainerTemplateRegistryCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionRegistryCredentials Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.CustomContainerTemplateRegistryCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplateRegistryCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).CustomContainerTemplateRegistryCredentials = value; }

        /// <summary>Internal Acessors for DynamicPoolConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.DynamicPoolConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).DynamicPoolConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).DynamicPoolConfiguration = value; }

        /// <summary>Internal Acessors for NodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.NodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).NodeCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).NodeCount = value; }

        /// <summary>Internal Acessors for PoolManagementEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.PoolManagementEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).PoolManagementEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).PoolManagementEndpoint = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.SessionPoolProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ScaleConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.ScaleConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ScaleConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ScaleConfiguration = value; }

        /// <summary>Internal Acessors for SessionNetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolInternal.SessionNetworkConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).SessionNetworkConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).SessionNetworkConfiguration = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>The number of nodes the session pool is using.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? NodeCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).NodeCount; }

        /// <summary>The endpoint to manage the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string PoolManagementEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).PoolManagementEndpoint; }

        /// <summary>The pool management type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).PoolManagementType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).PoolManagementType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolProperties _property;

        /// <summary>Container App session pool resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.SessionPoolProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ProvisioningState; }

        /// <summary>The name of the secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsPasswordSecretRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).RegistryCredentialsPasswordSecretRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).RegistryCredentialsPasswordSecretRef = value ?? null; }

        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsRegistryServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).RegistryCredentialsRegistryServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).RegistryCredentialsRegistryServer = value ?? null; }

        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).RegistryCredentialsUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).RegistryCredentialsUsername = value ?? null; }

        /// <summary>The maximum count of sessions at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? ScaleConfigurationMaxConcurrentSession { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ScaleConfigurationMaxConcurrentSession; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ScaleConfigurationMaxConcurrentSession = value ?? default(int); }

        /// <summary>The minimum count of ready session instances.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? ScaleConfigurationReadySessionInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ScaleConfigurationReadySessionInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).ScaleConfigurationReadySessionInstance = value ?? default(int); }

        /// <summary>The secrets of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] Secret { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).Secret; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).Secret = value ?? null /* arrayOf */; }

        /// <summary>Network status for the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus? SessionNetworkConfigurationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).SessionNetworkConfigurationStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal)Property).SessionNetworkConfigurationStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>Creates an new <see cref="SessionPool" /> instance.</summary>
        public SessionPool()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Container App session pool.
    public partial interface ISessionPool :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResource
    {
        /// <summary>The container type of the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The container type of the sessions.",
        SerializedName = @"containerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get; set; }
        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of container definitions for the sessions of the session pool.",
        SerializedName = @"containers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer[] CustomContainerTemplateContainer { get; set; }
        /// <summary>The cooldown period of a session in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cooldown period of a session in seconds.",
        SerializedName = @"cooldownPeriodInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? DynamicPoolConfigurationCooldownPeriodInSecond { get; set; }
        /// <summary>The execution type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The execution type of the session pool.",
        SerializedName = @"executionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get; set; }
        /// <summary>Resource ID of the session pool's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the session pool's environment.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>Target port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>The number of nodes the session pool is using.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of nodes the session pool is using.",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeCount { get;  }
        /// <summary>The endpoint to manage the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint to manage the pool.",
        SerializedName = @"poolManagementEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string PoolManagementEndpoint { get;  }
        /// <summary>The pool management type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pool management type of the session pool.",
        SerializedName = @"poolManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get; set; }
        /// <summary>Provisioning state of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the session pool.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get;  }
        /// <summary>The name of the secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the secret that contains the registry login password",
        SerializedName = @"passwordSecretRef",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry server.",
        SerializedName = @"registryServer",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsRegistryServer { get; set; }
        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsUsername { get; set; }
        /// <summary>The maximum count of sessions at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum count of sessions at the same time.",
        SerializedName = @"maxConcurrentSessions",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleConfigurationMaxConcurrentSession { get; set; }
        /// <summary>The minimum count of ready session instances.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum count of ready session instances.",
        SerializedName = @"readySessionInstances",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleConfigurationReadySessionInstance { get; set; }
        /// <summary>The secrets of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secrets of the session pool.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] Secret { get; set; }
        /// <summary>Network status for the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network status for the sessions.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus? SessionNetworkConfigurationStatus { get; set; }

    }
    /// Container App session pool.
    internal partial interface ISessionPoolInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>The container type of the sessions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get; set; }
        /// <summary>The custom container configuration if the containerType is CustomContainer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplate CustomContainerTemplate { get; set; }
        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer[] CustomContainerTemplateContainer { get; set; }
        /// <summary>Session pool ingress configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionIngress CustomContainerTemplateIngress { get; set; }
        /// <summary>
        /// Private container registry credentials for containers used by the sessions of the session pool.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionRegistryCredentials CustomContainerTemplateRegistryCredentials { get; set; }
        /// <summary>The pool configuration if the poolManagementType is dynamic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfiguration DynamicPoolConfiguration { get; set; }
        /// <summary>The cooldown period of a session in seconds.</summary>
        int? DynamicPoolConfigurationCooldownPeriodInSecond { get; set; }
        /// <summary>The execution type of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get; set; }
        /// <summary>Resource ID of the session pool's environment.</summary>
        string EnvironmentId { get; set; }
        /// <summary>Target port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>The number of nodes the session pool is using.</summary>
        int? NodeCount { get; set; }
        /// <summary>The endpoint to manage the pool.</summary>
        string PoolManagementEndpoint { get; set; }
        /// <summary>The pool management type of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get; set; }
        /// <summary>Container App session pool resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolProperties Property { get; set; }
        /// <summary>Provisioning state of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get; set; }
        /// <summary>The name of the secret that contains the registry login password</summary>
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        string RegistryCredentialsRegistryServer { get; set; }
        /// <summary>Container registry username.</summary>
        string RegistryCredentialsUsername { get; set; }
        /// <summary>The scale configuration of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfiguration ScaleConfiguration { get; set; }
        /// <summary>The maximum count of sessions at the same time.</summary>
        int? ScaleConfigurationMaxConcurrentSession { get; set; }
        /// <summary>The minimum count of ready session instances.</summary>
        int? ScaleConfigurationReadySessionInstance { get; set; }
        /// <summary>The secrets of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] Secret { get; set; }
        /// <summary>The network configuration of the sessions in the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfiguration SessionNetworkConfiguration { get; set; }
        /// <summary>Network status for the sessions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus? SessionNetworkConfigurationStatus { get; set; }

    }
}