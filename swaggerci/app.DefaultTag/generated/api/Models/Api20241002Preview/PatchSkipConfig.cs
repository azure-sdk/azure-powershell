// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>The configuration for patcher to skip a patch or not.</summary>
    public partial class PatchSkipConfig :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IPatchSkipConfig,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IPatchSkipConfigInternal
    {

        /// <summary>Backing field for <see cref="Skip" /> property.</summary>
        private bool? _skip;

        /// <summary>The flag to indicate whether to skip the patch or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? Skip { get => this._skip; set => this._skip = value; }

        /// <summary>Creates an new <see cref="PatchSkipConfig" /> instance.</summary>
        public PatchSkipConfig()
        {

        }
    }
    /// The configuration for patcher to skip a patch or not.
    public partial interface IPatchSkipConfig :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>The flag to indicate whether to skip the patch or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The flag to indicate whether to skip the patch or not.",
        SerializedName = @"skip",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Skip { get; set; }

    }
    /// The configuration for patcher to skip a patch or not.
    internal partial interface IPatchSkipConfigInternal

    {
        /// <summary>The flag to indicate whether to skip the patch or not.</summary>
        bool? Skip { get; set; }

    }
}