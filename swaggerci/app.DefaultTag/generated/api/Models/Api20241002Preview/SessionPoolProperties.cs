// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Container App session pool resource specific properties</summary>
    public partial class SessionPoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ContainerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? _containerType;

        /// <summary>The container type of the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get => this._containerType; set => this._containerType = value; }

        /// <summary>Backing field for <see cref="CustomContainerTemplate" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplate _customContainerTemplate;

        /// <summary>The custom container configuration if the containerType is CustomContainer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplate CustomContainerTemplate { get => (this._customContainerTemplate = this._customContainerTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.CustomContainerTemplate()); set => this._customContainerTemplate = value; }

        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer[] CustomContainerTemplateContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).Container; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).Container = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DynamicPoolConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfiguration _dynamicPoolConfiguration;

        /// <summary>The pool configuration if the poolManagementType is dynamic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfiguration DynamicPoolConfiguration { get => (this._dynamicPoolConfiguration = this._dynamicPoolConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.DynamicPoolConfiguration()); set => this._dynamicPoolConfiguration = value; }

        /// <summary>The cooldown period of a session in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? DynamicPoolConfigurationCooldownPeriodInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).CooldownPeriodInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).CooldownPeriodInSecond = value ?? default(int); }

        /// <summary>The execution type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).ExecutionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).ExecutionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType)""); }

        /// <summary>Backing field for <see cref="EnvironmentId" /> property.</summary>
        private string _environmentId;

        /// <summary>Resource ID of the session pool's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string EnvironmentId { get => this._environmentId; set => this._environmentId = value; }

        /// <summary>Target port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).IngressTargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).IngressTargetPort = value ?? default(int); }

        /// <summary>Backing field for <see cref="ManagedIdentitySetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IManagedIdentitySetting[] _managedIdentitySetting;

        /// <summary>Optional settings for a Managed Identity that is assigned to the Session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IManagedIdentitySetting[] ManagedIdentitySetting { get => this._managedIdentitySetting; set => this._managedIdentitySetting = value; }

        /// <summary>Internal Acessors for CustomContainerTemplate</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplate Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.CustomContainerTemplate { get => (this._customContainerTemplate = this._customContainerTemplate ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.CustomContainerTemplate()); set { {_customContainerTemplate = value;} } }

        /// <summary>Internal Acessors for CustomContainerTemplateIngress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionIngress Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.CustomContainerTemplateIngress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).Ingress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).Ingress = value; }

        /// <summary>Internal Acessors for CustomContainerTemplateRegistryCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionRegistryCredentials Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.CustomContainerTemplateRegistryCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentials = value; }

        /// <summary>Internal Acessors for DynamicPoolConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.DynamicPoolConfiguration { get => (this._dynamicPoolConfiguration = this._dynamicPoolConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.DynamicPoolConfiguration()); set { {_dynamicPoolConfiguration = value;} } }

        /// <summary>Internal Acessors for NodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.NodeCount { get => this._nodeCount; set { {_nodeCount = value;} } }

        /// <summary>Internal Acessors for PoolManagementEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.PoolManagementEndpoint { get => this._poolManagementEndpoint; set { {_poolManagementEndpoint = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ScaleConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.ScaleConfiguration { get => (this._scaleConfiguration = this._scaleConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ScaleConfiguration()); set { {_scaleConfiguration = value;} } }

        /// <summary>Internal Acessors for SessionNetworkConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolPropertiesInternal.SessionNetworkConfiguration { get => (this._sessionNetworkConfiguration = this._sessionNetworkConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.SessionNetworkConfiguration()); set { {_sessionNetworkConfiguration = value;} } }

        /// <summary>Backing field for <see cref="NodeCount" /> property.</summary>
        private int? _nodeCount;

        /// <summary>The number of nodes the session pool is using.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int? NodeCount { get => this._nodeCount; }

        /// <summary>Backing field for <see cref="PoolManagementEndpoint" /> property.</summary>
        private string _poolManagementEndpoint;

        /// <summary>The endpoint to manage the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string PoolManagementEndpoint { get => this._poolManagementEndpoint; }

        /// <summary>Backing field for <see cref="PoolManagementType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? _poolManagementType;

        /// <summary>The pool management type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get => this._poolManagementType; set => this._poolManagementType = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>
        /// A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned
        /// identity Resource ID. For system-assigned identities, use 'system'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsIdentity = value ?? null; }

        /// <summary>The name of the secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsPasswordSecretRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsPasswordSecretRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsPasswordSecretRef = value ?? null; }

        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsServer = value ?? null; }

        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplateInternal)CustomContainerTemplate).RegistryCredentialsUsername = value ?? null; }

        /// <summary>Backing field for <see cref="ScaleConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfiguration _scaleConfiguration;

        /// <summary>The scale configuration of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfiguration ScaleConfiguration { get => (this._scaleConfiguration = this._scaleConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ScaleConfiguration()); set => this._scaleConfiguration = value; }

        /// <summary>The maximum count of sessions at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? ScaleConfigurationMaxConcurrentSession { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfigurationInternal)ScaleConfiguration).MaxConcurrentSession; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfigurationInternal)ScaleConfiguration).MaxConcurrentSession = value ?? default(int); }

        /// <summary>The minimum count of ready session instances.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? ScaleConfigurationReadySessionInstance { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfigurationInternal)ScaleConfiguration).ReadySessionInstance; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfigurationInternal)ScaleConfiguration).ReadySessionInstance = value ?? default(int); }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] _secret;

        /// <summary>The secrets of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Backing field for <see cref="SessionNetworkConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfiguration _sessionNetworkConfiguration;

        /// <summary>The network configuration of the sessions in the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfiguration SessionNetworkConfiguration { get => (this._sessionNetworkConfiguration = this._sessionNetworkConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.SessionNetworkConfiguration()); set => this._sessionNetworkConfiguration = value; }

        /// <summary>Network status for the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus? SessionNetworkConfigurationStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfigurationInternal)SessionNetworkConfiguration).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfigurationInternal)SessionNetworkConfiguration).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus)""); }

        /// <summary>Creates an new <see cref="SessionPoolProperties" /> instance.</summary>
        public SessionPoolProperties()
        {

        }
    }
    /// Container App session pool resource specific properties
    public partial interface ISessionPoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>The container type of the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The container type of the sessions.",
        SerializedName = @"containerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get; set; }
        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of container definitions for the sessions of the session pool.",
        SerializedName = @"containers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer[] CustomContainerTemplateContainer { get; set; }
        /// <summary>The cooldown period of a session in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cooldown period of a session in seconds.",
        SerializedName = @"cooldownPeriodInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? DynamicPoolConfigurationCooldownPeriodInSecond { get; set; }
        /// <summary>The execution type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The execution type of the session pool.",
        SerializedName = @"executionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get; set; }
        /// <summary>Resource ID of the session pool's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the session pool's environment.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>Target port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>Optional settings for a Managed Identity that is assigned to the Session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional settings for a Managed Identity that is assigned to the Session pool.",
        SerializedName = @"managedIdentitySettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IManagedIdentitySetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IManagedIdentitySetting[] ManagedIdentitySetting { get; set; }
        /// <summary>The number of nodes the session pool is using.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of nodes the session pool is using.",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeCount { get;  }
        /// <summary>The endpoint to manage the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint to manage the pool.",
        SerializedName = @"poolManagementEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string PoolManagementEndpoint { get;  }
        /// <summary>The pool management type of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pool management type of the session pool.",
        SerializedName = @"poolManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get; set; }
        /// <summary>Provisioning state of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the session pool.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned
        /// identity Resource ID. For system-assigned identities, use 'system'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsIdentity { get; set; }
        /// <summary>The name of the secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the secret that contains the registry login password",
        SerializedName = @"passwordSecretRef",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry server.",
        SerializedName = @"server",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsServer { get; set; }
        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsUsername { get; set; }
        /// <summary>The maximum count of sessions at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum count of sessions at the same time.",
        SerializedName = @"maxConcurrentSessions",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleConfigurationMaxConcurrentSession { get; set; }
        /// <summary>The minimum count of ready session instances.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum count of ready session instances.",
        SerializedName = @"readySessionInstances",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleConfigurationReadySessionInstance { get; set; }
        /// <summary>The secrets of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secrets of the session pool.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] Secret { get; set; }
        /// <summary>Network status for the sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network status for the sessions.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus? SessionNetworkConfigurationStatus { get; set; }

    }
    /// Container App session pool resource specific properties
    internal partial interface ISessionPoolPropertiesInternal

    {
        /// <summary>The container type of the sessions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get; set; }
        /// <summary>The custom container configuration if the containerType is CustomContainer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ICustomContainerTemplate CustomContainerTemplate { get; set; }
        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionContainer[] CustomContainerTemplateContainer { get; set; }
        /// <summary>Session pool ingress configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionIngress CustomContainerTemplateIngress { get; set; }
        /// <summary>
        /// Private container registry credentials for containers used by the sessions of the session pool.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionRegistryCredentials CustomContainerTemplateRegistryCredentials { get; set; }
        /// <summary>The pool configuration if the poolManagementType is dynamic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IDynamicPoolConfiguration DynamicPoolConfiguration { get; set; }
        /// <summary>The cooldown period of a session in seconds.</summary>
        int? DynamicPoolConfigurationCooldownPeriodInSecond { get; set; }
        /// <summary>The execution type of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get; set; }
        /// <summary>Resource ID of the session pool's environment.</summary>
        string EnvironmentId { get; set; }
        /// <summary>Target port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>Optional settings for a Managed Identity that is assigned to the Session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IManagedIdentitySetting[] ManagedIdentitySetting { get; set; }
        /// <summary>The number of nodes the session pool is using.</summary>
        int? NodeCount { get; set; }
        /// <summary>The endpoint to manage the pool.</summary>
        string PoolManagementEndpoint { get; set; }
        /// <summary>The pool management type of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get; set; }
        /// <summary>Provisioning state of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned
        /// identity Resource ID. For system-assigned identities, use 'system'
        /// </summary>
        string RegistryCredentialsIdentity { get; set; }
        /// <summary>The name of the secret that contains the registry login password</summary>
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        string RegistryCredentialsServer { get; set; }
        /// <summary>Container registry username.</summary>
        string RegistryCredentialsUsername { get; set; }
        /// <summary>The scale configuration of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.IScaleConfiguration ScaleConfiguration { get; set; }
        /// <summary>The maximum count of sessions at the same time.</summary>
        int? ScaleConfigurationMaxConcurrentSession { get; set; }
        /// <summary>The minimum count of ready session instances.</summary>
        int? ScaleConfigurationReadySessionInstance { get; set; }
        /// <summary>The secrets of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionPoolSecret[] Secret { get; set; }
        /// <summary>The network configuration of the sessions in the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20241002Preview.ISessionNetworkConfiguration SessionNetworkConfiguration { get; set; }
        /// <summary>Network status for the sessions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus? SessionNetworkConfigurationStatus { get; set; }

    }
}