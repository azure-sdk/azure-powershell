// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Criteria to match on</summary>
    public partial class HttpRouteMatch :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IHttpRouteMatch,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IHttpRouteMatchInternal
    {

        /// <summary>Backing field for <see cref="CaseSensitive" /> property.</summary>
        private bool? _caseSensitive;

        /// <summary>path case sensitive, default is true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? CaseSensitive { get => this._caseSensitive; set => this._caseSensitive = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>match on exact path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="PathSeparatedPrefix" /> property.</summary>
        private string _pathSeparatedPrefix;

        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string PathSeparatedPrefix { get => this._pathSeparatedPrefix; set => this._pathSeparatedPrefix = value; }

        /// <summary>Backing field for <see cref="Prefix" /> property.</summary>
        private string _prefix;

        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Prefix { get => this._prefix; set => this._prefix = value; }

        /// <summary>Creates an new <see cref="HttpRouteMatch" /> instance.</summary>
        public HttpRouteMatch()
        {

        }
    }
    /// Criteria to match on
    public partial interface IHttpRouteMatch :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>path case sensitive, default is true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"path case sensitive, default is true",
        SerializedName = @"caseSensitive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CaseSensitive { get; set; }
        /// <summary>match on exact path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"match on exact path",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"match on all prefix's. Not exact",
        SerializedName = @"pathSeparatedPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string PathSeparatedPrefix { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"match on all prefix's. Not exact",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        string Prefix { get; set; }

    }
    /// Criteria to match on
    internal partial interface IHttpRouteMatchInternal

    {
        /// <summary>path case sensitive, default is true</summary>
        bool? CaseSensitive { get; set; }
        /// <summary>match on exact path</summary>
        string Path { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        string PathSeparatedPrefix { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        string Prefix { get; set; }

    }
}