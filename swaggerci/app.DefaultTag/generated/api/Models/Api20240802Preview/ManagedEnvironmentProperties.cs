// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Managed environment resource specific properties</summary>
    public partial class ManagedEnvironmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal
    {

        /// <summary>Application Insights connection string</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AppInsightConfigurationConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppInsightsConfigurationInternal)AppInsightsConfiguration).ConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppInsightsConfigurationInternal)AppInsightsConfiguration).ConnectionString = value ?? null; }

        /// <summary>Backing field for <see cref="AppInsightsConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppInsightsConfiguration _appInsightsConfiguration;

        /// <summary>Environment level Application Insights configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppInsightsConfiguration AppInsightsConfiguration { get => (this._appInsightsConfiguration = this._appInsightsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.AppInsightsConfiguration()); set => this._appInsightsConfiguration = value; }

        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AppLogConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).Destination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).Destination = value ?? null; }

        /// <summary>Backing field for <see cref="AppLogsConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfiguration _appLogsConfiguration;

        /// <summary>
        /// Cluster configuration which enables the log daemon to export
        /// app logs to a destination. Currently only "log-analytics" is
        /// supported
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfiguration AppLogsConfiguration { get => (this._appLogsConfiguration = this._appLogsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.AppLogsConfiguration()); set => this._appLogsConfiguration = value; }

        /// <summary>
        /// Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CertificateKeyVaultPropertyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateKeyVaultPropertyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateKeyVaultPropertyIdentity = value ?? null; }

        /// <summary>URL pointing to the Azure Key Vault secret that holds the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CertificateKeyVaultPropertyKeyVaultUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateKeyVaultPropertyKeyVaultUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateKeyVaultPropertyKeyVaultUrl = value ?? null; }

        /// <summary>Backing field for <see cref="CustomDomainConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfiguration _customDomainConfiguration;

        /// <summary>Custom domain configuration for the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfiguration CustomDomainConfiguration { get => (this._customDomainConfiguration = this._customDomainConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.CustomDomainConfiguration()); set => this._customDomainConfiguration = value; }

        /// <summary>Certificate password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationCertificatePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificatePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificatePassword = value ?? null; }

        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public byte[] CustomDomainConfigurationCertificateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateValue = value ?? null /* byte array */; }

        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationCustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CustomDomainVerificationId; }

        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationDnsSuffix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).DnsSuffix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).DnsSuffix = value ?? null; }

        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public global::System.DateTime? CustomDomainConfigurationExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).ExpirationDate; }

        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationSubjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).SubjectName; }

        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).Thumbprint; }

        /// <summary>Backing field for <see cref="DaprAiConnectionString" /> property.</summary>
        private string _daprAiConnectionString;

        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string DaprAiConnectionString { get => this._daprAiConnectionString; set => this._daprAiConnectionString = value; }

        /// <summary>Backing field for <see cref="DaprAiInstrumentationKey" /> property.</summary>
        private string _daprAiInstrumentationKey;

        /// <summary>
        /// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string DaprAiInstrumentationKey { get => this._daprAiInstrumentationKey; set => this._daprAiInstrumentationKey = value; }

        /// <summary>Backing field for <see cref="DaprConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfiguration _daprConfiguration;

        /// <summary>The configuration of Dapr component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfiguration DaprConfiguration { get => (this._daprConfiguration = this._daprConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.DaprConfiguration()); set => this._daprConfiguration = value; }

        /// <summary>The version of Dapr</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DaprConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfigurationInternal)DaprConfiguration).Version; }

        /// <summary>The data dog api key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DataDogConfigurationKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DataDogConfigurationKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DataDogConfigurationKey = value ?? null; }

        /// <summary>The data dog site</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DataDogConfigurationSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DataDogConfigurationSite; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DataDogConfigurationSite = value ?? null; }

        /// <summary>Backing field for <see cref="DefaultDomain" /> property.</summary>
        private string _defaultDomain;

        /// <summary>Default Domain Name for the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string DefaultDomain { get => this._defaultDomain; }

        /// <summary>Backing field for <see cref="DeploymentError" /> property.</summary>
        private string _deploymentError;

        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string DeploymentError { get => this._deploymentError; }

        /// <summary>Open telemetry otlp configurations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOtlpConfiguration[] DestinationConfigurationOtlpConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DestinationConfigurationOtlpConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DestinationConfigurationOtlpConfiguration = value ?? null /* arrayOf */; }

        /// <summary>Boolean indicating whether the peer traffic encryption is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? EncryptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationInternal)PeerTrafficConfiguration).EncryptionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationInternal)PeerTrafficConfiguration).EncryptionEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="EventStreamEndpoint" /> property.</summary>
        private string _eventStreamEndpoint;

        /// <summary>The endpoint of the eventstream of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string EventStreamEndpoint { get => this._eventStreamEndpoint; }

        /// <summary>Backing field for <see cref="InfrastructureResourceGroup" /> property.</summary>
        private string _infrastructureResourceGroup;

        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a
        /// subnet ID is provided, this resource group will be created in the same subscription as the subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string InfrastructureResourceGroup { get => this._infrastructureResourceGroup; set => this._infrastructureResourceGroup = value; }

        /// <summary>Backing field for <see cref="KedaConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfiguration _kedaConfiguration;

        /// <summary>The configuration of Keda component.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfiguration KedaConfiguration { get => (this._kedaConfiguration = this._kedaConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.KedaConfiguration()); set => this._kedaConfiguration = value; }

        /// <summary>The version of Keda</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string KedaConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfigurationInternal)KedaConfiguration).Version; }

        /// <summary>Log analytics customer id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string LogAnalyticConfigurationCustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticConfigurationCustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticConfigurationCustomerId = value ?? null; }

        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? LogAnalyticConfigurationDynamicJsonColumn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticConfigurationDynamicJsonColumn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticConfigurationDynamicJsonColumn = value ?? default(bool); }

        /// <summary>Log analytics customer key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string LogAnalyticConfigurationSharedKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticConfigurationSharedKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticConfigurationSharedKey = value ?? null; }

        /// <summary>Open telemetry logs destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] LogConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).LogConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).LogConfigurationDestination = value ?? null /* arrayOf */; }

        /// <summary>Open telemetry metrics destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] MetricConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).MetricConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).MetricConfigurationDestination = value ?? null /* arrayOf */; }

        /// <summary>Boolean indicating if including keda metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? MetricConfigurationIncludeKeda { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).MetricConfigurationIncludeKeda; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).MetricConfigurationIncludeKeda = value ?? default(bool); }

        /// <summary>Internal Acessors for AppInsightsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppInsightsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.AppInsightsConfiguration { get => (this._appInsightsConfiguration = this._appInsightsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.AppInsightsConfiguration()); set { {_appInsightsConfiguration = value;} } }

        /// <summary>Internal Acessors for AppLogConfigurationLogAnalyticsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ILogAnalyticsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.AppLogConfigurationLogAnalyticsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfigurationInternal)AppLogsConfiguration).LogAnalyticsConfiguration = value; }

        /// <summary>Internal Acessors for AppLogsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.AppLogsConfiguration { get => (this._appLogsConfiguration = this._appLogsConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.AppLogsConfiguration()); set { {_appLogsConfiguration = value;} } }

        /// <summary>Internal Acessors for CustomDomainConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.CustomDomainConfiguration { get => (this._customDomainConfiguration = this._customDomainConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.CustomDomainConfiguration()); set { {_customDomainConfiguration = value;} } }

        /// <summary>Internal Acessors for CustomDomainConfigurationCertificateKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICertificateKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.CustomDomainConfigurationCertificateKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CertificateKeyVaultProperty = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationCustomDomainVerificationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.CustomDomainConfigurationCustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CustomDomainVerificationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).CustomDomainVerificationId = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.CustomDomainConfigurationExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).ExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).ExpirationDate = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationSubjectName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.CustomDomainConfigurationSubjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).SubjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).SubjectName = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationThumbprint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.CustomDomainConfigurationThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).Thumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfigurationInternal)CustomDomainConfiguration).Thumbprint = value; }

        /// <summary>Internal Acessors for DaprConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.DaprConfiguration { get => (this._daprConfiguration = this._daprConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.DaprConfiguration()); set { {_daprConfiguration = value;} } }

        /// <summary>Internal Acessors for DaprConfigurationVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.DaprConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfigurationInternal)DaprConfiguration).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfigurationInternal)DaprConfiguration).Version = value; }

        /// <summary>Internal Acessors for DefaultDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.DefaultDomain { get => this._defaultDomain; set { {_defaultDomain = value;} } }

        /// <summary>Internal Acessors for DeploymentError</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.DeploymentError { get => this._deploymentError; set { {_deploymentError = value;} } }

        /// <summary>Internal Acessors for DestinationConfigurationDataDogConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDataDogConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.DestinationConfigurationDataDogConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DestinationConfigurationDataDogConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DestinationConfigurationDataDogConfiguration = value; }

        /// <summary>Internal Acessors for EventStreamEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.EventStreamEndpoint { get => this._eventStreamEndpoint; set { {_eventStreamEndpoint = value;} } }

        /// <summary>Internal Acessors for KedaConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.KedaConfiguration { get => (this._kedaConfiguration = this._kedaConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.KedaConfiguration()); set { {_kedaConfiguration = value;} } }

        /// <summary>Internal Acessors for KedaConfigurationVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.KedaConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfigurationInternal)KedaConfiguration).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfigurationInternal)KedaConfiguration).Version = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.OpenTelemetryConfiguration { get => (this._openTelemetryConfiguration = this._openTelemetryConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.OpenTelemetryConfiguration()); set { {_openTelemetryConfiguration = value;} } }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationDestinationsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDestinationsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.OpenTelemetryConfigurationDestinationsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DestinationsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).DestinationsConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationLogsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ILogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.OpenTelemetryConfigurationLogsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).LogsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).LogsConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationMetricsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IMetricsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.OpenTelemetryConfigurationMetricsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).MetricsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).MetricsConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationTracesConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ITracesConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.OpenTelemetryConfigurationTracesConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).TracesConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).TracesConfiguration = value; }

        /// <summary>Internal Acessors for PeerAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthentication Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.PeerAuthentication { get => (this._peerAuthentication = this._peerAuthentication ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ManagedEnvironmentPropertiesPeerAuthentication()); set { {_peerAuthentication = value;} } }

        /// <summary>Internal Acessors for PeerAuthenticationMtl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IMtls Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.PeerAuthenticationMtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthenticationInternal)PeerAuthentication).Mtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthenticationInternal)PeerAuthentication).Mtl = value; }

        /// <summary>Internal Acessors for PeerTrafficConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.PeerTrafficConfiguration { get => (this._peerTrafficConfiguration = this._peerTrafficConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ManagedEnvironmentPropertiesPeerTrafficConfiguration()); set { {_peerTrafficConfiguration = value;} } }

        /// <summary>Internal Acessors for PeerTrafficConfigurationEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.PeerTrafficConfigurationEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationInternal)PeerTrafficConfiguration).Encryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationInternal)PeerTrafficConfiguration).Encryption = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for StaticIP</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.StaticIP { get => this._staticIP; set { {_staticIP = value;} } }

        /// <summary>Internal Acessors for VnetConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesInternal.VnetConfiguration { get => (this._vnetConfiguration = this._vnetConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.VnetConfiguration()); set { {_vnetConfiguration = value;} } }

        /// <summary>Boolean indicating whether the mutual TLS authentication is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? MtlEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthenticationInternal)PeerAuthentication).MtlEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthenticationInternal)PeerAuthentication).MtlEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="OpenTelemetryConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfiguration _openTelemetryConfiguration;

        /// <summary>Environment Open Telemetry configuration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfiguration OpenTelemetryConfiguration { get => (this._openTelemetryConfiguration = this._openTelemetryConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.OpenTelemetryConfiguration()); set => this._openTelemetryConfiguration = value; }

        /// <summary>Backing field for <see cref="PeerAuthentication" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthentication _peerAuthentication;

        /// <summary>Peer authentication settings for the Managed Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthentication PeerAuthentication { get => (this._peerAuthentication = this._peerAuthentication ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ManagedEnvironmentPropertiesPeerAuthentication()); set => this._peerAuthentication = value; }

        /// <summary>Backing field for <see cref="PeerTrafficConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfiguration _peerTrafficConfiguration;

        /// <summary>Peer traffic settings for the Managed Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfiguration PeerTrafficConfiguration { get => (this._peerTrafficConfiguration = this._peerTrafficConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ManagedEnvironmentPropertiesPeerTrafficConfiguration()); set => this._peerTrafficConfiguration = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>Private endpoint connections to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>
        /// Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="StaticIP" /> property.</summary>
        private string _staticIP;

        /// <summary>Static IP of the Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string StaticIP { get => this._staticIP; }

        /// <summary>Open telemetry traces destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] TraceConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).TraceConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).TraceConfigurationDestination = value ?? null /* arrayOf */; }

        /// <summary>Boolean indicating if including dapr traces</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? TraceConfigurationIncludeDapr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).TraceConfigurationIncludeDapr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfigurationInternal)OpenTelemetryConfiguration).TraceConfigurationIncludeDapr = value ?? default(bool); }

        /// <summary>Backing field for <see cref="VnetConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfiguration _vnetConfiguration;

        /// <summary>Vnet configuration for the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfiguration VnetConfiguration { get => (this._vnetConfiguration = this._vnetConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.VnetConfiguration()); set => this._vnetConfiguration = value; }

        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationDockerBridgeCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).DockerBridgeCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).DockerBridgeCidr = value ?? null; }

        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationInfrastructureSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).InfrastructureSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).InfrastructureSubnetId = value ?? null; }

        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? VnetConfigurationInternal { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).Internal; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).Internal = value ?? default(bool); }

        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationPlatformReservedCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).PlatformReservedCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).PlatformReservedCidr = value ?? null; }

        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationPlatformReservedDnsIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).PlatformReservedDnsIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfigurationInternal)VnetConfiguration).PlatformReservedDnsIP = value ?? null; }

        /// <summary>Backing field for <see cref="WorkloadProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IWorkloadProfile[] _workloadProfile;

        /// <summary>Workload profiles configured for the Managed Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IWorkloadProfile[] WorkloadProfile { get => this._workloadProfile; set => this._workloadProfile = value; }

        /// <summary>Backing field for <see cref="ZoneRedundant" /> property.</summary>
        private bool? _zoneRedundant;

        /// <summary>Whether or not this Managed Environment is zone-redundant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? ZoneRedundant { get => this._zoneRedundant; set => this._zoneRedundant = value; }

        /// <summary>Creates an new <see cref="ManagedEnvironmentProperties" /> instance.</summary>
        public ManagedEnvironmentProperties()
        {

        }
    }
    /// Managed environment resource specific properties
    public partial interface IManagedEnvironmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Application Insights connection string</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Insights connection string",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string AppInsightConfigurationConnectionString { get; set; }
        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
        SerializedName = @"destination",
        PossibleTypes = new [] { typeof(string) })]
        string AppLogConfigurationDestination { get; set; }
        /// <summary>
        /// Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateKeyVaultPropertyIdentity { get; set; }
        /// <summary>URL pointing to the Azure Key Vault secret that holds the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URL pointing to the Azure Key Vault secret that holds the certificate.",
        SerializedName = @"keyVaultUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateKeyVaultPropertyKeyVaultUrl { get; set; }
        /// <summary>Certificate password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate password",
        SerializedName = @"certificatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationCertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PFX or PEM blob",
        SerializedName = @"certificateValue",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] CustomDomainConfigurationCertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id used to verify domain name ownership",
        SerializedName = @"customDomainVerificationId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationCustomDomainVerificationId { get;  }
        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dns suffix for the environment domain",
        SerializedName = @"dnsSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationDnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate expiration date.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CustomDomainConfigurationExpirationDate { get;  }
        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subject name of the certificate.",
        SerializedName = @"subjectName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationSubjectName { get;  }
        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate thumbprint.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationThumbprint { get;  }
        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Insights connection string used by Dapr to export Service to Service communication telemetry",
        SerializedName = @"daprAIConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAiConnectionString { get; set; }
        /// <summary>
        /// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
        SerializedName = @"daprAIInstrumentationKey",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAiInstrumentationKey { get; set; }
        /// <summary>The version of Dapr</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Dapr",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string DaprConfigurationVersion { get;  }
        /// <summary>The data dog api key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data dog api key",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        string DataDogConfigurationKey { get; set; }
        /// <summary>The data dog site</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data dog site",
        SerializedName = @"site",
        PossibleTypes = new [] { typeof(string) })]
        string DataDogConfigurationSite { get; set; }
        /// <summary>Default Domain Name for the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Default Domain Name for the cluster",
        SerializedName = @"defaultDomain",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDomain { get;  }
        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Any errors that occurred during deployment or deployment validation",
        SerializedName = @"deploymentErrors",
        PossibleTypes = new [] { typeof(string) })]
        string DeploymentError { get;  }
        /// <summary>Open telemetry otlp configurations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry otlp configurations",
        SerializedName = @"otlpConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOtlpConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOtlpConfiguration[] DestinationConfigurationOtlpConfiguration { get; set; }
        /// <summary>Boolean indicating whether the peer traffic encryption is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether the peer traffic encryption is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionEnabled { get; set; }
        /// <summary>The endpoint of the eventstream of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint of the eventstream of the Environment.",
        SerializedName = @"eventStreamEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string EventStreamEndpoint { get;  }
        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a
        /// subnet ID is provided, this resource group will be created in the same subscription as the subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
        SerializedName = @"infrastructureResourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureResourceGroup { get; set; }
        /// <summary>The version of Keda</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Keda",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string KedaConfigurationVersion { get;  }
        /// <summary>Log analytics customer id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log analytics customer id",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticConfigurationCustomerId { get; set; }
        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether to parse json string log into dynamic json columns",
        SerializedName = @"dynamicJsonColumns",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogAnalyticConfigurationDynamicJsonColumn { get; set; }
        /// <summary>Log analytics customer key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log analytics customer key",
        SerializedName = @"sharedKey",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticConfigurationSharedKey { get; set; }
        /// <summary>Open telemetry logs destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry logs destinations",
        SerializedName = @"destinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] LogConfigurationDestination { get; set; }
        /// <summary>Open telemetry metrics destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry metrics destinations",
        SerializedName = @"destinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] MetricConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including keda metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if including keda metrics",
        SerializedName = @"includeKeda",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MetricConfigurationIncludeKeda { get; set; }
        /// <summary>Boolean indicating whether the mutual TLS authentication is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether the mutual TLS authentication is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MtlEnabled { get; set; }
        /// <summary>Private endpoint connections to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private endpoint connections to the resource.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Provisioning state of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Environment.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>Static IP of the Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Static IP of the Environment",
        SerializedName = @"staticIp",
        PossibleTypes = new [] { typeof(string) })]
        string StaticIP { get;  }
        /// <summary>Open telemetry traces destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry traces destinations",
        SerializedName = @"destinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] TraceConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including dapr traces</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if including dapr traces",
        SerializedName = @"includeDapr",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TraceConfigurationIncludeDapr { get; set; }
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
        SerializedName = @"dockerBridgeCidr",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
        SerializedName = @"infrastructureSubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationInfrastructureSubnetId { get; set; }
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
        SerializedName = @"internal",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VnetConfigurationInternal { get; set; }
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
        SerializedName = @"platformReservedCidr",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationPlatformReservedCidr { get; set; }
        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
        SerializedName = @"platformReservedDnsIP",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationPlatformReservedDnsIP { get; set; }
        /// <summary>Workload profiles configured for the Managed Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Workload profiles configured for the Managed Environment.",
        SerializedName = @"workloadProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IWorkloadProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IWorkloadProfile[] WorkloadProfile { get; set; }
        /// <summary>Whether or not this Managed Environment is zone-redundant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not this Managed Environment is zone-redundant.",
        SerializedName = @"zoneRedundant",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ZoneRedundant { get; set; }

    }
    /// Managed environment resource specific properties
    internal partial interface IManagedEnvironmentPropertiesInternal

    {
        /// <summary>Application Insights connection string</summary>
        string AppInsightConfigurationConnectionString { get; set; }
        /// <summary>Environment level Application Insights configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppInsightsConfiguration AppInsightsConfiguration { get; set; }
        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        string AppLogConfigurationDestination { get; set; }
        /// <summary>
        /// Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ILogAnalyticsConfiguration AppLogConfigurationLogAnalyticsConfiguration { get; set; }
        /// <summary>
        /// Cluster configuration which enables the log daemon to export
        /// app logs to a destination. Currently only "log-analytics" is
        /// supported
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IAppLogsConfiguration AppLogsConfiguration { get; set; }
        /// <summary>
        /// Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
        /// </summary>
        string CertificateKeyVaultPropertyIdentity { get; set; }
        /// <summary>URL pointing to the Azure Key Vault secret that holds the certificate.</summary>
        string CertificateKeyVaultPropertyKeyVaultUrl { get; set; }
        /// <summary>Custom domain configuration for the environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomDomainConfiguration CustomDomainConfiguration { get; set; }
        /// <summary>Certificate stored in Azure Key Vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICertificateKeyVaultProperties CustomDomainConfigurationCertificateKeyVaultProperty { get; set; }
        /// <summary>Certificate password</summary>
        string CustomDomainConfigurationCertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        byte[] CustomDomainConfigurationCertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        string CustomDomainConfigurationCustomDomainVerificationId { get; set; }
        /// <summary>Dns suffix for the environment domain</summary>
        string CustomDomainConfigurationDnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        global::System.DateTime? CustomDomainConfigurationExpirationDate { get; set; }
        /// <summary>Subject name of the certificate.</summary>
        string CustomDomainConfigurationSubjectName { get; set; }
        /// <summary>Certificate thumbprint.</summary>
        string CustomDomainConfigurationThumbprint { get; set; }
        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        string DaprAiConnectionString { get; set; }
        /// <summary>
        /// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
        /// </summary>
        string DaprAiInstrumentationKey { get; set; }
        /// <summary>The configuration of Dapr component.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDaprConfiguration DaprConfiguration { get; set; }
        /// <summary>The version of Dapr</summary>
        string DaprConfigurationVersion { get; set; }
        /// <summary>The data dog api key</summary>
        string DataDogConfigurationKey { get; set; }
        /// <summary>The data dog site</summary>
        string DataDogConfigurationSite { get; set; }
        /// <summary>Default Domain Name for the cluster</summary>
        string DefaultDomain { get; set; }
        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        string DeploymentError { get; set; }
        /// <summary>Open telemetry datadog destination configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDataDogConfiguration DestinationConfigurationDataDogConfiguration { get; set; }
        /// <summary>Open telemetry otlp configurations</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOtlpConfiguration[] DestinationConfigurationOtlpConfiguration { get; set; }
        /// <summary>Boolean indicating whether the peer traffic encryption is enabled</summary>
        bool? EncryptionEnabled { get; set; }
        /// <summary>The endpoint of the eventstream of the Environment.</summary>
        string EventStreamEndpoint { get; set; }
        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a
        /// subnet ID is provided, this resource group will be created in the same subscription as the subnet.
        /// </summary>
        string InfrastructureResourceGroup { get; set; }
        /// <summary>The configuration of Keda component.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IKedaConfiguration KedaConfiguration { get; set; }
        /// <summary>The version of Keda</summary>
        string KedaConfigurationVersion { get; set; }
        /// <summary>Log analytics customer id</summary>
        string LogAnalyticConfigurationCustomerId { get; set; }
        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        bool? LogAnalyticConfigurationDynamicJsonColumn { get; set; }
        /// <summary>Log analytics customer key</summary>
        string LogAnalyticConfigurationSharedKey { get; set; }
        /// <summary>Open telemetry logs destinations</summary>
        string[] LogConfigurationDestination { get; set; }
        /// <summary>Open telemetry metrics destinations</summary>
        string[] MetricConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including keda metrics</summary>
        bool? MetricConfigurationIncludeKeda { get; set; }
        /// <summary>Boolean indicating whether the mutual TLS authentication is enabled</summary>
        bool? MtlEnabled { get; set; }
        /// <summary>Environment Open Telemetry configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IOpenTelemetryConfiguration OpenTelemetryConfiguration { get; set; }
        /// <summary>Open telemetry destinations configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IDestinationsConfiguration OpenTelemetryConfigurationDestinationsConfiguration { get; set; }
        /// <summary>Open telemetry logs configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ILogsConfiguration OpenTelemetryConfigurationLogsConfiguration { get; set; }
        /// <summary>Open telemetry metrics configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IMetricsConfiguration OpenTelemetryConfigurationMetricsConfiguration { get; set; }
        /// <summary>Open telemetry trace configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ITracesConfiguration OpenTelemetryConfigurationTracesConfiguration { get; set; }
        /// <summary>Peer authentication settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerAuthentication PeerAuthentication { get; set; }
        /// <summary>Mutual TLS authentication settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IMtls PeerAuthenticationMtl { get; set; }
        /// <summary>Peer traffic settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfiguration PeerTrafficConfiguration { get; set; }
        /// <summary>Peer traffic encryption settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption PeerTrafficConfigurationEncryption { get; set; }
        /// <summary>Private endpoint connections to the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Provisioning state of the Environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>Static IP of the Environment</summary>
        string StaticIP { get; set; }
        /// <summary>Open telemetry traces destinations</summary>
        string[] TraceConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including dapr traces</summary>
        bool? TraceConfigurationIncludeDapr { get; set; }
        /// <summary>Vnet configuration for the environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IVnetConfiguration VnetConfiguration { get; set; }
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        string VnetConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        string VnetConfigurationInfrastructureSubnetId { get; set; }
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        bool? VnetConfigurationInternal { get; set; }
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        string VnetConfigurationPlatformReservedCidr { get; set; }
        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        string VnetConfigurationPlatformReservedDnsIP { get; set; }
        /// <summary>Workload profiles configured for the Managed Environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IWorkloadProfile[] WorkloadProfile { get; set; }
        /// <summary>Whether or not this Managed Environment is zone-redundant.</summary>
        bool? ZoneRedundant { get; set; }

    }
}