// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.PowerShell;

    /// <summary>The detailed info of patch operation performing when applying a patch.</summary>
    [System.ComponentModel.TypeConverter(typeof(PatchDetailsTypeConverter))]
    public partial class PatchDetails
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetails"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetails DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new PatchDetails(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetails"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetails DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new PatchDetails(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="PatchDetails" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="PatchDetails" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetails FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal PatchDetails(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("NewLayer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayer = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsNewLayer) content.GetValueForProperty("NewLayer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayer, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetailsNewLayerTypeConverter.ConvertFrom);
            }
            if (content.Contains("OldLayer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayer = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsOldLayer) content.GetValueForProperty("OldLayer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayer, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetailsOldLayerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetContainerName = (string) content.GetValueForProperty("TargetContainerName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("TargetImage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetImage = (string) content.GetValueForProperty("TargetImage",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetImage, global::System.Convert.ToString);
            }
            if (content.Contains("LastDetectionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).LastDetectionTime = (global::System.DateTime) content.GetValueForProperty("LastDetectionTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).LastDetectionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DetectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).DetectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus) content.GetValueForProperty("DetectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).DetectionStatus, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus.CreateFrom);
            }
            if (content.Contains("NewImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewImageName = (string) content.GetValueForProperty("NewImageName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewImageName, global::System.Convert.ToString);
            }
            if (content.Contains("PatchType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).PatchType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType?) content.GetValueForProperty("PatchType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).PatchType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType.CreateFrom);
            }
            if (content.Contains("NewLayerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerName = (string) content.GetValueForProperty("NewLayerName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerName, global::System.Convert.ToString);
            }
            if (content.Contains("NewLayerFrameworkAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerFrameworkAndVersion = (string) content.GetValueForProperty("NewLayerFrameworkAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerFrameworkAndVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NewLayerOSAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerOSAndVersion = (string) content.GetValueForProperty("NewLayerOSAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerOSAndVersion, global::System.Convert.ToString);
            }
            if (content.Contains("OldLayerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerName = (string) content.GetValueForProperty("OldLayerName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerName, global::System.Convert.ToString);
            }
            if (content.Contains("OldLayerFrameworkAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerFrameworkAndVersion = (string) content.GetValueForProperty("OldLayerFrameworkAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerFrameworkAndVersion, global::System.Convert.ToString);
            }
            if (content.Contains("OldLayerOSAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerOSAndVersion = (string) content.GetValueForProperty("OldLayerOSAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerOSAndVersion, global::System.Convert.ToString);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetails"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal PatchDetails(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("NewLayer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayer = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsNewLayer) content.GetValueForProperty("NewLayer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayer, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetailsNewLayerTypeConverter.ConvertFrom);
            }
            if (content.Contains("OldLayer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayer = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsOldLayer) content.GetValueForProperty("OldLayer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayer, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.PatchDetailsOldLayerTypeConverter.ConvertFrom);
            }
            if (content.Contains("TargetContainerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetContainerName = (string) content.GetValueForProperty("TargetContainerName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetContainerName, global::System.Convert.ToString);
            }
            if (content.Contains("TargetImage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetImage = (string) content.GetValueForProperty("TargetImage",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).TargetImage, global::System.Convert.ToString);
            }
            if (content.Contains("LastDetectionTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).LastDetectionTime = (global::System.DateTime) content.GetValueForProperty("LastDetectionTime",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).LastDetectionTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("DetectionStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).DetectionStatus = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus) content.GetValueForProperty("DetectionStatus",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).DetectionStatus, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus.CreateFrom);
            }
            if (content.Contains("NewImageName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewImageName = (string) content.GetValueForProperty("NewImageName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewImageName, global::System.Convert.ToString);
            }
            if (content.Contains("PatchType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).PatchType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType?) content.GetValueForProperty("PatchType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).PatchType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType.CreateFrom);
            }
            if (content.Contains("NewLayerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerName = (string) content.GetValueForProperty("NewLayerName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerName, global::System.Convert.ToString);
            }
            if (content.Contains("NewLayerFrameworkAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerFrameworkAndVersion = (string) content.GetValueForProperty("NewLayerFrameworkAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerFrameworkAndVersion, global::System.Convert.ToString);
            }
            if (content.Contains("NewLayerOSAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerOSAndVersion = (string) content.GetValueForProperty("NewLayerOSAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).NewLayerOSAndVersion, global::System.Convert.ToString);
            }
            if (content.Contains("OldLayerName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerName = (string) content.GetValueForProperty("OldLayerName",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerName, global::System.Convert.ToString);
            }
            if (content.Contains("OldLayerFrameworkAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerFrameworkAndVersion = (string) content.GetValueForProperty("OldLayerFrameworkAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerFrameworkAndVersion, global::System.Convert.ToString);
            }
            if (content.Contains("OldLayerOSAndVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerOSAndVersion = (string) content.GetValueForProperty("OldLayerOSAndVersion",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.IPatchDetailsInternal)this).OldLayerOSAndVersion, global::System.Convert.ToString);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The detailed info of patch operation performing when applying a patch.
    [System.ComponentModel.TypeConverter(typeof(PatchDetailsTypeConverter))]
    public partial interface IPatchDetails

    {

    }
}