// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Custom container configuration.</summary>
    public partial class CustomContainerTemplate :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomContainerTemplate,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomContainerTemplateInternal
    {

        /// <summary>Backing field for <see cref="Container" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionContainer[] _container;

        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionContainer[] Container { get => this._container; set => this._container = value; }

        /// <summary>Backing field for <see cref="Ingress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionIngress _ingress;

        /// <summary>Session pool ingress configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionIngress Ingress { get => (this._ingress = this._ingress ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.SessionIngress()); set => this._ingress = value; }

        /// <summary>Target port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionIngressInternal)Ingress).TargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionIngressInternal)Ingress).TargetPort = value ?? default(int); }

        /// <summary>Internal Acessors for Ingress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionIngress Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomContainerTemplateInternal.Ingress { get => (this._ingress = this._ingress ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.SessionIngress()); set { {_ingress = value;} } }

        /// <summary>Internal Acessors for RegistryCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentials Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ICustomContainerTemplateInternal.RegistryCredentials { get => (this._registryCredentials = this._registryCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.SessionRegistryCredentials()); set { {_registryCredentials = value;} } }

        /// <summary>Backing field for <see cref="RegistryCredentials" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentials _registryCredentials;

        /// <summary>
        /// Private container registry credentials for containers used by the sessions of the session pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentials RegistryCredentials { get => (this._registryCredentials = this._registryCredentials ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.SessionRegistryCredentials()); set => this._registryCredentials = value; }

        /// <summary>
        /// A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned
        /// identity Resource ID. For system-assigned identities, use 'system'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).Identity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).Identity = value ?? null; }

        /// <summary>The name of the secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsPasswordSecretRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).PasswordSecretRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).PasswordSecretRef = value ?? null; }

        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).Server; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).Server = value ?? null; }

        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).Username; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentialsInternal)RegistryCredentials).Username = value ?? null; }

        /// <summary>Creates an new <see cref="CustomContainerTemplate" /> instance.</summary>
        public CustomContainerTemplate()
        {

        }
    }
    /// Custom container configuration.
    public partial interface ICustomContainerTemplate :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of container definitions for the sessions of the session pool.",
        SerializedName = @"containers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionContainer) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionContainer[] Container { get; set; }
        /// <summary>Target port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>
        /// A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned
        /// identity Resource ID. For system-assigned identities, use 'system'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsIdentity { get; set; }
        /// <summary>The name of the secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the secret that contains the registry login password",
        SerializedName = @"passwordSecretRef",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry server.",
        SerializedName = @"server",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsServer { get; set; }
        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsUsername { get; set; }

    }
    /// Custom container configuration.
    internal partial interface ICustomContainerTemplateInternal

    {
        /// <summary>List of container definitions for the sessions of the session pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionContainer[] Container { get; set; }
        /// <summary>Session pool ingress configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionIngress Ingress { get; set; }
        /// <summary>Target port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>
        /// Private container registry credentials for containers used by the sessions of the session pool.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20240802Preview.ISessionRegistryCredentials RegistryCredentials { get; set; }
        /// <summary>
        /// A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned
        /// identity Resource ID. For system-assigned identities, use 'system'
        /// </summary>
        string RegistryCredentialsIdentity { get; set; }
        /// <summary>The name of the secret that contains the registry login password</summary>
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        string RegistryCredentialsServer { get; set; }
        /// <summary>Container registry username.</summary>
        string RegistryCredentialsUsername { get; set; }

    }
}