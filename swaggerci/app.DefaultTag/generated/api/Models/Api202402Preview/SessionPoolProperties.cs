// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Container App Session Pool resource specific properties</summary>
    public partial class SessionPoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal
    {

        /// <summary>Backing field for <see cref="ContainerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? _containerType;

        /// <summary>The container type of the Sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get => this._containerType; set => this._containerType = value; }

        /// <summary>Backing field for <see cref="CustomContainerConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfiguration _customContainerConfiguration;

        /// <summary>The custom container configuration if the containerType is CustomContainer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfiguration CustomContainerConfiguration { get => (this._customContainerConfiguration = this._customContainerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.CustomContainerConfiguration()); set => this._customContainerConfiguration = value; }

        /// <summary>List of container definitions for the Sessions of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionContainer[] CustomContainerConfigurationContainer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).Container; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).Container = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="DynamicPoolConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfiguration _dynamicPoolConfiguration;

        /// <summary>The pool configuration if the poolManagementType is dynamic.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfiguration DynamicPoolConfiguration { get => (this._dynamicPoolConfiguration = this._dynamicPoolConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.DynamicPoolConfiguration()); set => this._dynamicPoolConfiguration = value; }

        /// <summary>The cool down period of a Session in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? DynamicPoolConfigurationCoolDownPeriodInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).CoolDownPeriodInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).CoolDownPeriodInSecond = value ?? default(int); }

        /// <summary>The execution type of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).ExecutionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfigurationInternal)DynamicPoolConfiguration).ExecutionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType)""); }

        /// <summary>Backing field for <see cref="EnvironmentId" /> property.</summary>
        private string _environmentId;

        /// <summary>Resource ID of the Session Pool's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string EnvironmentId { get => this._environmentId; set => this._environmentId = value; }

        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).IngressTargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).IngressTargetPort = value ?? default(int); }

        /// <summary>Backing field for <see cref="MaxConcurrentSession" /> property.</summary>
        private int? _maxConcurrentSession;

        /// <summary>The max count of Sessions at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int? MaxConcurrentSession { get => this._maxConcurrentSession; set => this._maxConcurrentSession = value; }

        /// <summary>Internal Acessors for CustomContainerConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal.CustomContainerConfiguration { get => (this._customContainerConfiguration = this._customContainerConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.CustomContainerConfiguration()); set { {_customContainerConfiguration = value;} } }

        /// <summary>Internal Acessors for CustomContainerConfigurationIngress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionIngress Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal.CustomContainerConfigurationIngress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).Ingress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).Ingress = value; }

        /// <summary>Internal Acessors for CustomContainerConfigurationRegistryCredentials</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionRegistryCredentials Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal.CustomContainerConfigurationRegistryCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentials = value; }

        /// <summary>Internal Acessors for DynamicPoolConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal.DynamicPoolConfiguration { get => (this._dynamicPoolConfiguration = this._dynamicPoolConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.DynamicPoolConfiguration()); set { {_dynamicPoolConfiguration = value;} } }

        /// <summary>Internal Acessors for PoolManagementEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal.PoolManagementEndpoint { get => this._poolManagementEndpoint; set { {_poolManagementEndpoint = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionPoolPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PoolManagementEndpoint" /> property.</summary>
        private string _poolManagementEndpoint;

        /// <summary>The endpoint to manage the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string PoolManagementEndpoint { get => this._poolManagementEndpoint; }

        /// <summary>Backing field for <see cref="PoolManagementType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? _poolManagementType;

        /// <summary>The pool management type of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get => this._poolManagementType; set => this._poolManagementType = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? _provisioningState;

        /// <summary>Provisioning state of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>The name of the Secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsPasswordSecretRef { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentialsPasswordSecretRef; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentialsPasswordSecretRef = value ?? null; }

        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsRegistryServer { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentialsRegistryServer; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentialsRegistryServer = value ?? null; }

        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string RegistryCredentialsUsername { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentialsUsername; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfigurationInternal)CustomContainerConfiguration).RegistryCredentialsUsername = value ?? null; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecretAutoGenerated[] _secret;

        /// <summary>The secrets of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecretAutoGenerated[] Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Creates an new <see cref="SessionPoolProperties" /> instance.</summary>
        public SessionPoolProperties()
        {

        }
    }
    /// Container App Session Pool resource specific properties
    public partial interface ISessionPoolProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>The container type of the Sessions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The container type of the Sessions.",
        SerializedName = @"containerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get; set; }
        /// <summary>List of container definitions for the Sessions of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of container definitions for the Sessions of the Session Pool.",
        SerializedName = @"containers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionContainer) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionContainer[] CustomContainerConfigurationContainer { get; set; }
        /// <summary>The cool down period of a Session in seconds.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cool down period of a Session in seconds.",
        SerializedName = @"coolDownPeriodInSecond",
        PossibleTypes = new [] { typeof(int) })]
        int? DynamicPoolConfigurationCoolDownPeriodInSecond { get; set; }
        /// <summary>The execution type of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The execution type of the Session Pool.",
        SerializedName = @"executionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get; set; }
        /// <summary>Resource ID of the Session Pool's environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of the Session Pool's environment.",
        SerializedName = @"environmentId",
        PossibleTypes = new [] { typeof(string) })]
        string EnvironmentId { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target Port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>The max count of Sessions at the same time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The max count of Sessions at the same time.",
        SerializedName = @"maxConcurrentSessions",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxConcurrentSession { get; set; }
        /// <summary>The endpoint to manage the pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint to manage the pool.",
        SerializedName = @"poolManagementEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string PoolManagementEndpoint { get;  }
        /// <summary>The pool management type of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The pool management type of the Session Pool.",
        SerializedName = @"poolManagementType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get; set; }
        /// <summary>Provisioning state of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Session Pool.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get;  }
        /// <summary>The name of the Secret that contains the registry login password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the Secret that contains the registry login password",
        SerializedName = @"passwordSecretRef",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry server.",
        SerializedName = @"registryServer",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsRegistryServer { get; set; }
        /// <summary>Container registry username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Container registry username.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string RegistryCredentialsUsername { get; set; }
        /// <summary>The secrets of the Session Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The secrets of the Session Pool.",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecretAutoGenerated) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecretAutoGenerated[] Secret { get; set; }

    }
    /// Container App Session Pool resource specific properties
    internal partial interface ISessionPoolPropertiesInternal

    {
        /// <summary>The container type of the Sessions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType? ContainerType { get; set; }
        /// <summary>The custom container configuration if the containerType is CustomContainer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomContainerConfiguration CustomContainerConfiguration { get; set; }
        /// <summary>List of container definitions for the Sessions of the Session Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionContainer[] CustomContainerConfigurationContainer { get; set; }
        /// <summary>SessionPool Ingress configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionIngress CustomContainerConfigurationIngress { get; set; }
        /// <summary>
        /// Private container registry credentials for containers used by the Sessions of the Session Pool.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISessionRegistryCredentials CustomContainerConfigurationRegistryCredentials { get; set; }
        /// <summary>The pool configuration if the poolManagementType is dynamic.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDynamicPoolConfiguration DynamicPoolConfiguration { get; set; }
        /// <summary>The cool down period of a Session in seconds.</summary>
        int? DynamicPoolConfigurationCoolDownPeriodInSecond { get; set; }
        /// <summary>The execution type of the Session Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ExecutionType? DynamicPoolConfigurationExecutionType { get; set; }
        /// <summary>Resource ID of the Session Pool's environment.</summary>
        string EnvironmentId { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>The max count of Sessions at the same time.</summary>
        int? MaxConcurrentSession { get; set; }
        /// <summary>The endpoint to manage the pool.</summary>
        string PoolManagementEndpoint { get; set; }
        /// <summary>The pool management type of the Session Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType? PoolManagementType { get; set; }
        /// <summary>Provisioning state of the Session Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState? ProvisioningState { get; set; }
        /// <summary>The name of the Secret that contains the registry login password</summary>
        string RegistryCredentialsPasswordSecretRef { get; set; }
        /// <summary>Container registry server.</summary>
        string RegistryCredentialsRegistryServer { get; set; }
        /// <summary>Container registry username.</summary>
        string RegistryCredentialsUsername { get; set; }
        /// <summary>The secrets of the Session Pool.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecretAutoGenerated[] Secret { get; set; }

    }
}