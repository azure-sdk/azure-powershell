// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    /// </summary>
    public partial class Configuration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal
    {

        /// <summary>Backing field for <see cref="ActiveRevisionsMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ActiveRevisionsMode? _activeRevisionsMode;

        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item><item>Labeled: Only
        /// the revisions that have labels attached to them are active.</item></list>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ActiveRevisionsMode? ActiveRevisionsMode { get => this._activeRevisionsMode; set => this._activeRevisionsMode = value; }

        /// <summary>Specifies whether the resource allows credentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? CorPolicyAllowCredentials { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowCredentials; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowCredentials = value ?? default(bool); }

        /// <summary>Specifies the content for the access-control-allow-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyAllowedHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowedHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowedHeader = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-allow-methods header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyAllowedMethod { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowedMethod; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowedMethod = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-allow-origins header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyAllowedOrigin { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowedOrigin; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyAllowedOrigin = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-expose-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] CorPolicyExposeHeader { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyExposeHeader; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyExposeHeader = value ?? null /* arrayOf */; }

        /// <summary>Specifies the content for the access-control-max-age header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? CorPolicyMaxAge { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyMaxAge; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorPolicyMaxAge = value ?? default(int); }

        /// <summary>Backing field for <see cref="Dapr" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDapr _dapr;

        /// <summary>Dapr configuration for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDapr Dapr { get => (this._dapr = this._dapr ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Dapr()); set => this._dapr = value; }

        /// <summary>Dapr application identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DaprAppId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).AppId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).AppId = value ?? null; }

        /// <summary>Tells Dapr which port your application is listening on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? DaprAppPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).AppPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).AppPort = value ?? default(int); }

        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.AppProtocol? DaprAppProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).AppProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).AppProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.AppProtocol)""); }

        /// <summary>Enables API logging for the Dapr sidecar</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? DaprEnableApiLogging { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).EnableApiLogging; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).EnableApiLogging = value ?? default(bool); }

        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? DaprEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).Enabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).Enabled = value ?? default(bool); }

        /// <summary>
        /// Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is
        /// 4 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? DaprHttpMaxRequestSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).HttpMaxRequestSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).HttpMaxRequestSize = value ?? default(int); }

        /// <summary>
        /// Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? DaprHttpReadBufferSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).HttpReadBufferSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).HttpReadBufferSize = value ?? default(int); }

        /// <summary>
        /// Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LogLevel? DaprLogLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).LogLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDaprInternal)Dapr).LogLevel = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LogLevel)""); }

        /// <summary>Auto configure the ASP.NET Core Data Protection feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? DotnetAutoConfigureDataProtection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).DotnetAutoConfigureDataProtection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).DotnetAutoConfigureDataProtection = value ?? default(bool); }

        /// <summary>Backing field for <see cref="Ingress" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngress _ingress;

        /// <summary>Ingress configurations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngress Ingress { get => (this._ingress = this._ingress ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Ingress()); set => this._ingress = value; }

        /// <summary>Settings to expose additional ports on container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressPortMapping[] IngressAdditionalPortMapping { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).AdditionalPortMapping; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).AdditionalPortMapping = value ?? null /* arrayOf */; }

        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? IngressAllowInsecure { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).AllowInsecure; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).AllowInsecure = value ?? default(bool); }

        /// <summary>
        /// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept
        /// indicates server forwards client certificate but does not require a client certificate. Require indicates server requires
        /// a client certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? IngressClientCertificateMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).ClientCertificateMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).ClientCertificateMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode)""); }

        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomDomain[] IngressCustomDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CustomDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CustomDomain = value ?? null /* arrayOf */; }

        /// <summary>Exposed Port in containers for TCP traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressExposedPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).ExposedPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).ExposedPort = value ?? default(int); }

        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? IngressExternal { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).External; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).External = value ?? default(bool); }

        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string IngressFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Fqdn; }

        /// <summary>Rules to restrict incoming IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIPSecurityRestrictionRule[] IngressIPSecurityRestriction { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).IPSecurityRestriction; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).IPSecurityRestriction = value ?? null /* arrayOf */; }

        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressTargetPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).TargetPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).TargetPort = value ?? default(int); }

        /// <summary>Whether an http app listens on http or https</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTargetPortHttpScheme? IngressTargetPortHttpScheme { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).TargetPortHttpScheme; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).TargetPortHttpScheme = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTargetPortHttpScheme)""); }

        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ITrafficWeight[] IngressTraffic { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Traffic; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Traffic = value ?? null /* arrayOf */; }

        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? IngressTransport { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Transport; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Transport = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod)""); }

        /// <summary>Enable java agent injection for the java app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? JavaAgentEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaAgentEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaAgentEnabled = value ?? default(bool); }

        /// <summary>Settings of the log level for the java app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ILogLevelSetting[] JavaAgentLogLevelSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaAgentLogLevelSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaAgentLogLevelSetting = value ?? null /* arrayOf */; }

        /// <summary>Enable jmx core metrics for the java app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? JavaEnableMetric { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaEnableMetric; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaEnableMetric = value ?? default(bool); }

        /// <summary>Backing field for <see cref="MaxInactiveRevision" /> property.</summary>
        private int? _maxInactiveRevision;

        /// <summary>Optional. Max inactive revisions a Container App can have.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int? MaxInactiveRevision { get => this._maxInactiveRevision; set => this._maxInactiveRevision = value; }

        /// <summary>Internal Acessors for Dapr</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDapr Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.Dapr { get => (this._dapr = this._dapr ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Dapr()); set { {_dapr = value;} } }

        /// <summary>Internal Acessors for Ingress</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngress Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.Ingress { get => (this._ingress = this._ingress ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Ingress()); set { {_ingress = value;} } }

        /// <summary>Internal Acessors for IngressCorsPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICorsPolicy Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.IngressCorsPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorsPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).CorsPolicy = value; }

        /// <summary>Internal Acessors for IngressFqdn</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.IngressFqdn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Fqdn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).Fqdn = value; }

        /// <summary>Internal Acessors for IngressStickySession</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressStickySessions Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.IngressStickySession { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).StickySession; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).StickySession = value; }

        /// <summary>Internal Acessors for JavaAgent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeJavaAgent Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.JavaAgent { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaAgent; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).JavaAgent = value; }

        /// <summary>Internal Acessors for Runtime</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntime Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.Runtime { get => (this._runtime = this._runtime ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Runtime()); set { {_runtime = value;} } }

        /// <summary>Internal Acessors for RuntimeDotnet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeDotnet Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.RuntimeDotnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).Dotnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).Dotnet = value; }

        /// <summary>Internal Acessors for RuntimeJava</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeJava Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.RuntimeJava { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).Java; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeInternal)Runtime).Java = value; }

        /// <summary>Internal Acessors for Service</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IService Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IConfigurationInternal.Service { get => (this._service = this._service ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Service()); set { {_service = value;} } }

        /// <summary>Backing field for <see cref="Registry" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRegistryCredentials[] _registry;

        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRegistryCredentials[] Registry { get => this._registry; set => this._registry = value; }

        /// <summary>Backing field for <see cref="Runtime" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntime _runtime;

        /// <summary>App runtime configuration for the Container App.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntime Runtime { get => (this._runtime = this._runtime ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Runtime()); set => this._runtime = value; }

        /// <summary>Backing field for <see cref="Secret" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecret[] _secret;

        /// <summary>Collection of secrets used by a Container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecret[] Secret { get => this._secret; set => this._secret = value; }

        /// <summary>Backing field for <see cref="Service" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IService _service;

        /// <summary>Container App to be a dev Container App Service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IService Service { get => (this._service = this._service ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.Service()); set => this._service = value; }

        /// <summary>Dev ContainerApp service type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string ServiceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IServiceInternal)Service).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IServiceInternal)Service).Type = value ?? null; }

        /// <summary>Sticky Session Affinity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity? StickySessionAffinity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).StickySessionAffinity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressInternal)Ingress).StickySessionAffinity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity)""); }

        /// <summary>Creates an new <see cref="Configuration" /> instance.</summary>
        public Configuration()
        {

        }
    }
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    public partial interface IConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item><item>Labeled: Only
        /// the revisions that have labels attached to them are active.</item></list>
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ActiveRevisionsMode controls how active revisions are handled for the Container app:
        <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item><item>Labeled: Only the revisions that have labels attached to them are active.</item></list>",
        SerializedName = @"activeRevisionsMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ActiveRevisionsMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ActiveRevisionsMode? ActiveRevisionsMode { get; set; }
        /// <summary>Specifies whether the resource allows credentials</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the resource allows credentials",
        SerializedName = @"allowCredentials",
        PossibleTypes = new [] { typeof(bool) })]
        bool? CorPolicyAllowCredentials { get; set; }
        /// <summary>Specifies the content for the access-control-allow-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-allow-headers header",
        SerializedName = @"allowedHeaders",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyAllowedHeader { get; set; }
        /// <summary>Specifies the content for the access-control-allow-methods header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-allow-methods header",
        SerializedName = @"allowedMethods",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyAllowedMethod { get; set; }
        /// <summary>Specifies the content for the access-control-allow-origins header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-allow-origins header",
        SerializedName = @"allowedOrigins",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyAllowedOrigin { get; set; }
        /// <summary>Specifies the content for the access-control-expose-headers header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-expose-headers header ",
        SerializedName = @"exposeHeaders",
        PossibleTypes = new [] { typeof(string) })]
        string[] CorPolicyExposeHeader { get; set; }
        /// <summary>Specifies the content for the access-control-max-age header</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the content for the access-control-max-age header",
        SerializedName = @"maxAge",
        PossibleTypes = new [] { typeof(int) })]
        int? CorPolicyMaxAge { get; set; }
        /// <summary>Dapr application identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dapr application identifier",
        SerializedName = @"appId",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAppId { get; set; }
        /// <summary>Tells Dapr which port your application is listening on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells Dapr which port your application is listening on",
        SerializedName = @"appPort",
        PossibleTypes = new [] { typeof(int) })]
        int? DaprAppPort { get; set; }
        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
        SerializedName = @"appProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.AppProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.AppProtocol? DaprAppProtocol { get; set; }
        /// <summary>Enables API logging for the Dapr sidecar</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enables API logging for the Dapr sidecar",
        SerializedName = @"enableApiLogging",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DaprEnableApiLogging { get; set; }
        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if the Dapr side car is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DaprEnabled { get; set; }
        /// <summary>
        /// Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is
        /// 4 MB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
        SerializedName = @"httpMaxRequestSize",
        PossibleTypes = new [] { typeof(int) })]
        int? DaprHttpMaxRequestSize { get; set; }
        /// <summary>
        /// Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
        SerializedName = @"httpReadBufferSize",
        PossibleTypes = new [] { typeof(int) })]
        int? DaprHttpReadBufferSize { get; set; }
        /// <summary>
        /// Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
        SerializedName = @"logLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LogLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LogLevel? DaprLogLevel { get; set; }
        /// <summary>Auto configure the ASP.NET Core Data Protection feature</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Auto configure the ASP.NET Core Data Protection feature",
        SerializedName = @"autoConfigureDataProtection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DotnetAutoConfigureDataProtection { get; set; }
        /// <summary>Settings to expose additional ports on container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings to expose additional ports on container app",
        SerializedName = @"additionalPortMappings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressPortMapping) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressPortMapping[] IngressAdditionalPortMapping { get; set; }
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
        SerializedName = @"allowInsecure",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IngressAllowInsecure { get; set; }
        /// <summary>
        /// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept
        /// indicates server forwards client certificate but does not require a client certificate. Require indicates server requires
        /// a client certificate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
        SerializedName = @"clientCertificateMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? IngressClientCertificateMode { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"custom domain bindings for Container Apps' hostnames.",
        SerializedName = @"customDomains",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomDomain) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomDomain[] IngressCustomDomain { get; set; }
        /// <summary>Exposed Port in containers for TCP traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exposed Port in containers for TCP traffic from ingress",
        SerializedName = @"exposedPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressExposedPort { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Bool indicating if app exposes an external http endpoint",
        SerializedName = @"external",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IngressExternal { get; set; }
        /// <summary>Hostname.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Hostname.",
        SerializedName = @"fqdn",
        PossibleTypes = new [] { typeof(string) })]
        string IngressFqdn { get;  }
        /// <summary>Rules to restrict incoming IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Rules to restrict incoming IP address.",
        SerializedName = @"ipSecurityRestrictions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIPSecurityRestrictionRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIPSecurityRestrictionRule[] IngressIPSecurityRestriction { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target Port in containers for traffic from ingress",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressTargetPort { get; set; }
        /// <summary>Whether an http app listens on http or https</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether an http app listens on http or https",
        SerializedName = @"targetPortHttpScheme",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTargetPortHttpScheme) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTargetPortHttpScheme? IngressTargetPortHttpScheme { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Traffic weights for app's revisions",
        SerializedName = @"traffic",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ITrafficWeight) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ITrafficWeight[] IngressTraffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Ingress transport protocol",
        SerializedName = @"transport",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? IngressTransport { get; set; }
        /// <summary>Enable java agent injection for the java app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable java agent injection for the java app.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? JavaAgentEnabled { get; set; }
        /// <summary>Settings of the log level for the java app.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Settings of the log level for the java app.",
        SerializedName = @"logLevelSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ILogLevelSetting) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ILogLevelSetting[] JavaAgentLogLevelSetting { get; set; }
        /// <summary>Enable jmx core metrics for the java app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Enable jmx core metrics for the java app",
        SerializedName = @"enableMetrics",
        PossibleTypes = new [] { typeof(bool) })]
        bool? JavaEnableMetric { get; set; }
        /// <summary>Optional. Max inactive revisions a Container App can have.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional. Max inactive revisions a Container App can have.",
        SerializedName = @"maxInactiveRevisions",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxInactiveRevision { get; set; }
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of private container registry credentials for containers used by the Container app",
        SerializedName = @"registries",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRegistryCredentials) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRegistryCredentials[] Registry { get; set; }
        /// <summary>Collection of secrets used by a Container app</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of secrets used by a Container app",
        SerializedName = @"secrets",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecret) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecret[] Secret { get; set; }
        /// <summary>Dev ContainerApp service type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dev ContainerApp service type",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceType { get; set; }
        /// <summary>Sticky Session Affinity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sticky Session Affinity",
        SerializedName = @"affinity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity? StickySessionAffinity { get; set; }

    }
    /// Non versioned Container App configuration properties that define the mutable settings of a Container app
    internal partial interface IConfigurationInternal

    {
        /// <summary>
        /// ActiveRevisionsMode controls how active revisions are handled for the Container app:
        /// <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time.
        /// Revision weights can not be used in this mode. If no value if provided, this is the default.</item><item>Labeled: Only
        /// the revisions that have labels attached to them are active.</item></list>
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ActiveRevisionsMode? ActiveRevisionsMode { get; set; }
        /// <summary>Specifies whether the resource allows credentials</summary>
        bool? CorPolicyAllowCredentials { get; set; }
        /// <summary>Specifies the content for the access-control-allow-headers header</summary>
        string[] CorPolicyAllowedHeader { get; set; }
        /// <summary>Specifies the content for the access-control-allow-methods header</summary>
        string[] CorPolicyAllowedMethod { get; set; }
        /// <summary>Specifies the content for the access-control-allow-origins header</summary>
        string[] CorPolicyAllowedOrigin { get; set; }
        /// <summary>Specifies the content for the access-control-expose-headers header</summary>
        string[] CorPolicyExposeHeader { get; set; }
        /// <summary>Specifies the content for the access-control-max-age header</summary>
        int? CorPolicyMaxAge { get; set; }
        /// <summary>Dapr configuration for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IDapr Dapr { get; set; }
        /// <summary>Dapr application identifier</summary>
        string DaprAppId { get; set; }
        /// <summary>Tells Dapr which port your application is listening on</summary>
        int? DaprAppPort { get; set; }
        /// <summary>
        /// Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.AppProtocol? DaprAppProtocol { get; set; }
        /// <summary>Enables API logging for the Dapr sidecar</summary>
        bool? DaprEnableApiLogging { get; set; }
        /// <summary>Boolean indicating if the Dapr side car is enabled</summary>
        bool? DaprEnabled { get; set; }
        /// <summary>
        /// Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is
        /// 4 MB.
        /// </summary>
        int? DaprHttpMaxRequestSize { get; set; }
        /// <summary>
        /// Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.
        /// </summary>
        int? DaprHttpReadBufferSize { get; set; }
        /// <summary>
        /// Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LogLevel? DaprLogLevel { get; set; }
        /// <summary>Auto configure the ASP.NET Core Data Protection feature</summary>
        bool? DotnetAutoConfigureDataProtection { get; set; }
        /// <summary>Ingress configurations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngress Ingress { get; set; }
        /// <summary>Settings to expose additional ports on container app</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressPortMapping[] IngressAdditionalPortMapping { get; set; }
        /// <summary>
        /// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS
        /// connections
        /// </summary>
        bool? IngressAllowInsecure { get; set; }
        /// <summary>
        /// Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept
        /// indicates server forwards client certificate but does not require a client certificate. Require indicates server requires
        /// a client certificate.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressClientCertificateMode? IngressClientCertificateMode { get; set; }
        /// <summary>CORS policy for container app</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICorsPolicy IngressCorsPolicy { get; set; }
        /// <summary>custom domain bindings for Container Apps' hostnames.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ICustomDomain[] IngressCustomDomain { get; set; }
        /// <summary>Exposed Port in containers for TCP traffic from ingress</summary>
        int? IngressExposedPort { get; set; }
        /// <summary>Bool indicating if app exposes an external http endpoint</summary>
        bool? IngressExternal { get; set; }
        /// <summary>Hostname.</summary>
        string IngressFqdn { get; set; }
        /// <summary>Rules to restrict incoming IP address.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIPSecurityRestrictionRule[] IngressIPSecurityRestriction { get; set; }
        /// <summary>Sticky Sessions for Single Revision Mode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IIngressStickySessions IngressStickySession { get; set; }
        /// <summary>Target Port in containers for traffic from ingress</summary>
        int? IngressTargetPort { get; set; }
        /// <summary>Whether an http app listens on http or https</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTargetPortHttpScheme? IngressTargetPortHttpScheme { get; set; }
        /// <summary>Traffic weights for app's revisions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ITrafficWeight[] IngressTraffic { get; set; }
        /// <summary>Ingress transport protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.IngressTransportMethod? IngressTransport { get; set; }
        /// <summary>Diagnostic capabilities achieved by java agent</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeJavaAgent JavaAgent { get; set; }
        /// <summary>Enable java agent injection for the java app.</summary>
        bool? JavaAgentEnabled { get; set; }
        /// <summary>Settings of the log level for the java app.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ILogLevelSetting[] JavaAgentLogLevelSetting { get; set; }
        /// <summary>Enable jmx core metrics for the java app</summary>
        bool? JavaEnableMetric { get; set; }
        /// <summary>Optional. Max inactive revisions a Container App can have.</summary>
        int? MaxInactiveRevision { get; set; }
        /// <summary>
        /// Collection of private container registry credentials for containers used by the Container app
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRegistryCredentials[] Registry { get; set; }
        /// <summary>App runtime configuration for the Container App.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntime Runtime { get; set; }
        /// <summary>.NET app configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeDotnet RuntimeDotnet { get; set; }
        /// <summary>Java app configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IRuntimeJava RuntimeJava { get; set; }
        /// <summary>Collection of secrets used by a Container app</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.ISecret[] Secret { get; set; }
        /// <summary>Container App to be a dev Container App Service</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202402Preview.IService Service { get; set; }
        /// <summary>Dev ContainerApp service type</summary>
        string ServiceType { get; set; }
        /// <summary>Sticky Session Affinity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.Affinity? StickySessionAffinity { get; set; }

    }
}