// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20231102Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Session auth configuration.</summary>
    public partial class SessionAuthConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20231102Preview.ISessionAuthConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api20231102Preview.ISessionAuthConfigurationInternal
    {

        /// <summary>Backing field for <see cref="AuthEnabled" /> property.</summary>
        private bool? _authEnabled;

        /// <summary>Is auth enabled for the session</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool? AuthEnabled { get => this._authEnabled; set => this._authEnabled = value; }

        /// <summary>Backing field for <see cref="JwtToken" /> property.</summary>
        private string _jwtToken;

        /// <summary>JWT token for the session</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string JwtToken { get => this._jwtToken; set => this._jwtToken = value; }

        /// <summary>Creates an new <see cref="SessionAuthConfiguration" /> instance.</summary>
        public SessionAuthConfiguration()
        {

        }
    }
    /// Session auth configuration.
    public partial interface ISessionAuthConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Is auth enabled for the session</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is auth enabled for the session",
        SerializedName = @"authEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AuthEnabled { get; set; }
        /// <summary>JWT token for the session</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"JWT token for the session",
        SerializedName = @"jwtToken",
        PossibleTypes = new [] { typeof(string) })]
        string JwtToken { get; set; }

    }
    /// Session auth configuration.
    internal partial interface ISessionAuthConfigurationInternal

    {
        /// <summary>Is auth enabled for the session</summary>
        bool? AuthEnabled { get; set; }
        /// <summary>JWT token for the session</summary>
        string JwtToken { get; set; }

    }
}