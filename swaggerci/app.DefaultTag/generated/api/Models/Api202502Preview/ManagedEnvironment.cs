// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>An environment for hosting container apps</summary>
    public partial class ManagedEnvironment :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironment,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.TrackedResource();

        /// <summary>Application Insights connection string</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AppInsightConfigurationConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppInsightConfigurationConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppInsightConfigurationConnectionString = value ?? null; }

        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AppLogConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppLogConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppLogConfigurationDestination = value ?? null; }

        /// <summary>
        /// Resource ID of a user-assigned managed identity to authenticate to the Key Vault. The identity must be assigned to the
        /// managed environment, in the same tenant as the Key Vault, and it must have the following key permissions on the Key Vault:
        /// wrapkey, unwrapkey, get.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string AuthIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AuthIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AuthIdentity = value ?? null; }

        /// <summary>The list of availability zones to use for managed environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AvailabilityZone = value ?? null /* arrayOf */; }

        /// <summary>
        /// Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CertificateKeyVaultPropertyIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CertificateKeyVaultPropertyIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CertificateKeyVaultPropertyIdentity = value ?? null; }

        /// <summary>URL pointing to the Azure Key Vault secret that holds the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CertificateKeyVaultPropertyKeyVaultUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CertificateKeyVaultPropertyKeyVaultUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CertificateKeyVaultPropertyKeyVaultUrl = value ?? null; }

        /// <summary>Certificate password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationCertificatePassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCertificatePassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCertificatePassword = value ?? null; }

        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public byte[] CustomDomainConfigurationCertificateValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCertificateValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCertificateValue = value ?? null /* byte array */; }

        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationCustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCustomDomainVerificationId; }

        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationDnsSuffix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationDnsSuffix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationDnsSuffix = value ?? null; }

        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public global::System.DateTime? CustomDomainConfigurationExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationExpirationDate; }

        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationSubjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationSubjectName; }

        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string CustomDomainConfigurationThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationThumbprint; }

        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DaprAiConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprAiConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprAiConnectionString = value ?? null; }

        /// <summary>
        /// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DaprAiInstrumentationKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprAiInstrumentationKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprAiInstrumentationKey = value ?? null; }

        /// <summary>The version of Dapr</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DaprConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprConfigurationVersion; }

        /// <summary>The data dog api key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DataDogConfigurationKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DataDogConfigurationKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DataDogConfigurationKey = value ?? null; }

        /// <summary>The data dog site</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DataDogConfigurationSite { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DataDogConfigurationSite; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DataDogConfigurationSite = value ?? null; }

        /// <summary>Default Domain Name for the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DefaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DefaultDomain; }

        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string DeploymentError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DeploymentError; }

        /// <summary>Open telemetry otlp configurations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IOtlpConfiguration[] DestinationConfigurationOtlpConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DestinationConfigurationOtlpConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DestinationConfigurationOtlpConfiguration = value ?? null /* arrayOf */; }

        /// <summary>Boolean indicating whether the peer traffic encryption is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? EncryptionEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).EncryptionEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).EncryptionEnabled = value ?? default(bool); }

        /// <summary>The endpoint of the eventstream of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string EventStreamEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).EventStreamEndpoint; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentity _identity;

        /// <summary>
        /// Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or
        /// credentials in code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ManagedServiceIdentity()); set => this._identity = value; }

        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).PrincipalId; }

        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedServiceIdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedServiceIdentityType)""); }

        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IUserAssignedIdentities IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).UserAssignedIdentity = value ?? null /* model class */; }

        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a
        /// subnet ID is provided, this resource group will be created in the same subscription as the subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string InfrastructureResourceGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).InfrastructureResourceGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).InfrastructureResourceGroup = value ?? null; }

        /// <summary>
        /// Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressConfigurationHeaderCountLimit { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationHeaderCountLimit; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationHeaderCountLimit = value ?? default(int); }

        /// <summary>
        /// Duration (in minutes) before idle requests are timed out. Must be at least 1 minute. Defaults to 4 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressConfigurationRequestIdleTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationRequestIdleTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationRequestIdleTimeout = value ?? default(int); }

        /// <summary>
        /// Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480
        /// seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? IngressConfigurationTerminationGracePeriodSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationTerminationGracePeriodSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationTerminationGracePeriodSecond = value ?? default(int); }

        /// <summary>Name of the workload profile used by the ingress component. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string IngressConfigurationWorkloadProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationWorkloadProfileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationWorkloadProfileName = value ?? null; }

        /// <summary>The version of Keda</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string KedaConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KedaConfigurationVersion; }

        /// <summary>Key URL pointing to a key in KeyVault. Version segment of the Url is required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string KeyVaultConfigurationKeyUrl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KeyVaultConfigurationKeyUrl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KeyVaultConfigurationKeyUrl = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>Kind of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>Log analytics customer id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string LogAnalyticConfigurationCustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogAnalyticConfigurationCustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogAnalyticConfigurationCustomerId = value ?? null; }

        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? LogAnalyticConfigurationDynamicJsonColumn { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogAnalyticConfigurationDynamicJsonColumn; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogAnalyticConfigurationDynamicJsonColumn = value ?? default(bool); }

        /// <summary>Log analytics customer key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string LogAnalyticConfigurationSharedKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogAnalyticConfigurationSharedKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogAnalyticConfigurationSharedKey = value ?? null; }

        /// <summary>Open telemetry logs destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] LogConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).LogConfigurationDestination = value ?? null /* arrayOf */; }

        /// <summary>Open telemetry metrics destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] MetricConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).MetricConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).MetricConfigurationDestination = value ?? null /* arrayOf */; }

        /// <summary>Boolean indicating if including keda metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? MetricConfigurationIncludeKeda { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).MetricConfigurationIncludeKeda; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).MetricConfigurationIncludeKeda = value ?? default(bool); }

        /// <summary>Internal Acessors for AppInsightsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IAppInsightsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.AppInsightsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppInsightsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppInsightsConfiguration = value; }

        /// <summary>Internal Acessors for AppLogConfigurationLogAnalyticsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ILogAnalyticsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.AppLogConfigurationLogAnalyticsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppLogConfigurationLogAnalyticsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppLogConfigurationLogAnalyticsConfiguration = value; }

        /// <summary>Internal Acessors for AppLogsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IAppLogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.AppLogsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppLogsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).AppLogsConfiguration = value; }

        /// <summary>Internal Acessors for CustomDomainConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ICustomDomainConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.CustomDomainConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfiguration = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationCertificateKeyVaultProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ICertificateKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.CustomDomainConfigurationCertificateKeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCertificateKeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCertificateKeyVaultProperty = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationCustomDomainVerificationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.CustomDomainConfigurationCustomDomainVerificationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCustomDomainVerificationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationCustomDomainVerificationId = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationExpirationDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.CustomDomainConfigurationExpirationDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationExpirationDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationExpirationDate = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationSubjectName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.CustomDomainConfigurationSubjectName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationSubjectName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationSubjectName = value; }

        /// <summary>Internal Acessors for CustomDomainConfigurationThumbprint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.CustomDomainConfigurationThumbprint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationThumbprint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).CustomDomainConfigurationThumbprint = value; }

        /// <summary>Internal Acessors for DaprConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDaprConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DaprConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprConfiguration = value; }

        /// <summary>Internal Acessors for DaprConfigurationVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DaprConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprConfigurationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DaprConfigurationVersion = value; }

        /// <summary>Internal Acessors for DefaultDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DefaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DefaultDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DefaultDomain = value; }

        /// <summary>Internal Acessors for DeploymentError</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DeploymentError { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DeploymentError; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DeploymentError = value; }

        /// <summary>Internal Acessors for DestinationConfigurationDataDogConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDataDogConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DestinationConfigurationDataDogConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DestinationConfigurationDataDogConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DestinationConfigurationDataDogConfiguration = value; }

        /// <summary>Internal Acessors for DiskEncryptionConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDiskEncryptionConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DiskEncryptionConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DiskEncryptionConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DiskEncryptionConfiguration = value; }

        /// <summary>Internal Acessors for DiskEncryptionConfigurationKeyVaultConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDiskEncryptionConfigurationKeyVaultConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.DiskEncryptionConfigurationKeyVaultConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DiskEncryptionConfigurationKeyVaultConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).DiskEncryptionConfigurationKeyVaultConfiguration = value; }

        /// <summary>Internal Acessors for EventStreamEndpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.EventStreamEndpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).EventStreamEndpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).EventStreamEndpoint = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentity Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ManagedServiceIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).PrincipalId = value; }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for IngressConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IIngressConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.IngressConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfiguration = value; }

        /// <summary>Internal Acessors for IngressConfigurationScale</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IIngressConfigurationScale Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.IngressConfigurationScale { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationScale; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).IngressConfigurationScale = value; }

        /// <summary>Internal Acessors for KedaConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IKedaConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.KedaConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KedaConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KedaConfiguration = value; }

        /// <summary>Internal Acessors for KedaConfigurationVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.KedaConfigurationVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KedaConfigurationVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KedaConfigurationVersion = value; }

        /// <summary>Internal Acessors for KeyVaultConfigurationAuth</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDiskEncryptionConfigurationKeyVaultConfigurationAuth Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.KeyVaultConfigurationAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KeyVaultConfigurationAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).KeyVaultConfigurationAuth = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IOpenTelemetryConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.OpenTelemetryConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationDestinationsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDestinationsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.OpenTelemetryConfigurationDestinationsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationDestinationsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationDestinationsConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationLogsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ILogsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.OpenTelemetryConfigurationLogsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationLogsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationLogsConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationMetricsConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IMetricsConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.OpenTelemetryConfigurationMetricsConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationMetricsConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationMetricsConfiguration = value; }

        /// <summary>Internal Acessors for OpenTelemetryConfigurationTracesConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ITracesConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.OpenTelemetryConfigurationTracesConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationTracesConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).OpenTelemetryConfigurationTracesConfiguration = value; }

        /// <summary>Internal Acessors for PeerAuthentication</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesPeerAuthentication Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.PeerAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerAuthentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerAuthentication = value; }

        /// <summary>Internal Acessors for PeerAuthenticationMtl</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IMtls Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.PeerAuthenticationMtl { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerAuthenticationMtl; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerAuthenticationMtl = value; }

        /// <summary>Internal Acessors for PeerTrafficConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesPeerTrafficConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.PeerTrafficConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerTrafficConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerTrafficConfiguration = value; }

        /// <summary>Internal Acessors for PeerTrafficConfigurationEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.PeerTrafficConfigurationEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerTrafficConfigurationEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PeerTrafficConfigurationEncryption = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for PrivateLinkDefaultDomain</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.PrivateLinkDefaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PrivateLinkDefaultDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PrivateLinkDefaultDomain = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentProperties Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ManagedEnvironmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for StaticIP</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.StaticIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).StaticIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).StaticIP = value; }

        /// <summary>Internal Acessors for VnetConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IVnetConfiguration Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentInternal.VnetConfiguration { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfiguration; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfiguration = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>Boolean indicating whether the mutual TLS authentication is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? MtlEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).MtlEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).MtlEnabled = value ?? default(bool); }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>Private endpoint connections to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Private Link Default Domain Name for the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string PrivateLinkDefaultDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PrivateLinkDefaultDomain; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentProperties _property;

        /// <summary>Managed environment resource specific properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ManagedEnvironmentProperties()); set => this._property = value; }

        /// <summary>Provisioning state of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess)""); }

        /// <summary>
        /// Maximum number of ingress replicas. Must be greater than or equal to minReplicas.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? ScaleMaxReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ScaleMaxReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ScaleMaxReplica = value ?? default(int); }

        /// <summary>Minimum number of ingress replicas. Must be at least 2. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public int? ScaleMinReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ScaleMinReplica; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ScaleMinReplica = value ?? default(int); }

        /// <summary>Static IP of the Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string StaticIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).StaticIP; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>Open telemetry traces destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string[] TraceConfigurationDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).TraceConfigurationDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).TraceConfigurationDestination = value ?? null /* arrayOf */; }

        /// <summary>Boolean indicating if including dapr traces</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? TraceConfigurationIncludeDapr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).TraceConfigurationIncludeDapr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).TraceConfigurationIncludeDapr = value ?? default(bool); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationDockerBridgeCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationDockerBridgeCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationDockerBridgeCidr = value ?? null; }

        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationInfrastructureSubnetId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationInfrastructureSubnetId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationInfrastructureSubnetId = value ?? null; }

        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? VnetConfigurationInternal { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationInternal; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationInternal = value ?? default(bool); }

        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationPlatformReservedCidr { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationPlatformReservedCidr; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationPlatformReservedCidr = value ?? null; }

        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string VnetConfigurationPlatformReservedDnsIP { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationPlatformReservedDnsIP; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).VnetConfigurationPlatformReservedDnsIP = value ?? null; }

        /// <summary>Workload profiles configured for the Managed Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IWorkloadProfile[] WorkloadProfile { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).WorkloadProfile; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).WorkloadProfile = value ?? null /* arrayOf */; }

        /// <summary>Whether or not this Managed Environment is zone-redundant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? ZoneRedundant { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ZoneRedundant; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesInternal)Property).ZoneRedundant = value ?? default(bool); }

        /// <summary>Creates an new <see cref="ManagedEnvironment" /> instance.</summary>
        public ManagedEnvironment()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// An environment for hosting container apps
    public partial interface IManagedEnvironment :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResource
    {
        /// <summary>Application Insights connection string</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Insights connection string",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string AppInsightConfigurationConnectionString { get; set; }
        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
        SerializedName = @"destination",
        PossibleTypes = new [] { typeof(string) })]
        string AppLogConfigurationDestination { get; set; }
        /// <summary>
        /// Resource ID of a user-assigned managed identity to authenticate to the Key Vault. The identity must be assigned to the
        /// managed environment, in the same tenant as the Key Vault, and it must have the following key permissions on the Key Vault:
        /// wrapkey, unwrapkey, get.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a user-assigned managed identity to authenticate to the Key Vault. The identity must be assigned to the managed environment, in the same tenant as the Key Vault, and it must have the following key permissions on the Key Vault: wrapkey, unwrapkey, get.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string AuthIdentity { get; set; }
        /// <summary>The list of availability zones to use for managed environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of availability zones to use for managed environment",
        SerializedName = @"availabilityZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] AvailabilityZone { get; set; }
        /// <summary>
        /// Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
        SerializedName = @"identity",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateKeyVaultPropertyIdentity { get; set; }
        /// <summary>URL pointing to the Azure Key Vault secret that holds the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URL pointing to the Azure Key Vault secret that holds the certificate.",
        SerializedName = @"keyVaultUrl",
        PossibleTypes = new [] { typeof(string) })]
        string CertificateKeyVaultPropertyKeyVaultUrl { get; set; }
        /// <summary>Certificate password</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Certificate password",
        SerializedName = @"certificatePassword",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationCertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PFX or PEM blob",
        SerializedName = @"certificateValue",
        PossibleTypes = new [] { typeof(byte[]) })]
        byte[] CustomDomainConfigurationCertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id used to verify domain name ownership",
        SerializedName = @"customDomainVerificationId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationCustomDomainVerificationId { get;  }
        /// <summary>Dns suffix for the environment domain</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Dns suffix for the environment domain",
        SerializedName = @"dnsSuffix",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationDnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate expiration date.",
        SerializedName = @"expirationDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CustomDomainConfigurationExpirationDate { get;  }
        /// <summary>Subject name of the certificate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Subject name of the certificate.",
        SerializedName = @"subjectName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationSubjectName { get;  }
        /// <summary>Certificate thumbprint.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Certificate thumbprint.",
        SerializedName = @"thumbprint",
        PossibleTypes = new [] { typeof(string) })]
        string CustomDomainConfigurationThumbprint { get;  }
        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Insights connection string used by Dapr to export Service to Service communication telemetry",
        SerializedName = @"daprAIConnectionString",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAiConnectionString { get; set; }
        /// <summary>
        /// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
        SerializedName = @"daprAIInstrumentationKey",
        PossibleTypes = new [] { typeof(string) })]
        string DaprAiInstrumentationKey { get; set; }
        /// <summary>The version of Dapr</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Dapr",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string DaprConfigurationVersion { get;  }
        /// <summary>The data dog api key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data dog api key",
        SerializedName = @"key",
        PossibleTypes = new [] { typeof(string) })]
        string DataDogConfigurationKey { get; set; }
        /// <summary>The data dog site</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data dog site",
        SerializedName = @"site",
        PossibleTypes = new [] { typeof(string) })]
        string DataDogConfigurationSite { get; set; }
        /// <summary>Default Domain Name for the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Default Domain Name for the cluster",
        SerializedName = @"defaultDomain",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultDomain { get;  }
        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Any errors that occurred during deployment or deployment validation",
        SerializedName = @"deploymentErrors",
        PossibleTypes = new [] { typeof(string) })]
        string DeploymentError { get;  }
        /// <summary>Open telemetry otlp configurations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry otlp configurations",
        SerializedName = @"otlpConfigurations",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IOtlpConfiguration) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IOtlpConfiguration[] DestinationConfigurationOtlpConfiguration { get; set; }
        /// <summary>Boolean indicating whether the peer traffic encryption is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether the peer traffic encryption is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EncryptionEnabled { get; set; }
        /// <summary>The endpoint of the eventstream of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint of the eventstream of the Environment.",
        SerializedName = @"eventStreamEndpoint",
        PossibleTypes = new [] { typeof(string) })]
        string EventStreamEndpoint { get;  }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get;  }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedServiceIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IUserAssignedIdentities) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a
        /// subnet ID is provided, this resource group will be created in the same subscription as the subnet.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
        SerializedName = @"infrastructureResourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureResourceGroup { get; set; }
        /// <summary>
        /// Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
        SerializedName = @"headerCountLimit",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressConfigurationHeaderCountLimit { get; set; }
        /// <summary>
        /// Duration (in minutes) before idle requests are timed out. Must be at least 1 minute. Defaults to 4 minutes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Duration (in minutes) before idle requests are timed out. Must be at least 1 minute. Defaults to 4 minutes.",
        SerializedName = @"requestIdleTimeout",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressConfigurationRequestIdleTimeout { get; set; }
        /// <summary>
        /// Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480
        /// seconds.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
        SerializedName = @"terminationGracePeriodSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? IngressConfigurationTerminationGracePeriodSecond { get; set; }
        /// <summary>Name of the workload profile used by the ingress component. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the workload profile used by the ingress component. Required.",
        SerializedName = @"workloadProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string IngressConfigurationWorkloadProfileName { get; set; }
        /// <summary>The version of Keda</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of Keda",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string KedaConfigurationVersion { get;  }
        /// <summary>Key URL pointing to a key in KeyVault. Version segment of the Url is required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key URL pointing to a key in KeyVault. Version segment of the Url is required.",
        SerializedName = @"keyUrl",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultConfigurationKeyUrl { get; set; }
        /// <summary>Kind of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kind of the Environment.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Log analytics customer id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log analytics customer id",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticConfigurationCustomerId { get; set; }
        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether to parse json string log into dynamic json columns",
        SerializedName = @"dynamicJsonColumns",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogAnalyticConfigurationDynamicJsonColumn { get; set; }
        /// <summary>Log analytics customer key</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log analytics customer key",
        SerializedName = @"sharedKey",
        PossibleTypes = new [] { typeof(string) })]
        string LogAnalyticConfigurationSharedKey { get; set; }
        /// <summary>Open telemetry logs destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry logs destinations",
        SerializedName = @"destinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] LogConfigurationDestination { get; set; }
        /// <summary>Open telemetry metrics destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry metrics destinations",
        SerializedName = @"destinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] MetricConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including keda metrics</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if including keda metrics",
        SerializedName = @"includeKeda",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MetricConfigurationIncludeKeda { get; set; }
        /// <summary>Boolean indicating whether the mutual TLS authentication is enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating whether the mutual TLS authentication is enabled",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MtlEnabled { get; set; }
        /// <summary>Private endpoint connections to the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private endpoint connections to the resource.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Private Link Default Domain Name for the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Private Link Default Domain Name for the environment",
        SerializedName = @"privateLinkDefaultDomain",
        PossibleTypes = new [] { typeof(string) })]
        string PrivateLinkDefaultDomain { get;  }
        /// <summary>Provisioning state of the Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of the Environment.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// Maximum number of ingress replicas. Must be greater than or equal to minReplicas.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of ingress replicas. Must be greater than or equal to minReplicas.",
        SerializedName = @"maxReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMaxReplica { get; set; }
        /// <summary>Minimum number of ingress replicas. Must be at least 2. Required.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum number of ingress replicas. Must be at least 2. Required.",
        SerializedName = @"minReplicas",
        PossibleTypes = new [] { typeof(int) })]
        int? ScaleMinReplica { get; set; }
        /// <summary>Static IP of the Environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Static IP of the Environment",
        SerializedName = @"staticIp",
        PossibleTypes = new [] { typeof(string) })]
        string StaticIP { get;  }
        /// <summary>Open telemetry traces destinations</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Open telemetry traces destinations",
        SerializedName = @"destinations",
        PossibleTypes = new [] { typeof(string) })]
        string[] TraceConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including dapr traces</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating if including dapr traces",
        SerializedName = @"includeDapr",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TraceConfigurationIncludeDapr { get; set; }
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
        SerializedName = @"dockerBridgeCidr",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
        SerializedName = @"infrastructureSubnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationInfrastructureSubnetId { get; set; }
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
        SerializedName = @"internal",
        PossibleTypes = new [] { typeof(bool) })]
        bool? VnetConfigurationInternal { get; set; }
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
        SerializedName = @"platformReservedCidr",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationPlatformReservedCidr { get; set; }
        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @" An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
        SerializedName = @"platformReservedDnsIP",
        PossibleTypes = new [] { typeof(string) })]
        string VnetConfigurationPlatformReservedDnsIP { get; set; }
        /// <summary>Workload profiles configured for the Managed Environment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Workload profiles configured for the Managed Environment.",
        SerializedName = @"workloadProfiles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IWorkloadProfile) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IWorkloadProfile[] WorkloadProfile { get; set; }
        /// <summary>Whether or not this Managed Environment is zone-redundant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not this Managed Environment is zone-redundant.",
        SerializedName = @"zoneRedundant",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ZoneRedundant { get; set; }

    }
    /// An environment for hosting container apps
    internal partial interface IManagedEnvironmentInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>Application Insights connection string</summary>
        string AppInsightConfigurationConnectionString { get; set; }
        /// <summary>Environment level Application Insights configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IAppInsightsConfiguration AppInsightsConfiguration { get; set; }
        /// <summary>Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'</summary>
        string AppLogConfigurationDestination { get; set; }
        /// <summary>
        /// Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ILogAnalyticsConfiguration AppLogConfigurationLogAnalyticsConfiguration { get; set; }
        /// <summary>
        /// Cluster configuration which enables the log daemon to export app logs to configured destination
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IAppLogsConfiguration AppLogsConfiguration { get; set; }
        /// <summary>
        /// Resource ID of a user-assigned managed identity to authenticate to the Key Vault. The identity must be assigned to the
        /// managed environment, in the same tenant as the Key Vault, and it must have the following key permissions on the Key Vault:
        /// wrapkey, unwrapkey, get.
        /// </summary>
        string AuthIdentity { get; set; }
        /// <summary>The list of availability zones to use for managed environment</summary>
        string[] AvailabilityZone { get; set; }
        /// <summary>
        /// Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
        /// </summary>
        string CertificateKeyVaultPropertyIdentity { get; set; }
        /// <summary>URL pointing to the Azure Key Vault secret that holds the certificate.</summary>
        string CertificateKeyVaultPropertyKeyVaultUrl { get; set; }
        /// <summary>Custom domain configuration for the environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ICustomDomainConfiguration CustomDomainConfiguration { get; set; }
        /// <summary>Certificate stored in Azure Key Vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ICertificateKeyVaultProperties CustomDomainConfigurationCertificateKeyVaultProperty { get; set; }
        /// <summary>Certificate password</summary>
        string CustomDomainConfigurationCertificatePassword { get; set; }
        /// <summary>PFX or PEM blob</summary>
        byte[] CustomDomainConfigurationCertificateValue { get; set; }
        /// <summary>Id used to verify domain name ownership</summary>
        string CustomDomainConfigurationCustomDomainVerificationId { get; set; }
        /// <summary>Dns suffix for the environment domain</summary>
        string CustomDomainConfigurationDnsSuffix { get; set; }
        /// <summary>Certificate expiration date.</summary>
        global::System.DateTime? CustomDomainConfigurationExpirationDate { get; set; }
        /// <summary>Subject name of the certificate.</summary>
        string CustomDomainConfigurationSubjectName { get; set; }
        /// <summary>Certificate thumbprint.</summary>
        string CustomDomainConfigurationThumbprint { get; set; }
        /// <summary>
        /// Application Insights connection string used by Dapr to export Service to Service communication telemetry
        /// </summary>
        string DaprAiConnectionString { get; set; }
        /// <summary>
        /// Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
        /// </summary>
        string DaprAiInstrumentationKey { get; set; }
        /// <summary>The configuration of Dapr component.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDaprConfiguration DaprConfiguration { get; set; }
        /// <summary>The version of Dapr</summary>
        string DaprConfigurationVersion { get; set; }
        /// <summary>The data dog api key</summary>
        string DataDogConfigurationKey { get; set; }
        /// <summary>The data dog site</summary>
        string DataDogConfigurationSite { get; set; }
        /// <summary>Default Domain Name for the cluster</summary>
        string DefaultDomain { get; set; }
        /// <summary>Any errors that occurred during deployment or deployment validation</summary>
        string DeploymentError { get; set; }
        /// <summary>Open telemetry datadog destination configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDataDogConfiguration DestinationConfigurationDataDogConfiguration { get; set; }
        /// <summary>Open telemetry otlp configurations</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IOtlpConfiguration[] DestinationConfigurationOtlpConfiguration { get; set; }
        /// <summary>Disk encryption configuration for the Managed Environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDiskEncryptionConfiguration DiskEncryptionConfiguration { get; set; }
        /// <summary>
        /// The Key Vault that contains your key to use for disk encryption. The Key Vault must be in the same region as the Managed
        /// Environment.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDiskEncryptionConfigurationKeyVaultConfiguration DiskEncryptionConfigurationKeyVaultConfiguration { get; set; }
        /// <summary>Boolean indicating whether the peer traffic encryption is enabled</summary>
        bool? EncryptionEnabled { get; set; }
        /// <summary>The endpoint of the eventstream of the Environment.</summary>
        string EventStreamEndpoint { get; set; }
        /// <summary>
        /// Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or
        /// credentials in code.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IManagedServiceIdentity Identity { get; set; }
        /// <summary>
        /// The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>
        /// The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        /// </summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ManagedServiceIdentityType? IdentityType { get; set; }
        /// <summary>
        /// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
        /// resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
        /// The dictionary values can be empty objects ({}) in requests.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api50.IUserAssignedIdentities IdentityUserAssignedIdentity { get; set; }
        /// <summary>
        /// Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a
        /// subnet ID is provided, this resource group will be created in the same subscription as the subnet.
        /// </summary>
        string InfrastructureResourceGroup { get; set; }
        /// <summary>Ingress configuration for the Managed Environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IIngressConfiguration IngressConfiguration { get; set; }
        /// <summary>
        /// Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.
        /// </summary>
        int? IngressConfigurationHeaderCountLimit { get; set; }
        /// <summary>
        /// Duration (in minutes) before idle requests are timed out. Must be at least 1 minute. Defaults to 4 minutes.
        /// </summary>
        int? IngressConfigurationRequestIdleTimeout { get; set; }
        /// <summary>Scaling configuration for the ingress component. Required.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IIngressConfigurationScale IngressConfigurationScale { get; set; }
        /// <summary>
        /// Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480
        /// seconds.
        /// </summary>
        int? IngressConfigurationTerminationGracePeriodSecond { get; set; }
        /// <summary>Name of the workload profile used by the ingress component. Required.</summary>
        string IngressConfigurationWorkloadProfileName { get; set; }
        /// <summary>The configuration of Keda component.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IKedaConfiguration KedaConfiguration { get; set; }
        /// <summary>The version of Keda</summary>
        string KedaConfigurationVersion { get; set; }
        /// <summary>Configuration properties for the authentication to the Key Vault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDiskEncryptionConfigurationKeyVaultConfigurationAuth KeyVaultConfigurationAuth { get; set; }
        /// <summary>Key URL pointing to a key in KeyVault. Version segment of the Url is required.</summary>
        string KeyVaultConfigurationKeyUrl { get; set; }
        /// <summary>Kind of the Environment.</summary>
        string Kind { get; set; }
        /// <summary>Log analytics customer id</summary>
        string LogAnalyticConfigurationCustomerId { get; set; }
        /// <summary>Boolean indicating whether to parse json string log into dynamic json columns</summary>
        bool? LogAnalyticConfigurationDynamicJsonColumn { get; set; }
        /// <summary>Log analytics customer key</summary>
        string LogAnalyticConfigurationSharedKey { get; set; }
        /// <summary>Open telemetry logs destinations</summary>
        string[] LogConfigurationDestination { get; set; }
        /// <summary>Open telemetry metrics destinations</summary>
        string[] MetricConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including keda metrics</summary>
        bool? MetricConfigurationIncludeKeda { get; set; }
        /// <summary>Boolean indicating whether the mutual TLS authentication is enabled</summary>
        bool? MtlEnabled { get; set; }
        /// <summary>Environment Open Telemetry configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IOpenTelemetryConfiguration OpenTelemetryConfiguration { get; set; }
        /// <summary>Open telemetry destinations configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IDestinationsConfiguration OpenTelemetryConfigurationDestinationsConfiguration { get; set; }
        /// <summary>Open telemetry logs configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ILogsConfiguration OpenTelemetryConfigurationLogsConfiguration { get; set; }
        /// <summary>Open telemetry metrics configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IMetricsConfiguration OpenTelemetryConfigurationMetricsConfiguration { get; set; }
        /// <summary>Open telemetry trace configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.ITracesConfiguration OpenTelemetryConfigurationTracesConfiguration { get; set; }
        /// <summary>Peer authentication settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesPeerAuthentication PeerAuthentication { get; set; }
        /// <summary>Mutual TLS authentication settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IMtls PeerAuthenticationMtl { get; set; }
        /// <summary>Peer traffic settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesPeerTrafficConfiguration PeerTrafficConfiguration { get; set; }
        /// <summary>Peer traffic encryption settings for the Managed Environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption PeerTrafficConfigurationEncryption { get; set; }
        /// <summary>Private endpoint connections to the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Private Link Default Domain Name for the environment</summary>
        string PrivateLinkDefaultDomain { get; set; }
        /// <summary>Managed environment resource specific properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IManagedEnvironmentProperties Property { get; set; }
        /// <summary>Provisioning state of the Environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.EnvironmentProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// Maximum number of ingress replicas. Must be greater than or equal to minReplicas.
        /// </summary>
        int? ScaleMaxReplica { get; set; }
        /// <summary>Minimum number of ingress replicas. Must be at least 2. Required.</summary>
        int? ScaleMinReplica { get; set; }
        /// <summary>Static IP of the Environment</summary>
        string StaticIP { get; set; }
        /// <summary>Open telemetry traces destinations</summary>
        string[] TraceConfigurationDestination { get; set; }
        /// <summary>Boolean indicating if including dapr traces</summary>
        bool? TraceConfigurationIncludeDapr { get; set; }
        /// <summary>Vnet configuration for the environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IVnetConfiguration VnetConfiguration { get; set; }
        /// <summary>
        /// CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
        /// </summary>
        string VnetConfigurationDockerBridgeCidr { get; set; }
        /// <summary>
        /// Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
        /// </summary>
        string VnetConfigurationInfrastructureSubnetId { get; set; }
        /// <summary>
        /// Boolean indicating the environment only has an internal load balancer. These environments do not have a public static
        /// IP resource. They must provide infrastructureSubnetId if enabling this property
        /// </summary>
        bool? VnetConfigurationInternal { get; set; }
        /// <summary>
        /// IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any
        /// other provided IP ranges.
        /// </summary>
        string VnetConfigurationPlatformReservedCidr { get; set; }
        /// <summary>
        /// An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.
        /// </summary>
        string VnetConfigurationPlatformReservedDnsIP { get; set; }
        /// <summary>Workload profiles configured for the Managed Environment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IWorkloadProfile[] WorkloadProfile { get; set; }
        /// <summary>Whether or not this Managed Environment is zone-redundant.</summary>
        bool? ZoneRedundant { get; set; }

    }
}