// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>The detailed info of patch operation performing when applying a patch.</summary>
    public partial class PatchDetails :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetails,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal
    {

        /// <summary>Backing field for <see cref="DetectionStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus _detectionStatus;

        /// <summary>The status of the patch detection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus DetectionStatus { get => this._detectionStatus; }

        /// <summary>Backing field for <see cref="LastDetectionTime" /> property.</summary>
        private global::System.DateTime _lastDetectionTime;

        /// <summary>The UTC timestamp that describes the latest detection was done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public global::System.DateTime LastDetectionTime { get => this._lastDetectionTime; }

        /// <summary>Internal Acessors for DetectionStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.DetectionStatus { get => this._detectionStatus; set { {_detectionStatus = value;} } }

        /// <summary>Internal Acessors for LastDetectionTime</summary>
        global::System.DateTime Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.LastDetectionTime { get => this._lastDetectionTime; set { {_lastDetectionTime = value;} } }

        /// <summary>Internal Acessors for NewImageName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.NewImageName { get => this._newImageName; set { {_newImageName = value;} } }

        /// <summary>Internal Acessors for NewLayer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayer Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.NewLayer { get => (this._newLayer = this._newLayer ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.PatchDetailsNewLayer()); set { {_newLayer = value;} } }

        /// <summary>Internal Acessors for OldLayer</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayer Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.OldLayer { get => (this._oldLayer = this._oldLayer ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.PatchDetailsOldLayer()); set { {_oldLayer = value;} } }

        /// <summary>Internal Acessors for PatchType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType? Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.PatchType { get => this._patchType; set { {_patchType = value;} } }

        /// <summary>Internal Acessors for TargetContainerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.TargetContainerName { get => this._targetContainerName; set { {_targetContainerName = value;} } }

        /// <summary>Internal Acessors for TargetImage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsInternal.TargetImage { get => this._targetImage; set { {_targetImage = value;} } }

        /// <summary>Backing field for <see cref="NewImageName" /> property.</summary>
        private string _newImageName;

        /// <summary>The name of the new image created by the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string NewImageName { get => this._newImageName; }

        /// <summary>Backing field for <see cref="NewLayer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayer _newLayer;

        /// <summary>New layer update details in the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayer NewLayer { get => (this._newLayer = this._newLayer ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.PatchDetailsNewLayer()); }

        /// <summary>The framework and its version in the new run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string NewLayerFrameworkAndVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayerInternal)NewLayer).FrameworkAndVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayerInternal)NewLayer).FrameworkAndVersion = value ?? null; }

        /// <summary>The details of the new layer for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string NewLayerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayerInternal)NewLayer).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayerInternal)NewLayer).Name = value ?? null; }

        /// <summary>The OS name and its version in the new run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string NewLayerOSAndVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayerInternal)NewLayer).OSAndVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayerInternal)NewLayer).OSAndVersion = value ?? null; }

        /// <summary>Backing field for <see cref="OldLayer" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayer _oldLayer;

        /// <summary>The old layer details in the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayer OldLayer { get => (this._oldLayer = this._oldLayer ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.PatchDetailsOldLayer()); }

        /// <summary>The framework and its version in the old run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string OldLayerFrameworkAndVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayerInternal)OldLayer).FrameworkAndVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayerInternal)OldLayer).FrameworkAndVersion = value ?? null; }

        /// <summary>The details of the old layer for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string OldLayerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayerInternal)OldLayer).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayerInternal)OldLayer).Name = value ?? null; }

        /// <summary>The OS name and its version in the old run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string OldLayerOSAndVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayerInternal)OldLayer).OSAndVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayerInternal)OldLayer).OSAndVersion = value ?? null; }

        /// <summary>Backing field for <see cref="PatchType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType? _patchType;

        /// <summary>The type for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType? PatchType { get => this._patchType; }

        /// <summary>Backing field for <see cref="TargetContainerName" /> property.</summary>
        private string _targetContainerName;

        /// <summary>The name of the target container for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string TargetContainerName { get => this._targetContainerName; }

        /// <summary>Backing field for <see cref="TargetImage" /> property.</summary>
        private string _targetImage;

        /// <summary>The name of the target image for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public string TargetImage { get => this._targetImage; }

        /// <summary>Creates an new <see cref="PatchDetails" /> instance.</summary>
        public PatchDetails()
        {

        }
    }
    /// The detailed info of patch operation performing when applying a patch.
    public partial interface IPatchDetails :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>The status of the patch detection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The status of the patch detection.",
        SerializedName = @"detectionStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus DetectionStatus { get;  }
        /// <summary>The UTC timestamp that describes the latest detection was done.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The UTC timestamp that describes the latest detection was done.",
        SerializedName = @"lastDetectionTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime LastDetectionTime { get;  }
        /// <summary>The name of the new image created by the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the new image created by the patch.",
        SerializedName = @"newImageName",
        PossibleTypes = new [] { typeof(string) })]
        string NewImageName { get;  }
        /// <summary>The framework and its version in the new run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The framework and its version in the new run image for the target image.",
        SerializedName = @"frameworkAndVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NewLayerFrameworkAndVersion { get; set; }
        /// <summary>The details of the new layer for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The details of the new layer for the target image.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string NewLayerName { get; set; }
        /// <summary>The OS name and its version in the new run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS name and its version in the new run image for the target image.",
        SerializedName = @"osAndVersion",
        PossibleTypes = new [] { typeof(string) })]
        string NewLayerOSAndVersion { get; set; }
        /// <summary>The framework and its version in the old run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The framework and its version in the old run image for the target image.",
        SerializedName = @"frameworkAndVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OldLayerFrameworkAndVersion { get; set; }
        /// <summary>The details of the old layer for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The details of the old layer for the target image.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string OldLayerName { get; set; }
        /// <summary>The OS name and its version in the old run image for the target image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OS name and its version in the old run image for the target image.",
        SerializedName = @"osAndVersion",
        PossibleTypes = new [] { typeof(string) })]
        string OldLayerOSAndVersion { get; set; }
        /// <summary>The type for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type for the patch.",
        SerializedName = @"patchType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType? PatchType { get;  }
        /// <summary>The name of the target container for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The name of the target container for the patch.",
        SerializedName = @"targetContainerName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetContainerName { get;  }
        /// <summary>The name of the target image for the patch.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = true,
        ReadOnly = true,
        Description = @"The name of the target image for the patch.",
        SerializedName = @"targetImage",
        PossibleTypes = new [] { typeof(string) })]
        string TargetImage { get;  }

    }
    /// The detailed info of patch operation performing when applying a patch.
    internal partial interface IPatchDetailsInternal

    {
        /// <summary>The status of the patch detection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.DetectionStatus DetectionStatus { get; set; }
        /// <summary>The UTC timestamp that describes the latest detection was done.</summary>
        global::System.DateTime LastDetectionTime { get; set; }
        /// <summary>The name of the new image created by the patch.</summary>
        string NewImageName { get; set; }
        /// <summary>New layer update details in the target image.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsNewLayer NewLayer { get; set; }
        /// <summary>The framework and its version in the new run image for the target image.</summary>
        string NewLayerFrameworkAndVersion { get; set; }
        /// <summary>The details of the new layer for the target image.</summary>
        string NewLayerName { get; set; }
        /// <summary>The OS name and its version in the new run image for the target image.</summary>
        string NewLayerOSAndVersion { get; set; }
        /// <summary>The old layer details in the target image.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IPatchDetailsOldLayer OldLayer { get; set; }
        /// <summary>The framework and its version in the old run image for the target image.</summary>
        string OldLayerFrameworkAndVersion { get; set; }
        /// <summary>The details of the old layer for the target image.</summary>
        string OldLayerName { get; set; }
        /// <summary>The OS name and its version in the old run image for the target image.</summary>
        string OldLayerOSAndVersion { get; set; }
        /// <summary>The type for the patch.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PatchType? PatchType { get; set; }
        /// <summary>The name of the target container for the patch.</summary>
        string TargetContainerName { get; set; }
        /// <summary>The name of the target image for the patch.</summary>
        string TargetImage { get; set; }

    }
}