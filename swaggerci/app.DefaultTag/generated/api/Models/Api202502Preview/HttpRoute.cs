// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>
    /// Http Routes configuration, including paths to match on and whether or not rewrites are to be done.
    /// </summary>
    public partial class HttpRoute :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRoute,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteAction _action;

        /// <summary>Once route is matched, what is the desired action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteAction Action { get => (this._action = this._action ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.HttpRouteAction()); set => this._action = value; }

        /// <summary>Rewrite prefix, default is no rewrites</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string ActionPrefixRewrite { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteActionInternal)Action).PrefixRewrite; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteActionInternal)Action).PrefixRewrite = value ?? null; }

        /// <summary>Backing field for <see cref="Match" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatch _match;

        /// <summary>Conditions route will match on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatch Match { get => (this._match = this._match ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.HttpRouteMatch()); set => this._match = value; }

        /// <summary>path case sensitive, default is true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public bool? MatchCaseSensitive { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).CaseSensitive; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).CaseSensitive = value ?? default(bool); }

        /// <summary>match on exact path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MatchPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).Path; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).Path = value ?? null; }

        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MatchPathSeparatedPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).PathSeparatedPrefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).PathSeparatedPrefix = value ?? null; }

        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Inlined)]
        public string MatchPrefix { get => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).Prefix; set => ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatchInternal)Match).Prefix = value ?? null; }

        /// <summary>Internal Acessors for Action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteAction Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteInternal.Action { get => (this._action = this._action ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.HttpRouteAction()); set { {_action = value;} } }

        /// <summary>Internal Acessors for Match</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatch Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteInternal.Match { get => (this._match = this._match ?? new Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.HttpRouteMatch()); set { {_match = value;} } }

        /// <summary>Creates an new <see cref="HttpRoute" /> instance.</summary>
        public HttpRoute()
        {

        }
    }
    /// Http Routes configuration, including paths to match on and whether or not rewrites are to be done.
    public partial interface IHttpRoute :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>Rewrite prefix, default is no rewrites</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Rewrite prefix, default is no rewrites",
        SerializedName = @"prefixRewrite",
        PossibleTypes = new [] { typeof(string) })]
        string ActionPrefixRewrite { get; set; }
        /// <summary>path case sensitive, default is true</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"path case sensitive, default is true",
        SerializedName = @"caseSensitive",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MatchCaseSensitive { get; set; }
        /// <summary>match on exact path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"match on exact path",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string MatchPath { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"match on all prefix's. Not exact",
        SerializedName = @"pathSeparatedPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string MatchPathSeparatedPrefix { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"match on all prefix's. Not exact",
        SerializedName = @"prefix",
        PossibleTypes = new [] { typeof(string) })]
        string MatchPrefix { get; set; }

    }
    /// Http Routes configuration, including paths to match on and whether or not rewrites are to be done.
    internal partial interface IHttpRouteInternal

    {
        /// <summary>Once route is matched, what is the desired action</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteAction Action { get; set; }
        /// <summary>Rewrite prefix, default is no rewrites</summary>
        string ActionPrefixRewrite { get; set; }
        /// <summary>Conditions route will match on</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202502Preview.IHttpRouteMatch Match { get; set; }
        /// <summary>path case sensitive, default is true</summary>
        bool? MatchCaseSensitive { get; set; }
        /// <summary>match on exact path</summary>
        string MatchPath { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        string MatchPathSeparatedPrefix { get; set; }
        /// <summary>match on all prefix's. Not exact</summary>
        string MatchPrefix { get; set; }

    }
}