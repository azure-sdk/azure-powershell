// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Extensions;

    /// <summary>Port mappings of container app ingress</summary>
    public partial class IngressPortMapping :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IIngressPortMapping,
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IIngressPortMappingInternal
    {

        /// <summary>Backing field for <see cref="ExposedPort" /> property.</summary>
        private int? _exposedPort;

        /// <summary>
        /// Specifies the exposed port for the target port. If not specified, it defaults to target port
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int? ExposedPort { get => this._exposedPort; set => this._exposedPort = value; }

        /// <summary>Backing field for <see cref="External" /> property.</summary>
        private bool _external;

        /// <summary>Specifies whether the app port is accessible outside of the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public bool External { get => this._external; set => this._external = value; }

        /// <summary>Backing field for <see cref="TargetPort" /> property.</summary>
        private int _targetPort;

        /// <summary>Specifies the port user's container listens on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.PropertyOrigin.Owned)]
        public int TargetPort { get => this._targetPort; set => this._targetPort = value; }

        /// <summary>Creates an new <see cref="IngressPortMapping" /> instance.</summary>
        public IngressPortMapping()
        {

        }
    }
    /// Port mappings of container app ingress
    public partial interface IIngressPortMapping :
        Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the exposed port for the target port. If not specified, it defaults to target port
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the exposed port for the target port. If not specified, it defaults to target port",
        SerializedName = @"exposedPort",
        PossibleTypes = new [] { typeof(int) })]
        int? ExposedPort { get; set; }
        /// <summary>Specifies whether the app port is accessible outside of the environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies whether the app port is accessible outside of the environment",
        SerializedName = @"external",
        PossibleTypes = new [] { typeof(bool) })]
        bool External { get; set; }
        /// <summary>Specifies the port user's container listens on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies the port user's container listens on",
        SerializedName = @"targetPort",
        PossibleTypes = new [] { typeof(int) })]
        int TargetPort { get; set; }

    }
    /// Port mappings of container app ingress
    internal partial interface IIngressPortMappingInternal

    {
        /// <summary>
        /// Specifies the exposed port for the target port. If not specified, it defaults to target port
        /// </summary>
        int? ExposedPort { get; set; }
        /// <summary>Specifies whether the app port is accessible outside of the environment</summary>
        bool External { get; set; }
        /// <summary>Specifies the port user's container listens on</summary>
        int TargetPort { get; set; }

    }
}