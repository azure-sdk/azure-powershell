// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501
{
    using Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.PowerShell;

    /// <summary>Container App session pool resource specific properties</summary>
    [System.ComponentModel.TypeConverter(typeof(SessionPoolPropertiesTypeConverter))]
    public partial class SessionPoolProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionPoolProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SessionPoolProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionPoolProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SessionPoolProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SessionPoolProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="SessionPoolProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionPoolProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SessionPoolProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ScaleConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IScaleConfiguration) content.GetValueForProperty("ScaleConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ScaleConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DynamicPoolConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IDynamicPoolConfiguration) content.GetValueForProperty("DynamicPoolConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.DynamicPoolConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomContainerTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ICustomContainerTemplate) content.GetValueForProperty("CustomContainerTemplate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplate, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.CustomContainerTemplateTypeConverter.ConvertFrom);
            }
            if (content.Contains("SessionNetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionNetworkConfiguration) content.GetValueForProperty("SessionNetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ContainerType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType?) content.GetValueForProperty("ContainerType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ContainerType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType.CreateFrom);
            }
            if (content.Contains("PoolManagementType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType?) content.GetValueForProperty("PoolManagementType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType.CreateFrom);
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).NodeCount = (int?) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Secret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).Secret = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolSecret[]) content.GetValueForProperty("Secret",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).Secret, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolSecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionPoolSecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("PoolManagementEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementEndpoint = (string) content.GetValueForProperty("PoolManagementEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState.CreateFrom);
            }
            if (content.Contains("ManagedIdentitySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ManagedIdentitySetting = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IManagedIdentitySetting[]) content.GetValueForProperty("ManagedIdentitySetting",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ManagedIdentitySetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IManagedIdentitySetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ManagedIdentitySettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("DynamicPoolConfigurationLifecycleConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfigurationLifecycleConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ILifecycleConfiguration) content.GetValueForProperty("DynamicPoolConfigurationLifecycleConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfigurationLifecycleConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.LifecycleConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomContainerTemplateContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateContainer = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionContainer[]) content.GetValueForProperty("CustomContainerTemplateContainer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateContainer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionContainer>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionContainerTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScaleConfigurationMaxConcurrentSession"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationMaxConcurrentSession = (int?) content.GetValueForProperty("ScaleConfigurationMaxConcurrentSession",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationMaxConcurrentSession, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScaleConfigurationReadySessionInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationReadySessionInstance = (int?) content.GetValueForProperty("ScaleConfigurationReadySessionInstance",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationReadySessionInstance, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LifecycleConfigurationLifecycleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationLifecycleType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LifecycleType?) content.GetValueForProperty("LifecycleConfigurationLifecycleType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationLifecycleType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LifecycleType.CreateFrom);
            }
            if (content.Contains("CustomContainerTemplateRegistryCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateRegistryCredentials = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionRegistryCredentials) content.GetValueForProperty("CustomContainerTemplateRegistryCredentials",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateRegistryCredentials, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionRegistryCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomContainerTemplateIngress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateIngress = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionIngress) content.GetValueForProperty("CustomContainerTemplateIngress",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateIngress, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionIngressTypeConverter.ConvertFrom);
            }
            if (content.Contains("SessionNetworkConfigurationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfigurationStatus = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus?) content.GetValueForProperty("SessionNetworkConfigurationStatus",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfigurationStatus, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus.CreateFrom);
            }
            if (content.Contains("LifecycleConfigurationCooldownPeriodInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationCooldownPeriodInSecond = (int?) content.GetValueForProperty("LifecycleConfigurationCooldownPeriodInSecond",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationCooldownPeriodInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LifecycleConfigurationMaxAlivePeriodInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationMaxAlivePeriodInSecond = (int?) content.GetValueForProperty("LifecycleConfigurationMaxAlivePeriodInSecond",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationMaxAlivePeriodInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RegistryCredentialsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsServer = (string) content.GetValueForProperty("RegistryCredentialsServer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsServer, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialsUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsUsername = (string) content.GetValueForProperty("RegistryCredentialsUsername",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsUsername, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialsPasswordSecretRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsPasswordSecretRef = (string) content.GetValueForProperty("RegistryCredentialsPasswordSecretRef",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsPasswordSecretRef, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialsIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsIdentity = (string) content.GetValueForProperty("RegistryCredentialsIdentity",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("IngressTargetPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).IngressTargetPort = (int?) content.GetValueForProperty("IngressTargetPort",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).IngressTargetPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionPoolProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SessionPoolProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ScaleConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IScaleConfiguration) content.GetValueForProperty("ScaleConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ScaleConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("DynamicPoolConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IDynamicPoolConfiguration) content.GetValueForProperty("DynamicPoolConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.DynamicPoolConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomContainerTemplate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplate = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ICustomContainerTemplate) content.GetValueForProperty("CustomContainerTemplate",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplate, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.CustomContainerTemplateTypeConverter.ConvertFrom);
            }
            if (content.Contains("SessionNetworkConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionNetworkConfiguration) content.GetValueForProperty("SessionNetworkConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionNetworkConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("EnvironmentId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).EnvironmentId = (string) content.GetValueForProperty("EnvironmentId",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).EnvironmentId, global::System.Convert.ToString);
            }
            if (content.Contains("ContainerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ContainerType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType?) content.GetValueForProperty("ContainerType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ContainerType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.ContainerType.CreateFrom);
            }
            if (content.Contains("PoolManagementType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType?) content.GetValueForProperty("PoolManagementType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.PoolManagementType.CreateFrom);
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).NodeCount = (int?) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Secret"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).Secret = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolSecret[]) content.GetValueForProperty("Secret",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).Secret, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolSecret>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionPoolSecretTypeConverter.ConvertFrom));
            }
            if (content.Contains("PoolManagementEndpoint"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementEndpoint = (string) content.GetValueForProperty("PoolManagementEndpoint",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).PoolManagementEndpoint, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionPoolProvisioningState.CreateFrom);
            }
            if (content.Contains("ManagedIdentitySetting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ManagedIdentitySetting = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IManagedIdentitySetting[]) content.GetValueForProperty("ManagedIdentitySetting",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ManagedIdentitySetting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.IManagedIdentitySetting>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ManagedIdentitySettingTypeConverter.ConvertFrom));
            }
            if (content.Contains("DynamicPoolConfigurationLifecycleConfiguration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfigurationLifecycleConfiguration = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ILifecycleConfiguration) content.GetValueForProperty("DynamicPoolConfigurationLifecycleConfiguration",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).DynamicPoolConfigurationLifecycleConfiguration, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.LifecycleConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomContainerTemplateContainer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateContainer = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionContainer[]) content.GetValueForProperty("CustomContainerTemplateContainer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateContainer, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionContainer>(__y, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionContainerTypeConverter.ConvertFrom));
            }
            if (content.Contains("ScaleConfigurationMaxConcurrentSession"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationMaxConcurrentSession = (int?) content.GetValueForProperty("ScaleConfigurationMaxConcurrentSession",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationMaxConcurrentSession, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScaleConfigurationReadySessionInstance"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationReadySessionInstance = (int?) content.GetValueForProperty("ScaleConfigurationReadySessionInstance",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).ScaleConfigurationReadySessionInstance, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LifecycleConfigurationLifecycleType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationLifecycleType = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LifecycleType?) content.GetValueForProperty("LifecycleConfigurationLifecycleType",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationLifecycleType, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.LifecycleType.CreateFrom);
            }
            if (content.Contains("CustomContainerTemplateRegistryCredentials"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateRegistryCredentials = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionRegistryCredentials) content.GetValueForProperty("CustomContainerTemplateRegistryCredentials",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateRegistryCredentials, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionRegistryCredentialsTypeConverter.ConvertFrom);
            }
            if (content.Contains("CustomContainerTemplateIngress"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateIngress = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionIngress) content.GetValueForProperty("CustomContainerTemplateIngress",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).CustomContainerTemplateIngress, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.SessionIngressTypeConverter.ConvertFrom);
            }
            if (content.Contains("SessionNetworkConfigurationStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfigurationStatus = (Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus?) content.GetValueForProperty("SessionNetworkConfigurationStatus",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).SessionNetworkConfigurationStatus, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Support.SessionNetworkStatus.CreateFrom);
            }
            if (content.Contains("LifecycleConfigurationCooldownPeriodInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationCooldownPeriodInSecond = (int?) content.GetValueForProperty("LifecycleConfigurationCooldownPeriodInSecond",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationCooldownPeriodInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LifecycleConfigurationMaxAlivePeriodInSecond"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationMaxAlivePeriodInSecond = (int?) content.GetValueForProperty("LifecycleConfigurationMaxAlivePeriodInSecond",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).LifecycleConfigurationMaxAlivePeriodInSecond, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("RegistryCredentialsServer"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsServer = (string) content.GetValueForProperty("RegistryCredentialsServer",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsServer, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialsUsername"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsUsername = (string) content.GetValueForProperty("RegistryCredentialsUsername",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsUsername, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialsPasswordSecretRef"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsPasswordSecretRef = (string) content.GetValueForProperty("RegistryCredentialsPasswordSecretRef",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsPasswordSecretRef, global::System.Convert.ToString);
            }
            if (content.Contains("RegistryCredentialsIdentity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsIdentity = (string) content.GetValueForProperty("RegistryCredentialsIdentity",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).RegistryCredentialsIdentity, global::System.Convert.ToString);
            }
            if (content.Contains("IngressTargetPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).IngressTargetPort = (int?) content.GetValueForProperty("IngressTargetPort",((Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Models.Api202501.ISessionPoolPropertiesInternal)this).IngressTargetPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ContainerAppsApi.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Container App session pool resource specific properties
    [System.ComponentModel.TypeConverter(typeof(SessionPoolPropertiesTypeConverter))]
    public partial interface ISessionPoolProperties

    {

    }
}