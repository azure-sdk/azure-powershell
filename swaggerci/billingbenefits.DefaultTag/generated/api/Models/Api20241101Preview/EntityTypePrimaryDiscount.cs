// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Extensions;

    /// <summary>Entity type for primary discounts</summary>
    public partial class EntityTypePrimaryDiscount :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IEntityTypePrimaryDiscount,
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IEntityTypePrimaryDiscountInternal,
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountProperties __discountProperties = new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.DiscountProperties();

        /// <summary>List of applied scopes supported for discounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountAppliedScopeType? AppliedScopeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).AppliedScopeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).AppliedScopeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountAppliedScopeType)""); }

        /// <summary>Fully-qualified identifier of the benefit under applicable benefit list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string BenefitResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BenefitResourceId; }

        /// <summary>Billing account resource id where the discount metadata is present.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string BillingAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BillingAccountResourceId; }

        /// <summary>Billing profile resource id where the discount is scoped to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string BillingProfileResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BillingProfileResourceId; }

        /// <summary>Customer resource id where the discount is scoped to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string CustomerResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).CustomerResourceId; }

        /// <summary>Backing field for <see cref="DiscountTypeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypeProperties _discountTypeProperty;

        /// <summary>This defines the conditions for a given discount type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypeProperties DiscountTypeProperty { get => (this._discountTypeProperty = this._discountTypeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.DiscountTypeProperties()); set => this._discountTypeProperty = value; }

        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required,
        /// one of supported values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn? DiscountTypePropertyApplyDiscountOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).ApplyDiscountOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).ApplyDiscountOn = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn)""); }

        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] DiscountTypePropertyCondition { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).Condition; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).Condition = value ?? null /* arrayOf */; }

        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values
        /// are Stackable and BestOf.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? DiscountTypePropertyDiscountCombinationRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).DiscountCombinationRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).DiscountCombinationRule = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule)""); }

        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public double? DiscountTypePropertyDiscountPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).DiscountPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).DiscountPercentage = value ?? default(double); }

        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType? DiscountTypePropertyDiscountType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).DiscountType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).DiscountType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType)""); }

        /// <summary>This defines a user friendly display name for the discount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).DisplayName = value ?? null; }

        /// <summary>Backing field for <see cref="EndAt" /> property.</summary>
        private global::System.DateTime _endAt;

        /// <summary>
        /// End date of the discount. No duration will be supported. Allowed value is any date greater than or equal to startDate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        public global::System.DateTime EndAt { get => this._endAt; set => this._endAt = value; }

        /// <summary>
        /// This defines whether the entity being created is primary or affiliate. Supported values: primary, affiliate. Validation:
        /// Required, must match one of the 2 values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountEntityType EntityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).EntityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).EntityType = value ; }

        /// <summary>Internal Acessors for BenefitResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal.BenefitResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BenefitResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BenefitResourceId = value; }

        /// <summary>Internal Acessors for BillingAccountResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal.BillingAccountResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BillingAccountResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BillingAccountResourceId = value; }

        /// <summary>Internal Acessors for BillingProfileResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal.BillingProfileResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BillingProfileResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).BillingProfileResourceId = value; }

        /// <summary>Internal Acessors for CustomerResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal.CustomerResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).CustomerResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).CustomerResourceId = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).ProvisioningState = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountStatus? Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).Status = value; }

        /// <summary>Internal Acessors for DiscountTypeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypeProperties Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IEntityTypePrimaryDiscountInternal.DiscountTypeProperty { get => (this._discountTypeProperty = this._discountTypeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.DiscountTypeProperties()); set { {_discountTypeProperty = value;} } }

        /// <summary>Internal Acessors for DiscountTypePropertyPriceGuaranteeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteeProperties Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IEntityTypePrimaryDiscountInternal.DiscountTypePropertyPriceGuaranteeProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).PriceGuaranteeProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).PriceGuaranteeProperty = value; }

        /// <summary>
        /// The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z.
        /// Must be in UTC.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public global::System.DateTime? PriceGuaranteePropertyPriceGuaranteeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).PriceGuaranteePropertyPriceGuaranteeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).PriceGuaranteePropertyPriceGuaranteeDate = value ?? default(global::System.DateTime); }

        /// <summary>Supported values: Protected, Locked</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy? PriceGuaranteePropertyPricingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).PriceGuaranteePropertyPricingPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal)DiscountTypeProperty).PriceGuaranteePropertyPricingPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy)""); }

        /// <summary>This is the catalog UPN for the product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string ProductCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).ProductCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).ProductCode = value ; }

        /// <summary>
        /// The state of the resource. Supported values are Pending, Failed, Succeeded, Canceled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).ProvisioningState; }

        /// <summary>
        /// Start date of the discount. Value is the date the discount started or will start in the future.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public global::System.DateTime StartAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).StartAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).StartAt = value ; }

        /// <summary>Represents the current status of the discount.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).Status; }

        /// <summary>
        /// This is the globally unique identifier of the Discount which will not change for the lifetime of the Discount.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inherited)]
        public string SystemId { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).SystemId; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal)__discountProperties).SystemId = value ?? null; }

        /// <summary>Creates an new <see cref="EntityTypePrimaryDiscount" /> instance.</summary>
        public EntityTypePrimaryDiscount()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__discountProperties), __discountProperties);
            await eventListener.AssertObjectIsValid(nameof(__discountProperties), __discountProperties);
        }
    }
    /// Entity type for primary discounts
    public partial interface IEntityTypePrimaryDiscount :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountProperties
    {
        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required,
        /// one of supported values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required, one of supported values.",
        SerializedName = @"applyDiscountOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn? DiscountTypePropertyApplyDiscountOn { get; set; }
        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of conditions for the discount. Validation: Optional. Maximum length is 1000.",
        SerializedName = @"conditions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] DiscountTypePropertyCondition { get; set; }
        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values
        /// are Stackable and BestOf.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values are Stackable and BestOf.",
        SerializedName = @"discountCombinationRule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? DiscountTypePropertyDiscountCombinationRule { get; set; }
        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Discount percentage provided for the customer. Validation: Required unless this is a price rule.",
        SerializedName = @"discountPercentage",
        PossibleTypes = new [] { typeof(double) })]
        double? DiscountTypePropertyDiscountPercentage { get; set; }
        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.",
        SerializedName = @"discountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType? DiscountTypePropertyDiscountType { get; set; }
        /// <summary>
        /// End date of the discount. No duration will be supported. Allowed value is any date greater than or equal to startDate.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"End date of the discount. No duration will be supported. Allowed value is any date greater than or equal to startDate.",
        SerializedName = @"endAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime EndAt { get; set; }
        /// <summary>
        /// The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z.
        /// Must be in UTC.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z. Must be in UTC.",
        SerializedName = @"priceGuaranteeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PriceGuaranteePropertyPriceGuaranteeDate { get; set; }
        /// <summary>Supported values: Protected, Locked</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Supported values: Protected, Locked",
        SerializedName = @"pricingPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy? PriceGuaranteePropertyPricingPolicy { get; set; }

    }
    /// Entity type for primary discounts
    internal partial interface IEntityTypePrimaryDiscountInternal :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountPropertiesInternal
    {
        /// <summary>This defines the conditions for a given discount type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypeProperties DiscountTypeProperty { get; set; }
        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required,
        /// one of supported values.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn? DiscountTypePropertyApplyDiscountOn { get; set; }
        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] DiscountTypePropertyCondition { get; set; }
        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values
        /// are Stackable and BestOf.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? DiscountTypePropertyDiscountCombinationRule { get; set; }
        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        double? DiscountTypePropertyDiscountPercentage { get; set; }
        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType? DiscountTypePropertyDiscountType { get; set; }
        /// <summary>Set only in price guarantee scenario.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteeProperties DiscountTypePropertyPriceGuaranteeProperty { get; set; }
        /// <summary>
        /// End date of the discount. No duration will be supported. Allowed value is any date greater than or equal to startDate.
        /// </summary>
        global::System.DateTime EndAt { get; set; }
        /// <summary>
        /// The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z.
        /// Must be in UTC.
        /// </summary>
        global::System.DateTime? PriceGuaranteePropertyPriceGuaranteeDate { get; set; }
        /// <summary>Supported values: Protected, Locked</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy? PriceGuaranteePropertyPricingPolicy { get; set; }

    }
}