// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Extensions;

    /// <summary>This defines the conditions for a given discount type.</summary>
    public partial class DiscountTypeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal
    {

        /// <summary>Backing field for <see cref="ApplyDiscountOn" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn _applyDiscountOn;

        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required,
        /// one of supported values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn ApplyDiscountOn { get => this._applyDiscountOn; set => this._applyDiscountOn = value; }

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] _condition;

        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] Condition { get => this._condition; set => this._condition = value; }

        /// <summary>Backing field for <see cref="DiscountCombinationRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? _discountCombinationRule;

        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values
        /// are Stackable and BestOf.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? DiscountCombinationRule { get => this._discountCombinationRule; set => this._discountCombinationRule = value; }

        /// <summary>Backing field for <see cref="DiscountPercentage" /> property.</summary>
        private float? _discountPercentage;

        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        public float? DiscountPercentage { get => this._discountPercentage; set => this._discountPercentage = value; }

        /// <summary>Backing field for <see cref="DiscountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType _discountType;

        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType DiscountType { get => this._discountType; set => this._discountType = value; }

        /// <summary>Internal Acessors for PriceGuaranteeProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteeProperties Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IDiscountTypePropertiesInternal.PriceGuaranteeProperty { get => (this._priceGuaranteeProperty = this._priceGuaranteeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.PriceGuaranteeProperties()); set { {_priceGuaranteeProperty = value;} } }

        /// <summary>Backing field for <see cref="PriceGuaranteeProperty" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteeProperties _priceGuaranteeProperty;

        /// <summary>Set only in price guarantee scenario.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteeProperties PriceGuaranteeProperty { get => (this._priceGuaranteeProperty = this._priceGuaranteeProperty ?? new Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.PriceGuaranteeProperties()); set => this._priceGuaranteeProperty = value; }

        /// <summary>
        /// The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z.
        /// Must be in UTC.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public global::System.DateTime? PriceGuaranteePropertyPriceGuaranteeDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteePropertiesInternal)PriceGuaranteeProperty).PriceGuaranteeDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteePropertiesInternal)PriceGuaranteeProperty).PriceGuaranteeDate = value ?? default(global::System.DateTime); }

        /// <summary>Supported values: Protected, Locked</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy? PriceGuaranteePropertyPricingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteePropertiesInternal)PriceGuaranteeProperty).PricingPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteePropertiesInternal)PriceGuaranteeProperty).PricingPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy)""); }

        /// <summary>Creates an new <see cref="DiscountTypeProperties" /> instance.</summary>
        public DiscountTypeProperties()
        {

        }
    }
    /// This defines the conditions for a given discount type.
    public partial interface IDiscountTypeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required,
        /// one of supported values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required, one of supported values.",
        SerializedName = @"applyDiscountOn",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn ApplyDiscountOn { get; set; }
        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of conditions for the discount. Validation: Optional. Maximum length is 1000.",
        SerializedName = @"conditions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] Condition { get; set; }
        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values
        /// are Stackable and BestOf.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values are Stackable and BestOf.",
        SerializedName = @"discountCombinationRule",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? DiscountCombinationRule { get; set; }
        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Discount percentage provided for the customer. Validation: Required unless this is a price rule.",
        SerializedName = @"discountPercentage",
        PossibleTypes = new [] { typeof(float) })]
        float? DiscountPercentage { get; set; }
        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.",
        SerializedName = @"discountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType DiscountType { get; set; }
        /// <summary>
        /// The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z.
        /// Must be in UTC.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z. Must be in UTC.",
        SerializedName = @"priceGuaranteeDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PriceGuaranteePropertyPriceGuaranteeDate { get; set; }
        /// <summary>Supported values: Protected, Locked</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Supported values: Protected, Locked",
        SerializedName = @"pricingPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy? PriceGuaranteePropertyPricingPolicy { get; set; }

    }
    /// This defines the conditions for a given discount type.
    internal partial interface IDiscountTypePropertiesInternal

    {
        /// <summary>
        /// The customer action on which the discount is applied. Supported values are Purchase, Consume, and Renew. Validation: Required,
        /// one of supported values.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.ApplyDiscountOn ApplyDiscountOn { get; set; }
        /// <summary>
        /// Array of conditions for the discount. Validation: Optional. Maximum length is 1000.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IConditionsItem[] Condition { get; set; }
        /// <summary>
        /// The discount combination rule when there are multiple applicable custom prices. Validation: Required. Supported values
        /// are Stackable and BestOf.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountCombinationRule? DiscountCombinationRule { get; set; }
        /// <summary>
        /// Discount percentage provided for the customer. Validation: Required unless this is a price rule.
        /// </summary>
        float? DiscountPercentage { get; set; }
        /// <summary>
        /// Defines the type of discount. Supported values are ProductFamily, Product, Sku, CustomPrice, and CustomPriceMultiCurrency.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.DiscountType DiscountType { get; set; }
        /// <summary>Set only in price guarantee scenario.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Models.Api20241101Preview.IPriceGuaranteeProperties PriceGuaranteeProperty { get; set; }
        /// <summary>
        /// The date on which prices are to be used for guarantee calculation. Validation: expected to be 00 hours, Format: 2024-09-30T00:00:00Z.
        /// Must be in UTC.
        /// </summary>
        global::System.DateTime? PriceGuaranteePropertyPriceGuaranteeDate { get; set; }
        /// <summary>Supported values: Protected, Locked</summary>
        Microsoft.Azure.PowerShell.Cmdlets.BillingBenefitsRp.Support.PricingPolicy? PriceGuaranteePropertyPricingPolicy { get; set; }

    }
}