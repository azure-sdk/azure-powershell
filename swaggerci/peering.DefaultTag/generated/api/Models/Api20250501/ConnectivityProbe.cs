// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Extensions;

    /// <summary>
    /// Represents a connectivity probe, a configuration peers can add to direct and exchange peerings to create ping tests. These
    /// ping
    /// tests will allow us to generate availability, jitter, and latency data for traffic (using ICMP or TCP) from Azure to an
    /// endpoint
    /// IP address given by the customer. This data will be emitted such that the peer can view these metrics in the Azure portal
    /// in the
    /// Connectivity probe blade of their peering.
    /// </summary>
    public partial class ConnectivityProbe :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501.IConnectivityProbe,
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501.IConnectivityProbeInternal
    {

        /// <summary>Backing field for <see cref="AzureRegion" /> property.</summary>
        private string _azureRegion;

        /// <summary>The Azure region where traffic will originate from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string AzureRegion { get => this._azureRegion; }

        /// <summary>Backing field for <see cref="CreatedTimeUtc" /> property.</summary>
        private global::System.DateTime? _createdTimeUtc;

        /// <summary>
        /// Time when {Microsoft.Peering.PeeringContract.Public.Data.ConnectivityProbe} was created in UTC.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedTimeUtc { get => this._createdTimeUtc; set => this._createdTimeUtc = value; }

        /// <summary>Backing field for <see cref="Endpoint" /> property.</summary>
        private string _endpoint;

        /// <summary>The endpoint IP address where traffic will be sent to from Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string Endpoint { get => this._endpoint; }

        /// <summary>Internal Acessors for AzureRegion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501.IConnectivityProbeInternal.AzureRegion { get => this._azureRegion; set { {_azureRegion = value;} } }

        /// <summary>Internal Acessors for Endpoint</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501.IConnectivityProbeInternal.Endpoint { get => this._endpoint; set { {_endpoint = value;} } }

        /// <summary>Internal Acessors for PrefixesToAccesslist</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501.IConnectivityProbeInternal.PrefixesToAccesslist { get => this._prefixesToAccesslist; set { {_prefixesToAccesslist = value;} } }

        /// <summary>Internal Acessors for Protocol</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.Protocol? Microsoft.Azure.PowerShell.Cmdlets.Peering.Models.Api20250501.IConnectivityProbeInternal.Protocol { get => this._protocol; set { {_protocol = value;} } }

        /// <summary>Backing field for <see cref="PrefixesToAccesslist" /> property.</summary>
        private string[] _prefixesToAccesslist;

        /// <summary>
        /// Set to contain the prefixes that agents in Azure will send traffic from. For peers to allow into their
        /// network the connectivity probe traffic can reach their endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public string[] PrefixesToAccesslist { get => this._prefixesToAccesslist; }

        /// <summary>Backing field for <see cref="Protocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.Protocol? _protocol;

        /// <summary>The protocol of the traffic that will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Origin(Microsoft.Azure.PowerShell.Cmdlets.Peering.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.Protocol? Protocol { get => this._protocol; }

        /// <summary>Creates an new <see cref="ConnectivityProbe" /> instance.</summary>
        public ConnectivityProbe()
        {

        }
    }
    /// Represents a connectivity probe, a configuration peers can add to direct and exchange peerings to create ping tests. These
    /// ping
    /// tests will allow us to generate availability, jitter, and latency data for traffic (using ICMP or TCP) from Azure to an
    /// endpoint
    /// IP address given by the customer. This data will be emitted such that the peer can view these metrics in the Azure portal
    /// in the
    /// Connectivity probe blade of their peering.
    public partial interface IConnectivityProbe :
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.IJsonSerializable
    {
        /// <summary>The Azure region where traffic will originate from.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Azure region where traffic will originate from.",
        SerializedName = @"azureRegion",
        PossibleTypes = new [] { typeof(string) })]
        string AzureRegion { get;  }
        /// <summary>
        /// Time when {Microsoft.Peering.PeeringContract.Public.Data.ConnectivityProbe} was created in UTC.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time when {Microsoft.Peering.PeeringContract.Public.Data.ConnectivityProbe} was created in UTC.",
        SerializedName = @"createdTimeUtc",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedTimeUtc { get; set; }
        /// <summary>The endpoint IP address where traffic will be sent to from Azure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The endpoint IP address where traffic will be sent to from Azure.",
        SerializedName = @"endpoint",
        PossibleTypes = new [] { typeof(string) })]
        string Endpoint { get;  }
        /// <summary>
        /// Set to contain the prefixes that agents in Azure will send traffic from. For peers to allow into their
        /// network the connectivity probe traffic can reach their endpoint.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Set to contain the prefixes that agents in Azure will send traffic from. For peers to allow into their
        network the connectivity probe traffic can reach their endpoint.",
        SerializedName = @"prefixesToAccesslist",
        PossibleTypes = new [] { typeof(string) })]
        string[] PrefixesToAccesslist { get;  }
        /// <summary>The protocol of the traffic that will be sent.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Peering.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The protocol of the traffic that will be sent.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.Protocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.Protocol? Protocol { get;  }

    }
    /// Represents a connectivity probe, a configuration peers can add to direct and exchange peerings to create ping tests. These
    /// ping
    /// tests will allow us to generate availability, jitter, and latency data for traffic (using ICMP or TCP) from Azure to an
    /// endpoint
    /// IP address given by the customer. This data will be emitted such that the peer can view these metrics in the Azure portal
    /// in the
    /// Connectivity probe blade of their peering.
    internal partial interface IConnectivityProbeInternal

    {
        /// <summary>The Azure region where traffic will originate from.</summary>
        string AzureRegion { get; set; }
        /// <summary>
        /// Time when {Microsoft.Peering.PeeringContract.Public.Data.ConnectivityProbe} was created in UTC.
        /// </summary>
        global::System.DateTime? CreatedTimeUtc { get; set; }
        /// <summary>The endpoint IP address where traffic will be sent to from Azure.</summary>
        string Endpoint { get; set; }
        /// <summary>
        /// Set to contain the prefixes that agents in Azure will send traffic from. For peers to allow into their
        /// network the connectivity probe traffic can reach their endpoint.
        /// </summary>
        string[] PrefixesToAccesslist { get; set; }
        /// <summary>The protocol of the traffic that will be sent.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.Protocol? Protocol { get; set; }

    }
}