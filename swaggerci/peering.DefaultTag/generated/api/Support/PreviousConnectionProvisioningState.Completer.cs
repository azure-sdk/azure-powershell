// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Peering.Support
{

    /// <summary>
    /// The previous connection provisioning state, used to resume provisioning after connection has been blocked.
    /// </summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Peering.Support.PreviousConnectionProvisioningStateTypeConverter))]
    public partial struct PreviousConnectionProvisioningState :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "None".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'None'", "None", global::System.Management.Automation.CompletionResultType.ParameterValue, "None");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "InterconnectionPendingApproval".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'InterconnectionPendingApproval'", "InterconnectionPendingApproval", global::System.Management.Automation.CompletionResultType.ParameterValue, "InterconnectionPendingApproval");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DeviceStateValidation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DeviceStateValidation'", "DeviceStateValidation", global::System.Management.Automation.CompletionResultType.ParameterValue, "DeviceStateValidation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RocPendingApproval".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RocPendingApproval'", "RocPendingApproval", global::System.Management.Automation.CompletionResultType.ParameterValue, "RocPendingApproval");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AllocatePorts".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AllocatePorts'", "AllocatePorts", global::System.Management.Automation.CompletionResultType.ParameterValue, "AllocatePorts");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PortExhaustion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PortExhaustion'", "PortExhaustion", global::System.Management.Automation.CompletionResultType.ParameterValue, "PortExhaustion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "CheckInterfaces".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'CheckInterfaces'", "CheckInterfaces", global::System.Management.Automation.CompletionResultType.ParameterValue, "CheckInterfaces");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "EnableInterfaces".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'EnableInterfaces'", "EnableInterfaces", global::System.Management.Automation.CompletionResultType.ParameterValue, "EnableInterfaces");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PhysicalConnectionSetup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PhysicalConnectionSetup'", "PhysicalConnectionSetup", global::System.Management.Automation.CompletionResultType.ParameterValue, "PhysicalConnectionSetup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AwaitPairUpgrade".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AwaitPairUpgrade'", "AwaitPairUpgrade", global::System.Management.Automation.CompletionResultType.ParameterValue, "AwaitPairUpgrade");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "LightCheck".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'LightCheck'", "LightCheck", global::System.Management.Automation.CompletionResultType.ParameterValue, "LightCheck");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "TestPing".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'TestPing'", "TestPing", global::System.Management.Automation.CompletionResultType.ParameterValue, "TestPing");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PingTestDone".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PingTestDone'", "PingTestDone", global::System.Management.Automation.CompletionResultType.ParameterValue, "PingTestDone");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AwaitPeerIps".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AwaitPeerIps'", "AwaitPeerIps", global::System.Management.Automation.CompletionResultType.ParameterValue, "AwaitPeerIps");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ValidateFltFirewall".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ValidateFltFirewall'", "ValidateFltFirewall", global::System.Management.Automation.CompletionResultType.ParameterValue, "ValidateFltFirewall");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "LagSetup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'LagSetup'", "LagSetup", global::System.Management.Automation.CompletionResultType.ParameterValue, "LagSetup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AwaitLagCompletion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AwaitLagCompletion'", "AwaitLagCompletion", global::System.Management.Automation.CompletionResultType.ParameterValue, "AwaitLagCompletion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UpdateAddressesOnDevice".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UpdateAddressesOnDevice'", "UpdateAddressesOnDevice", global::System.Management.Automation.CompletionResultType.ParameterValue, "UpdateAddressesOnDevice");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FetchPrefixLimitFromPeeringDb".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FetchPrefixLimitFromPeeringDb'", "FetchPrefixLimitFromPeeringDb", global::System.Management.Automation.CompletionResultType.ParameterValue, "FetchPrefixLimitFromPeeringDb");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "BgpSessionConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'BgpSessionConfiguration'", "BgpSessionConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "BgpSessionConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NpmBgpSessionConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NpmBgpSessionConfiguration'", "NpmBgpSessionConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "NpmBgpSessionConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Md5AuthKeyConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Md5AuthKeyConfiguration'", "Md5AuthKeyConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "Md5AuthKeyConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FetchSessionState".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FetchSessionState'", "FetchSessionState", global::System.Management.Automation.CompletionResultType.ParameterValue, "FetchSessionState");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "RemoveNomonit".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'RemoveNomonit'", "RemoveNomonit", global::System.Management.Automation.CompletionResultType.ParameterValue, "RemoveNomonit");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UpdateApipaPrefixInSitepro".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UpdateApipaPrefixInSitepro'", "UpdateApipaPrefixInSitepro", global::System.Management.Automation.CompletionResultType.ParameterValue, "UpdateApipaPrefixInSitepro");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ProvisioningCompleted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ProvisioningCompleted'", "ProvisioningCompleted", global::System.Management.Automation.CompletionResultType.ParameterValue, "ProvisioningCompleted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingMigration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingMigration'", "PendingMigration", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingMigration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MigrationRequestPortAllocationRequested".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MigrationRequestPortAllocationRequested'", "MigrationRequestPortAllocationRequested", global::System.Management.Automation.CompletionResultType.ParameterValue, "MigrationRequestPortAllocationRequested");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MigrationConfigValidation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MigrationConfigValidation'", "MigrationConfigValidation", global::System.Management.Automation.CompletionResultType.ParameterValue, "MigrationConfigValidation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingGlobalPolicyUpdate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingGlobalPolicyUpdate'", "PendingGlobalPolicyUpdate", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingGlobalPolicyUpdate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MigrationSpecificConfigDrift".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MigrationSpecificConfigDrift'", "MigrationSpecificConfigDrift", global::System.Management.Automation.CompletionResultType.ParameterValue, "MigrationSpecificConfigDrift");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MigrationNpmError".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MigrationNpmError'", "MigrationNpmError", global::System.Management.Automation.CompletionResultType.ParameterValue, "MigrationNpmError");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingWorkWindow".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingWorkWindow'", "PendingWorkWindow", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingWorkWindow");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ExternalBlocker".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ExternalBlocker'", "ExternalBlocker", global::System.Management.Automation.CompletionResultType.ParameterValue, "ExternalBlocker");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "StaticMacConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'StaticMacConfiguration'", "StaticMacConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "StaticMacConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UndoMigrationGraphCleanup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UndoMigrationGraphCleanup'", "UndoMigrationGraphCleanup", global::System.Management.Automation.CompletionResultType.ParameterValue, "UndoMigrationGraphCleanup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MigrationWorkWindow".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MigrationWorkWindow'", "MigrationWorkWindow", global::System.Management.Automation.CompletionResultType.ParameterValue, "MigrationWorkWindow");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingMigrationCompletion".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingMigrationCompletion'", "PendingMigrationCompletion", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingMigrationCompletion");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MigrationCompletionRequested".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MigrationCompletionRequested'", "MigrationCompletionRequested", global::System.Management.Automation.CompletionResultType.ParameterValue, "MigrationCompletionRequested");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateApproved".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateApproved'", "DirectPeeringTypeUpdateApproved", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateApproved");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateRejected".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateRejected'", "DirectPeeringTypeUpdateRejected", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateRejected");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateIfDescription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateIfDescription'", "DirectPeeringTypeUpdateIfDescription", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateIfDescription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdatePrefixPrecheck".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdatePrefixPrecheck'", "DirectPeeringTypeUpdatePrefixPrecheck", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdatePrefixPrecheck");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateApplyDenyAll".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateApplyDenyAll'", "DirectPeeringTypeUpdateApplyDenyAll", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateApplyDenyAll");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateDeleteSession".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateDeleteSession'", "DirectPeeringTypeUpdateDeleteSession", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateDeleteSession");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateLagAcl".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateLagAcl'", "DirectPeeringTypeUpdateLagAcl", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateLagAcl");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateBgpConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateBgpConfig'", "DirectPeeringTypeUpdateBgpConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateBgpConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateFetchSessionState".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateFetchSessionState'", "DirectPeeringTypeUpdateFetchSessionState", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateFetchSessionState");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateDeleteDenyAll".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateDeleteDenyAll'", "DirectPeeringTypeUpdateDeleteDenyAll", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateDeleteDenyAll");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdatePrefixPostCheck".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdatePrefixPostCheck'", "DirectPeeringTypeUpdatePrefixPostCheck", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdatePrefixPostCheck");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomRocPendingApproval".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomRocPendingApproval'", "DecomRocPendingApproval", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomRocPendingApproval");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomAddDenyAll".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomAddDenyAll'", "DecomAddDenyAll", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomAddDenyAll");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomValidatePrefix".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomValidatePrefix'", "DecomValidatePrefix", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomValidatePrefix");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomValidateTraffic".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomValidateTraffic'", "DecomValidateTraffic", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomValidateTraffic");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomShutInterfaces".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomShutInterfaces'", "DecomShutInterfaces", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomShutInterfaces");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomShutdownBgp".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomShutdownBgp'", "DecomShutdownBgp", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomShutdownBgp");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomCabling".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomCabling'", "DecomCabling", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomCabling");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomRemoveBgpConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomRemoveBgpConfig'", "DecomRemoveBgpConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomRemoveBgpConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomRemoveInterfaceConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomRemoveInterfaceConfig'", "DecomRemoveInterfaceConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomRemoveInterfaceConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomGraphCleanup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomGraphCleanup'", "DecomGraphCleanup", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomGraphCleanup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DecomCompleted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DecomCompleted'", "DecomCompleted", global::System.Management.Automation.CompletionResultType.ParameterValue, "DecomCompleted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateMd5AuthKeyConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateMd5AuthKeyConfiguration'", "DirectPeeringTypeUpdateMd5AuthKeyConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateMd5AuthKeyConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "BfdConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'BfdConfiguration'", "BfdConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "BfdConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateBfdConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateBfdConfig'", "DirectPeeringTypeUpdateBfdConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateBfdConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateMd5AuthKeyRead".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateMd5AuthKeyRead'", "DirectPeeringTypeUpdateMd5AuthKeyRead", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateMd5AuthKeyRead");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PrefixListConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PrefixListConfiguration'", "PrefixListConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "PrefixListConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "WorkWindowCompleted".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'WorkWindowCompleted'", "WorkWindowCompleted", global::System.Management.Automation.CompletionResultType.ParameterValue, "WorkWindowCompleted");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FacilityMapValidation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FacilityMapValidation'", "FacilityMapValidation", global::System.Management.Automation.CompletionResultType.ParameterValue, "FacilityMapValidation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateReadMaxPrefixLimit".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateReadMaxPrefixLimit'", "DirectPeeringTypeUpdateReadMaxPrefixLimit", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateReadMaxPrefixLimit");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateUpdatePortWithNewIP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateUpdatePortWithNewIP'", "DirectPeeringTypeUpdateUpdatePortWithNewIP", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateUpdatePortWithNewIP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateConfigureLagWithNewIP".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateConfigureLagWithNewIP'", "DirectPeeringTypeUpdateConfigureLagWithNewIP", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateConfigureLagWithNewIP");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "DirectPeeringTypeUpdateCleanupOldIPsfromLAG".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'DirectPeeringTypeUpdateCleanupOldIPsfromLAG'", "DirectPeeringTypeUpdateCleanupOldIPsfromLAG", global::System.Management.Automation.CompletionResultType.ParameterValue, "DirectPeeringTypeUpdateCleanupOldIPsfromLAG");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MapsToMapsVoiceUpdateIfDescription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MapsToMapsVoiceUpdateIfDescription'", "MapsToMapsVoiceUpdateIfDescription", global::System.Management.Automation.CompletionResultType.ParameterValue, "MapsToMapsVoiceUpdateIfDescription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MapsToMapsVoicePrefixPrecheck".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MapsToMapsVoicePrefixPrecheck'", "MapsToMapsVoicePrefixPrecheck", global::System.Management.Automation.CompletionResultType.ParameterValue, "MapsToMapsVoicePrefixPrecheck");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MapsToMapsVoiceUpdateLAGAcl".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MapsToMapsVoiceUpdateLAGAcl'", "MapsToMapsVoiceUpdateLAGAcl", global::System.Management.Automation.CompletionResultType.ParameterValue, "MapsToMapsVoiceUpdateLAGAcl");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MapsToMapsVoiceConfigureBFD".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MapsToMapsVoiceConfigureBFD'", "MapsToMapsVoiceConfigureBFD", global::System.Management.Automation.CompletionResultType.ParameterValue, "MapsToMapsVoiceConfigureBFD");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MapsToMapsVoiceFetchSessionState".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MapsToMapsVoiceFetchSessionState'", "MapsToMapsVoiceFetchSessionState", global::System.Management.Automation.CompletionResultType.ParameterValue, "MapsToMapsVoiceFetchSessionState");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MapsToMapsVoicePrefixPostCheck".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MapsToMapsVoicePrefixPostCheck'", "MapsToMapsVoicePrefixPostCheck", global::System.Management.Automation.CompletionResultType.ParameterValue, "MapsToMapsVoicePrefixPostCheck");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "BgpGroupChangeRocPendingApproval".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'BgpGroupChangeRocPendingApproval'", "BgpGroupChangeRocPendingApproval", global::System.Management.Automation.CompletionResultType.ParameterValue, "BgpGroupChangeRocPendingApproval");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "BgpGroupChangeWorkWindow".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'BgpGroupChangeWorkWindow'", "BgpGroupChangeWorkWindow", global::System.Management.Automation.CompletionResultType.ParameterValue, "BgpGroupChangeWorkWindow");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeWorkWindow".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeWorkWindow'", "IPChangeWorkWindow", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeWorkWindow");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingASNChangeApplyDenyALL".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingASNChangeApplyDenyALL'", "PendingASNChangeApplyDenyALL", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingASNChangeApplyDenyALL");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingASNChangeUpdateNeighborConfig".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingASNChangeUpdateNeighborConfig'", "PendingASNChangeUpdateNeighborConfig", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingASNChangeUpdateNeighborConfig");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingASNChangeRemoveDenyALL".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingASNChangeRemoveDenyALL'", "PendingASNChangeRemoveDenyALL", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingASNChangeRemoveDenyALL");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingASNChangeUpdateInterfaceDescription".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingASNChangeUpdateInterfaceDescription'", "PendingASNChangeUpdateInterfaceDescription", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingASNChangeUpdateInterfaceDescription");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UpdateGraphForASNChange".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UpdateGraphForASNChange'", "UpdateGraphForASNChange", global::System.Management.Automation.CompletionResultType.ParameterValue, "UpdateGraphForASNChange");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "UpdatePeeringForASNChange".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'UpdatePeeringForASNChange'", "UpdatePeeringForASNChange", global::System.Management.Automation.CompletionResultType.ParameterValue, "UpdatePeeringForASNChange");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AddDenyAllRocPendingApproval".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AddDenyAllRocPendingApproval'", "AddDenyAllRocPendingApproval", global::System.Management.Automation.CompletionResultType.ParameterValue, "AddDenyAllRocPendingApproval");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AwaitApplyDenyAll".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AwaitApplyDenyAll'", "AwaitApplyDenyAll", global::System.Management.Automation.CompletionResultType.ParameterValue, "AwaitApplyDenyAll");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeValidation".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeValidation'", "IPChangeValidation", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeValidation");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeCleanup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeCleanup'", "IPChangeCleanup", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeCleanup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ForcedIpChangeCleanup".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ForcedIpChangeCleanup'", "ForcedIpChangeCleanup", global::System.Management.Automation.CompletionResultType.ParameterValue, "ForcedIpChangeCleanup");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ForcedIpChangeCleanupWithActiveSessions".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ForcedIpChangeCleanupWithActiveSessions'", "ForcedIpChangeCleanupWithActiveSessions", global::System.Management.Automation.CompletionResultType.ParameterValue, "ForcedIpChangeCleanupWithActiveSessions");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeInitiate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeInitiate'", "IPChangeInitiate", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeInitiate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeLag".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeLag'", "IPChangeLag", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeLag");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeBgpUpdate".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeBgpUpdate'", "IPChangeBgpUpdate", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeBgpUpdate");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeMd5Configuration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeMd5Configuration'", "IPChangeMd5Configuration", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeMd5Configuration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeApplyDenyAll".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeApplyDenyAll'", "IPChangeApplyDenyAll", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeApplyDenyAll");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeRemoveDenyAll".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeRemoveDenyAll'", "IPChangeRemoveDenyAll", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeRemoveDenyAll");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "IPChangeValidateSessions".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'IPChangeValidateSessions'", "IPChangeValidateSessions", global::System.Management.Automation.CompletionResultType.ParameterValue, "IPChangeValidateSessions");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "ACLConfiguration".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'ACLConfiguration'", "ACLConfiguration", global::System.Management.Automation.CompletionResultType.ParameterValue, "ACLConfiguration");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "PendingSpecialWorkItem".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'PendingSpecialWorkItem'", "PendingSpecialWorkItem", global::System.Management.Automation.CompletionResultType.ParameterValue, "PendingSpecialWorkItem");
            }
        }
    }
}