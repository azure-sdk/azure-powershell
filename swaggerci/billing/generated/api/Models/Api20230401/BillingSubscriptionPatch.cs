// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Extensions;

    /// <summary>The billing properties of a subscription.</summary>
    public partial class BillingSubscriptionPatch :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatch,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAny" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAny __any = new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Any();

        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AutoRenew? AutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).AutoRenew; }

        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BeneficiaryObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryObjectId = value ?? null; }

        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BeneficiaryTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BeneficiaryTenantId = value ?? null; }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingFrequency = value ?? null; }

        /// <summary>The name of the billing profile for the invoice section or customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileId = value ?? null; }

        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string BillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileName; }

        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ConsumptionCostCenter { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ConsumptionCostCenter; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ConsumptionCostCenter = value ?? null; }

        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerId = value ?? null; }

        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string CustomerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerName; }

        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountDisplayName; }

        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountId; }

        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate; }

        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionEnrollmentAccountStatus? EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus; }

        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionDisplayName; }

        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionId; }

        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string InvoiceSectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionName; }

        /// <summary>Internal Acessors for AutoRenew</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AutoRenew? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.AutoRenew { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).AutoRenew; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).AutoRenew = value; }

        /// <summary>Internal Acessors for Beneficiary</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBeneficiary Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.Beneficiary { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Beneficiary; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Beneficiary = value; }

        /// <summary>Internal Acessors for BillingProfileDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.BillingProfileDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileDisplayName = value; }

        /// <summary>Internal Acessors for BillingProfileName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.BillingProfileName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).BillingProfileName = value; }

        /// <summary>Internal Acessors for CustomerDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.CustomerDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerDisplayName = value; }

        /// <summary>Internal Acessors for CustomerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.CustomerName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).CustomerName = value; }

        /// <summary>Internal Acessors for EnrollmentAccountDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.EnrollmentAccountDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountDisplayName = value; }

        /// <summary>Internal Acessors for EnrollmentAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.EnrollmentAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountId = value; }

        /// <summary>Internal Acessors for EnrollmentAccountSubscriptionDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentAccountSubscriptionDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.EnrollmentAccountSubscriptionDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetail = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate
        /// </summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate = value; }

        /// <summary>
        /// Internal Acessors for EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionEnrollmentAccountStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus = value; }

        /// <summary>Internal Acessors for InvoiceSectionDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.InvoiceSectionDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionDisplayName = value; }

        /// <summary>Internal Acessors for InvoiceSectionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.InvoiceSectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionId = value; }

        /// <summary>Internal Acessors for InvoiceSectionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.InvoiceSectionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).InvoiceSectionName = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.INextBillingCycleDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.NextBillingCycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetail = value; }

        /// <summary>Internal Acessors for NextBillingCycleDetailBillingFrequency</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetailBillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetailBillingFrequency = value; }

        /// <summary>Internal Acessors for OfferId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).OfferId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).OfferId = value; }

        /// <summary>Internal Acessors for ProductCategory</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionCategory? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.ProductCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductCategory; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductCategory = value; }

        /// <summary>Internal Acessors for ProductType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.ProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductType = value; }

        /// <summary>Internal Acessors for ProductTypeId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.ProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductTypeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductTypeId = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionProperties Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.BillingSubscriptionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for PurchaseDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).PurchaseDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).PurchaseDate = value; }

        /// <summary>Internal Acessors for RenewalTermDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRenewalTermDetails Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.RenewalTermDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetail = value; }

        /// <summary>Internal Acessors for Reseller</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReseller Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.Reseller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Reseller; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Reseller = value; }

        /// <summary>Internal Acessors for ResellerDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ResellerDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ResellerDescription = value; }

        /// <summary>Internal Acessors for ResellerId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ResellerId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ResellerId = value; }

        /// <summary>Internal Acessors for SkuDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SkuDescription; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SkuDescription = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatus? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Status = value; }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SubscriptionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SubscriptionId = value; }

        /// <summary>Internal Acessors for SuspensionReason</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionStatusReason[] Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SuspensionReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SuspensionReason; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SuspensionReason = value; }

        /// <summary>Internal Acessors for SuspensionReasonDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionStatusDetails[] Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SuspensionReasonDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SuspensionReasonDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SuspensionReasonDetail = value; }

        /// <summary>Internal Acessors for SystemOverride</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ISystemOverrides Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SystemOverride { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverride; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverride = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.Cancellation? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellation = value; }

        /// <summary>Internal Acessors for SystemOverrideCancellationAllowedEndDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellationAllowedEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellationAllowedEndDate = value; }

        /// <summary>Internal Acessors for TermStartDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPatchInternal.TermStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermStartDate = value; }

        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string NextBillingCycleDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).NextBillingCycleDetailBillingFrequency; }

        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string OfferId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).OfferId; }

        /// <summary>
        /// Category of the subscription. Possible values include: ReservationOrder, SavingsPlanOrder, AzureSupport, UsageBased, Hardware,
        /// SaaS, SeatBased, and Software.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionCategory? ProductCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductCategory; }

        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductType; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProductTypeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProductTypeId; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionProperties _property;

        /// <summary>The properties of a(n) BillingSubscription</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.BillingSubscriptionProperties()); set => this._property = value; }

        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ProvisioningTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProvisioningTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ProvisioningTenantId = value ?? null; }

        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? PurchaseDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).PurchaseDate; }

        /// <summary>The number of licenses purchased for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public long? Quantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Quantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Quantity = value ?? default(long); }

        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailBillingFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailBillingFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailBillingFrequency = value ?? null; }

        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailProductId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailProductId = value ?? null; }

        /// <summary>The number of licenses purchased for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public long? RenewalTermDetailQuantity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailQuantity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailQuantity = value ?? default(long); }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailSkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailSkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailSkuId = value ?? null; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailTermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermDuration = value ?? null; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string RenewalTermDetailTermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).RenewalTermDetailTermEndDate = value ?? null; }

        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResellerDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ResellerDescription; }

        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string ResellerId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).ResellerId; }

        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for Microsoft
        /// Customer Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SkuDescription; }

        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SkuId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SkuId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SkuId = value ?? null; }

        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).Status; }

        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string SubscriptionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SubscriptionId; }

        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionStatusReason[] SuspensionReason { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SuspensionReason; }

        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionStatusDetails[] SuspensionReasonDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SuspensionReasonDetail; }

        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.Cancellation? SystemOverrideCancellation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellation; }

        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).SystemOverrideCancellationAllowedEndDate; }

        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public string TermDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermDuration = value ?? null; }

        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? TermEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermEndDate = value ?? default(global::System.DateTime); }

        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Origin(Microsoft.Azure.PowerShell.Cmdlets.Billing.PropertyOrigin.Inlined)]
        public global::System.DateTime? TermStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionPropertiesInternal)Property).TermStartDate; }

        /// <summary>Creates an new <see cref="BillingSubscriptionPatch" /> instance.</summary>
        public BillingSubscriptionPatch()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__any), __any);
            await eventListener.AssertObjectIsValid(nameof(__any), __any);
        }
    }
    /// The billing properties of a subscription.
    public partial interface IBillingSubscriptionPatch :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAny
    {
        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether auto renewal is turned on or off for a product.",
        SerializedName = @"autoRenew",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AutoRenew) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AutoRenew? AutoRenew { get;  }
        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID that uniquely identifies a user in a tenant.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string BeneficiaryObjectId { get; set; }
        /// <summary>The ID that uniquely identifies a tenant.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID that uniquely identifies a tenant.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string BeneficiaryTenantId { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string BillingFrequency { get; set; }
        /// <summary>The name of the billing profile for the invoice section or customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the billing profile for the invoice section or customer.",
        SerializedName = @"billingProfileDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fully qualified ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileId",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileId { get; set; }
        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies a billing profile.",
        SerializedName = @"billingProfileName",
        PossibleTypes = new [] { typeof(string) })]
        string BillingProfileName { get;  }
        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer Agreement or Enterprise Agreement Type billing accounts.",
        SerializedName = @"consumptionCostCenter",
        PossibleTypes = new [] { typeof(string) })]
        string ConsumptionCostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the customer.",
        SerializedName = @"customerDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The fully qualified ID that uniquely identifies a customer.",
        SerializedName = @"customerId",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerId { get; set; }
        /// <summary>The ID that uniquely identifies a customer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies a customer.",
        SerializedName = @"customerName",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerName { get;  }
        /// <summary>The name of the billing subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the billing subscription.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.",
        SerializedName = @"enrollmentAccountDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountDisplayName { get;  }
        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement Type billing accounts.",
        SerializedName = @"enrollmentAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountId { get;  }
        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement Type.",
        SerializedName = @"enrollmentAccountStartDate",
        PossibleTypes = new [] { typeof(string) })]
        string EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get;  }
        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.",
        SerializedName = @"subscriptionEnrollmentAccountStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionEnrollmentAccountStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionEnrollmentAccountStatus? EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get;  }
        /// <summary>The name of the invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the invoice section.",
        SerializedName = @"invoiceSectionDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionDisplayName { get;  }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionId",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionId { get;  }
        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID that uniquely identifies an invoice section.",
        SerializedName = @"invoiceSectionName",
        PossibleTypes = new [] { typeof(string) })]
        string InvoiceSectionName { get;  }
        /// <summary>Billing frequency of the product under the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Billing frequency of the product under the subscription.",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string NextBillingCycleDetailBillingFrequency { get;  }
        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.",
        SerializedName = @"offerId",
        PossibleTypes = new [] { typeof(string) })]
        string OfferId { get;  }
        /// <summary>
        /// Category of the subscription. Possible values include: ReservationOrder, SavingsPlanOrder, AzureSupport, UsageBased, Hardware,
        /// SaaS, SeatBased, and Software.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Category of the subscription. Possible values include: ReservationOrder, SavingsPlanOrder, AzureSupport, UsageBased, Hardware, SaaS, SeatBased, and Software.",
        SerializedName = @"productCategory",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionCategory) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionCategory? ProductCategory { get;  }
        /// <summary>Type of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the product for which the subscription is purchased.",
        SerializedName = @"productType",
        PossibleTypes = new [] { typeof(string) })]
        string ProductType { get;  }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of the product for which the subscription is purchased.",
        SerializedName = @"productTypeId",
        PossibleTypes = new [] { typeof(string) })]
        string ProductTypeId { get;  }
        /// <summary>The tenant in which the subscription is provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenant in which the subscription is provisioned.",
        SerializedName = @"provisioningTenantId",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningTenantId { get; set; }
        /// <summary>Purchase date of the product in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Purchase date of the product in UTC time.",
        SerializedName = @"purchaseDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PurchaseDate { get;  }
        /// <summary>The number of licenses purchased for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of licenses purchased for the subscription.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(long) })]
        long? Quantity { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"billingFrequency",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailBillingFrequency { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the product for which the subscription is purchased.",
        SerializedName = @"productId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailProductId { get; set; }
        /// <summary>The number of licenses purchased for the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of licenses purchased for the subscription.",
        SerializedName = @"quantity",
        PossibleTypes = new [] { typeof(long) })]
        long? RenewalTermDetailQuantity { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailSkuId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailTermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"End date of the term in UTC time.",
        SerializedName = @"termEndDate",
        PossibleTypes = new [] { typeof(string) })]
        string RenewalTermDetailTermEndDate { get; set; }
        /// <summary>The name of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name of the reseller.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerDescription { get;  }
        /// <summary>The MPN ID of the reseller.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The MPN ID of the reseller.",
        SerializedName = @"resellerId",
        PossibleTypes = new [] { typeof(string) })]
        string ResellerId { get;  }
        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for Microsoft
        /// Customer Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The SKU description of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuDescription",
        PossibleTypes = new [] { typeof(string) })]
        string SkuDescription { get;  }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU ID of the product for which the subscription is purchased. This field is is only available  for Microsoft Customer Agreement billing accounts.",
        SerializedName = @"skuId",
        PossibleTypes = new [] { typeof(string) })]
        string SkuId { get; set; }
        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the subscription. This field is not available for Enterprise Agreement billing accounts",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatus? Status { get;  }
        /// <summary>The ID of the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The ID of the subscription.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }
        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.",
        SerializedName = @"suspensionReasons",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionStatusReason) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionStatusReason[] SuspensionReason { get;  }
        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.",
        SerializedName = @"suspensionReasonDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionStatusDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionStatusDetails[] SuspensionReasonDetail { get;  }
        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.",
        SerializedName = @"cancellation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.Cancellation) })]
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.Cancellation? SystemOverrideCancellation { get;  }
        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The end date in UTC time by when the self-serve cancellation ends.",
        SerializedName = @"cancellationAllowedEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get;  }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y",
        SerializedName = @"termDuration",
        PossibleTypes = new [] { typeof(string) })]
        string TermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"End date of the term in UTC time.",
        SerializedName = @"termEndDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TermEndDate { get; set; }
        /// <summary>Start date of the term in UTC time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Billing.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Start date of the term in UTC time.",
        SerializedName = @"termStartDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TermStartDate { get;  }

    }
    /// The billing properties of a subscription.
    internal partial interface IBillingSubscriptionPatchInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.IAnyInternal
    {
        /// <summary>Indicates whether auto renewal is turned on or off for a product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.AutoRenew? AutoRenew { get; set; }
        /// <summary>Details of the beneficiary.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBeneficiary Beneficiary { get; set; }
        /// <summary>The ID that uniquely identifies a user in a tenant.</summary>
        string BeneficiaryObjectId { get; set; }
        /// <summary>The ID that uniquely identifies a tenant.</summary>
        string BeneficiaryTenantId { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string BillingFrequency { get; set; }
        /// <summary>The name of the billing profile for the invoice section or customer.</summary>
        string BillingProfileDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a billing profile.</summary>
        string BillingProfileId { get; set; }
        /// <summary>The ID that uniquely identifies a billing profile.</summary>
        string BillingProfileName { get; set; }
        /// <summary>
        /// The cost center applied to the subscription. This field is only available for consumption subscriptions of Microsoft Customer
        /// Agreement or Enterprise Agreement Type billing accounts.
        /// </summary>
        string ConsumptionCostCenter { get; set; }
        /// <summary>The name of the customer.</summary>
        string CustomerDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies a customer.</summary>
        string CustomerId { get; set; }
        /// <summary>The ID that uniquely identifies a customer.</summary>
        string CustomerName { get; set; }
        /// <summary>The name of the billing subscription.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// The enrollment Account name associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        string EnrollmentAccountDisplayName { get; set; }
        /// <summary>
        /// The enrollment Account ID associated with the subscription. This field is available only for the Enterprise Agreement
        /// Type billing accounts.
        /// </summary>
        string EnrollmentAccountId { get; set; }
        /// <summary>
        /// The billing properties that can be modified. Available only for the Enterprise Agreement Type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IEnrollmentAccountSubscriptionDetails EnrollmentAccountSubscriptionDetail { get; set; }
        /// <summary>
        /// The enrollment Account and the subscription association start date. This field is available only for the Enterprise Agreement
        /// Type.
        /// </summary>
        string EnrollmentAccountSubscriptionDetailEnrollmentAccountStartDate { get; set; }
        /// <summary>
        /// The current enrollment account status of the subscription. This field is available only for the Enterprise Agreement Type.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionEnrollmentAccountStatus? EnrollmentAccountSubscriptionDetailSubscriptionEnrollmentAccountStatus { get; set; }
        /// <summary>The name of the invoice section.</summary>
        string InvoiceSectionDisplayName { get; set; }
        /// <summary>The fully qualified ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionId { get; set; }
        /// <summary>The ID that uniquely identifies an invoice section.</summary>
        string InvoiceSectionName { get; set; }
        /// <summary>Billing cycle details of the product.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.INextBillingCycleDetails NextBillingCycleDetail { get; set; }
        /// <summary>Billing frequency of the product under the subscription.</summary>
        string NextBillingCycleDetailBillingFrequency { get; set; }
        /// <summary>
        /// The offer ID for the subscription. This field is only available for the Microsoft Online Services Program billing accounts.
        /// </summary>
        string OfferId { get; set; }
        /// <summary>
        /// Category of the subscription. Possible values include: ReservationOrder, SavingsPlanOrder, AzureSupport, UsageBased, Hardware,
        /// SaaS, SeatBased, and Software.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionCategory? ProductCategory { get; set; }
        /// <summary>Type of the product for which the subscription is purchased.</summary>
        string ProductType { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        string ProductTypeId { get; set; }
        /// <summary>The properties of a(n) BillingSubscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionProperties Property { get; set; }
        /// <summary>The tenant in which the subscription is provisioned.</summary>
        string ProvisioningTenantId { get; set; }
        /// <summary>Purchase date of the product in UTC time.</summary>
        global::System.DateTime? PurchaseDate { get; set; }
        /// <summary>The number of licenses purchased for the subscription.</summary>
        long? Quantity { get; set; }
        /// <summary>Details for the subscription's next renewal term.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IRenewalTermDetails RenewalTermDetail { get; set; }
        /// <summary>
        /// The billing frequency in ISO8601 format of product in the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string RenewalTermDetailBillingFrequency { get; set; }
        /// <summary>Id of the product for which the subscription is purchased.</summary>
        string RenewalTermDetailProductId { get; set; }
        /// <summary>The number of licenses purchased for the subscription.</summary>
        long? RenewalTermDetailQuantity { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        string RenewalTermDetailSkuId { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string RenewalTermDetailTermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        string RenewalTermDetailTermEndDate { get; set; }
        /// <summary>Details of the reseller.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IReseller Reseller { get; set; }
        /// <summary>The name of the reseller.</summary>
        string ResellerDescription { get; set; }
        /// <summary>The MPN ID of the reseller.</summary>
        string ResellerId { get; set; }
        /// <summary>
        /// The SKU description of the product for which the subscription is purchased. This field is is only available for Microsoft
        /// Customer Agreement billing accounts.
        /// </summary>
        string SkuDescription { get; set; }
        /// <summary>
        /// The SKU ID of the product for which the subscription is purchased. This field is is only available for Microsoft Customer
        /// Agreement billing accounts.
        /// </summary>
        string SkuId { get; set; }
        /// <summary>
        /// The status of the subscription. This field is not available for Enterprise Agreement billing accounts
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.BillingSubscriptionStatus? Status { get; set; }
        /// <summary>The ID of the subscription.</summary>
        string SubscriptionId { get; set; }
        /// <summary>
        /// The suspension reason for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SubscriptionStatusReason[] SuspensionReason { get; set; }
        /// <summary>
        /// The suspension details for a subscription. This field is not available for Enterprise Agreement billing accounts.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.IBillingSubscriptionStatusDetails[] SuspensionReasonDetail { get; set; }
        /// <summary>System imposed policies that regulate behavior of the subscription.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Models.Api20230401.ISystemOverrides SystemOverride { get; set; }
        /// <summary>
        /// The policy override for the subscription indicates whether the self-serve cancellation or seat reduction is allowed.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.Cancellation? SystemOverrideCancellation { get; set; }
        /// <summary>The end date in UTC time by when the self-serve cancellation ends.</summary>
        global::System.DateTime? SystemOverrideCancellationAllowedEndDate { get; set; }
        /// <summary>
        /// The duration in ISO8601 format for which you can use the subscription. Example: P1M, P3M, P1Y
        /// </summary>
        string TermDuration { get; set; }
        /// <summary>End date of the term in UTC time.</summary>
        global::System.DateTime? TermEndDate { get; set; }
        /// <summary>Start date of the term in UTC time.</summary>
        global::System.DateTime? TermStartDate { get; set; }

    }
}