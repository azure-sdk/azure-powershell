// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Billing.Support
{

    /// <summary>The type of spending limit.</summary>
    [System.ComponentModel.TypeConverter(typeof(Microsoft.Azure.PowerShell.Cmdlets.Billing.Support.SpendingLimitTypeTypeConverter))]
    public partial struct SpendingLimitType :
        System.Management.Automation.IArgumentCompleter
    {

        /// <summary>
        /// Implementations of this function are called by PowerShell to complete arguments.
        /// </summary>
        /// <param name="commandName">The name of the command that needs argument completion.</param>
        /// <param name="parameterName">The name of the parameter that needs argument completion.</param>
        /// <param name="wordToComplete">The (possibly empty) word being completed.</param>
        /// <param name="commandAst">The command ast in case it is needed for completion.</param>
        /// <param name="fakeBoundParameters">This parameter is similar to $PSBoundParameters, except that sometimes PowerShell cannot
        /// or will not attempt to evaluate an argument, in which case you may need to use commandAst.</param>
        /// <returns>
        /// A collection of completion results, most like with ResultType set to ParameterValue.
        /// </returns>
        public global::System.Collections.Generic.IEnumerable<global::System.Management.Automation.CompletionResult> CompleteArgument(global::System.String commandName, global::System.String parameterName, global::System.String wordToComplete, global::System.Management.Automation.Language.CommandAst commandAst, global::System.Collections.IDictionary fakeBoundParameters)
        {
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Unknown".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Unknown'", "Unknown", global::System.Management.Automation.CompletionResultType.ParameterValue, "Unknown");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "None".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'None'", "None", global::System.Management.Automation.CompletionResultType.ParameterValue, "None");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "FreeAccount".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'FreeAccount'", "FreeAccount", global::System.Management.Automation.CompletionResultType.ParameterValue, "FreeAccount");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Sandbox".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Sandbox'", "Sandbox", global::System.Management.Automation.CompletionResultType.ParameterValue, "Sandbox");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureForStudents".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureForStudents'", "AzureForStudents", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureForStudents");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AcademicSponsorship".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AcademicSponsorship'", "AcademicSponsorship", global::System.Management.Automation.CompletionResultType.ParameterValue, "AcademicSponsorship");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureConsumptionCredit".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureConsumptionCredit'", "AzureConsumptionCredit", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureConsumptionCredit");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzurePassSponsorship".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzurePassSponsorship'", "AzurePassSponsorship", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzurePassSponsorship");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MpnSponsorship".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MpnSponsorship'", "MpnSponsorship", global::System.Management.Automation.CompletionResultType.ParameterValue, "MpnSponsorship");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "MSDN".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'MSDN'", "MSDN", global::System.Management.Automation.CompletionResultType.ParameterValue, "MSDN");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "NonProfitSponsorship".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'NonProfitSponsorship'", "NonProfitSponsorship", global::System.Management.Automation.CompletionResultType.ParameterValue, "NonProfitSponsorship");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "Sponsorship".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'Sponsorship'", "Sponsorship", global::System.Management.Automation.CompletionResultType.ParameterValue, "Sponsorship");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "StartupSponsorship".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'StartupSponsorship'", "StartupSponsorship", global::System.Management.Automation.CompletionResultType.ParameterValue, "StartupSponsorship");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "AzureForStudentsStarter".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'AzureForStudentsStarter'", "AzureForStudentsStarter", global::System.Management.Automation.CompletionResultType.ParameterValue, "AzureForStudentsStarter");
            }
            if (global::System.String.IsNullOrEmpty(wordToComplete) || "VisualStudio".StartsWith(wordToComplete, global::System.StringComparison.InvariantCultureIgnoreCase))
            {
                yield return new global::System.Management.Automation.CompletionResult("'VisualStudio'", "VisualStudio", global::System.Management.Automation.CompletionResultType.ParameterValue, "VisualStudio");
            }
        }
    }
}