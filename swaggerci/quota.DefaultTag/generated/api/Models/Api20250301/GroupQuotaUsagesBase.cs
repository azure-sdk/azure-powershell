// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Extensions;

    /// <summary>Resource details with usages and GroupQuota.</summary>
    public partial class GroupQuotaUsagesBase :
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBase,
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseInternal
    {

        /// <summary>Backing field for <see cref="Limit" /> property.</summary>
        private long? _limit;

        /// <summary>Quota/limits for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public long? Limit { get => this._limit; set => this._limit = value; }

        /// <summary>Internal Acessors for Name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseName Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseInternal.Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.GroupQuotaUsagesBaseName()); set { {_name = value;} } }

        /// <summary>Internal Acessors for NameLocalizedValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseInternal.NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseNameInternal)Name).LocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseNameInternal)Name).LocalizedValue = value; }

        /// <summary>Internal Acessors for Unit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseInternal.Unit { get => this._unit; set { {_unit = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseName _name;

        /// <summary>
        /// Name of the resource provided by the resource provider. This property is already included in the request URI, so it is
        /// a readonly property returned in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseName Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.GroupQuotaUsagesBaseName()); set => this._name = value; }

        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Inlined)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseNameInternal)Name).LocalizedValue; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Inlined)]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseNameInternal)Name).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseNameInternal)Name).Value = value ?? null; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>
        /// Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
        /// Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different
        /// units, Count, type as int64 should work for most of the integer values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; }

        /// <summary>Backing field for <see cref="Usage" /> property.</summary>
        private long? _usage;

        /// <summary>Usages for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public long? Usage { get => this._usage; set => this._usage = value; }

        /// <summary>Creates an new <see cref="GroupQuotaUsagesBase" /> instance.</summary>
        public GroupQuotaUsagesBase()
        {

        }
    }
    /// Resource details with usages and GroupQuota.
    public partial interface IGroupQuotaUsagesBase :
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.IJsonSerializable
    {
        /// <summary>Quota/limits for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quota/limits for the resource.",
        SerializedName = @"limit",
        PossibleTypes = new [] { typeof(long) })]
        long? Limit { get; set; }
        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource display name.",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get;  }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource name.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get; set; }
        /// <summary>
        /// Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
        /// Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different
        /// units, Count, type as int64 should work for most of the integer values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get;  }
        /// <summary>Usages for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Usages for the resource.",
        SerializedName = @"usages",
        PossibleTypes = new [] { typeof(long) })]
        long? Usage { get; set; }

    }
    /// Resource details with usages and GroupQuota.
    internal partial interface IGroupQuotaUsagesBaseInternal

    {
        /// <summary>Quota/limits for the resource.</summary>
        long? Limit { get; set; }
        /// <summary>
        /// Name of the resource provided by the resource provider. This property is already included in the request URI, so it is
        /// a readonly property returned in the response.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaUsagesBaseName Name { get; set; }
        /// <summary>Resource display name.</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>Resource name.</summary>
        string NameValue { get; set; }
        /// <summary>
        /// Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
        /// Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different
        /// units, Count, type as int64 should work for most of the integer values.
        /// </summary>
        string Unit { get; set; }
        /// <summary>Usages for the resource.</summary>
        long? Usage { get; set; }

    }
}