// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Extensions;

    /// <summary>Resource definition with the requested quota.</summary>
    public partial class ResourceBaseRequest :
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IResourceBaseRequest,
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IResourceBaseRequestInternal
    {

        /// <summary>Backing field for <see cref="Limit" /> property.</summary>
        private long? _limit;

        /// <summary>Quota requested for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public long? Limit { get => this._limit; set => this._limit = value; }

        /// <summary>Internal Acessors for ResourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IResourceBaseRequestInternal.ResourceName { get => this._resourceName; set { {_resourceName = value;} } }

        /// <summary>Internal Acessors for Unit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IResourceBaseRequestInternal.Unit { get => this._unit; set { {_unit = value;} } }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string _resourceName;

        /// <summary>The resource name, such as SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public string ResourceName { get => this._resourceName; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>
        /// Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
        /// Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different
        /// units, Count, type as int64 should work for most of the integer values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; }

        /// <summary>Creates an new <see cref="ResourceBaseRequest" /> instance.</summary>
        public ResourceBaseRequest()
        {

        }
    }
    /// Resource definition with the requested quota.
    public partial interface IResourceBaseRequest :
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.IJsonSerializable
    {
        /// <summary>Quota requested for the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Quota requested for the resource.",
        SerializedName = @"limit",
        PossibleTypes = new [] { typeof(long) })]
        long? Limit { get; set; }
        /// <summary>The resource name, such as SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource name, such as SKU name.",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get;  }
        /// <summary>
        /// Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
        /// Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different
        /// units, Count, type as int64 should work for most of the integer values.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get;  }

    }
    /// Resource definition with the requested quota.
    internal partial interface IResourceBaseRequestInternal

    {
        /// <summary>Quota requested for the resource.</summary>
        long? Limit { get; set; }
        /// <summary>The resource name, such as SKU name.</summary>
        string ResourceName { get; set; }
        /// <summary>
        /// Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
        /// Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different
        /// units, Count, type as int64 should work for most of the integer values.
        /// </summary>
        string Unit { get; set; }

    }
}