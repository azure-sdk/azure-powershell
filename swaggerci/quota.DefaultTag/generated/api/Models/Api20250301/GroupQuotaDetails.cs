// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Extensions;

    /// <summary>Group Quota details.</summary>
    public partial class GroupQuotaDetails :
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetails,
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal
    {

        /// <summary>Backing field for <see cref="AllocatedToSubscription" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedQuotaToSubscriptionList _allocatedToSubscription;

        /// <summary>Quota allocated to subscriptions</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedQuotaToSubscriptionList AllocatedToSubscription { get => (this._allocatedToSubscription = this._allocatedToSubscription ?? new Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.AllocatedQuotaToSubscriptionList()); }

        /// <summary>List of Group Quota Limit allocated to subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedToSubscription[] AllocatedToSubscriptionValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedQuotaToSubscriptionListInternal)AllocatedToSubscription).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedQuotaToSubscriptionListInternal)AllocatedToSubscription).Value = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AvailableLimit" /> property.</summary>
        private long? _availableLimit;

        /// <summary>
        /// The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public long? AvailableLimit { get => this._availableLimit; }

        /// <summary>Backing field for <see cref="Comment" /> property.</summary>
        private string _comment;

        /// <summary>Any comment related to quota request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public string Comment { get => this._comment; set => this._comment = value; }

        /// <summary>Backing field for <see cref="Limit" /> property.</summary>
        private long? _limit;

        /// <summary>The current Group Quota Limit at the parentId level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public long? Limit { get => this._limit; set => this._limit = value; }

        /// <summary>Internal Acessors for AllocatedToSubscription</summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedQuotaToSubscriptionList Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal.AllocatedToSubscription { get => (this._allocatedToSubscription = this._allocatedToSubscription ?? new Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.AllocatedQuotaToSubscriptionList()); set { {_allocatedToSubscription = value;} } }

        /// <summary>Internal Acessors for AvailableLimit</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal.AvailableLimit { get => this._availableLimit; set { {_availableLimit = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsName Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal.Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.GroupQuotaDetailsName()); set { {_name = value;} } }

        /// <summary>Internal Acessors for NameLocalizedValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal.NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsNameInternal)Name).LocalizedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsNameInternal)Name).LocalizedValue = value; }

        /// <summary>Internal Acessors for NameValue</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal.NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsNameInternal)Name).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsNameInternal)Name).Value = value; }

        /// <summary>Internal Acessors for Unit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsInternal.Unit { get => this._unit; set { {_unit = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsName _name;

        /// <summary>
        /// Name of the resource provided by the resource provider. This property is already included in the request URI, so it is
        /// a readonly property returned in the response.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsName Name { get => (this._name = this._name ?? new Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.GroupQuotaDetailsName()); }

        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Inlined)]
        public string NameLocalizedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsNameInternal)Name).LocalizedValue; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Inlined)]
        public string NameValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsNameInternal)Name).Value; }

        /// <summary>Backing field for <see cref="ResourceName" /> property.</summary>
        private string _resourceName;

        /// <summary>The resource name, such as SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public string ResourceName { get => this._resourceName; set => this._resourceName = value; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>
        /// The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; }

        /// <summary>Creates an new <see cref="GroupQuotaDetails" /> instance.</summary>
        public GroupQuotaDetails()
        {

        }
    }
    /// Group Quota details.
    public partial interface IGroupQuotaDetails :
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.IJsonSerializable
    {
        /// <summary>List of Group Quota Limit allocated to subscriptions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of Group Quota Limit allocated to subscriptions.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedToSubscription) })]
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedToSubscription[] AllocatedToSubscriptionValue { get; set; }
        /// <summary>
        /// The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).",
        SerializedName = @"availableLimit",
        PossibleTypes = new [] { typeof(long) })]
        long? AvailableLimit { get;  }
        /// <summary>Any comment related to quota request.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Any comment related to quota request.",
        SerializedName = @"comment",
        PossibleTypes = new [] { typeof(string) })]
        string Comment { get; set; }
        /// <summary>The current Group Quota Limit at the parentId level.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current Group Quota Limit at the parentId level.",
        SerializedName = @"limit",
        PossibleTypes = new [] { typeof(long) })]
        long? Limit { get; set; }
        /// <summary>Resource display name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource display name.",
        SerializedName = @"localizedValue",
        PossibleTypes = new [] { typeof(string) })]
        string NameLocalizedValue { get;  }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string NameValue { get;  }
        /// <summary>The resource name, such as SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource name, such as SKU name.",
        SerializedName = @"resourceName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceName { get; set; }
        /// <summary>
        /// The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @" The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get;  }

    }
    /// Group Quota details.
    internal partial interface IGroupQuotaDetailsInternal

    {
        /// <summary>Quota allocated to subscriptions</summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedQuotaToSubscriptionList AllocatedToSubscription { get; set; }
        /// <summary>List of Group Quota Limit allocated to subscriptions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IAllocatedToSubscription[] AllocatedToSubscriptionValue { get; set; }
        /// <summary>
        /// The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).
        /// </summary>
        long? AvailableLimit { get; set; }
        /// <summary>Any comment related to quota request.</summary>
        string Comment { get; set; }
        /// <summary>The current Group Quota Limit at the parentId level.</summary>
        long? Limit { get; set; }
        /// <summary>
        /// Name of the resource provided by the resource provider. This property is already included in the request URI, so it is
        /// a readonly property returned in the response.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.QuotaExtensionApi.Models.Api20250301.IGroupQuotaDetailsName Name { get; set; }
        /// <summary>Resource display name.</summary>
        string NameLocalizedValue { get; set; }
        /// <summary>Resource name.</summary>
        string NameValue { get; set; }
        /// <summary>The resource name, such as SKU name.</summary>
        string ResourceName { get; set; }
        /// <summary>
        /// The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response
        /// in the request body of your PUT operation.
        /// </summary>
        string Unit { get; set; }

    }
}