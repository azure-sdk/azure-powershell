// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Extensions;

    /// <summary>Represents a mongo cluster replica.</summary>
    public partial class Replica :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplica,
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal,
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.Resource();

        /// <summary>The administrator's login for the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string AdministratorLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).AdministratorLogin; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).AdministratorLogin = value ?? null; }

        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorLoginPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).AdministratorLoginPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).AdministratorLoginPassword = value ?? null; }

        /// <summary>The status of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? ClusterStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ClusterStatus; }

        /// <summary>The default mongo connection string for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ConnectionString; }

        /// <summary>The mode to create a mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? CreateMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).CreateMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).CreateMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode)""); }

        /// <summary>Earliest restore timestamp in UTC ISO8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string EarliestRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).EarliestRestoreTime; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>The infrastructure version the cluster is provisioned on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string InfrastructureVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).InfrastructureVersion; }

        /// <summary>Internal Acessors for ClusterStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.ClusterStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ClusterStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ClusterStatus = value; }

        /// <summary>Internal Acessors for ConnectionString</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.ConnectionString { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ConnectionString; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ConnectionString = value; }

        /// <summary>Internal Acessors for EarliestRestoreTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.EarliestRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).EarliestRestoreTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).EarliestRestoreTime = value; }

        /// <summary>Internal Acessors for InfrastructureVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.InfrastructureVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).InfrastructureVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).InfrastructureVersion = value; }

        /// <summary>Internal Acessors for Parameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterReplicaParameters Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.Parameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaParameter = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for PropertiesReplica</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicationProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.PropertiesReplica { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).Replica; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).Replica = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.MongoClusterProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ReplicationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.ReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaReplicationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaReplicationState = value; }

        /// <summary>Internal Acessors for RestoreParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterRestoreParameters Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.RestoreParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).RestoreParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).RestoreParameter = value; }

        /// <summary>Internal Acessors for Role</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.Role { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaRole = value; }

        /// <summary>Internal Acessors for SourceResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicaInternal.SourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaSourceResourceId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>The list of node group specs in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.INodeGroupSpec[] NodeGroupSpec { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).NodeGroupSpec; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).NodeGroupSpec = value ?? null /* arrayOf */; }

        /// <summary>The location of the source cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ParameterSourceLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaParameterSourceLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaParameterSourceLocation = value ?? null; }

        /// <summary>The id of the replication source cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ParameterSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaParameterSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaParameterSourceResourceId = value ?? null; }

        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] PreviewFeature { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PreviewFeature; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PreviewFeature = value ?? null /* arrayOf */; }

        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.MongoClusterProperties()); set => this._property = value; }

        /// <summary>The provisioning state of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? PublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess)""); }

        /// <summary>The replication link state of the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? ReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaReplicationState; }

        /// <summary>UTC point in time to restore a mongo cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public global::System.DateTime? RestoreParameterPointInTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).RestoreParameterPointInTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).RestoreParameterPointInTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>Resource ID to locate the source cluster to restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string RestoreParameterSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).RestoreParameterSourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).RestoreParameterSourceResourceId = value ?? null; }

        /// <summary>The replication role of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? Role { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaRole; }

        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ServerVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ServerVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ServerVersion = value ?? null; }

        /// <summary>The resource id the source cluster for the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string SourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterPropertiesInternal)Property).ReplicaSourceResourceId; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="Replica" /> instance.</summary>
        public Replica()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Represents a mongo cluster replica.
    public partial interface IReplica :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResource
    {
        /// <summary>The administrator's login for the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator's login for the mongo cluster.",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the administrator login.",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>The status of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the mongo cluster.",
        SerializedName = @"clusterStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? ClusterStatus { get;  }
        /// <summary>The default mongo connection string for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The default mongo connection string for the cluster.",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionString { get;  }
        /// <summary>The mode to create a mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to create a mongo cluster.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Earliest restore timestamp in UTC ISO8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Earliest restore timestamp in UTC ISO8601 format.",
        SerializedName = @"earliestRestoreTime",
        PossibleTypes = new [] { typeof(string) })]
        string EarliestRestoreTime { get;  }
        /// <summary>The infrastructure version the cluster is provisioned on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The infrastructure version the cluster is provisioned on.",
        SerializedName = @"infrastructureVersion",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVersion { get;  }
        /// <summary>The list of node group specs in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of node group specs in the cluster.",
        SerializedName = @"nodeGroupSpecs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.INodeGroupSpec) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.INodeGroupSpec[] NodeGroupSpec { get; set; }
        /// <summary>The location of the source cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the source cluster",
        SerializedName = @"sourceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterSourceLocation { get; set; }
        /// <summary>The id of the replication source cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the replication source cluster.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ParameterSourceResourceId { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of private endpoint connections.",
        SerializedName = @"previewFeatures",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] PreviewFeature { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>The provisioning state of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the mongo cluster.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public endpoint access is allowed for this mongo cluster.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The replication link state of the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The replication link state of the replica cluster.",
        SerializedName = @"replicationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? ReplicationState { get;  }
        /// <summary>UTC point in time to restore a mongo cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC point in time to restore a mongo cluster",
        SerializedName = @"pointInTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestoreParameterPointInTimeUtc { get; set; }
        /// <summary>Resource ID to locate the source cluster to restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID to locate the source cluster to restore",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string RestoreParameterSourceResourceId { get; set; }
        /// <summary>The replication role of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The replication role of the cluster",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? Role { get;  }
        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Mongo DB server version. Defaults to the latest available version if not specified.",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerVersion { get; set; }
        /// <summary>The resource id the source cluster for the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource id the source cluster for the replica cluster.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceResourceId { get;  }

    }
    /// Represents a mongo cluster replica.
    internal partial interface IReplicaInternal :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IResourceInternal
    {
        /// <summary>The administrator's login for the mongo cluster.</summary>
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login.</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>The status of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? ClusterStatus { get; set; }
        /// <summary>The default mongo connection string for the cluster.</summary>
        string ConnectionString { get; set; }
        /// <summary>The mode to create a mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Earliest restore timestamp in UTC ISO8601 format.</summary>
        string EarliestRestoreTime { get; set; }
        /// <summary>The infrastructure version the cluster is provisioned on.</summary>
        string InfrastructureVersion { get; set; }
        /// <summary>The list of node group specs in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.INodeGroupSpec[] NodeGroupSpec { get; set; }
        /// <summary>The parameters to create a replica mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterReplicaParameters Parameter { get; set; }
        /// <summary>The location of the source cluster</summary>
        string ParameterSourceLocation { get; set; }
        /// <summary>The id of the replication source cluster.</summary>
        string ParameterSourceResourceId { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] PreviewFeature { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The replication properties for the mongo cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IReplicationProperties PropertiesReplica { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterProperties Property { get; set; }
        /// <summary>The provisioning state of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The replication link state of the replica cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? ReplicationState { get; set; }
        /// <summary>The parameters to create a point-in-time restore mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20240601Preview.IMongoClusterRestoreParameters RestoreParameter { get; set; }
        /// <summary>UTC point in time to restore a mongo cluster</summary>
        global::System.DateTime? RestoreParameterPointInTimeUtc { get; set; }
        /// <summary>Resource ID to locate the source cluster to restore</summary>
        string RestoreParameterSourceResourceId { get; set; }
        /// <summary>The replication role of the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? Role { get; set; }
        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        string ServerVersion { get; set; }
        /// <summary>The resource id the source cluster for the replica cluster.</summary>
        string SourceResourceId { get; set; }

    }
}