// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.Extensions;

    /// <summary>The updatable properties of the MongoCluster.</summary>
    public partial class MongoClusterUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.IMongoClusterUpdateProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.IMongoClusterUpdatePropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdministratorLogin" /> property.</summary>
        private string _administratorLogin;

        /// <summary>The administrator's login for the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.PropertyOrigin.Owned)]
        public string AdministratorLogin { get => this._administratorLogin; set => this._administratorLogin = value; }

        /// <summary>Backing field for <see cref="AdministratorLoginPassword" /> property.</summary>
        private System.Security.SecureString _administratorLoginPassword;

        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.PropertyOrigin.Owned)]
        public System.Security.SecureString AdministratorLoginPassword { get => this._administratorLoginPassword; set => this._administratorLoginPassword = value; }

        /// <summary>Backing field for <see cref="NodeGroupSpec" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.INodeGroupSpec[] _nodeGroupSpec;

        /// <summary>The list of node group specs in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.INodeGroupSpec[] NodeGroupSpec { get => this._nodeGroupSpec; set => this._nodeGroupSpec = value; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="ServerVersion" /> property.</summary>
        private string _serverVersion;

        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.PropertyOrigin.Owned)]
        public string ServerVersion { get => this._serverVersion; set => this._serverVersion = value; }

        /// <summary>Creates an new <see cref="MongoClusterUpdateProperties" /> instance.</summary>
        public MongoClusterUpdateProperties()
        {

        }
    }
    /// The updatable properties of the MongoCluster.
    public partial interface IMongoClusterUpdateProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.IJsonSerializable
    {
        /// <summary>The administrator's login for the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator's login for the mongo cluster.",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the administrator login.",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>The list of node group specs in the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of node group specs in the cluster.",
        SerializedName = @"nodeGroupSpecs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.INodeGroupSpec) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.INodeGroupSpec[] NodeGroupSpec { get; set; }
        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public endpoint access is allowed for this mongo cluster.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Mongo DB server version. Defaults to the latest available version if not specified.",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerVersion { get; set; }

    }
    /// The updatable properties of the MongoCluster.
    internal partial interface IMongoClusterUpdatePropertiesInternal

    {
        /// <summary>The administrator's login for the mongo cluster.</summary>
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login.</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>The list of node group specs in the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Models.Api20240301Preview.INodeGroupSpec[] NodeGroupSpec { get; set; }
        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoClusterForTesting.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        string ServerVersion { get; set; }

    }
}