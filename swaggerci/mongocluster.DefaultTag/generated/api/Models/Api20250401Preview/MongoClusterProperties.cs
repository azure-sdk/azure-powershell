// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Extensions;

    /// <summary>The properties of a mongo cluster.</summary>
    public partial class MongoClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Administrator" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorProperties _administrator;

        /// <summary>The local administrator properties for the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorProperties Administrator { get => (this._administrator = this._administrator ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.AdministratorProperties()); set => this._administrator = value; }

        /// <summary>The administrator password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorPropertiesInternal)Administrator).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorPropertiesInternal)Administrator).Password = value ?? null; }

        /// <summary>The administrator user name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string AdministratorUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorPropertiesInternal)Administrator).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorPropertiesInternal)Administrator).UserName = value ?? null; }

        /// <summary>Backing field for <see cref="AuthConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAuthConfigProperties _authConfig;

        /// <summary>The authentication configuration for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAuthConfigProperties AuthConfig { get => (this._authConfig = this._authConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.AuthConfigProperties()); set => this._authConfig = value; }

        /// <summary>Allowed authentication modes for data access on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.AuthenticationMode[] AuthConfigAllowedMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAuthConfigPropertiesInternal)AuthConfig).AllowedMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAuthConfigPropertiesInternal)AuthConfig).AllowedMode = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Backup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupProperties _backup;

        /// <summary>The backup properties of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupProperties Backup { get => (this._backup = this._backup ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.BackupProperties()); set => this._backup = value; }

        /// <summary>Earliest restore timestamp in UTC ISO8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string BackupEarliestRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupPropertiesInternal)Backup).EarliestRestoreTime; }

        /// <summary>Backing field for <see cref="ClusterStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? _clusterStatus;

        /// <summary>The status of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? ClusterStatus { get => this._clusterStatus; }

        /// <summary>Backing field for <see cref="Compute" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IComputeProperties _compute;

        /// <summary>The compute properties of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IComputeProperties Compute { get => (this._compute = this._compute ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.ComputeProperties()); set => this._compute = value; }

        /// <summary>
        /// The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30',
        /// 'M40'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ComputeTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IComputePropertiesInternal)Compute).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IComputePropertiesInternal)Compute).Tier = value ?? null; }

        /// <summary>Backing field for <see cref="ConnectionString" /> property.</summary>
        private string _connectionString;

        /// <summary>The default mongo connection string for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public string ConnectionString { get => this._connectionString; }

        /// <summary>Backing field for <see cref="CreateMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? _createMode;

        /// <summary>The mode to create a mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? CreateMode { get => this._createMode; set => this._createMode = value; }

        /// <summary>Backing field for <see cref="DataApi" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDataApiProperties _dataApi;

        /// <summary>The Data API properties of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDataApiProperties DataApi { get => (this._dataApi = this._dataApi ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.DataApiProperties()); set => this._dataApi = value; }

        /// <summary>The mode to indicate whether the Mongo Data API is enabled for a cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.DataApiMode? DataApiMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDataApiPropertiesInternal)DataApi).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDataApiPropertiesInternal)DataApi).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.DataApiMode)""); }

        /// <summary>Backing field for <see cref="HighAvailability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IHighAvailabilityProperties _highAvailability;

        /// <summary>The high availability properties of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IHighAvailabilityProperties HighAvailability { get => (this._highAvailability = this._highAvailability ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.HighAvailabilityProperties()); set => this._highAvailability = value; }

        /// <summary>The target high availability mode requested for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.HighAvailabilityMode? HighAvailabilityTargetMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IHighAvailabilityPropertiesInternal)HighAvailability).TargetMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IHighAvailabilityPropertiesInternal)HighAvailability).TargetMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.HighAvailabilityMode)""); }

        /// <summary>Backing field for <see cref="InfrastructureVersion" /> property.</summary>
        private string _infrastructureVersion;

        /// <summary>The infrastructure version the cluster is provisioned on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public string InfrastructureVersion { get => this._infrastructureVersion; }

        /// <summary>Internal Acessors for Administrator</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.Administrator { get => (this._administrator = this._administrator ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.AdministratorProperties()); set { {_administrator = value;} } }

        /// <summary>Internal Acessors for AuthConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAuthConfigProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.AuthConfig { get => (this._authConfig = this._authConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.AuthConfigProperties()); set { {_authConfig = value;} } }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.Backup { get => (this._backup = this._backup ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.BackupProperties()); set { {_backup = value;} } }

        /// <summary>Internal Acessors for BackupEarliestRestoreTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.BackupEarliestRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupPropertiesInternal)Backup).EarliestRestoreTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupPropertiesInternal)Backup).EarliestRestoreTime = value; }

        /// <summary>Internal Acessors for ClusterStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ClusterStatus { get => this._clusterStatus; set { {_clusterStatus = value;} } }

        /// <summary>Internal Acessors for Compute</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IComputeProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.Compute { get => (this._compute = this._compute ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.ComputeProperties()); set { {_compute = value;} } }

        /// <summary>Internal Acessors for ConnectionString</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ConnectionString { get => this._connectionString; set { {_connectionString = value;} } }

        /// <summary>Internal Acessors for DataApi</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDataApiProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.DataApi { get => (this._dataApi = this._dataApi ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.DataApiProperties()); set { {_dataApi = value;} } }

        /// <summary>Internal Acessors for HighAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IHighAvailabilityProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.HighAvailability { get => (this._highAvailability = this._highAvailability ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.HighAvailabilityProperties()); set { {_highAvailability = value;} } }

        /// <summary>Internal Acessors for InfrastructureVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.InfrastructureVersion { get => this._infrastructureVersion; set { {_infrastructureVersion = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Replica</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.Replica { get => (this._replica = this._replica ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.ReplicationProperties()); set { {_replica = value;} } }

        /// <summary>Internal Acessors for ReplicaParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParameters Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ReplicaParameter { get => (this._replicaParameter = this._replicaParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.MongoClusterReplicaParameters()); set { {_replicaParameter = value;} } }

        /// <summary>Internal Acessors for ReplicaReplicationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).ReplicationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).ReplicationState = value; }

        /// <summary>Internal Acessors for ReplicaRole</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ReplicaRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).Role = value; }

        /// <summary>Internal Acessors for ReplicaSourceResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.ReplicaSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).SourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).SourceResourceId = value; }

        /// <summary>Internal Acessors for RestoreParameter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParameters Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.RestoreParameter { get => (this._restoreParameter = this._restoreParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.MongoClusterRestoreParameters()); set { {_restoreParameter = value;} } }

        /// <summary>Internal Acessors for Sharding</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IShardingProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.Sharding { get => (this._sharding = this._sharding ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.ShardingProperties()); set { {_sharding = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStorageProperties Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterPropertiesInternal.Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.StorageProperties()); set { {_storage = value;} } }

        /// <summary>Backing field for <see cref="PreviewFeature" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] _previewFeature;

        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] PreviewFeature { get => this._previewFeature; set => this._previewFeature = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="PublicNetworkAccess" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? _publicNetworkAccess;

        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? PublicNetworkAccess { get => this._publicNetworkAccess; set => this._publicNetworkAccess = value; }

        /// <summary>Backing field for <see cref="Replica" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationProperties _replica;

        /// <summary>The replication properties for the mongo cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationProperties Replica { get => (this._replica = this._replica ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.ReplicationProperties()); }

        /// <summary>Backing field for <see cref="ReplicaParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParameters _replicaParameter;

        /// <summary>The parameters to create a replica mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParameters ReplicaParameter { get => (this._replicaParameter = this._replicaParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.MongoClusterReplicaParameters()); set => this._replicaParameter = value; }

        /// <summary>The location of the source cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ReplicaParameterSourceLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParametersInternal)ReplicaParameter).SourceLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParametersInternal)ReplicaParameter).SourceLocation = value ?? null; }

        /// <summary>The id of the replication source cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ReplicaParameterSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParametersInternal)ReplicaParameter).SourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParametersInternal)ReplicaParameter).SourceResourceId = value ?? null; }

        /// <summary>The replication link state of the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).ReplicationState; }

        /// <summary>The replication role of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? ReplicaRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).Role; }

        /// <summary>The resource id the source cluster for the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string ReplicaSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationPropertiesInternal)Replica).SourceResourceId; }

        /// <summary>Backing field for <see cref="RestoreParameter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParameters _restoreParameter;

        /// <summary>The parameters to create a point-in-time restore mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParameters RestoreParameter { get => (this._restoreParameter = this._restoreParameter ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.MongoClusterRestoreParameters()); set => this._restoreParameter = value; }

        /// <summary>UTC point in time to restore a mongo cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public global::System.DateTime? RestoreParameterPointInTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParametersInternal)RestoreParameter).PointInTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParametersInternal)RestoreParameter).PointInTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>Resource ID to locate the source cluster to restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string RestoreParameterSourceResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParametersInternal)RestoreParameter).SourceResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParametersInternal)RestoreParameter).SourceResourceId = value ?? null; }

        /// <summary>Backing field for <see cref="ServerVersion" /> property.</summary>
        private string _serverVersion;

        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public string ServerVersion { get => this._serverVersion; set => this._serverVersion = value; }

        /// <summary>Backing field for <see cref="Sharding" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IShardingProperties _sharding;

        /// <summary>The sharding properties of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IShardingProperties Sharding { get => (this._sharding = this._sharding ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.ShardingProperties()); set => this._sharding = value; }

        /// <summary>Number of shards to provision on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public int? ShardingShardCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IShardingPropertiesInternal)Sharding).ShardCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IShardingPropertiesInternal)Sharding).ShardCount = value ?? default(int); }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStorageProperties _storage;

        /// <summary>The storage properties of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStorageProperties Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.StorageProperties()); set => this._storage = value; }

        /// <summary>
        /// The IOPs of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public long? StorageIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).Iop; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).Iop = value ?? default(long); }

        /// <summary>The size of the data disk assigned to each server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public long? StorageSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).SizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).SizeGb = value ?? default(long); }

        /// <summary>
        /// The throughput of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public long? StorageThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).Throughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).Throughput = value ?? default(long); }

        /// <summary>The type of storage to provision the cluster servers with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.StorageType? StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStoragePropertiesInternal)Storage).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.StorageType)""); }

        /// <summary>Creates an new <see cref="MongoClusterProperties" /> instance.</summary>
        public MongoClusterProperties()
        {

        }
    }
    /// The properties of a mongo cluster.
    public partial interface IMongoClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.IJsonSerializable
    {
        /// <summary>The administrator password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator password.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorPassword { get; set; }
        /// <summary>The administrator user name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator user name.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorUserName { get; set; }
        /// <summary>Allowed authentication modes for data access on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed authentication modes for data access on the cluster.",
        SerializedName = @"allowedModes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.AuthenticationMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.AuthenticationMode[] AuthConfigAllowedMode { get; set; }
        /// <summary>Earliest restore timestamp in UTC ISO8601 format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Earliest restore timestamp in UTC ISO8601 format.",
        SerializedName = @"earliestRestoreTime",
        PossibleTypes = new [] { typeof(string) })]
        string BackupEarliestRestoreTime { get;  }
        /// <summary>The status of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the mongo cluster.",
        SerializedName = @"clusterStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? ClusterStatus { get;  }
        /// <summary>
        /// The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30',
        /// 'M40'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(string) })]
        string ComputeTier { get; set; }
        /// <summary>The default mongo connection string for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The default mongo connection string for the cluster.",
        SerializedName = @"connectionString",
        PossibleTypes = new [] { typeof(string) })]
        string ConnectionString { get;  }
        /// <summary>The mode to create a mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to create a mongo cluster.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? CreateMode { get; set; }
        /// <summary>The mode to indicate whether the Mongo Data API is enabled for a cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to indicate whether the Mongo Data API is enabled for a cluster.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.DataApiMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.DataApiMode? DataApiMode { get; set; }
        /// <summary>The target high availability mode requested for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target high availability mode requested for the cluster.",
        SerializedName = @"targetMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.HighAvailabilityMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.HighAvailabilityMode? HighAvailabilityTargetMode { get; set; }
        /// <summary>The infrastructure version the cluster is provisioned on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The infrastructure version the cluster is provisioned on.",
        SerializedName = @"infrastructureVersion",
        PossibleTypes = new [] { typeof(string) })]
        string InfrastructureVersion { get;  }
        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of private endpoint connections.",
        SerializedName = @"previewFeatures",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] PreviewFeature { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>The provisioning state of the mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the mongo cluster.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether or not public endpoint access is allowed for this mongo cluster.",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The location of the source cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The location of the source cluster",
        SerializedName = @"sourceLocation",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicaParameterSourceLocation { get; set; }
        /// <summary>The id of the replication source cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The id of the replication source cluster.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicaParameterSourceResourceId { get; set; }
        /// <summary>The replication link state of the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The replication link state of the replica cluster.",
        SerializedName = @"replicationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? ReplicaReplicationState { get;  }
        /// <summary>The replication role of the cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The replication role of the cluster",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? ReplicaRole { get;  }
        /// <summary>The resource id the source cluster for the replica cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource id the source cluster for the replica cluster.",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ReplicaSourceResourceId { get;  }
        /// <summary>UTC point in time to restore a mongo cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC point in time to restore a mongo cluster",
        SerializedName = @"pointInTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestoreParameterPointInTimeUtc { get; set; }
        /// <summary>Resource ID to locate the source cluster to restore</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID to locate the source cluster to restore",
        SerializedName = @"sourceResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string RestoreParameterSourceResourceId { get; set; }
        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Mongo DB server version. Defaults to the latest available version if not specified.",
        SerializedName = @"serverVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ServerVersion { get; set; }
        /// <summary>Number of shards to provision on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of shards to provision on the cluster.",
        SerializedName = @"shardCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ShardingShardCount { get; set; }
        /// <summary>
        /// The IOPs of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IOPs of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(long) })]
        long? StorageIop { get; set; }
        /// <summary>The size of the data disk assigned to each server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The size of the data disk assigned to each server.",
        SerializedName = @"sizeGb",
        PossibleTypes = new [] { typeof(long) })]
        long? StorageSizeGb { get; set; }
        /// <summary>
        /// The throughput of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The throughput of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(long) })]
        long? StorageThroughput { get; set; }
        /// <summary>The type of storage to provision the cluster servers with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of storage to provision the cluster servers with.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.StorageType? StorageType { get; set; }

    }
    /// The properties of a mongo cluster.
    internal partial interface IMongoClusterPropertiesInternal

    {
        /// <summary>The local administrator properties for the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAdministratorProperties Administrator { get; set; }
        /// <summary>The administrator password.</summary>
        System.Security.SecureString AdministratorPassword { get; set; }
        /// <summary>The administrator user name.</summary>
        string AdministratorUserName { get; set; }
        /// <summary>The authentication configuration for the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IAuthConfigProperties AuthConfig { get; set; }
        /// <summary>Allowed authentication modes for data access on the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.AuthenticationMode[] AuthConfigAllowedMode { get; set; }
        /// <summary>The backup properties of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IBackupProperties Backup { get; set; }
        /// <summary>Earliest restore timestamp in UTC ISO8601 format.</summary>
        string BackupEarliestRestoreTime { get; set; }
        /// <summary>The status of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.MongoClusterStatus? ClusterStatus { get; set; }
        /// <summary>The compute properties of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IComputeProperties Compute { get; set; }
        /// <summary>
        /// The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30',
        /// 'M40'.
        /// </summary>
        string ComputeTier { get; set; }
        /// <summary>The default mongo connection string for the cluster.</summary>
        string ConnectionString { get; set; }
        /// <summary>The mode to create a mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.CreateMode? CreateMode { get; set; }
        /// <summary>The Data API properties of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDataApiProperties DataApi { get; set; }
        /// <summary>The mode to indicate whether the Mongo Data API is enabled for a cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.DataApiMode? DataApiMode { get; set; }
        /// <summary>The high availability properties of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IHighAvailabilityProperties HighAvailability { get; set; }
        /// <summary>The target high availability mode requested for the cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.HighAvailabilityMode? HighAvailabilityTargetMode { get; set; }
        /// <summary>The infrastructure version the cluster is provisioned on.</summary>
        string InfrastructureVersion { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PreviewFeature[] PreviewFeature { get; set; }
        /// <summary>List of private endpoint connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>The provisioning state of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Whether or not public endpoint access is allowed for this mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.PublicNetworkAccess? PublicNetworkAccess { get; set; }
        /// <summary>The replication properties for the mongo cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IReplicationProperties Replica { get; set; }
        /// <summary>The parameters to create a replica mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterReplicaParameters ReplicaParameter { get; set; }
        /// <summary>The location of the source cluster</summary>
        string ReplicaParameterSourceLocation { get; set; }
        /// <summary>The id of the replication source cluster.</summary>
        string ReplicaParameterSourceResourceId { get; set; }
        /// <summary>The replication link state of the replica cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationState? ReplicaReplicationState { get; set; }
        /// <summary>The replication role of the cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>The resource id the source cluster for the replica cluster.</summary>
        string ReplicaSourceResourceId { get; set; }
        /// <summary>The parameters to create a point-in-time restore mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IMongoClusterRestoreParameters RestoreParameter { get; set; }
        /// <summary>UTC point in time to restore a mongo cluster</summary>
        global::System.DateTime? RestoreParameterPointInTimeUtc { get; set; }
        /// <summary>Resource ID to locate the source cluster to restore</summary>
        string RestoreParameterSourceResourceId { get; set; }
        /// <summary>
        /// The Mongo DB server version. Defaults to the latest available version if not specified.
        /// </summary>
        string ServerVersion { get; set; }
        /// <summary>The sharding properties of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IShardingProperties Sharding { get; set; }
        /// <summary>Number of shards to provision on the cluster.</summary>
        int? ShardingShardCount { get; set; }
        /// <summary>The storage properties of the mongo cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IStorageProperties Storage { get; set; }
        /// <summary>
        /// The IOPs of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.
        /// </summary>
        long? StorageIop { get; set; }
        /// <summary>The size of the data disk assigned to each server.</summary>
        long? StorageSizeGb { get; set; }
        /// <summary>
        /// The throughput of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.
        /// </summary>
        long? StorageThroughput { get; set; }
        /// <summary>The type of storage to provision the cluster servers with.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.StorageType? StorageType { get; set; }

    }
}