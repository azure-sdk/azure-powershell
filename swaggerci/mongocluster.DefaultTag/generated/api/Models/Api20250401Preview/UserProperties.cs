// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Extensions;

    /// <summary>Definition of Mongo user resource on a cluster.</summary>
    public partial class UserProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IUserProperties,
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IUserPropertiesInternal
    {

        /// <summary>Backing field for <see cref="IdentityProvider" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProvider _identityProvider;

        /// <summary>The user's identity provider definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProvider IdentityProvider { get => (this._identityProvider = this._identityProvider ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IdentityProvider()); set => this._identityProvider = value; }

        /// <summary>The type of identity provider that the user belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Inlined)]
        public string IdentityProviderType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProviderInternal)IdentityProvider).Type; }

        /// <summary>Internal Acessors for IdentityProvider</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProvider Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IUserPropertiesInternal.IdentityProvider { get => (this._identityProvider = this._identityProvider ?? new Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IdentityProvider()); set { {_identityProvider = value;} } }

        /// <summary>Internal Acessors for IdentityProviderType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IUserPropertiesInternal.IdentityProviderType { get => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProviderInternal)IdentityProvider).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProviderInternal)IdentityProvider).Type = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IUserPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Role" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDatabaseRole[] _role;

        /// <summary>Database roles that are assigned to the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Origin(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDatabaseRole[] Role { get => this._role; set => this._role = value; }

        /// <summary>Creates an new <see cref="UserProperties" /> instance.</summary>
        public UserProperties()
        {

        }
    }
    /// Definition of Mongo user resource on a cluster.
    public partial interface IUserProperties :
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.IJsonSerializable
    {
        /// <summary>The type of identity provider that the user belongs to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of identity provider that the user belongs to.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityProviderType { get;  }
        /// <summary>The provisioning state of the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the user.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Database roles that are assigned to the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Database roles that are assigned to the user.",
        SerializedName = @"roles",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDatabaseRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDatabaseRole[] Role { get; set; }

    }
    /// Definition of Mongo user resource on a cluster.
    internal partial interface IUserPropertiesInternal

    {
        /// <summary>The user's identity provider definition.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IIdentityProvider IdentityProvider { get; set; }
        /// <summary>The type of identity provider that the user belongs to.</summary>
        string IdentityProviderType { get; set; }
        /// <summary>The provisioning state of the user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Database roles that are assigned to the user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MongoCluster.Models.Api20250401Preview.IDatabaseRole[] Role { get; set; }

    }
}