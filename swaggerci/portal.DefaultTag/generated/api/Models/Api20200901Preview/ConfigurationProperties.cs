// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Portal.Models.Api20200901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Portal.Runtime.Extensions;

    /// <summary>Tenant Configuration Properties with Provisioning state</summary>
    public partial class ConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Portal.Models.Api20200901Preview.IConfigurationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Portal.Models.Api20200901Preview.IConfigurationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="EnforcePrivateMarkdownStorage" /> property.</summary>
        private bool? _enforcePrivateMarkdownStorage;

        /// <summary>
        /// When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration
        /// will be prohibited.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Portal.Origin(Microsoft.Azure.PowerShell.Cmdlets.Portal.PropertyOrigin.Owned)]
        public bool? EnforcePrivateMarkdownStorage { get => this._enforcePrivateMarkdownStorage; set => this._enforcePrivateMarkdownStorage = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Portal.Support.ResourceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Portal.Models.Api20200901Preview.IConfigurationPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Portal.Support.ResourceProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Portal.Origin(Microsoft.Azure.PowerShell.Cmdlets.Portal.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Portal.Support.ResourceProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="ConfigurationProperties" /> instance.</summary>
        public ConfigurationProperties()
        {

        }
    }
    /// Tenant Configuration Properties with Provisioning state
    public partial interface IConfigurationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Portal.Runtime.IJsonSerializable
    {
        /// <summary>
        /// When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration
        /// will be prohibited.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Portal.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration will be prohibited.",
        SerializedName = @"enforcePrivateMarkdownStorage",
        PossibleTypes = new [] { typeof(bool) })]
        bool? EnforcePrivateMarkdownStorage { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Portal.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Portal.Support.ResourceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Portal.Support.ResourceProvisioningState? ProvisioningState { get;  }

    }
    /// Tenant Configuration Properties with Provisioning state
    internal partial interface IConfigurationPropertiesInternal

    {
        /// <summary>
        /// When flag is set to true Markdown tile will require external storage configuration (URI). The inline content configuration
        /// will be prohibited.
        /// </summary>
        bool? EnforcePrivateMarkdownStorage { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Portal.Support.ResourceProvisioningState? ProvisioningState { get; set; }

    }
}