// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Extensions;

    /// <summary>
    /// Concrete proxy resource types can be created by aliasing this type using a specific property type.
    /// </summary>
    public partial class LandingZoneConfigurationResourceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.Resource();

        /// <summary>
        /// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing
        /// Bastion.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? AzureBastionCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions)""); }

        /// <summary>The Bastion subnet address. Specify the address using IPv4 CIDR notation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string AzureBastionSubnetCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionSubnetCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionSubnetCidrBlock = value ?? null; }

        /// <summary>
        /// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the
        /// default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls',
        /// 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention[] CustomNamingConvention { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).CustomNamingConvention; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).CustomNamingConvention = value ?? null /* arrayOf */; }

        /// <summary>
        /// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to
        /// reuse an existing DDoS protection plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? DdosProtectionCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DdosProtectionCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DdosProtectionCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions)""); }

        /// <summary>
        /// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will
        /// be created; if set to false, it will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public bool? DecommissionedMgMetadataCreate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataCreate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataCreate = value ?? default(bool); }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] DecommissionedMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>The resource ID of the Bastion when reusing an existing one.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ExistingAzureBastionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingAzureBastionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingAzureBastionId = value ?? null; }

        /// <summary>The resource ID of the DDoS protection plan when reusing an existing one.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ExistingDdosProtectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingDdosProtectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingDdosProtectionId = value ?? null; }

        /// <summary>The resource ID of the log analytics workspace when reusing an existing one.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ExistingLogAnalyticsWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingLogAnalyticsWorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingLogAnalyticsWorkspaceId = value ?? null; }

        /// <summary>
        /// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium'
        /// to deploy the Premium SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions? FirewallCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions)""); }

        /// <summary>
        /// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string FirewallSubnetCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallSubnetCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallSubnetCidrBlock = value ?? null; }

        /// <summary>
        /// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string GatewaySubnetCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).GatewaySubnetCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).GatewaySubnetCidrBlock = value ?? null; }

        /// <summary>The Virtual Network address. Specify the address using IPv4 CIDR notation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string HubNetworkCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).HubNetworkCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).HubNetworkCidrBlock = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] LandingZoneMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZoneMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZoneMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>
        /// The child management groups of 'Landing Zones' management group and their assigned policies.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties[] LandingZonesMgChild { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgChild; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgChild = value ?? null /* arrayOf */; }

        /// <summary>
        /// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing'
        /// to reuse an existing log analytics workspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? LogAnalyticsWorkspaceCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogAnalyticsWorkspaceCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogAnalyticsWorkspaceCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions)""); }

        /// <summary>
        /// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public long? LogRetentionInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogRetentionInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogRetentionInDay = value ?? default(long); }

        /// <summary>The type of managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType? ManagedIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType)""); }

        /// <summary>The resource id of the managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ManagedIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityUserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityUserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for DecommissionedMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IDecommissionedManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.DecommissionedMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadata = value; }

        /// <summary>Internal Acessors for LandingZonesMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.LandingZonesMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgMetadata = value; }

        /// <summary>Internal Acessors for ManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagedIdentityPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.ManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentity = value; }

        /// <summary>Internal Acessors for PlatformConnectivityMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformConnectivityMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadata = value; }

        /// <summary>Internal Acessors for PlatformIdentityMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformIdentityMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadata = value; }

        /// <summary>Internal Acessors for PlatformManagementMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformManagementMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadata = value; }

        /// <summary>Internal Acessors for PlatformMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadata = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.LandingZoneConfigurationResourcePropertiesUpdate()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SandboxMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ISandboxManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.SandboxMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadata = value; }

        /// <summary>Internal Acessors for TopLevelMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.TopLevelMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadata = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string NamingConventionFormula { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).NamingConventionFormula; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).NamingConventionFormula = value ?? null; }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>
        /// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity',
        /// 'Identity', and 'Management'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties[] PlatformMgChild { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgChild; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgChild = value ?? null /* arrayOf */; }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.LandingZoneConfigurationResourcePropertiesUpdate()); set => this._property = value; }

        /// <summary>
        /// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created;
        /// if set to false, it will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public bool? SandboxMgMetadataCreate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataCreate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataCreate = value ?? default(bool); }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] SandboxMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType)""); }

        /// <summary>
        /// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name':
        /// 'a tag name', 'value': 'a tag value'}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags[] Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).Tag = value ?? null /* arrayOf */; }

        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] TopLevelMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="LandingZoneConfigurationResourceUpdate" /> instance.</summary>
        public LandingZoneConfigurationResourceUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Concrete proxy resource types can be created by aliasing this type using a specific property type.
    public partial interface ILandingZoneConfigurationResourceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResource
    {
        /// <summary>
        /// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing
        /// Bastion.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing Bastion.",
        SerializedName = @"azureBastionCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? AzureBastionCreationOption { get; set; }
        /// <summary>The Bastion subnet address. Specify the address using IPv4 CIDR notation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Bastion subnet address. Specify the address using IPv4 CIDR notation.",
        SerializedName = @"azureBastionSubnetCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBastionSubnetCidrBlock { get; set; }
        /// <summary>
        /// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the
        /// default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls',
        /// 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls', 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]",
        SerializedName = @"customNamingConvention",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention[] CustomNamingConvention { get; set; }
        /// <summary>
        /// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to
        /// reuse an existing DDoS protection plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing DDoS protection plan.",
        SerializedName = @"ddosProtectionCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? DdosProtectionCreationOption { get; set; }
        /// <summary>
        /// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will
        /// be created; if set to false, it will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.",
        SerializedName = @"create",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DecommissionedMgMetadataCreate { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] DecommissionedMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>The resource ID of the Bastion when reusing an existing one.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the Bastion when reusing an existing one.",
        SerializedName = @"existingAzureBastionId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingAzureBastionId { get; set; }
        /// <summary>The resource ID of the DDoS protection plan when reusing an existing one.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the DDoS protection plan when reusing an existing one.",
        SerializedName = @"existingDdosProtectionId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingDdosProtectionId { get; set; }
        /// <summary>The resource ID of the log analytics workspace when reusing an existing one.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the log analytics workspace when reusing an existing one.",
        SerializedName = @"existingLogAnalyticsWorkspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingLogAnalyticsWorkspaceId { get; set; }
        /// <summary>
        /// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium'
        /// to deploy the Premium SKU.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium' to deploy the Premium SKU.",
        SerializedName = @"firewallCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions? FirewallCreationOption { get; set; }
        /// <summary>
        /// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.",
        SerializedName = @"firewallSubnetCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string FirewallSubnetCidrBlock { get; set; }
        /// <summary>
        /// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.",
        SerializedName = @"gatewaySubnetCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string GatewaySubnetCidrBlock { get; set; }
        /// <summary>The Virtual Network address. Specify the address using IPv4 CIDR notation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Virtual Network address. Specify the address using IPv4 CIDR notation.",
        SerializedName = @"hubNetworkCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string HubNetworkCidrBlock { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] LandingZoneMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// The child management groups of 'Landing Zones' management group and their assigned policies.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The child management groups of 'Landing Zones' management group and their assigned policies.",
        SerializedName = @"landingZonesMgChildren",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties[] LandingZonesMgChild { get; set; }
        /// <summary>
        /// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing'
        /// to reuse an existing log analytics workspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing log analytics workspace.",
        SerializedName = @"logAnalyticsWorkspaceCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? LogAnalyticsWorkspaceCreationOption { get; set; }
        /// <summary>
        /// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.",
        SerializedName = @"logRetentionInDays",
        PossibleTypes = new [] { typeof(long) })]
        long? LogRetentionInDay { get; set; }
        /// <summary>The type of managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of managed identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType? ManagedIdentityType { get; set; }
        /// <summary>The resource id of the managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the managed identity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>
        /// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing",
        SerializedName = @"namingConventionFormula",
        PossibleTypes = new [] { typeof(string) })]
        string NamingConventionFormula { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity',
        /// 'Identity', and 'Management'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity', 'Identity', and 'Management'",
        SerializedName = @"platformMgChildren",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties[] PlatformMgChild { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created;
        /// if set to false, it will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created; if set to false, it will not be created. The default value is false.",
        SerializedName = @"create",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SandboxMgMetadataCreate { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] SandboxMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name':
        /// 'a tag name', 'value': 'a tag value'}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name': 'a tag name', 'value': 'a tag value'}",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags[] Tag { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of policy initiatives applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] TopLevelMgMetadataPolicyInitiativesAssignmentProperty { get; set; }

    }
    /// Concrete proxy resource types can be created by aliasing this type using a specific property type.
    internal partial interface ILandingZoneConfigurationResourceUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal
    {
        /// <summary>
        /// Parameter used to deploy a Bastion: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to reuse an existing
        /// Bastion.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? AzureBastionCreationOption { get; set; }
        /// <summary>The Bastion subnet address. Specify the address using IPv4 CIDR notation.</summary>
        string AzureBastionSubnetCidrBlock { get; set; }
        /// <summary>
        /// The custom naming convention applied to specific resource types for this landing zone configuration, which overrides the
        /// default naming convention for those resource types. Example - 'customNamingConvention': [{'resourceType': 'azureFirewalls',
        /// 'formula': '{DeploymentPrefix}-afwl-{DeploymentSuffix}'}]
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention[] CustomNamingConvention { get; set; }
        /// <summary>
        /// Parameter used to deploy a DDoS protection plan: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing' to
        /// reuse an existing DDoS protection plan.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? DdosProtectionCreationOption { get; set; }
        /// <summary>
        /// The assigned policies of the 'Decommissioned' management group and indicator to create it or not.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IDecommissionedManagementGroupPropertiesUpdate DecommissionedMgMetadata { get; set; }
        /// <summary>
        /// This parameter determines whether the 'Decommissioned' management group will be created. If set to true, the group will
        /// be created; if set to false, it will not be created. The default value is false.
        /// </summary>
        bool? DecommissionedMgMetadataCreate { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] DecommissionedMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>The resource ID of the Bastion when reusing an existing one.</summary>
        string ExistingAzureBastionId { get; set; }
        /// <summary>The resource ID of the DDoS protection plan when reusing an existing one.</summary>
        string ExistingDdosProtectionId { get; set; }
        /// <summary>The resource ID of the log analytics workspace when reusing an existing one.</summary>
        string ExistingLogAnalyticsWorkspaceId { get; set; }
        /// <summary>
        /// Parameter used for deploying a Firewall: Select 'No' to skip deployment, 'Standard' to deploy the Standard SKU, or 'Premium'
        /// to deploy the Premium SKU.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions? FirewallCreationOption { get; set; }
        /// <summary>
        /// The Firewall subnet address used for deploying a firewall. Specify the Firewall subnet using IPv4 CIDR notation.
        /// </summary>
        string FirewallSubnetCidrBlock { get; set; }
        /// <summary>
        /// The gateway subnet address used for deploying a virtual network. Specify the subnet using IPv4 CIDR notation.
        /// </summary>
        string GatewaySubnetCidrBlock { get; set; }
        /// <summary>The Virtual Network address. Specify the address using IPv4 CIDR notation.</summary>
        string HubNetworkCidrBlock { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] LandingZoneMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// The child management groups of 'Landing Zones' management group and their assigned policies.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties[] LandingZonesMgChild { get; set; }
        /// <summary>The assigned policies of the 'Landing Zones' management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate LandingZonesMgMetadata { get; set; }
        /// <summary>
        /// Parameter used to deploy a log analytics workspace: Select 'Yes' to enable deployment, 'No' to skip it, or 'Existing'
        /// to reuse an existing log analytics workspace.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? LogAnalyticsWorkspaceCreationOption { get; set; }
        /// <summary>
        /// Parameter to define the retention period for logs, in days. The minimum duration is 30 days and the maximum is 730 days.
        /// </summary>
        long? LogRetentionInDay { get; set; }
        /// <summary>The managed identity to be assigned to this landing zone configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagedIdentityPropertiesUpdate ManagedIdentity { get; set; }
        /// <summary>The type of managed identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType? ManagedIdentityType { get; set; }
        /// <summary>The resource id of the managed identity.</summary>
        string ManagedIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>
        /// The default naming convention applied to all resources for this landing zone configuration. Example - {DeploymentPrefix}-Contoso-{ResourceTypeAbbreviation}{DeploymentSuffix}-{Environment}-testing
        /// </summary>
        string NamingConventionFormula { get; set; }
        /// <summary>
        /// The assigned policies of the 'Connectivity' management group under 'Platform' management group.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformConnectivityMgMetadata { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// The assigned policies of the 'Identity' management group under 'Platform' management group.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformIdentityMgMetadata { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// The assigned policies of the 'Management' management group under 'Platform' management group.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformManagementMgMetadata { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// The names of the 'Platform' child management groups and their assigned policies, excluding the default ones: 'Connectivity',
        /// 'Identity', and 'Management'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties[] PlatformMgChild { get; set; }
        /// <summary>The assigned policies of the 'Platform' management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformMgMetadata { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate Property { get; set; }
        /// <summary>
        /// The assigned policies of the 'Sandbox' management group and indicator to create it or not.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ISandboxManagementGroupPropertiesUpdate SandboxMgMetadata { get; set; }
        /// <summary>
        /// This parameter determines whether the 'Sandbox' management group will be created. If set to true, the group will be created;
        /// if set to false, it will not be created. The default value is false.
        /// </summary>
        bool? SandboxMgMetadataCreate { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] SandboxMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// Tags are key-value pairs that can be assigned to a resource to organize and manage it more effectively. Example: {'name':
        /// 'a tag name', 'value': 'a tag value'}
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags[] Tag { get; set; }
        /// <summary>The assigned policies of the parent management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate TopLevelMgMetadata { get; set; }
        /// <summary>Array of policy initiatives applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] TopLevelMgMetadataPolicyInitiativesAssignmentProperty { get; set; }

    }
}