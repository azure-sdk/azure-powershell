// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Extensions;

    /// <summary>
    /// Concrete proxy resource types can be created by aliasing this type using a specific property type.
    /// </summary>
    public partial class LandingZoneConfigurationResourceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.Resource();

        /// <summary>
        /// To deploy the bastion service, choose Yes, otherwise No. Choose UseExisting for existing bastion service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? AzureBastionCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions)""); }

        /// <summary>Azure bastion subnet. IP v4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string AzureBastionSubnetCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionSubnetCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).AzureBastionSubnetCidrBlock = value ?? null; }

        /// <summary>
        /// The customized naming convention for one or more resource types in this landing zone configuration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention[] CustomNamingConvention { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).CustomNamingConvention; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).CustomNamingConvention = value ?? null /* arrayOf */; }

        /// <summary>
        /// To deploy ddos, choose Yes, otherwise No. Select Existing to provide an existing ddos protection plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? DdosProtectionCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DdosProtectionCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DdosProtectionCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions)""); }

        /// <summary>
        /// When set to false, this management group will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public bool? DecommissionedMgMetadataCreate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataCreate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataCreate = value ?? default(bool); }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] DecommissionedMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>The resource id of azure bastion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ExistingAzureBastionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingAzureBastionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingAzureBastionId = value ?? null; }

        /// <summary>The resource id of the ddos protection plan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ExistingDdosProtectionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingDdosProtectionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingDdosProtectionId = value ?? null; }

        /// <summary>
        /// The resource id of the log analytics workspace that was created to centralize log ingestion.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ExistingLogAnalyticsWorkspaceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingLogAnalyticsWorkspaceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ExistingLogAnalyticsWorkspaceId = value ?? null; }

        /// <summary>
        /// To deploy firewall, choose the Standard/Premium based on the desired SKU. Choose None for no firewall and UseExisting
        /// for a pre existing one.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions? FirewallCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions)""); }

        /// <summary>Azure firewall subnet. IPv4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string FirewallSubnetCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallSubnetCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).FirewallSubnetCidrBlock = value ?? null; }

        /// <summary>Gateway subnet. IPv4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string GatewaySubnetCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).GatewaySubnetCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).GatewaySubnetCidrBlock = value ?? null; }

        /// <summary>The address space for the VNET. IPv4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string HubNetworkCidrBlock { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).HubNetworkCidrBlock; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).HubNetworkCidrBlock = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] LandingZoneMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZoneMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZoneMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Landing zone children management group properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties[] LandingZonesMgChild { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgChild; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgChild = value ?? null /* arrayOf */; }

        /// <summary>
        /// To deploy log analytics workspace, choose Yes, otherwise No. Select UseExisting to provide an existing log analytics workspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? LogAnalyticsWorkspaceCreationOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogAnalyticsWorkspaceCreationOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogAnalyticsWorkspaceCreationOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions)""); }

        /// <summary>
        /// Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public long? LogRetentionInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogRetentionInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LogRetentionInDay = value ?? default(long); }

        /// <summary>The type of managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType? ManagedIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType)""); }

        /// <summary>The resource id of the managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string ManagedIdentityUserAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityUserAssignedIdentityResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentityUserAssignedIdentityResourceId = value ?? null; }

        /// <summary>Internal Acessors for DecommissionedMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IDecommissionedManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.DecommissionedMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).DecommissionedMgMetadata = value; }

        /// <summary>Internal Acessors for LandingZonesMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.LandingZonesMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).LandingZonesMgMetadata = value; }

        /// <summary>Internal Acessors for ManagedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagedIdentityPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.ManagedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).ManagedIdentity = value; }

        /// <summary>Internal Acessors for PlatformConnectivityMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformConnectivityMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadata = value; }

        /// <summary>Internal Acessors for PlatformIdentityMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformIdentityMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadata = value; }

        /// <summary>Internal Acessors for PlatformManagementMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformManagementMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadata = value; }

        /// <summary>Internal Acessors for PlatformMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.PlatformMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadata = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.LandingZoneConfigurationResourcePropertiesUpdate()); set { {_property = value;} } }

        /// <summary>Internal Acessors for SandboxMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ISandboxManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.SandboxMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadata = value; }

        /// <summary>Internal Acessors for TopLevelMgMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourceUpdateInternal.TopLevelMgMetadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadata = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The naming convention that's used by default for all resource types for this landing zone configuration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public string NamingConventionFormula { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).NamingConventionFormula; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).NamingConventionFormula = value ?? null; }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Platform children management group properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties[] PlatformMgChild { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgChild; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgChild = value ?? null /* arrayOf */; }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).PlatformMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.LandingZoneConfigurationResourcePropertiesUpdate()); set => this._property = value; }

        /// <summary>
        /// When set to false this management group will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public bool? SandboxMgMetadataCreate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataCreate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataCreate = value ?? default(bool); }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] SandboxMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).SandboxMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.CreatedByType)""); }

        /// <summary>Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags[] Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).Tag = value ?? null /* arrayOf */; }

        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] TopLevelMgMetadataPolicyInitiativesAssignmentProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadataPolicyInitiativesAssignmentProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdateInternal)Property).TopLevelMgMetadataPolicyInitiativesAssignmentProperty = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Origin(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="LandingZoneConfigurationResourceUpdate" /> instance.</summary>
        public LandingZoneConfigurationResourceUpdate()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Concrete proxy resource types can be created by aliasing this type using a specific property type.
    public partial interface ILandingZoneConfigurationResourceUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResource
    {
        /// <summary>
        /// To deploy the bastion service, choose Yes, otherwise No. Choose UseExisting for existing bastion service.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To deploy the bastion service, choose Yes, otherwise No. Choose UseExisting for existing bastion service.",
        SerializedName = @"azureBastionCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? AzureBastionCreationOption { get; set; }
        /// <summary>Azure bastion subnet. IP v4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure bastion subnet. IP v4 CIDR block.",
        SerializedName = @"azureBastionSubnetCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string AzureBastionSubnetCidrBlock { get; set; }
        /// <summary>
        /// The customized naming convention for one or more resource types in this landing zone configuration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The customized naming convention for one or more resource types in this landing zone configuration",
        SerializedName = @"customNamingConvention",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention[] CustomNamingConvention { get; set; }
        /// <summary>
        /// To deploy ddos, choose Yes, otherwise No. Select Existing to provide an existing ddos protection plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To deploy ddos, choose Yes, otherwise No. Select Existing to provide an existing ddos protection plan.",
        SerializedName = @"ddosProtectionCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? DdosProtectionCreationOption { get; set; }
        /// <summary>
        /// When set to false, this management group will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to false, this management group will not be created. The default value is false.",
        SerializedName = @"create",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DecommissionedMgMetadataCreate { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] DecommissionedMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>The resource id of azure bastion.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of azure bastion.",
        SerializedName = @"existingAzureBastionId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingAzureBastionId { get; set; }
        /// <summary>The resource id of the ddos protection plan.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the ddos protection plan.",
        SerializedName = @"existingDdosProtectionId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingDdosProtectionId { get; set; }
        /// <summary>
        /// The resource id of the log analytics workspace that was created to centralize log ingestion.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the log analytics workspace that was created to centralize log ingestion.",
        SerializedName = @"existingLogAnalyticsWorkspaceId",
        PossibleTypes = new [] { typeof(string) })]
        string ExistingLogAnalyticsWorkspaceId { get; set; }
        /// <summary>
        /// To deploy firewall, choose the Standard/Premium based on the desired SKU. Choose None for no firewall and UseExisting
        /// for a pre existing one.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To deploy firewall, choose the Standard/Premium based on the desired SKU. Choose None for no firewall and UseExisting for a pre existing one.",
        SerializedName = @"firewallCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions? FirewallCreationOption { get; set; }
        /// <summary>Azure firewall subnet. IPv4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Azure firewall subnet. IPv4 CIDR block.",
        SerializedName = @"firewallSubnetCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string FirewallSubnetCidrBlock { get; set; }
        /// <summary>Gateway subnet. IPv4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Gateway subnet. IPv4 CIDR block.",
        SerializedName = @"gatewaySubnetCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string GatewaySubnetCidrBlock { get; set; }
        /// <summary>The address space for the VNET. IPv4 CIDR block.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The address space for the VNET. IPv4 CIDR block.",
        SerializedName = @"hubNetworkCidrBlock",
        PossibleTypes = new [] { typeof(string) })]
        string HubNetworkCidrBlock { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] LandingZoneMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Landing zone children management group properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Landing zone children management group properties",
        SerializedName = @"landingZonesMgChildren",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties[] LandingZonesMgChild { get; set; }
        /// <summary>
        /// To deploy log analytics workspace, choose Yes, otherwise No. Select UseExisting to provide an existing log analytics workspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To deploy log analytics workspace, choose Yes, otherwise No. Select UseExisting to provide an existing log analytics workspace.",
        SerializedName = @"logAnalyticsWorkspaceCreationOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? LogAnalyticsWorkspaceCreationOption { get; set; }
        /// <summary>
        /// Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730",
        SerializedName = @"logRetentionInDays",
        PossibleTypes = new [] { typeof(long) })]
        long? LogRetentionInDay { get; set; }
        /// <summary>The type of managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of managed identity.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType? ManagedIdentityType { get; set; }
        /// <summary>The resource id of the managed identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource id of the managed identity.",
        SerializedName = @"userAssignedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ManagedIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>
        /// The naming convention that's used by default for all resource types for this landing zone configuration
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The naming convention that's used by default for all resource types for this landing zone configuration",
        SerializedName = @"namingConventionFormula",
        PossibleTypes = new [] { typeof(string) })]
        string NamingConventionFormula { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Platform children management group properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Platform children management group properties.",
        SerializedName = @"platformMgChildren",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties[] PlatformMgChild { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>
        /// When set to false this management group will not be created. The default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to false this management group will not be created. The default value is false.",
        SerializedName = @"create",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SandboxMgMetadataCreate { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] SandboxMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags[] Tag { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of initiative assignments to be applied to the management group.",
        SerializedName = @"policyInitiativesAssignmentProperties",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties) })]
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] TopLevelMgMetadataPolicyInitiativesAssignmentProperty { get; set; }

    }
    /// Concrete proxy resource types can be created by aliasing this type using a specific property type.
    internal partial interface ILandingZoneConfigurationResourceUpdateInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api50.IResourceInternal
    {
        /// <summary>
        /// To deploy the bastion service, choose Yes, otherwise No. Choose UseExisting for existing bastion service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? AzureBastionCreationOption { get; set; }
        /// <summary>Azure bastion subnet. IP v4 CIDR block.</summary>
        string AzureBastionSubnetCidrBlock { get; set; }
        /// <summary>
        /// The customized naming convention for one or more resource types in this landing zone configuration
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ICustomNamingConvention[] CustomNamingConvention { get; set; }
        /// <summary>
        /// To deploy ddos, choose Yes, otherwise No. Select Existing to provide an existing ddos protection plan.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? DdosProtectionCreationOption { get; set; }
        /// <summary>This will be applied to the decommissioned management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IDecommissionedManagementGroupPropertiesUpdate DecommissionedMgMetadata { get; set; }
        /// <summary>
        /// When set to false, this management group will not be created. The default value is false.
        /// </summary>
        bool? DecommissionedMgMetadataCreate { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] DecommissionedMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>The resource id of azure bastion.</summary>
        string ExistingAzureBastionId { get; set; }
        /// <summary>The resource id of the ddos protection plan.</summary>
        string ExistingDdosProtectionId { get; set; }
        /// <summary>
        /// The resource id of the log analytics workspace that was created to centralize log ingestion.
        /// </summary>
        string ExistingLogAnalyticsWorkspaceId { get; set; }
        /// <summary>
        /// To deploy firewall, choose the Standard/Premium based on the desired SKU. Choose None for no firewall and UseExisting
        /// for a pre existing one.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.FirewallCreationOptions? FirewallCreationOption { get; set; }
        /// <summary>Azure firewall subnet. IPv4 CIDR block.</summary>
        string FirewallSubnetCidrBlock { get; set; }
        /// <summary>Gateway subnet. IPv4 CIDR block.</summary>
        string GatewaySubnetCidrBlock { get; set; }
        /// <summary>The address space for the VNET. IPv4 CIDR block.</summary>
        string HubNetworkCidrBlock { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] LandingZoneMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Landing zone children management group properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneManagementGroupProperties[] LandingZonesMgChild { get; set; }
        /// <summary>This will be applied to the landing zone management groups.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate LandingZonesMgMetadata { get; set; }
        /// <summary>
        /// To deploy log analytics workspace, choose Yes, otherwise No. Select UseExisting to provide an existing log analytics workspace.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ResourceCreationOptions? LogAnalyticsWorkspaceCreationOption { get; set; }
        /// <summary>
        /// Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730
        /// </summary>
        long? LogRetentionInDay { get; set; }
        /// <summary>The managed identity to be tied to this landing zone configuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagedIdentityPropertiesUpdate ManagedIdentity { get; set; }
        /// <summary>The type of managed identity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.ManagedIdentityResourceType? ManagedIdentityType { get; set; }
        /// <summary>The resource id of the managed identity.</summary>
        string ManagedIdentityUserAssignedIdentityResourceId { get; set; }
        /// <summary>
        /// The naming convention that's used by default for all resource types for this landing zone configuration
        /// </summary>
        string NamingConventionFormula { get; set; }
        /// <summary>This will be applied to the connectivity management group under platform.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformConnectivityMgMetadata { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformConnectivityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>This will be applied to the identity management group under platform.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformIdentityMgMetadata { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformIdentityMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>This will be applied to the management management group under platform.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformManagementMgMetadata { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformManagementMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Platform children management group properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPlatformManagementGroupProperties[] PlatformMgChild { get; set; }
        /// <summary>This will be applied to the platform management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate PlatformMgMetadata { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] PlatformMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ILandingZoneConfigurationResourcePropertiesUpdate Property { get; set; }
        /// <summary>This will be applied to the sandbox management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ISandboxManagementGroupPropertiesUpdate SandboxMgMetadata { get; set; }
        /// <summary>
        /// When set to false this management group will not be created. The default value is false.
        /// </summary>
        bool? SandboxMgMetadataCreate { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] SandboxMgMetadataPolicyInitiativesAssignmentProperty { get; set; }
        /// <summary>Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.ITags[] Tag { get; set; }
        /// <summary>This will be applied to the root of the landing zone deployment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IManagementGroupPropertiesUpdate TopLevelMgMetadata { get; set; }
        /// <summary>Array of initiative assignments to be applied to the management group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IPolicyInitiativeAssignmentProperties[] TopLevelMgMetadataPolicyInitiativesAssignmentProperty { get; set; }

    }
}