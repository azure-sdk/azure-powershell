
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Generate the landing zone.
.Description
Generate the landing zone.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IGenerateLandingZoneRequest
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.ISovereignIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IGenerateLandingZoneResponse
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODY <IGenerateLandingZoneRequest>: The request to generate code for a landing zone.
  DeploymentLocation <String>: Location to run deployment(s) from the list of azure regions.
  DeploymentPrefix <String>: The prefix that will be added to all resources created by this deployment.
  InfrastructureAsCodeOutputOption <InfrastructureAsCodeOutputOptions>: The export options available for code generation.
  TopLevelMgDisplayName <String>: The top level management group display name.
  [DeploymentSuffix <String>]: The suffix that will be added to all resources created by this deployment.
  [Environment <String>]: The environment for which the landing zone is being deployed
  [ExistingConnectivitySubscriptionId <String>]: Connectivity subscription fully qualified Id.
  [ExistingIdentitySubscriptionId <String>]: Identity subscription fully qualified Id.
  [ExistingManagementSubscriptionId <String>]: Management subscription fully qualified Id.
  [ExistingTopLevelMgParentId <String>]: Optional parent for management group hierarchy, used as intermediate root management group parent, if specified. If empty, default will deploy beneath tenant toot management group.
  [Organization <String>]: The name of the organization or agency the landing zone is being deployed for.
  [SubscriptionBillingScope <String>]: The full resource ID of billing scope associated to the EA, MCA or MPA account you wish to create the subscription in.

INPUTOBJECT <ISovereignIdentity>: Identity Parameter
  [Id <String>]: Resource identity path
  [LandingZoneAccountName <String>]: The parent landing zone account
  [LandingZoneConfigurationName <String>]: The landing zone configuration name
  [LandingZoneRegistrationName <String>]: The name of the Landing Zone Registration resource.
  [ResourceGroupName <String>]: The name of the resource group. The name is case insensitive.
  [SubscriptionId <String>]: The ID of the target subscription. The value must be an UUID.
.Link
https://learn.microsoft.com/powershell/module/az.sovereign/new-azsovereignlandingzoneconfigurationoperationlandingzone
#>
function New-AzSovereignLandingZoneConfigurationOperationLandingZone {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IGenerateLandingZoneResponse])]
[CmdletBinding(DefaultParameterSetName='GenerateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Generate', Mandatory)]
    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Path')]
    [System.String]
    # The parent landing zone account
    ${LandingZoneAccountName},

    [Parameter(ParameterSetName='Generate', Mandatory)]
    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Path')]
    [System.String]
    # The landing zone configuration name
    ${LandingZoneConfigurationName},

    [Parameter(ParameterSetName='Generate', Mandatory)]
    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Path')]
    [System.String]
    # The name of the resource group.
    # The name is case insensitive.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Generate')]
    [Parameter(ParameterSetName='GenerateExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The ID of the target subscription.
    # The value must be an UUID.
    ${SubscriptionId},

    [Parameter(ParameterSetName='GenerateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.ISovereignIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Generate', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='GenerateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Models.Api20250227Preview.IGenerateLandingZoneRequest]
    # The request to generate code for a landing zone.
    # To construct, see NOTES section for BODY properties and create a hash table.
    ${Body},

    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # Location to run deployment(s) from the list of azure regions.
    ${DeploymentLocation},

    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # The prefix that will be added to all resources created by this deployment.
    ${DeploymentPrefix},

    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded', Mandatory)]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.InfrastructureAsCodeOutputOptions])]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Support.InfrastructureAsCodeOutputOptions]
    # The export options available for code generation.
    ${InfrastructureAsCodeOutputOption},

    [Parameter(ParameterSetName='GenerateExpanded', Mandatory)]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # The top level management group display name.
    ${TopLevelMgDisplayName},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # The suffix that will be added to all resources created by this deployment.
    ${DeploymentSuffix},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # The environment for which the landing zone is being deployed
    ${Environment},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # Connectivity subscription fully qualified Id.
    ${ExistingConnectivitySubscriptionId},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # Identity subscription fully qualified Id.
    ${ExistingIdentitySubscriptionId},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # Management subscription fully qualified Id.
    ${ExistingManagementSubscriptionId},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # Optional parent for management group hierarchy, used as intermediate root management group parent, if specified.
    # If empty, default will deploy beneath tenant toot management group.
    ${ExistingTopLevelMgParentId},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # The name of the organization or agency the landing zone is being deployed for.
    ${Organization},

    [Parameter(ParameterSetName='GenerateExpanded')]
    [Parameter(ParameterSetName='GenerateViaIdentityExpanded')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Body')]
    [System.String]
    # The full resource ID of billing scope associated to the EA, MCA or MPA account you wish to create the subscription in.
    ${SubscriptionBillingScope},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Generate = 'Az.Sovereign.private\New-AzSovereignLandingZoneConfigurationOperationLandingZone_Generate';
            GenerateExpanded = 'Az.Sovereign.private\New-AzSovereignLandingZoneConfigurationOperationLandingZone_GenerateExpanded';
            GenerateViaIdentity = 'Az.Sovereign.private\New-AzSovereignLandingZoneConfigurationOperationLandingZone_GenerateViaIdentity';
            GenerateViaIdentityExpanded = 'Az.Sovereign.private\New-AzSovereignLandingZoneConfigurationOperationLandingZone_GenerateViaIdentityExpanded';
        }
        if (('Generate', 'GenerateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $testPlayback = $false
            $PSBoundParameters['HttpPipelinePrepend'] | Foreach-Object { if ($_) { $testPlayback = $testPlayback -or ('Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.PipelineMock' -eq $_.Target.GetType().FullName -and 'Playback' -eq $_.Target.Mode) } }
            if ($testPlayback) {
                $PSBoundParameters['SubscriptionId'] = . (Join-Path $PSScriptRoot '..' 'utils' 'Get-SubscriptionIdTestSafe.ps1')
            } else {
                $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
            }
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.Sovereign.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
