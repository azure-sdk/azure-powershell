// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>SasPolicy assigned to the storage account.</summary>
    public partial class SasPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ISasPolicy,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ISasPolicyInternal
    {

        /// <summary>Backing field for <see cref="ExpirationAction" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ExpirationAction _expirationAction;

        /// <summary>
        /// The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log'
        /// action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that
        /// do not adhere to the sas policy expiration period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ExpirationAction ExpirationAction { get => this._expirationAction; set => this._expirationAction = value; }

        /// <summary>Backing field for <see cref="SasExpirationPeriod" /> property.</summary>
        private string _sasExpirationPeriod;

        /// <summary>The SAS expiration period, DD.HH:MM:SS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string SasExpirationPeriod { get => this._sasExpirationPeriod; set => this._sasExpirationPeriod = value; }

        /// <summary>Creates an new <see cref="SasPolicy" /> instance.</summary>
        public SasPolicy()
        {

        }
    }
    /// SasPolicy assigned to the storage account.
    public partial interface ISasPolicy :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log'
        /// action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that
        /// do not adhere to the sas policy expiration period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log' action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that do not adhere to the sas policy expiration period.",
        SerializedName = @"expirationAction",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ExpirationAction) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ExpirationAction ExpirationAction { get; set; }
        /// <summary>The SAS expiration period, DD.HH:MM:SS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The SAS expiration period, DD.HH:MM:SS.",
        SerializedName = @"sasExpirationPeriod",
        PossibleTypes = new [] { typeof(string) })]
        string SasExpirationPeriod { get; set; }

    }
    /// SasPolicy assigned to the storage account.
    internal partial interface ISasPolicyInternal

    {
        /// <summary>
        /// The SAS Expiration Action defines the action to be performed when sasPolicy.sasExpirationPeriod is violated. The 'Log'
        /// action can be used for audit purposes and the 'Block' action can be used to block and deny the usage of SAS tokens that
        /// do not adhere to the sas policy expiration period.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ExpirationAction ExpirationAction { get; set; }
        /// <summary>The SAS expiration period, DD.HH:MM:SS.</summary>
        string SasExpirationPeriod { get; set; }

    }
}