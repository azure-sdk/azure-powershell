// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Storage Tasks run report instance</summary>
    public partial class StorageTaskReportInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstance,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.Resource();

        /// <summary>
        /// End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string FinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).FinishTime; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for FinishTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.FinishTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).FinishTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).FinishTime = value; }

        /// <summary>Internal Acessors for ObjectFailedCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.ObjectFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectFailedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectFailedCount = value; }

        /// <summary>Internal Acessors for ObjectsOperatedOnCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.ObjectsOperatedOnCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsOperatedOnCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsOperatedOnCount = value; }

        /// <summary>Internal Acessors for ObjectsSucceededCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.ObjectsSucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsSucceededCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsSucceededCount = value; }

        /// <summary>Internal Acessors for ObjectsTargetedCount</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.ObjectsTargetedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsTargetedCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsTargetedCount = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.StorageTaskReportProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RunResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunResult? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.RunResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunResult = value; }

        /// <summary>Internal Acessors for RunStatusEnum</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunStatusEnum? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.RunStatusEnum { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunStatusEnum; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunStatusEnum = value; }

        /// <summary>Internal Acessors for RunStatusError</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.RunStatusError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunStatusError; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunStatusError = value; }

        /// <summary>Internal Acessors for StartTime</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).StartTime = value; }

        /// <summary>Internal Acessors for StorageAccountId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.StorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).StorageAccountId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).StorageAccountId = value; }

        /// <summary>Internal Acessors for SummaryReportPath</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.SummaryReportPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).SummaryReportPath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).SummaryReportPath = value; }

        /// <summary>Internal Acessors for TaskAssignmentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.TaskAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskAssignmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskAssignmentId = value; }

        /// <summary>Internal Acessors for TaskId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.TaskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskId = value; }

        /// <summary>Internal Acessors for TaskVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportInstanceInternal.TaskVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskVersion = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Name; }

        /// <summary>
        /// Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0
        /// and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ObjectFailedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectFailedCount; }

        /// <summary>
        /// Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount
        /// ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ObjectsOperatedOnCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsOperatedOnCount; }

        /// <summary>
        /// Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount
        /// gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ObjectsSucceededCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsSucceededCount; }

        /// <summary>
        /// Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options
        /// such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in
        /// https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string ObjectsTargetedCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).ObjectsTargetedCount; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportProperties _property;

        /// <summary>Storage task execution report for a run instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.StorageTaskReportProperties()); set => this._property = value; }

        /// <summary>Represents the overall result of the execution for the run instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunResult? RunResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunResult; }

        /// <summary>Represents the status of the execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunStatusEnum? RunStatusEnum { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunStatusEnum; }

        /// <summary>
        /// Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string RunStatusError { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).RunStatusError; }

        /// <summary>
        /// Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).StartTime; }

        /// <summary>
        /// Represents the Storage Account Id where the storage task definition was applied and executed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string StorageAccountId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).StorageAccountId; }

        /// <summary>
        /// Full path to the verbose report stored in the reporting container as specified in the assignment execution context for
        /// the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string SummaryReportPath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).SummaryReportPath; }

        /// <summary>
        /// Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string TaskAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskAssignmentId; }

        /// <summary>Storage Task Arm Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string TaskId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskId; }

        /// <summary>Storage Task Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string TaskVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportPropertiesInternal)Property).TaskVersion; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="StorageTaskReportInstance" /> instance.</summary>
        public StorageTaskReportInstance()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Storage Tasks run report instance
    public partial interface IStorageTaskReportInstance :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResource
    {
        /// <summary>
        /// End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"finishTime",
        PossibleTypes = new [] { typeof(string) })]
        string FinishTime { get;  }
        /// <summary>
        /// Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0
        /// and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectFailedCount",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectFailedCount { get;  }
        /// <summary>
        /// Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount
        /// ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectsOperatedOnCount",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectsOperatedOnCount { get;  }
        /// <summary>
        /// Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount
        /// gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectsSucceededCount",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectsSucceededCount { get;  }
        /// <summary>
        /// Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options
        /// such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in
        /// https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"objectsTargetedCount",
        PossibleTypes = new [] { typeof(string) })]
        string ObjectsTargetedCount { get;  }
        /// <summary>Represents the overall result of the execution for the run instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents the overall result of the execution for the run instance",
        SerializedName = @"runResult",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunResult? RunResult { get;  }
        /// <summary>Represents the status of the execution.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents the status of the execution.",
        SerializedName = @"runStatusEnum",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunStatusEnum? RunStatusEnum { get;  }
        /// <summary>
        /// Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Well known Azure Storage error code that represents the error encountered during execution of the run instance.",
        SerializedName = @"runStatusError",
        PossibleTypes = new [] { typeof(string) })]
        string RunStatusError { get;  }
        /// <summary>
        /// Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(string) })]
        string StartTime { get;  }
        /// <summary>
        /// Represents the Storage Account Id where the storage task definition was applied and executed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents the Storage Account Id where the storage task definition was applied and executed.",
        SerializedName = @"storageAccountId",
        PossibleTypes = new [] { typeof(string) })]
        string StorageAccountId { get;  }
        /// <summary>
        /// Full path to the verbose report stored in the reporting container as specified in the assignment execution context for
        /// the storage account.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account. ",
        SerializedName = @"summaryReportPath",
        PossibleTypes = new [] { typeof(string) })]
        string SummaryReportPath { get;  }
        /// <summary>
        /// Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.",
        SerializedName = @"taskAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string TaskAssignmentId { get;  }
        /// <summary>Storage Task Arm Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Storage Task Arm Id.",
        SerializedName = @"taskId",
        PossibleTypes = new [] { typeof(string) })]
        string TaskId { get;  }
        /// <summary>Storage Task Version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Storage Task Version",
        SerializedName = @"taskVersion",
        PossibleTypes = new [] { typeof(string) })]
        string TaskVersion { get;  }

    }
    /// Storage Tasks run report instance
    internal partial interface IStorageTaskReportInstanceInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api10.IResourceInternal
    {
        /// <summary>
        /// End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string FinishTime { get; set; }
        /// <summary>
        /// Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0
        /// and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string ObjectFailedCount { get; set; }
        /// <summary>
        /// Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount
        /// ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string ObjectsOperatedOnCount { get; set; }
        /// <summary>
        /// Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount
        /// gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string ObjectsSucceededCount { get; set; }
        /// <summary>
        /// Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options
        /// such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in
        /// https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string ObjectsTargetedCount { get; set; }
        /// <summary>Storage task execution report for a run instance.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskReportProperties Property { get; set; }
        /// <summary>Represents the overall result of the execution for the run instance</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunResult? RunResult { get; set; }
        /// <summary>Represents the status of the execution.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RunStatusEnum? RunStatusEnum { get; set; }
        /// <summary>
        /// Well known Azure Storage error code that represents the error encountered during execution of the run instance.
        /// </summary>
        string RunStatusError { get; set; }
        /// <summary>
        /// Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison
        /// operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators
        /// </summary>
        string StartTime { get; set; }
        /// <summary>
        /// Represents the Storage Account Id where the storage task definition was applied and executed.
        /// </summary>
        string StorageAccountId { get; set; }
        /// <summary>
        /// Full path to the verbose report stored in the reporting container as specified in the assignment execution context for
        /// the storage account.
        /// </summary>
        string SummaryReportPath { get; set; }
        /// <summary>
        /// Represents the Storage Task Assignment Id associated with the storage task that provided an execution context.
        /// </summary>
        string TaskAssignmentId { get; set; }
        /// <summary>Storage Task Arm Id.</summary>
        string TaskId { get; set; }
        /// <summary>Storage Task Version</summary>
        string TaskVersion { get; set; }

    }
}