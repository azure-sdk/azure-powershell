// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501
{
    using Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.PowerShell;

    /// <summary>Execution context of the storage task assignment update.</summary>
    [System.ComponentModel.TypeConverter(typeof(StorageTaskAssignmentUpdateExecutionContextTypeConverter))]
    public partial class StorageTaskAssignmentUpdateExecutionContext
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.StorageTaskAssignmentUpdateExecutionContext"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContext"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContext DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new StorageTaskAssignmentUpdateExecutionContext(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.StorageTaskAssignmentUpdateExecutionContext"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContext"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContext DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new StorageTaskAssignmentUpdateExecutionContext(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="StorageTaskAssignmentUpdateExecutionContext" />, deserializing the content from a
        /// json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="StorageTaskAssignmentUpdateExecutionContext" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContext FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.StorageTaskAssignmentUpdateExecutionContext"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal StorageTaskAssignmentUpdateExecutionContext(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Target"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Target = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IExecutionTargetUpdate) content.GetValueForProperty("Target",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Target, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ExecutionTargetUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Trigger"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Trigger = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IExecutionTriggerUpdate) content.GetValueForProperty("Trigger",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Trigger, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ExecutionTriggerUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("TriggerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerType = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.TriggerType?) content.GetValueForProperty("TriggerType",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerType, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.TriggerType.CreateFrom);
            }
            if (content.Contains("TargetPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetPrefix = (string[]) content.GetValueForProperty("TargetPrefix",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetPrefix, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TargetExcludePrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetExcludePrefix = (string[]) content.GetValueForProperty("TargetExcludePrefix",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetExcludePrefix, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TriggerParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerParameter = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ITriggerParametersUpdate) content.GetValueForProperty("TriggerParameter",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerParameter, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.TriggerParametersUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("ParameterIntervalUnit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterIntervalUnit = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.IntervalUnit?) content.GetValueForProperty("ParameterIntervalUnit",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterIntervalUnit, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.IntervalUnit.CreateFrom);
            }
            if (content.Contains("ParameterStartFrom"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartFrom = (global::System.DateTime?) content.GetValueForProperty("ParameterStartFrom",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartFrom, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ParameterInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterInterval = (int?) content.GetValueForProperty("ParameterInterval",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ParameterEndBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterEndBy = (global::System.DateTime?) content.GetValueForProperty("ParameterEndBy",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterEndBy, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ParameterStartOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartOn = (global::System.DateTime?) content.GetValueForProperty("ParameterStartOn",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.StorageTaskAssignmentUpdateExecutionContext"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal StorageTaskAssignmentUpdateExecutionContext(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Target"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Target = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IExecutionTargetUpdate) content.GetValueForProperty("Target",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Target, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ExecutionTargetUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("Trigger"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Trigger = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IExecutionTriggerUpdate) content.GetValueForProperty("Trigger",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).Trigger, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ExecutionTriggerUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("TriggerType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerType = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.TriggerType?) content.GetValueForProperty("TriggerType",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerType, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.TriggerType.CreateFrom);
            }
            if (content.Contains("TargetPrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetPrefix = (string[]) content.GetValueForProperty("TargetPrefix",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetPrefix, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TargetExcludePrefix"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetExcludePrefix = (string[]) content.GetValueForProperty("TargetExcludePrefix",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TargetExcludePrefix, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TriggerParameter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerParameter = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.ITriggerParametersUpdate) content.GetValueForProperty("TriggerParameter",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).TriggerParameter, Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.TriggerParametersUpdateTypeConverter.ConvertFrom);
            }
            if (content.Contains("ParameterIntervalUnit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterIntervalUnit = (Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.IntervalUnit?) content.GetValueForProperty("ParameterIntervalUnit",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterIntervalUnit, Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.IntervalUnit.CreateFrom);
            }
            if (content.Contains("ParameterStartFrom"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartFrom = (global::System.DateTime?) content.GetValueForProperty("ParameterStartFrom",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartFrom, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ParameterInterval"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterInterval = (int?) content.GetValueForProperty("ParameterInterval",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterInterval, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ParameterEndBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterEndBy = (global::System.DateTime?) content.GetValueForProperty("ParameterEndBy",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterEndBy, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("ParameterStartOn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartOn = (global::System.DateTime?) content.GetValueForProperty("ParameterStartOn",((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api20230501.IStorageTaskAssignmentUpdateExecutionContextInternal)this).ParameterStartOn, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// Execution context of the storage task assignment update.
    [System.ComponentModel.TypeConverter(typeof(StorageTaskAssignmentUpdateExecutionContextTypeConverter))]
    public partial interface IStorageTaskAssignmentUpdateExecutionContext

    {

    }
}