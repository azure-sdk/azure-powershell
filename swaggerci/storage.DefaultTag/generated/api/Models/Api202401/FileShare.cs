// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>Properties of the file share, including Id, resource name, resource type, Etag.</summary>
    public partial class FileShare :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShare,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.Resource();

        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage
        /// account can choose Premium.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier? AccessTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier)""); }

        /// <summary>Indicates the last modification time for share access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? AccessTierChangeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTierChangeTime; }

        /// <summary>Indicates if there is a pending transition for access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string AccessTierStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTierStatus; }

        /// <summary>Indicates whether the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? Deleted { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Deleted; }

        /// <summary>The deleted time if the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? DeletedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).DeletedTime; }

        /// <summary>Backing field for <see cref="ETag" /> property.</summary>
        private string _eTag;

        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention. Entity tags
        /// are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section
        /// 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        public string ETag { get => this._eTag; }

        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols? EnabledProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).EnabledProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).EnabledProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>
        /// The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account
        /// type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? IncludedBurstIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).IncludedBurstIop; }

        /// <summary>Returns the date and time the share was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LastModifiedTime; }

        /// <summary>
        /// Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration? LeaseDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseDuration; }

        /// <summary>Lease state of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState? LeaseState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseState; }

        /// <summary>The lease status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus? LeaseStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseStatus; }

        /// <summary>
        /// The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned
        /// v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public long? MaxBurstCreditsForIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).MaxBurstCreditsForIop; }

        /// <summary>A name-value pair to associate with the share as metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesMetadata Metadata { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Metadata; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Metadata = value ?? null /* model class */; }

        /// <summary>Internal Acessors for AccessTierChangeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.AccessTierChangeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTierChangeTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTierChangeTime = value; }

        /// <summary>Internal Acessors for AccessTierStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.AccessTierStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTierStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).AccessTierStatus = value; }

        /// <summary>Internal Acessors for Deleted</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.Deleted { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Deleted; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Deleted = value; }

        /// <summary>Internal Acessors for DeletedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.DeletedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).DeletedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).DeletedTime = value; }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.ETag { get => this._eTag; set { {_eTag = value;} } }

        /// <summary>Internal Acessors for IncludedBurstIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.IncludedBurstIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).IncludedBurstIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).IncludedBurstIop = value; }

        /// <summary>Internal Acessors for LastModifiedTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.LastModifiedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LastModifiedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LastModifiedTime = value; }

        /// <summary>Internal Acessors for LeaseDuration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.LeaseDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseDuration = value; }

        /// <summary>Internal Acessors for LeaseState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.LeaseState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseState = value; }

        /// <summary>Internal Acessors for LeaseStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.LeaseStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).LeaseStatus = value; }

        /// <summary>Internal Acessors for MaxBurstCreditsForIop</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.MaxBurstCreditsForIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).MaxBurstCreditsForIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).MaxBurstCreditsForIop = value; }

        /// <summary>Internal Acessors for NextAllowedProvisionedBandwidthDowngradeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.NextAllowedProvisionedBandwidthDowngradeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedProvisionedBandwidthDowngradeTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedProvisionedBandwidthDowngradeTime = value; }

        /// <summary>Internal Acessors for NextAllowedProvisionedIopsDowngradeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.NextAllowedProvisionedIopsDowngradeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedProvisionedIopsDowngradeTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedProvisionedIopsDowngradeTime = value; }

        /// <summary>Internal Acessors for NextAllowedQuotaDowngradeTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.NextAllowedQuotaDowngradeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedQuotaDowngradeTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedQuotaDowngradeTime = value; }

        /// <summary>Internal Acessors for PaidBursting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesFileSharePaidBursting Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.PaidBursting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBursting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBursting = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.FileShareProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RemainingRetentionDay</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.RemainingRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).RemainingRetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).RemainingRetentionDay = value; }

        /// <summary>Internal Acessors for ShareUsageByte</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.ShareUsageByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ShareUsageByte; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ShareUsageByte = value; }

        /// <summary>Internal Acessors for SnapshotTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.SnapshotTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).SnapshotTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).SnapshotTime = value; }

        /// <summary>Internal Acessors for Version</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareInternal.Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Version = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>
        /// Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? NextAllowedProvisionedBandwidthDowngradeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedProvisionedBandwidthDowngradeTime; }

        /// <summary>
        /// Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? NextAllowedProvisionedIopsDowngradeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedProvisionedIopsDowngradeTime; }

        /// <summary>
        /// Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares
        /// created under Files Provisioned v1 SSD and Files Provisioned v2 account type
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? NextAllowedQuotaDowngradeTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).NextAllowedQuotaDowngradeTime; }

        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned
        /// v1 SSD account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? PaidBurstingEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBurstingEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBurstingEnabled = value ?? default(bool); }

        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created
        /// under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth
        /// for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? PaidBurstingMaxBandwidthMibp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBurstingMaxBandwidthMibp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBurstingMaxBandwidthMibp = value ?? default(int); }

        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1
        /// SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? PaidBurstingMaxIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBurstingMaxIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).FileSharePaidBurstingMaxIop = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareProperties _property;

        /// <summary>Properties of the file share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.FileShareProperties()); set => this._property = value; }

        /// <summary>
        /// The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files
        /// Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed
        /// value for provisioned bandwidth.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ProvisionedBandwidthMibp { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ProvisionedBandwidthMibp; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ProvisionedBandwidthMibp = value ?? default(int); }

        /// <summary>
        /// The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.
        /// Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ProvisionedIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ProvisionedIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ProvisionedIop = value ?? default(int); }

        /// <summary>Remaining retention days for share that was soft deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? RemainingRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).RemainingRetentionDay; }

        /// <summary>The property is for NFS share only. The default is NoRootSquash.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType? RootSquash { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).RootSquash; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).RootSquash = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType)""); }

        /// <summary>
        /// The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large
        /// File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer
        /// to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ShareQuota { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ShareQuota; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ShareQuota = value ?? default(int); }

        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently
        /// resized files.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public long? ShareUsageByte { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).ShareUsageByte; }

        /// <summary>List of stored access policies specified on the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISignedIdentifier[] SignedIdentifier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).SignedIdentifier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).SignedIdentifier = value ?? null /* arrayOf */; }

        /// <summary>
        /// Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? SnapshotTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).SnapshotTime; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>The version of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesInternal)Property).Version; }

        /// <summary>Creates an new <see cref="FileShare" /> instance.</summary>
        public FileShare()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Properties of the file share, including Id, resource name, resource type, Etag.
    public partial interface IFileShare :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResource
    {
        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage
        /// account can choose Premium.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.",
        SerializedName = @"accessTier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier? AccessTier { get; set; }
        /// <summary>Indicates the last modification time for share access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates the last modification time for share access tier.",
        SerializedName = @"accessTierChangeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AccessTierChangeTime { get;  }
        /// <summary>Indicates if there is a pending transition for access tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates if there is a pending transition for access tier.",
        SerializedName = @"accessTierStatus",
        PossibleTypes = new [] { typeof(string) })]
        string AccessTierStatus { get;  }
        /// <summary>Indicates whether the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Indicates whether the share was deleted.",
        SerializedName = @"deleted",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Deleted { get;  }
        /// <summary>The deleted time if the share was deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The deleted time if the share was deleted.",
        SerializedName = @"deletedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DeletedTime { get;  }
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention. Entity tags
        /// are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section
        /// 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.",
        SerializedName = @"eTag",
        PossibleTypes = new [] { typeof(string) })]
        string ETag { get;  }
        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The authentication protocol that is used for the file share. Can only be specified when creating a share.",
        SerializedName = @"enabledProtocols",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols? EnabledProtocol { get; set; }
        /// <summary>
        /// The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account
        /// type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"includedBurstIops",
        PossibleTypes = new [] { typeof(int) })]
        int? IncludedBurstIop { get;  }
        /// <summary>Returns the date and time the share was last modified.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the date and time the share was last modified.",
        SerializedName = @"lastModifiedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastModifiedTime { get;  }
        /// <summary>
        /// Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.",
        SerializedName = @"leaseDuration",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration? LeaseDuration { get;  }
        /// <summary>Lease state of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Lease state of the share.",
        SerializedName = @"leaseState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState? LeaseState { get;  }
        /// <summary>The lease status of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The lease status of the share.",
        SerializedName = @"leaseStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus? LeaseStatus { get;  }
        /// <summary>
        /// The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned
        /// v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"maxBurstCreditsForIops",
        PossibleTypes = new [] { typeof(long) })]
        long? MaxBurstCreditsForIop { get;  }
        /// <summary>A name-value pair to associate with the share as metadata.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A name-value pair to associate with the share as metadata.",
        SerializedName = @"metadata",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesMetadata) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesMetadata Metadata { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"nextAllowedProvisionedBandwidthDowngradeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextAllowedProvisionedBandwidthDowngradeTime { get;  }
        /// <summary>
        /// Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created under Files Provisioned v2 account type.",
        SerializedName = @"nextAllowedProvisionedIopsDowngradeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextAllowedProvisionedIopsDowngradeTime { get;  }
        /// <summary>
        /// Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares
        /// created under Files Provisioned v1 SSD and Files Provisioned v2 account type
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares created under Files Provisioned v1 SSD and Files Provisioned v2 account type",
        SerializedName = @"nextAllowedQuotaDowngradeTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? NextAllowedQuotaDowngradeTime { get;  }
        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned
        /// v1 SSD account type.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned v1 SSD account type.",
        SerializedName = @"paidBurstingEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? PaidBurstingEnabled { get; set; }
        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created
        /// under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth
        /// for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth for a share.",
        SerializedName = @"paidBurstingMaxBandwidthMibps",
        PossibleTypes = new [] { typeof(int) })]
        int? PaidBurstingMaxBandwidthMibp { get; set; }
        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1
        /// SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.",
        SerializedName = @"paidBurstingMaxIops",
        PossibleTypes = new [] { typeof(int) })]
        int? PaidBurstingMaxIop { get; set; }
        /// <summary>
        /// The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files
        /// Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed
        /// value for provisioned bandwidth.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned bandwidth.",
        SerializedName = @"provisionedBandwidthMibps",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisionedBandwidthMibp { get; set; }
        /// <summary>
        /// The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.
        /// Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.",
        SerializedName = @"provisionedIops",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisionedIop { get; set; }
        /// <summary>Remaining retention days for share that was soft deleted.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Remaining retention days for share that was soft deleted.",
        SerializedName = @"remainingRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? RemainingRetentionDay { get;  }
        /// <summary>The property is for NFS share only. The default is NoRootSquash.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The property is for NFS share only. The default is NoRootSquash.",
        SerializedName = @"rootSquash",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType? RootSquash { get; set; }
        /// <summary>
        /// The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large
        /// File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer
        /// to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.",
        SerializedName = @"shareQuota",
        PossibleTypes = new [] { typeof(int) })]
        int? ShareQuota { get; set; }
        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently
        /// resized files.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.",
        SerializedName = @"shareUsageBytes",
        PossibleTypes = new [] { typeof(long) })]
        long? ShareUsageByte { get;  }
        /// <summary>List of stored access policies specified on the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of stored access policies specified on the share.",
        SerializedName = @"signedIdentifiers",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISignedIdentifier) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISignedIdentifier[] SignedIdentifier { get; set; }
        /// <summary>
        /// Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Creation time of share snapshot returned in the response of list shares with expand param ""snapshots"".",
        SerializedName = @"snapshotTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SnapshotTime { get;  }
        /// <summary>The version of the share.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The version of the share.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get;  }

    }
    /// Properties of the file share, including Id, resource name, resource type, Etag.
    internal partial interface IFileShareInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal
    {
        /// <summary>
        /// Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage
        /// account can choose Premium.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.ShareAccessTier? AccessTier { get; set; }
        /// <summary>Indicates the last modification time for share access tier.</summary>
        global::System.DateTime? AccessTierChangeTime { get; set; }
        /// <summary>Indicates if there is a pending transition for access tier.</summary>
        string AccessTierStatus { get; set; }
        /// <summary>Indicates whether the share was deleted.</summary>
        bool? Deleted { get; set; }
        /// <summary>The deleted time if the share was deleted.</summary>
        global::System.DateTime? DeletedTime { get; set; }
        /// <summary>
        /// If eTag is provided in the response body, it may also be provided as a header per the normal etag convention. Entity tags
        /// are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section
        /// 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
        /// </summary>
        string ETag { get; set; }
        /// <summary>
        /// The authentication protocol that is used for the file share. Can only be specified when creating a share.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.EnabledProtocols? EnabledProtocol { get; set; }
        /// <summary>
        /// The calculated burst IOPS of the share. This property is only for file shares created under Files Provisioned v2 account
        /// type.
        /// </summary>
        int? IncludedBurstIop { get; set; }
        /// <summary>Returns the date and time the share was last modified.</summary>
        global::System.DateTime? LastModifiedTime { get; set; }
        /// <summary>
        /// Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseDuration? LeaseDuration { get; set; }
        /// <summary>Lease state of the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseState? LeaseState { get; set; }
        /// <summary>The lease status of the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.LeaseStatus? LeaseStatus { get; set; }
        /// <summary>
        /// The calculated maximum burst credits for the share. This property is only for file shares created under Files Provisioned
        /// v2 account type.
        /// </summary>
        long? MaxBurstCreditsForIop { get; set; }
        /// <summary>A name-value pair to associate with the share as metadata.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesMetadata Metadata { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned bandwidth downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        global::System.DateTime? NextAllowedProvisionedBandwidthDowngradeTime { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned IOPS downgrade time for the share. This property is only for file shares created
        /// under Files Provisioned v2 account type.
        /// </summary>
        global::System.DateTime? NextAllowedProvisionedIopsDowngradeTime { get; set; }
        /// <summary>
        /// Returns the next allowed provisioned storage size downgrade time for the share. This property is only for file shares
        /// created under Files Provisioned v1 SSD and Files Provisioned v2 account type
        /// </summary>
        global::System.DateTime? NextAllowedQuotaDowngradeTime { get; set; }
        /// <summary>File Share Paid Bursting properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileSharePropertiesFileSharePaidBursting PaidBursting { get; set; }
        /// <summary>
        /// Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned
        /// v1 SSD account type.
        /// </summary>
        bool? PaidBurstingEnabled { get; set; }
        /// <summary>
        /// The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created
        /// under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth
        /// for a share.
        /// </summary>
        int? PaidBurstingMaxBandwidthMibp { get; set; }
        /// <summary>
        /// The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1
        /// SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share.
        /// </summary>
        int? PaidBurstingMaxIop { get; set; }
        /// <summary>Properties of the file share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IFileShareProperties Property { get; set; }
        /// <summary>
        /// The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files
        /// Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed
        /// value for provisioned bandwidth.
        /// </summary>
        int? ProvisionedBandwidthMibp { get; set; }
        /// <summary>
        /// The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type.
        /// Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS.
        /// </summary>
        int? ProvisionedIop { get; set; }
        /// <summary>Remaining retention days for share that was soft deleted.</summary>
        int? RemainingRetentionDay { get; set; }
        /// <summary>The property is for NFS share only. The default is NoRootSquash.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.RootSquashType? RootSquash { get; set; }
        /// <summary>
        /// The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large
        /// File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer
        /// to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size.
        /// </summary>
        int? ShareQuota { get; set; }
        /// <summary>
        /// The approximate size of the data stored on the share. Note that this value may not include all recently created or recently
        /// resized files.
        /// </summary>
        long? ShareUsageByte { get; set; }
        /// <summary>List of stored access policies specified on the share.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISignedIdentifier[] SignedIdentifier { get; set; }
        /// <summary>
        /// Creation time of share snapshot returned in the response of list shares with expand param "snapshots".
        /// </summary>
        global::System.DateTime? SnapshotTime { get; set; }
        /// <summary>The version of the share.</summary>
        string Version { get; set; }

    }
}