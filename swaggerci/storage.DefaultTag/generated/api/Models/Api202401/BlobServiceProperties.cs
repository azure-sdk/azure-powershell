// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Extensions;

    /// <summary>The properties of a storage account’s Blob service.</summary>
    public partial class BlobServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServiceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.Resource();

        /// <summary>Deprecated in favor of isVersioningEnabled property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? AutomaticSnapshotPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).AutomaticSnapshotPolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).AutomaticSnapshotPolicyEnabled = value ?? default(bool); }

        /// <summary>Indicates whether change feed event logging is enabled for the Blob service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ChangeFeedEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ChangeFeedEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ChangeFeedEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years).
        /// A null value indicates an infinite retention of the change feed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ChangeFeedRetentionInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ChangeFeedRetentionInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ChangeFeedRetentionInDay = value ?? default(int); }

        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ContainerDeleteRetentionPolicyAllowPermanentDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicyAllowPermanentDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicyAllowPermanentDelete = value ?? default(bool); }

        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? ContainerDeleteRetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicyDay = value ?? default(int); }

        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? ContainerDeleteRetentionPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicyEnabled = value ?? default(bool); }

        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ICorsRule[] CorCorsRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).CorCorsRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).CorCorsRule = value ?? null /* arrayOf */; }

        /// <summary>
        /// DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version
        /// is not specified. Possible values include version 2008-10-27 and all more recent versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string DefaultServiceVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DefaultServiceVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DefaultServiceVersion = value ?? null; }

        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? DeleteRetentionPolicyAllowPermanentDelete { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicyAllowPermanentDelete; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicyAllowPermanentDelete = value ?? default(bool); }

        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? DeleteRetentionPolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicyDay = value ?? default(int); }

        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? DeleteRetentionPolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicyEnabled = value ?? default(bool); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Id; }

        /// <summary>Versioning is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? IsVersioningEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).IsVersioningEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).IsVersioningEnabled = value ?? default(bool); }

        /// <summary>
        /// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public string[] LastAccessTimeTrackingPolicyBlobType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyBlobType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyBlobType = value ?? null /* arrayOf */; }

        /// <summary>When set to true last access time based tracking is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? LastAccessTimeTrackingPolicyEnable { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyEnable; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyEnable = value ?? default(bool); }

        /// <summary>
        /// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name? LastAccessTimeTrackingPolicyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyName = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name)""); }

        /// <summary>
        /// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This
        /// field is currently read only with value as 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? LastAccessTimeTrackingPolicyTrackingGranularityInDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyTrackingGranularityInDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicyTrackingGranularityInDay = value ?? default(int); }

        /// <summary>Internal Acessors for ChangeFeed</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IChangeFeed Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.ChangeFeed { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ChangeFeed; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ChangeFeed = value; }

        /// <summary>Internal Acessors for ContainerDeleteRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IDeleteRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.ContainerDeleteRetentionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).ContainerDeleteRetentionPolicy = value; }

        /// <summary>Internal Acessors for Cor</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ICorsRules Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.Cor { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).Cor; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).Cor = value; }

        /// <summary>Internal Acessors for DeleteRetentionPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IDeleteRetentionPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.DeleteRetentionPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).DeleteRetentionPolicy = value; }

        /// <summary>Internal Acessors for LastAccessTimeTrackingPolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ILastAccessTimeTrackingPolicy Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.LastAccessTimeTrackingPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).LastAccessTimeTrackingPolicy = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.BlobServicePropertiesAutoGenerated()); set { {_property = value;} } }

        /// <summary>Internal Acessors for RestorePolicy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IRestorePolicyProperties Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.RestorePolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicy = value; }

        /// <summary>Internal Acessors for RestorePolicyLastEnabledTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.RestorePolicyLastEnabledTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyLastEnabledTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyLastEnabledTime = value; }

        /// <summary>Internal Acessors for RestorePolicyMinRestoreTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.RestorePolicyMinRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyMinRestoreTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyMinRestoreTime = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISku Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for SkuTier</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuTier? Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesInternal.SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISkuInternal)Sku).Tier = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGenerated _property;

        /// <summary>The properties of a storage account’s Blob service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGenerated Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.BlobServicePropertiesAutoGenerated()); set => this._property = value; }

        /// <summary>
        /// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public int? RestorePolicyDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyDay = value ?? default(int); }

        /// <summary>Blob restore is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public bool? RestorePolicyEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyEnabled = value ?? default(bool); }

        /// <summary>Deprecated in favor of minRestoreTime property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? RestorePolicyLastEnabledTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyLastEnabledTime; }

        /// <summary>Returns the minimum date and time that the restore can be started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public global::System.DateTime? RestorePolicyMinRestoreTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGeneratedInternal)Property).RestorePolicyMinRestoreTime; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISku _sku;

        /// <summary>Sku name and tier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.Sku()); }

        /// <summary>
        /// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuName? SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISkuInternal)Sku).Name = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuName)""); }

        /// <summary>The SKU tier. This is based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISkuInternal)Sku).Tier; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Origin(Microsoft.Azure.PowerShell.Cmdlets.Storage.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="BlobServiceProperties" /> instance.</summary>
        public BlobServiceProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// The properties of a storage account’s Blob service.
    public partial interface IBlobServiceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResource
    {
        /// <summary>Deprecated in favor of isVersioningEnabled property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Deprecated in favor of isVersioningEnabled property.",
        SerializedName = @"automaticSnapshotPolicyEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutomaticSnapshotPolicyEnabled { get; set; }
        /// <summary>Indicates whether change feed event logging is enabled for the Blob service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether change feed event logging is enabled for the Blob service.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ChangeFeedEnabled { get; set; }
        /// <summary>
        /// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years).
        /// A null value indicates an infinite retention of the change feed.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.",
        SerializedName = @"retentionInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? ChangeFeedRetentionInDay { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.",
        SerializedName = @"allowPermanentDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerDeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? ContainerDeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether DeleteRetentionPolicy is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ContainerDeleteRetentionPolicyEnabled { get; set; }
        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The List of CORS rules. You can include up to five CorsRule elements in the request.",
        SerializedName = @"corsRules",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ICorsRule) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ICorsRule[] CorCorsRule { get; set; }
        /// <summary>
        /// DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version
        /// is not specified. Possible values include version 2008-10-27 and all more recent versions.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
        SerializedName = @"defaultServiceVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DefaultServiceVersion { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.",
        SerializedName = @"allowPermanentDelete",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? DeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether DeleteRetentionPolicy is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DeleteRetentionPolicyEnabled { get; set; }
        /// <summary>Versioning is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Versioning is enabled if set to true.",
        SerializedName = @"isVersioningEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsVersioningEnabled { get; set; }
        /// <summary>
        /// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only",
        SerializedName = @"blobType",
        PossibleTypes = new [] { typeof(string) })]
        string[] LastAccessTimeTrackingPolicyBlobType { get; set; }
        /// <summary>When set to true last access time based tracking is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"When set to true last access time based tracking is enabled.",
        SerializedName = @"enable",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LastAccessTimeTrackingPolicyEnable { get; set; }
        /// <summary>
        /// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the policy. The valid value is AccessTimeTracking. This field is currently read only",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name? LastAccessTimeTrackingPolicyName { get; set; }
        /// <summary>
        /// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This
        /// field is currently read only with value as 1
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1",
        SerializedName = @"trackingGranularityInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? LastAccessTimeTrackingPolicyTrackingGranularityInDay { get; set; }
        /// <summary>
        /// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.",
        SerializedName = @"days",
        PossibleTypes = new [] { typeof(int) })]
        int? RestorePolicyDay { get; set; }
        /// <summary>Blob restore is enabled if set to true.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Blob restore is enabled if set to true.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RestorePolicyEnabled { get; set; }
        /// <summary>Deprecated in favor of minRestoreTime property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Deprecated in favor of minRestoreTime property.",
        SerializedName = @"lastEnabledTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestorePolicyLastEnabledTime { get;  }
        /// <summary>Returns the minimum date and time that the restore can be started.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Returns the minimum date and time that the restore can be started.",
        SerializedName = @"minRestoreTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RestorePolicyMinRestoreTime { get;  }
        /// <summary>
        /// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuName) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuName? SkuName { get; set; }
        /// <summary>The SKU tier. This is based on the SKU name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Storage.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The SKU tier. This is based on the SKU name.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuTier? SkuTier { get;  }

    }
    /// The properties of a storage account’s Blob service.
    internal partial interface IBlobServicePropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api30.IResourceInternal
    {
        /// <summary>Deprecated in favor of isVersioningEnabled property.</summary>
        bool? AutomaticSnapshotPolicyEnabled { get; set; }
        /// <summary>The blob service properties for change feed events.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IChangeFeed ChangeFeed { get; set; }
        /// <summary>Indicates whether change feed event logging is enabled for the Blob service.</summary>
        bool? ChangeFeedEnabled { get; set; }
        /// <summary>
        /// Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years).
        /// A null value indicates an infinite retention of the change feed.
        /// </summary>
        int? ChangeFeedRetentionInDay { get; set; }
        /// <summary>The blob service properties for container soft delete.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IDeleteRetentionPolicy ContainerDeleteRetentionPolicy { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        bool? ContainerDeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        int? ContainerDeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        bool? ContainerDeleteRetentionPolicyEnabled { get; set; }
        /// <summary>
        /// Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule
        /// elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ICorsRules Cor { get; set; }
        /// <summary>
        /// The List of CORS rules. You can include up to five CorsRule elements in the request.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ICorsRule[] CorCorsRule { get; set; }
        /// <summary>
        /// DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version
        /// is not specified. Possible values include version 2008-10-27 and all more recent versions.
        /// </summary>
        string DefaultServiceVersion { get; set; }
        /// <summary>The blob service properties for blob soft delete.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IDeleteRetentionPolicy DeleteRetentionPolicy { get; set; }
        /// <summary>
        /// This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be
        /// used blob restore policy. This property only applies to blob service and does not apply to containers or file share.
        /// </summary>
        bool? DeleteRetentionPolicyAllowPermanentDelete { get; set; }
        /// <summary>
        /// Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum
        /// value can be 365.
        /// </summary>
        int? DeleteRetentionPolicyDay { get; set; }
        /// <summary>Indicates whether DeleteRetentionPolicy is enabled.</summary>
        bool? DeleteRetentionPolicyEnabled { get; set; }
        /// <summary>Versioning is enabled if set to true.</summary>
        bool? IsVersioningEnabled { get; set; }
        /// <summary>The blob service property to configure last access time based tracking policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ILastAccessTimeTrackingPolicy LastAccessTimeTrackingPolicy { get; set; }
        /// <summary>
        /// An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
        /// </summary>
        string[] LastAccessTimeTrackingPolicyBlobType { get; set; }
        /// <summary>When set to true last access time based tracking is enabled.</summary>
        bool? LastAccessTimeTrackingPolicyEnable { get; set; }
        /// <summary>
        /// Name of the policy. The valid value is AccessTimeTracking. This field is currently read only
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.Name? LastAccessTimeTrackingPolicyName { get; set; }
        /// <summary>
        /// The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This
        /// field is currently read only with value as 1
        /// </summary>
        int? LastAccessTimeTrackingPolicyTrackingGranularityInDay { get; set; }
        /// <summary>The properties of a storage account’s Blob service.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IBlobServicePropertiesAutoGenerated Property { get; set; }
        /// <summary>The blob service properties for blob restore policy.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.IRestorePolicyProperties RestorePolicy { get; set; }
        /// <summary>
        /// how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
        /// </summary>
        int? RestorePolicyDay { get; set; }
        /// <summary>Blob restore is enabled if set to true.</summary>
        bool? RestorePolicyEnabled { get; set; }
        /// <summary>Deprecated in favor of minRestoreTime property.</summary>
        global::System.DateTime? RestorePolicyLastEnabledTime { get; set; }
        /// <summary>Returns the minimum date and time that the restore can be started.</summary>
        global::System.DateTime? RestorePolicyMinRestoreTime { get; set; }
        /// <summary>Sku name and tier.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Models.Api202401.ISku Sku { get; set; }
        /// <summary>
        /// The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuName? SkuName { get; set; }
        /// <summary>The SKU tier. This is based on the SKU name.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Storage.Support.SkuTier? SkuTier { get; set; }

    }
}