// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Extensions;

    /// <summary>The properties of a server.</summary>
    public partial class ServerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdministratorLogin" /> property.</summary>
        private string _administratorLogin;

        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for
        /// creation).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string AdministratorLogin { get => this._administratorLogin; set => this._administratorLogin = value; }

        /// <summary>Backing field for <see cref="AdministratorLoginPassword" /> property.</summary>
        private System.Security.SecureString _administratorLoginPassword;

        /// <summary>The administrator login password (required for server creation).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public System.Security.SecureString AdministratorLoginPassword { get => this._administratorLoginPassword; set => this._administratorLoginPassword = value; }

        /// <summary>Backing field for <see cref="AuthConfig" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfig _authConfig;

        /// <summary>AuthConfig properties of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfig AuthConfig { get => (this._authConfig = this._authConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.AuthConfig()); set => this._authConfig = value; }

        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfigInternal)AuthConfig).ActiveDirectoryAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfigInternal)AuthConfig).ActiveDirectoryAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum)""); }

        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfigInternal)AuthConfig).PasswordAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfigInternal)AuthConfig).PasswordAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum)""); }

        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string AuthConfigTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfigInternal)AuthConfig).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfigInternal)AuthConfig).TenantId = value ?? null; }

        /// <summary>Backing field for <see cref="AvailabilityZone" /> property.</summary>
        private string _availabilityZone;

        /// <summary>availability zone information of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string AvailabilityZone { get => this._availabilityZone; set => this._availabilityZone = value; }

        /// <summary>Backing field for <see cref="Backup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackup _backup;

        /// <summary>Backup properties of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackup Backup { get => (this._backup = this._backup ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Backup()); set => this._backup = value; }

        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).EarliestRestoreDate; }

        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).GeoRedundantBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).GeoRedundantBackup = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum)""); }

        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? BackupRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).RetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).RetentionDay = value ?? default(int); }

        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? Capacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).Capacity; }

        /// <summary>Backing field for <see cref="CreateMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateMode? _createMode;

        /// <summary>The mode to create a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateMode? CreateMode { get => this._createMode; set => this._createMode = value; }

        /// <summary>Backing field for <see cref="DataEncryption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryption _dataEncryption;

        /// <summary>Data encryption properties of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryption DataEncryption { get => (this._dataEncryption = this._dataEncryption ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.DataEncryption()); set => this._dataEncryption = value; }

        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).GeoBackupEncryptionKeyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).GeoBackupEncryptionKeyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum)""); }

        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).GeoBackupKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).GeoBackupKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).GeoBackupUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).GeoBackupUserAssignedIdentityId = value ?? null; }

        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).PrimaryEncryptionKeyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).PrimaryEncryptionKeyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum)""); }

        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).PrimaryKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).PrimaryKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).PrimaryUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).PrimaryUserAssignedIdentityId = value ?? null; }

        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryptionInternal)DataEncryption).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType)""); }

        /// <summary>Backing field for <see cref="FullyQualifiedDomainName" /> property.</summary>
        private string _fullyQualifiedDomainName;

        /// <summary>The fully qualified domain name of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string FullyQualifiedDomainName { get => this._fullyQualifiedDomainName; }

        /// <summary>Backing field for <see cref="HighAvailability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailability _highAvailability;

        /// <summary>High availability properties of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailability HighAvailability { get => (this._highAvailability = this._highAvailability ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.HighAvailability()); set => this._highAvailability = value; }

        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode)""); }

        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string HighAvailabilityStandbyAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).StandbyAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).StandbyAvailabilityZone = value ?? null; }

        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).State; }

        /// <summary>Backing field for <see cref="MaintenanceWindow" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindow _maintenanceWindow;

        /// <summary>Maintenance window properties of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindow MaintenanceWindow { get => (this._maintenanceWindow = this._maintenanceWindow ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.MaintenanceWindow()); set => this._maintenanceWindow = value; }

        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string MaintenanceWindowCustomWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).CustomWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).CustomWindow = value ?? null; }

        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).DayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).DayOfWeek = value ?? default(int); }

        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).StartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).StartHour = value ?? default(int); }

        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).StartMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindowInternal)MaintenanceWindow).StartMinute = value ?? default(int); }

        /// <summary>Internal Acessors for AuthConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfig Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.AuthConfig { get => (this._authConfig = this._authConfig ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.AuthConfig()); set { {_authConfig = value;} } }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackup Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.Backup { get => (this._backup = this._backup ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Backup()); set { {_backup = value;} } }

        /// <summary>Internal Acessors for BackupEarliestRestoreDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).EarliestRestoreDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackupInternal)Backup).EarliestRestoreDate = value; }

        /// <summary>Internal Acessors for Capacity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.Capacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).Capacity = value; }

        /// <summary>Internal Acessors for DataEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryption Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.DataEncryption { get => (this._dataEncryption = this._dataEncryption ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.DataEncryption()); set { {_dataEncryption = value;} } }

        /// <summary>Internal Acessors for FullyQualifiedDomainName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.FullyQualifiedDomainName { get => this._fullyQualifiedDomainName; set { {_fullyQualifiedDomainName = value;} } }

        /// <summary>Internal Acessors for HighAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailability Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.HighAvailability { get => (this._highAvailability = this._highAvailability ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.HighAvailability()); set { {_highAvailability = value;} } }

        /// <summary>Internal Acessors for HighAvailabilityState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailabilityInternal)HighAvailability).State = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.MaintenanceWindow { get => (this._maintenanceWindow = this._maintenanceWindow ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.MaintenanceWindow()); set { {_maintenanceWindow = value;} } }

        /// <summary>Internal Acessors for MinorVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.MinorVersion { get => this._minorVersion; set { {_minorVersion = value;} } }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetwork Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.Network { get => (this._network = this._network ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Network()); set { {_network = value;} } }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api50.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.PrivateEndpointConnection { get => this._privateEndpointConnection; set { {_privateEndpointConnection = value;} } }

        /// <summary>Internal Acessors for Replica</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplica Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.Replica { get => (this._replica = this._replica ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Replica()); set { {_replica = value;} } }

        /// <summary>Internal Acessors for ReplicaCapacity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.ReplicaCapacity { get => this._replicaCapacity; set { {_replicaCapacity = value;} } }

        /// <summary>Internal Acessors for ReplicaReplicationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).TionState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).TionState = value; }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.State { get => this._state; set { {_state = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorage Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IServerPropertiesInternal.Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Storage()); set { {_storage = value;} } }

        /// <summary>Backing field for <see cref="MinorVersion" /> property.</summary>
        private string _minorVersion;

        /// <summary>The minor version of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string MinorVersion { get => this._minorVersion; }

        /// <summary>Backing field for <see cref="Network" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetwork _network;

        /// <summary>
        /// Network properties of a server. This Network property is required to be passed only in case you want the server to be
        /// Private access server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetwork Network { get => (this._network = this._network ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Network()); set => this._network = value; }

        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string NetworkDelegatedSubnetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetworkInternal)Network).DelegatedSubnetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetworkInternal)Network).DelegatedSubnetResourceId = value ?? null; }

        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string NetworkPrivateDnsZoneArmResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetworkInternal)Network).PrivateDnsZoneArmResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetworkInternal)Network).PrivateDnsZoneArmResourceId = value ?? null; }

        /// <summary>public network access is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetworkInternal)Network).PublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetworkInternal)Network).PublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState)""); }

        /// <summary>Backing field for <see cref="PointInTimeUtc" /> property.</summary>
        private global::System.DateTime? _pointInTimeUtc;

        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is
        /// 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public global::System.DateTime? PointInTimeUtc { get => this._pointInTimeUtc; set => this._pointInTimeUtc = value; }

        /// <summary>Backing field for <see cref="PrivateEndpointConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api50.IPrivateEndpointConnection[] _privateEndpointConnection;

        /// <summary>List of private endpoint connections associated with the specified resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get => this._privateEndpointConnection; }

        /// <summary>Backing field for <see cref="Replica" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplica _replica;

        /// <summary>
        /// Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a
        /// server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplica Replica { get => (this._replica = this._replica ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Replica()); set => this._replica = value; }

        /// <summary>Backing field for <see cref="ReplicaCapacity" /> property.</summary>
        private int? _replicaCapacity;

        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public int? ReplicaCapacity { get => this._replicaCapacity; }

        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).PromoteMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).PromoteMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode)""); }

        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption? ReplicaPromoteOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).PromoteOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).PromoteOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption)""); }

        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).TionState; }

        /// <summary>Used to indicate role of the server in replication set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicaRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplicaInternal)Replica).Role = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole)""); }

        /// <summary>Backing field for <see cref="ReplicationRole" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? _replicationRole;

        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get => this._replicationRole; set => this._replicationRole = value; }

        /// <summary>Backing field for <see cref="SourceServerResourceId" /> property.</summary>
        private string _sourceServerResourceId;

        /// <summary>
        /// The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'
        /// or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string SourceServerResourceId { get => this._sourceServerResourceId; set => this._sourceServerResourceId = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerState? _state;

        /// <summary>A state of a server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerState? State { get => this._state; }

        /// <summary>Backing field for <see cref="Storage" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorage _storage;

        /// <summary>Storage properties of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorage Storage { get => (this._storage = this._storage ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.Storage()); set => this._storage = value; }

        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow? StorageAutoGrow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).AutoGrow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).AutoGrow = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow)""); }

        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Iop; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Iop = value ?? default(int); }

        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).SizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).SizeGb = value ?? default(int); }

        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Throughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Throughput = value ?? default(int); }

        /// <summary>Name of storage tier for IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers? StorageTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers)""); }

        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType? StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorageInternal)Storage).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType)""); }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? _version;

        /// <summary>PostgreSQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="ServerProperties" /> instance.</summary>
        public ServerProperties()
        {

        }
    }
    /// The properties of a server.
    public partial interface IServerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for
        /// creation).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get; set; }
        /// <summary>The administrator login password (required for server creation).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator login password (required for server creation).",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Azure Active Directory authentication is enabled.",
        SerializedName = @"activeDirectoryAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Password authentication is enabled.",
        SerializedName = @"passwordAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of the server.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthConfigTenantId { get; set; }
        /// <summary>availability zone information of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"availability zone information of the server.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The earliest restore point time (ISO8601 format) for server.",
        SerializedName = @"earliestRestoreDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupEarliestRestoreDate { get;  }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether Geo-Redundant backup is enabled on the server.",
        SerializedName = @"geoRedundantBackup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup retention days for the server.",
        SerializedName = @"backupRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? BackupRetentionDay { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Replicas allowed for a server.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? Capacity { get;  }
        /// <summary>The mode to create a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to create a new PostgreSQL server.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geo-backup encryption key status for Data encryption enabled server.",
        SerializedName = @"geoBackupEncryptionKeyStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key in keyvault for data encryption for geo-backup of server.",
        SerializedName = @"geoBackupKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.",
        SerializedName = @"geoBackupUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary encryption key status for Data encryption enabled server.",
        SerializedName = @"primaryEncryptionKeyStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key in keyvault for data encryption of the primary server.",
        SerializedName = @"primaryKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption of the primary server.",
        SerializedName = @"primaryUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data encryption type to depict if it is System Managed vs Azure Key vault.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>The fully qualified domain name of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified domain name of a server.",
        SerializedName = @"fullyQualifiedDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string FullyQualifiedDomainName { get;  }
        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HA mode for the server.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"availability zone information of the standby.",
        SerializedName = @"standbyAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a HA server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get;  }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"indicates whether custom window is enabled or disabled",
        SerializedName = @"customWindow",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"day of week for maintenance window",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start hour for maintenance window",
        SerializedName = @"startHour",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start minute for maintenance window",
        SerializedName = @"startMinute",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>The minor version of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The minor version of the server.",
        SerializedName = @"minorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MinorVersion { get;  }
        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.",
        SerializedName = @"delegatedSubnetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.",
        SerializedName = @"privateDnsZoneArmResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkPrivateDnsZoneArmResourceId { get; set; }
        /// <summary>public network access is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"public network access is enabled or not",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get; set; }
        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is
        /// 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.",
        SerializedName = @"pointInTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PointInTimeUtc { get; set; }
        /// <summary>List of private endpoint connections associated with the specified resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections associated with the specified resource.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api50.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Replicas allowed for a server.",
        SerializedName = @"replicaCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCapacity { get;  }
        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the promote mode for a replica server. This is a write only property.",
        SerializedName = @"promoteMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get; set; }
        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the promote options for a replica server. This is a write only property.",
        SerializedName = @"promoteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption? ReplicaPromoteOption { get; set; }
        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring",
        SerializedName = @"replicationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? ReplicaReplicationState { get;  }
        /// <summary>Used to indicate role of the server in replication set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to indicate role of the server in replication set.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replication role of the server",
        SerializedName = @"replicationRole",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>
        /// The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'
        /// or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server",
        SerializedName = @"sourceServerResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServerResourceId { get; set; }
        /// <summary>A state of a server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerState? State { get;  }
        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable / disable Storage Auto grow for flexible server.",
        SerializedName = @"autoGrow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow? StorageAutoGrow { get; set; }
        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageIop { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max storage allowed for a server.",
        SerializedName = @"storageSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeGb { get; set; }
        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageThroughput { get; set; }
        /// <summary>Name of storage tier for IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of storage tier for IOPS.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers? StorageTier { get; set; }
        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType? StorageType { get; set; }
        /// <summary>PostgreSQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PostgreSQL Server version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get; set; }

    }
    /// The properties of a server.
    internal partial interface IServerPropertiesInternal

    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for
        /// creation).
        /// </summary>
        string AdministratorLogin { get; set; }
        /// <summary>The administrator login password (required for server creation).</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>AuthConfig properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IAuthConfig AuthConfig { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        string AuthConfigTenantId { get; set; }
        /// <summary>availability zone information of the server.</summary>
        string AvailabilityZone { get; set; }
        /// <summary>Backup properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IBackup Backup { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        global::System.DateTime? BackupEarliestRestoreDate { get; set; }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        int? BackupRetentionDay { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        int? Capacity { get; set; }
        /// <summary>The mode to create a new PostgreSQL server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Data encryption properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IDataEncryption DataEncryption { get; set; }
        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>The fully qualified domain name of a server.</summary>
        string FullyQualifiedDomainName { get; set; }
        /// <summary>High availability properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IHighAvailability HighAvailability { get; set; }
        /// <summary>The HA mode for the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get; set; }
        /// <summary>Maintenance window properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>The minor version of the server.</summary>
        string MinorVersion { get; set; }
        /// <summary>
        /// Network properties of a server. This Network property is required to be passed only in case you want the server to be
        /// Private access server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.INetwork Network { get; set; }
        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        string NetworkPrivateDnsZoneArmResourceId { get; set; }
        /// <summary>public network access is enabled or not</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get; set; }
        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is
        /// 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
        /// </summary>
        global::System.DateTime? PointInTimeUtc { get; set; }
        /// <summary>List of private endpoint connections associated with the specified resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>
        /// Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a
        /// server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IReplica Replica { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        int? ReplicaCapacity { get; set; }
        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get; set; }
        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption? ReplicaPromoteOption { get; set; }
        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? ReplicaReplicationState { get; set; }
        /// <summary>Used to indicate role of the server in replication set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>Replication role of the server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>
        /// The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'
        /// or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
        /// </summary>
        string SourceServerResourceId { get; set; }
        /// <summary>A state of a server that is visible to user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerState? State { get; set; }
        /// <summary>Storage properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20230601Preview.IStorage Storage { get; set; }
        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow? StorageAutoGrow { get; set; }
        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        int? StorageIop { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        int? StorageSizeGb { get; set; }
        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        int? StorageThroughput { get; set; }
        /// <summary>Name of storage tier for IOPS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers? StorageTier { get; set; }
        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType? StorageType { get; set; }
        /// <summary>PostgreSQL Server version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get; set; }

    }
}