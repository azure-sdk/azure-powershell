// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Extensions;

    /// <summary>Sku capability</summary>
    public partial class ServerSkuCapability :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapability,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBase"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBase __capabilityBase = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.CapabilityBase();

        /// <summary>Internal Acessors for Reason</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal.Reason { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal)__capabilityBase).Reason; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal)__capabilityBase).Reason = value; }

        /// <summary>Internal Acessors for Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CapabilityStatus? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal.Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal)__capabilityBase).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal)__capabilityBase).Status = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for SupportedHaMode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HaMode[] Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal.SupportedHaMode { get => this._supportedHaMode; set { {_supportedHaMode = value;} } }

        /// <summary>Internal Acessors for SupportedIop</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal.SupportedIop { get => this._supportedIop; set { {_supportedIop = value;} } }

        /// <summary>Internal Acessors for SupportedMemoryPerVcoreMb</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal.SupportedMemoryPerVcoreMb { get => this._supportedMemoryPerVcoreMb; set { {_supportedMemoryPerVcoreMb = value;} } }

        /// <summary>Internal Acessors for SupportedZone</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal.SupportedZone { get => this._supportedZone; set { {_supportedZone = value;} } }

        /// <summary>Internal Acessors for VCore</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240301Preview.IServerSkuCapabilityInternal.VCore { get => this._vCore; set { {_vCore = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>The reason for the capability not being available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inherited)]
        public string Reason { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal)__capabilityBase).Reason; }

        /// <summary>The status of the capability.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CapabilityStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal)__capabilityBase).Status; }

        /// <summary>Backing field for <see cref="SupportedHaMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HaMode[] _supportedHaMode;

        /// <summary>Supported high availability mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HaMode[] SupportedHaMode { get => this._supportedHaMode; }

        /// <summary>Backing field for <see cref="SupportedIop" /> property.</summary>
        private int? _supportedIop;

        /// <summary>Supported IOPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public int? SupportedIop { get => this._supportedIop; }

        /// <summary>Backing field for <see cref="SupportedMemoryPerVcoreMb" /> property.</summary>
        private long? _supportedMemoryPerVcoreMb;

        /// <summary>Supported memory per vCore in MB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public long? SupportedMemoryPerVcoreMb { get => this._supportedMemoryPerVcoreMb; }

        /// <summary>Backing field for <see cref="SupportedZone" /> property.</summary>
        private string[] _supportedZone;

        /// <summary>List of supported Availability Zones. E.g. "1", "2", "3"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public string[] SupportedZone { get => this._supportedZone; }

        /// <summary>Backing field for <see cref="VCore" /> property.</summary>
        private int? _vCore;

        /// <summary>Supported vCores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public int? VCore { get => this._vCore; }

        /// <summary>Creates an new <see cref="ServerSkuCapability" /> instance.</summary>
        public ServerSkuCapability()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__capabilityBase), __capabilityBase);
            await eventListener.AssertObjectIsValid(nameof(__capabilityBase), __capabilityBase);
        }
    }
    /// Sku capability
    public partial interface IServerSkuCapability :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBase
    {
        /// <summary>Sku name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sku name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>Supported high availability mode</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Supported high availability mode",
        SerializedName = @"supportedHaMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HaMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HaMode[] SupportedHaMode { get;  }
        /// <summary>Supported IOPS</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Supported IOPS",
        SerializedName = @"supportedIops",
        PossibleTypes = new [] { typeof(int) })]
        int? SupportedIop { get;  }
        /// <summary>Supported memory per vCore in MB</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Supported memory per vCore in MB",
        SerializedName = @"supportedMemoryPerVcoreMb",
        PossibleTypes = new [] { typeof(long) })]
        long? SupportedMemoryPerVcoreMb { get;  }
        /// <summary>List of supported Availability Zones. E.g. "1", "2", "3"</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of supported Availability Zones. E.g. ""1"", ""2"", ""3""",
        SerializedName = @"supportedZones",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedZone { get;  }
        /// <summary>Supported vCores</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Supported vCores",
        SerializedName = @"vCores",
        PossibleTypes = new [] { typeof(int) })]
        int? VCore { get;  }

    }
    /// Sku capability
    internal partial interface IServerSkuCapabilityInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api10.ICapabilityBaseInternal
    {
        /// <summary>Sku name</summary>
        string Name { get; set; }
        /// <summary>Supported high availability mode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HaMode[] SupportedHaMode { get; set; }
        /// <summary>Supported IOPS</summary>
        int? SupportedIop { get; set; }
        /// <summary>Supported memory per vCore in MB</summary>
        long? SupportedMemoryPerVcoreMb { get; set; }
        /// <summary>List of supported Availability Zones. E.g. "1", "2", "3"</summary>
        string[] SupportedZone { get; set; }
        /// <summary>Supported vCores</summary>
        int? VCore { get; set; }

    }
}