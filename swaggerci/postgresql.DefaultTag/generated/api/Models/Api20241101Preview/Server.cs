// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Extensions;

    /// <summary>Represents a server.</summary>
    public partial class Server :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServer,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResource __trackedResource = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.TrackedResource();

        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for
        /// creation).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string AdministratorLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AdministratorLogin; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AdministratorLogin = value ?? null; }

        /// <summary>The administrator login password (required for server creation).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorLoginPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AdministratorLoginPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AdministratorLoginPassword = value ?? null; }

        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfigActiveDirectoryAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfigActiveDirectoryAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum)""); }

        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfigPasswordAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfigPasswordAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum)""); }

        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string AuthConfigTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfigTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfigTenantId = value ?? null; }

        /// <summary>availability zone information of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string AvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AvailabilityZone = value ?? null; }

        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupEarliestRestoreDate; }

        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupGeoRedundantBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupGeoRedundantBackup = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum)""); }

        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? BackupRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupRetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupRetentionDay = value ?? default(int); }

        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? Capacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Capacity; }

        /// <summary>The node count for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? ClusterSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ClusterSize; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ClusterSize = value ?? default(int); }

        /// <summary>The mode to create a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode? CreateMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).CreateMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).CreateMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode)""); }

        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionGeoBackupEncryptionKeyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionGeoBackupEncryptionKeyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum)""); }

        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionGeoBackupKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionGeoBackupKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionGeoBackupUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionGeoBackupUserAssignedIdentityId = value ?? null; }

        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionPrimaryEncryptionKeyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionPrimaryEncryptionKeyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum)""); }

        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionPrimaryKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionPrimaryKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId = value ?? null; }

        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType? DataEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType)""); }

        /// <summary>The fully qualified domain name of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string FullyQualifiedDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).FullyQualifiedDomainName; }

        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode? HighAvailabilityMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode)""); }

        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string HighAvailabilityStandbyAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityStandbyAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityStandbyAvailabilityZone = value ?? null; }

        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState? HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityState; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Id; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentity _identity;

        /// <summary>Describes the identity of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.UserAssignedIdentity()); set => this._identity = value; }

        /// <summary>the identity principal Id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string IdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).PrincipalId = value ?? null; }

        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).TenantId; }

        /// <summary>the types of identities associated with this resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.IdentityType)""); }

        /// <summary>represents user assigned identities map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).UserAssignedIdentities; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).UserAssignedIdentities = value ?? null /* model class */; }

        /// <summary>The geo-location where the resource lives</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResourceInternal)__trackedResource).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResourceInternal)__trackedResource).Location = value ; }

        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string MaintenanceWindowCustomWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowCustomWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowCustomWindow = value ?? null; }

        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowDayOfWeek = value ?? default(int); }

        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowStartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowStartHour = value ?? default(int); }

        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowStartMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindowStartMinute = value ?? default(int); }

        /// <summary>Internal Acessors for AuthConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IAuthConfig Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.AuthConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).AuthConfig = value; }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IBackup Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Backup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Backup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Backup = value; }

        /// <summary>Internal Acessors for BackupEarliestRestoreDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupEarliestRestoreDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).BackupEarliestRestoreDate = value; }

        /// <summary>Internal Acessors for Capacity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Capacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Capacity = value; }

        /// <summary>Internal Acessors for Cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ICluster Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Cluster { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Cluster; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Cluster = value; }

        /// <summary>Internal Acessors for DataEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IDataEncryption Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.DataEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).DataEncryption = value; }

        /// <summary>Internal Acessors for FullyQualifiedDomainName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.FullyQualifiedDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).FullyQualifiedDomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).FullyQualifiedDomainName = value; }

        /// <summary>Internal Acessors for HighAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IHighAvailability Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.HighAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailability; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailability = value; }

        /// <summary>Internal Acessors for HighAvailabilityState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).HighAvailabilityState = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentity Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.UserAssignedIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.MaintenanceWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for MinorVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.MinorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MinorVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MinorVersion = value; }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.INetwork Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Network { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Network; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Network = value; }

        /// <summary>Internal Acessors for PrivateEndpointConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection[] Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).PrivateEndpointConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).PrivateEndpointConnection = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Replica</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IReplica Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Replica { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Replica; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Replica = value; }

        /// <summary>Internal Acessors for ReplicaCapacity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.ReplicaCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaCapacity = value; }

        /// <summary>Internal Acessors for ReplicaReplicationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaReplicationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaReplicationState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISku Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for State</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.State { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).State = value; }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IStorage Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerInternal.Storage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Storage; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Storage = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Type = value; }

        /// <summary>The minor version of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string MinorVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).MinorVersion; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Name; }

        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string NetworkDelegatedSubnetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).NetworkDelegatedSubnetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).NetworkDelegatedSubnetResourceId = value ?? null; }

        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string NetworkPrivateDnsZoneArmResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).NetworkPrivateDnsZoneArmResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).NetworkPrivateDnsZoneArmResourceId = value ?? null; }

        /// <summary>public network access is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).NetworkPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).NetworkPublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState)""); }

        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is
        /// 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public global::System.DateTime? PointInTimeUtc { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).PointInTimeUtc; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).PointInTimeUtc = value ?? default(global::System.DateTime); }

        /// <summary>List of private endpoint connections associated with the specified resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).PrivateEndpointConnection; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties _property;

        /// <summary>Properties of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerProperties()); set => this._property = value; }

        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? ReplicaCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaCapacity; }

        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaPromoteMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaPromoteMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode)""); }

        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption? ReplicaPromoteOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaPromoteOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaPromoteOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption)""); }

        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState? ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaReplicationState; }

        /// <summary>Used to indicate role of the server in replication set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole? ReplicaRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicaRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole)""); }

        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole? ReplicationRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicationRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).ReplicationRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISku _sku;

        /// <summary>The SKU (pricing tier) of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.Sku()); set => this._sku = value; }

        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISkuInternal)Sku).Name = value ?? null; }

        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.SkuTier)""); }

        /// <summary>
        /// The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'
        /// or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public string SourceServerResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).SourceServerResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).SourceServerResourceId = value ?? null; }

        /// <summary>A state of a server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).State; }

        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow? StorageAutoGrow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageAutoGrow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageAutoGrow = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow)""); }

        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? StorageIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageIop = value ?? default(int); }

        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? StorageSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageSizeGb = value ?? default(int); }

        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public int? StorageThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageThroughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageThroughput = value ?? default(int); }

        /// <summary>Name of storage tier for IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers? StorageTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers)""); }

        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS, PremiumV2_LRS, and UltraSSD_LRS. Default is Premium_LRS if
        /// not specified
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType? StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).StorageType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreatedByType)""); }

        /// <summary>Resource tags.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResourceTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResourceInternal)__trackedResource).Tag = value ?? null /* model class */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IResourceInternal)__trackedResource).Type; }

        /// <summary>PostgreSQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion? Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)Property).Version = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion)""); }

        /// <summary>Creates an new <see cref="Server" /> instance.</summary>
        public Server()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__trackedResource), __trackedResource);
            await eventListener.AssertObjectIsValid(nameof(__trackedResource), __trackedResource);
        }
    }
    /// Represents a server.
    public partial interface IServer :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResource
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for
        /// creation).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get; set; }
        /// <summary>The administrator login password (required for server creation).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator login password (required for server creation).",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Azure Active Directory authentication is enabled.",
        SerializedName = @"activeDirectoryAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Password authentication is enabled.",
        SerializedName = @"passwordAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of the server.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthConfigTenantId { get; set; }
        /// <summary>availability zone information of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"availability zone information of the server.",
        SerializedName = @"availabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string AvailabilityZone { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The earliest restore point time (ISO8601 format) for server.",
        SerializedName = @"earliestRestoreDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupEarliestRestoreDate { get;  }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether Geo-Redundant backup is enabled on the server.",
        SerializedName = @"geoRedundantBackup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup retention days for the server.",
        SerializedName = @"backupRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? BackupRetentionDay { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Replicas allowed for a server.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? Capacity { get;  }
        /// <summary>The node count for the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The node count for the cluster.",
        SerializedName = @"clusterSize",
        PossibleTypes = new [] { typeof(int) })]
        int? ClusterSize { get; set; }
        /// <summary>The mode to create a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to create a new PostgreSQL server.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geo-backup encryption key status for Data encryption enabled server.",
        SerializedName = @"geoBackupEncryptionKeyStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key in keyvault for data encryption for geo-backup of server.",
        SerializedName = @"geoBackupKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.",
        SerializedName = @"geoBackupUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary encryption key status for Data encryption enabled server.",
        SerializedName = @"primaryEncryptionKeyStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key in keyvault for data encryption of the primary server.",
        SerializedName = @"primaryKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption of the primary server.",
        SerializedName = @"primaryUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data encryption type to depict if it is System Managed vs Azure Key vault.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>The fully qualified domain name of a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The fully qualified domain name of a server.",
        SerializedName = @"fullyQualifiedDomainName",
        PossibleTypes = new [] { typeof(string) })]
        string FullyQualifiedDomainName { get;  }
        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HA mode for the server.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"availability zone information of the standby.",
        SerializedName = @"standbyAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a HA server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState? HighAvailabilityState { get;  }
        /// <summary>the identity principal Id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the identity principal Id of the server.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityPrincipalId { get; set; }
        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tenant id of the server.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>the types of identities associated with this resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the types of identities associated with this resource",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.IdentityType? IdentityType { get; set; }
        /// <summary>represents user assigned identities map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"represents user assigned identities map.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"indicates whether custom window is enabled or disabled",
        SerializedName = @"customWindow",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"day of week for maintenance window",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start hour for maintenance window",
        SerializedName = @"startHour",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start minute for maintenance window",
        SerializedName = @"startMinute",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>The minor version of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The minor version of the server.",
        SerializedName = @"minorVersion",
        PossibleTypes = new [] { typeof(string) })]
        string MinorVersion { get;  }
        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.",
        SerializedName = @"delegatedSubnetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.",
        SerializedName = @"privateDnsZoneArmResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkPrivateDnsZoneArmResourceId { get; set; }
        /// <summary>public network access is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"public network access is enabled or not",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get; set; }
        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is
        /// 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.",
        SerializedName = @"pointInTimeUTC",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PointInTimeUtc { get; set; }
        /// <summary>List of private endpoint connections associated with the specified resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of private endpoint connections associated with the specified resource.",
        SerializedName = @"privateEndpointConnections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get;  }
        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Replicas allowed for a server.",
        SerializedName = @"replicaCapacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCapacity { get;  }
        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the promote mode for a replica server. This is a write only property.",
        SerializedName = @"promoteMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get; set; }
        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the promote options for a replica server. This is a write only property.",
        SerializedName = @"promoteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption? ReplicaPromoteOption { get; set; }
        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring",
        SerializedName = @"replicationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState? ReplicaReplicationState { get;  }
        /// <summary>Used to indicate role of the server in replication set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to indicate role of the server in replication set.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replication role of the server",
        SerializedName = @"replicationRole",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tier of the particular SKU, e.g. Burstable.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.SkuTier? SkuTier { get; set; }
        /// <summary>
        /// The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'
        /// or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore' or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server",
        SerializedName = @"sourceServerResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServerResourceId { get; set; }
        /// <summary>A state of a server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState? State { get;  }
        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable / disable Storage Auto grow for flexible server.",
        SerializedName = @"autoGrow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow? StorageAutoGrow { get; set; }
        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageIop { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max storage allowed for a server.",
        SerializedName = @"storageSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeGb { get; set; }
        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageThroughput { get; set; }
        /// <summary>Name of storage tier for IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of storage tier for IOPS.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers? StorageTier { get; set; }
        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS, PremiumV2_LRS, and UltraSSD_LRS. Default is Premium_LRS if
        /// not specified
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type for the server. Allowed values are Premium_LRS, PremiumV2_LRS, and UltraSSD_LRS. Default is Premium_LRS if not specified",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType? StorageType { get; set; }
        /// <summary>PostgreSQL Server version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PostgreSQL Server version.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion? Version { get; set; }

    }
    /// Represents a server.
    internal partial interface IServerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.ITrackedResourceInternal
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is being created (and is required for
        /// creation).
        /// </summary>
        string AdministratorLogin { get; set; }
        /// <summary>The administrator login password (required for server creation).</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>AuthConfig properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IAuthConfig AuthConfig { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        string AuthConfigTenantId { get; set; }
        /// <summary>availability zone information of the server.</summary>
        string AvailabilityZone { get; set; }
        /// <summary>Backup properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IBackup Backup { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        global::System.DateTime? BackupEarliestRestoreDate { get; set; }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        int? BackupRetentionDay { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        int? Capacity { get; set; }
        /// <summary>Cluster properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ICluster Cluster { get; set; }
        /// <summary>The node count for the cluster.</summary>
        int? ClusterSize { get; set; }
        /// <summary>The mode to create a new PostgreSQL server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode? CreateMode { get; set; }
        /// <summary>Data encryption properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IDataEncryption DataEncryption { get; set; }
        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>The fully qualified domain name of a server.</summary>
        string FullyQualifiedDomainName { get; set; }
        /// <summary>High availability properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IHighAvailability HighAvailability { get; set; }
        /// <summary>The HA mode for the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState? HighAvailabilityState { get; set; }
        /// <summary>Describes the identity of the application.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentity Identity { get; set; }
        /// <summary>the identity principal Id of the server.</summary>
        string IdentityPrincipalId { get; set; }
        /// <summary>Tenant id of the server.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>the types of identities associated with this resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.IdentityType? IdentityType { get; set; }
        /// <summary>represents user assigned identities map.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get; set; }
        /// <summary>Maintenance window properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>The minor version of the server.</summary>
        string MinorVersion { get; set; }
        /// <summary>
        /// Network properties of a server. This Network property is required to be passed only in case you want the server to be
        /// Private access server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.INetwork Network { get; set; }
        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        string NetworkPrivateDnsZoneArmResourceId { get; set; }
        /// <summary>public network access is enabled or not</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get; set; }
        /// <summary>
        /// Restore point creation time (ISO8601 format), specifying the time to restore from. It's required when 'createMode' is
        /// 'PointInTimeRestore' or 'GeoRestore' or 'ReviveDropped'.
        /// </summary>
        global::System.DateTime? PointInTimeUtc { get; set; }
        /// <summary>List of private endpoint connections associated with the specified resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection[] PrivateEndpointConnection { get; set; }
        /// <summary>Properties of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties Property { get; set; }
        /// <summary>
        /// Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a
        /// server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IReplica Replica { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        int? ReplicaCapacity { get; set; }
        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get; set; }
        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption? ReplicaPromoteOption { get; set; }
        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState? ReplicaReplicationState { get; set; }
        /// <summary>Used to indicate role of the server in replication set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>Replication role of the server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The SKU (pricing tier) of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISku Sku { get; set; }
        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.SkuTier? SkuTier { get; set; }
        /// <summary>
        /// The source server resource ID to restore from. It's required when 'createMode' is 'PointInTimeRestore' or 'GeoRestore'
        /// or 'Replica' or 'ReviveDropped'. This property is returned only for Replica server
        /// </summary>
        string SourceServerResourceId { get; set; }
        /// <summary>A state of a server that is visible to user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState? State { get; set; }
        /// <summary>Storage properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IStorage Storage { get; set; }
        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow? StorageAutoGrow { get; set; }
        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.
        /// </summary>
        int? StorageIop { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        int? StorageSizeGb { get; set; }
        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS and UltraSSD_LRS.
        /// </summary>
        int? StorageThroughput { get; set; }
        /// <summary>Name of storage tier for IOPS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers? StorageTier { get; set; }
        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS, PremiumV2_LRS, and UltraSSD_LRS. Default is Premium_LRS if
        /// not specified
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType? StorageType { get; set; }
        /// <summary>PostgreSQL Server version.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion? Version { get; set; }

    }
}