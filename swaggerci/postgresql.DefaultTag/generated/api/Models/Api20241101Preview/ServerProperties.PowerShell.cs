// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.PowerShell;

    /// <summary>The properties of a server.</summary>
    [System.ComponentModel.TypeConverter(typeof(ServerPropertiesTypeConverter))]
    public partial class ServerProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ServerProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ServerProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ServerProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ServerProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ServerProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Storage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Storage = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IStorage) content.GetValueForProperty("Storage",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Storage, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.StorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfig = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IAuthConfig) content.GetValueForProperty("AuthConfig",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfig, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.AuthConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryption = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IDataEncryption) content.GetValueForProperty("DataEncryption",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryption, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.DataEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Backup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Backup = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IBackup) content.GetValueForProperty("Backup",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Backup, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.BackupTypeConverter.ConvertFrom);
            }
            if (content.Contains("Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Network = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.INetwork) content.GetValueForProperty("Network",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Network, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.NetworkTypeConverter.ConvertFrom);
            }
            if (content.Contains("HighAvailability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailability = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IHighAvailability) content.GetValueForProperty("HighAvailability",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailability, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.HighAvailabilityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindow = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IMaintenanceWindow) content.GetValueForProperty("MaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindow, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.MaintenanceWindowTypeConverter.ConvertFrom);
            }
            if (content.Contains("Replica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Replica = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IReplica) content.GetValueForProperty("Replica",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Replica, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ReplicaTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Cluster = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ICluster) content.GetValueForProperty("Cluster",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Cluster, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ClusterTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdministratorLogin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLogin = (string) content.GetValueForProperty("AdministratorLogin",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLogin, global::System.Convert.ToString);
            }
            if (content.Contains("AdministratorLoginPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLoginPassword = (System.Security.SecureString) content.GetValueForProperty("AdministratorLoginPassword",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLoginPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Version = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion?) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Version, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion.CreateFrom);
            }
            if (content.Contains("MinorVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MinorVersion = (string) content.GetValueForProperty("MinorVersion",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MinorVersion, global::System.Convert.ToString);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState.CreateFrom);
            }
            if (content.Contains("FullyQualifiedDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).FullyQualifiedDomainName = (string) content.GetValueForProperty("FullyQualifiedDomainName",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).FullyQualifiedDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceServerResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).SourceServerResourceId = (string) content.GetValueForProperty("SourceServerResourceId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).SourceServerResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("PointInTimeUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PointInTimeUtc = (global::System.DateTime?) content.GetValueForProperty("PointInTimeUtc",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PointInTimeUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("ReplicationRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicationRole = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole?) content.GetValueForProperty("ReplicationRole",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicationRole, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole.CreateFrom);
            }
            if (content.Contains("ReplicaCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaCapacity = (int?) content.GetValueForProperty("ReplicaCapacity",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CreateMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).CreateMode = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode?) content.GetValueForProperty("CreateMode",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).CreateMode, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode.CreateFrom);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("StorageAutoGrow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageAutoGrow = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow?) content.GetValueForProperty("StorageAutoGrow",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageAutoGrow, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow.CreateFrom);
            }
            if (content.Contains("StorageIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageIop = (int?) content.GetValueForProperty("StorageIop",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageThroughput = (int?) content.GetValueForProperty("StorageThroughput",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageType = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType?) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageType, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType.CreateFrom);
            }
            if (content.Contains("AuthConfigTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigTenantId = (string) content.GetValueForProperty("AuthConfigTenantId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("HighAvailabilityMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityMode = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode?) content.GetValueForProperty("HighAvailabilityMode",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityMode, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode.CreateFrom);
            }
            if (content.Contains("MaintenanceWindowCustomWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowCustomWindow = (string) content.GetValueForProperty("MaintenanceWindowCustomWindow",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowCustomWindow, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowStartHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartHour = (int?) content.GetValueForProperty("MaintenanceWindowStartHour",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MaintenanceWindowStartMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartMinute = (int?) content.GetValueForProperty("MaintenanceWindowStartMinute",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartMinute, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Capacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Capacity = (int?) content.GetValueForProperty("Capacity",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Capacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicaReplicationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaReplicationState = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState?) content.GetValueForProperty("ReplicaReplicationState",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaReplicationState, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState.CreateFrom);
            }
            if (content.Contains("ClusterSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ClusterSize = (int?) content.GetValueForProperty("ClusterSize",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ClusterSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageSizeGb = (int?) content.GetValueForProperty("StorageSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageTier = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers?) content.GetValueForProperty("StorageTier",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageTier, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers.CreateFrom);
            }
            if (content.Contains("AuthConfigActiveDirectoryAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigActiveDirectoryAuth = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum?) content.GetValueForProperty("AuthConfigActiveDirectoryAuth",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigActiveDirectoryAuth, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum.CreateFrom);
            }
            if (content.Contains("AuthConfigPasswordAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigPasswordAuth = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum?) content.GetValueForProperty("AuthConfigPasswordAuth",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigPasswordAuth, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum.CreateFrom);
            }
            if (content.Contains("DataEncryptionPrimaryKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryKeyUri = (string) content.GetValueForProperty("DataEncryptionPrimaryKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionPrimaryUserAssignedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryUserAssignedIdentityId = (string) content.GetValueForProperty("DataEncryptionPrimaryUserAssignedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryUserAssignedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionGeoBackupKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupKeyUri = (string) content.GetValueForProperty("DataEncryptionGeoBackupKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionGeoBackupUserAssignedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupUserAssignedIdentityId = (string) content.GetValueForProperty("DataEncryptionGeoBackupUserAssignedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupUserAssignedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType?) content.GetValueForProperty("DataEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType.CreateFrom);
            }
            if (content.Contains("DataEncryptionPrimaryEncryptionKeyStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryEncryptionKeyStatus = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum?) content.GetValueForProperty("DataEncryptionPrimaryEncryptionKeyStatus",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryEncryptionKeyStatus, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum.CreateFrom);
            }
            if (content.Contains("DataEncryptionGeoBackupEncryptionKeyStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupEncryptionKeyStatus = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum?) content.GetValueForProperty("DataEncryptionGeoBackupEncryptionKeyStatus",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupEncryptionKeyStatus, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum.CreateFrom);
            }
            if (content.Contains("BackupRetentionDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupRetentionDay = (int?) content.GetValueForProperty("BackupRetentionDay",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupRetentionDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BackupGeoRedundantBackup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupGeoRedundantBackup = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum?) content.GetValueForProperty("BackupGeoRedundantBackup",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupGeoRedundantBackup, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum.CreateFrom);
            }
            if (content.Contains("BackupEarliestRestoreDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupEarliestRestoreDate = (global::System.DateTime?) content.GetValueForProperty("BackupEarliestRestoreDate",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupEarliestRestoreDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NetworkPublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState?) content.GetValueForProperty("NetworkPublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState.CreateFrom);
            }
            if (content.Contains("NetworkDelegatedSubnetResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkDelegatedSubnetResourceId = (string) content.GetValueForProperty("NetworkDelegatedSubnetResourceId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkDelegatedSubnetResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkPrivateDnsZoneArmResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPrivateDnsZoneArmResourceId = (string) content.GetValueForProperty("NetworkPrivateDnsZoneArmResourceId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPrivateDnsZoneArmResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("HighAvailabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityState = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState?) content.GetValueForProperty("HighAvailabilityState",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityState, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState.CreateFrom);
            }
            if (content.Contains("HighAvailabilityStandbyAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityStandbyAvailabilityZone = (string) content.GetValueForProperty("HighAvailabilityStandbyAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityStandbyAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowDayOfWeek = (int?) content.GetValueForProperty("MaintenanceWindowDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowDayOfWeek, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicaRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaRole = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole?) content.GetValueForProperty("ReplicaRole",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaRole, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole.CreateFrom);
            }
            if (content.Contains("ReplicaPromoteMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteMode = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode?) content.GetValueForProperty("ReplicaPromoteMode",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteMode, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode.CreateFrom);
            }
            if (content.Contains("ReplicaPromoteOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteOption = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption?) content.GetValueForProperty("ReplicaPromoteOption",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteOption, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ServerProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Storage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Storage = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IStorage) content.GetValueForProperty("Storage",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Storage, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.StorageTypeConverter.ConvertFrom);
            }
            if (content.Contains("AuthConfig"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfig = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IAuthConfig) content.GetValueForProperty("AuthConfig",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfig, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.AuthConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("DataEncryption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryption = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IDataEncryption) content.GetValueForProperty("DataEncryption",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryption, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.DataEncryptionTypeConverter.ConvertFrom);
            }
            if (content.Contains("Backup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Backup = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IBackup) content.GetValueForProperty("Backup",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Backup, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.BackupTypeConverter.ConvertFrom);
            }
            if (content.Contains("Network"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Network = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.INetwork) content.GetValueForProperty("Network",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Network, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.NetworkTypeConverter.ConvertFrom);
            }
            if (content.Contains("HighAvailability"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailability = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IHighAvailability) content.GetValueForProperty("HighAvailability",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailability, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.HighAvailabilityTypeConverter.ConvertFrom);
            }
            if (content.Contains("MaintenanceWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindow = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IMaintenanceWindow) content.GetValueForProperty("MaintenanceWindow",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindow, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.MaintenanceWindowTypeConverter.ConvertFrom);
            }
            if (content.Contains("Replica"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Replica = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IReplica) content.GetValueForProperty("Replica",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Replica, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ReplicaTypeConverter.ConvertFrom);
            }
            if (content.Contains("Cluster"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Cluster = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ICluster) content.GetValueForProperty("Cluster",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Cluster, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ClusterTypeConverter.ConvertFrom);
            }
            if (content.Contains("AdministratorLogin"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLogin = (string) content.GetValueForProperty("AdministratorLogin",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLogin, global::System.Convert.ToString);
            }
            if (content.Contains("AdministratorLoginPassword"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLoginPassword = (System.Security.SecureString) content.GetValueForProperty("AdministratorLoginPassword",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AdministratorLoginPassword, (object ss) => (System.Security.SecureString)ss);
            }
            if (content.Contains("Version"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Version = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion?) content.GetValueForProperty("Version",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Version, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerVersion.CreateFrom);
            }
            if (content.Contains("MinorVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MinorVersion = (string) content.GetValueForProperty("MinorVersion",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MinorVersion, global::System.Convert.ToString);
            }
            if (content.Contains("State"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).State = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState?) content.GetValueForProperty("State",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).State, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerState.CreateFrom);
            }
            if (content.Contains("FullyQualifiedDomainName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).FullyQualifiedDomainName = (string) content.GetValueForProperty("FullyQualifiedDomainName",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).FullyQualifiedDomainName, global::System.Convert.ToString);
            }
            if (content.Contains("SourceServerResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).SourceServerResourceId = (string) content.GetValueForProperty("SourceServerResourceId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).SourceServerResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("PointInTimeUtc"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PointInTimeUtc = (global::System.DateTime?) content.GetValueForProperty("PointInTimeUtc",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PointInTimeUtc, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("AvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AvailabilityZone = (string) content.GetValueForProperty("AvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("ReplicationRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicationRole = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole?) content.GetValueForProperty("ReplicationRole",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicationRole, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole.CreateFrom);
            }
            if (content.Contains("ReplicaCapacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaCapacity = (int?) content.GetValueForProperty("ReplicaCapacity",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaCapacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("CreateMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).CreateMode = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode?) content.GetValueForProperty("CreateMode",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).CreateMode, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.CreateMode.CreateFrom);
            }
            if (content.Contains("PrivateEndpointConnection"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PrivateEndpointConnection = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection[]) content.GetValueForProperty("PrivateEndpointConnection",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).PrivateEndpointConnection, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.IPrivateEndpointConnection>(__y, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api50.PrivateEndpointConnectionTypeConverter.ConvertFrom));
            }
            if (content.Contains("StorageAutoGrow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageAutoGrow = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow?) content.GetValueForProperty("StorageAutoGrow",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageAutoGrow, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageAutoGrow.CreateFrom);
            }
            if (content.Contains("StorageIop"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageIop = (int?) content.GetValueForProperty("StorageIop",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageIop, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageThroughput"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageThroughput = (int?) content.GetValueForProperty("StorageThroughput",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageThroughput, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageType = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType?) content.GetValueForProperty("StorageType",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageType, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.StorageType.CreateFrom);
            }
            if (content.Contains("AuthConfigTenantId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigTenantId = (string) content.GetValueForProperty("AuthConfigTenantId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigTenantId, global::System.Convert.ToString);
            }
            if (content.Contains("HighAvailabilityMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityMode = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode?) content.GetValueForProperty("HighAvailabilityMode",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityMode, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.HighAvailabilityMode.CreateFrom);
            }
            if (content.Contains("MaintenanceWindowCustomWindow"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowCustomWindow = (string) content.GetValueForProperty("MaintenanceWindowCustomWindow",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowCustomWindow, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowStartHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartHour = (int?) content.GetValueForProperty("MaintenanceWindowStartHour",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("MaintenanceWindowStartMinute"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartMinute = (int?) content.GetValueForProperty("MaintenanceWindowStartMinute",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowStartMinute, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Capacity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Capacity = (int?) content.GetValueForProperty("Capacity",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).Capacity, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicaReplicationState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaReplicationState = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState?) content.GetValueForProperty("ReplicaReplicationState",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaReplicationState, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationState.CreateFrom);
            }
            if (content.Contains("ClusterSize"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ClusterSize = (int?) content.GetValueForProperty("ClusterSize",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ClusterSize, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageSizeGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageSizeGb = (int?) content.GetValueForProperty("StorageSizeGb",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageSizeGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StorageTier"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageTier = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers?) content.GetValueForProperty("StorageTier",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).StorageTier, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.AzureManagedDiskPerformanceTiers.CreateFrom);
            }
            if (content.Contains("AuthConfigActiveDirectoryAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigActiveDirectoryAuth = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum?) content.GetValueForProperty("AuthConfigActiveDirectoryAuth",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigActiveDirectoryAuth, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ActiveDirectoryAuthEnum.CreateFrom);
            }
            if (content.Contains("AuthConfigPasswordAuth"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigPasswordAuth = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum?) content.GetValueForProperty("AuthConfigPasswordAuth",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).AuthConfigPasswordAuth, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.PasswordAuthEnum.CreateFrom);
            }
            if (content.Contains("DataEncryptionPrimaryKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryKeyUri = (string) content.GetValueForProperty("DataEncryptionPrimaryKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionPrimaryUserAssignedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryUserAssignedIdentityId = (string) content.GetValueForProperty("DataEncryptionPrimaryUserAssignedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryUserAssignedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionGeoBackupKeyUri"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupKeyUri = (string) content.GetValueForProperty("DataEncryptionGeoBackupKeyUri",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupKeyUri, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionGeoBackupUserAssignedIdentityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupUserAssignedIdentityId = (string) content.GetValueForProperty("DataEncryptionGeoBackupUserAssignedIdentityId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupUserAssignedIdentityId, global::System.Convert.ToString);
            }
            if (content.Contains("DataEncryptionType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionType = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType?) content.GetValueForProperty("DataEncryptionType",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionType, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ArmServerKeyType.CreateFrom);
            }
            if (content.Contains("DataEncryptionPrimaryEncryptionKeyStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryEncryptionKeyStatus = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum?) content.GetValueForProperty("DataEncryptionPrimaryEncryptionKeyStatus",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionPrimaryEncryptionKeyStatus, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum.CreateFrom);
            }
            if (content.Contains("DataEncryptionGeoBackupEncryptionKeyStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupEncryptionKeyStatus = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum?) content.GetValueForProperty("DataEncryptionGeoBackupEncryptionKeyStatus",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).DataEncryptionGeoBackupEncryptionKeyStatus, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.KeyStatusEnum.CreateFrom);
            }
            if (content.Contains("BackupRetentionDay"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupRetentionDay = (int?) content.GetValueForProperty("BackupRetentionDay",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupRetentionDay, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("BackupGeoRedundantBackup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupGeoRedundantBackup = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum?) content.GetValueForProperty("BackupGeoRedundantBackup",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupGeoRedundantBackup, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.GeoRedundantBackupEnum.CreateFrom);
            }
            if (content.Contains("BackupEarliestRestoreDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupEarliestRestoreDate = (global::System.DateTime?) content.GetValueForProperty("BackupEarliestRestoreDate",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).BackupEarliestRestoreDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("NetworkPublicNetworkAccess"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPublicNetworkAccess = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState?) content.GetValueForProperty("NetworkPublicNetworkAccess",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPublicNetworkAccess, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerPublicNetworkAccessState.CreateFrom);
            }
            if (content.Contains("NetworkDelegatedSubnetResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkDelegatedSubnetResourceId = (string) content.GetValueForProperty("NetworkDelegatedSubnetResourceId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkDelegatedSubnetResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("NetworkPrivateDnsZoneArmResourceId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPrivateDnsZoneArmResourceId = (string) content.GetValueForProperty("NetworkPrivateDnsZoneArmResourceId",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).NetworkPrivateDnsZoneArmResourceId, global::System.Convert.ToString);
            }
            if (content.Contains("HighAvailabilityState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityState = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState?) content.GetValueForProperty("HighAvailabilityState",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityState, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ServerHaState.CreateFrom);
            }
            if (content.Contains("HighAvailabilityStandbyAvailabilityZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityStandbyAvailabilityZone = (string) content.GetValueForProperty("HighAvailabilityStandbyAvailabilityZone",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).HighAvailabilityStandbyAvailabilityZone, global::System.Convert.ToString);
            }
            if (content.Contains("MaintenanceWindowDayOfWeek"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowDayOfWeek = (int?) content.GetValueForProperty("MaintenanceWindowDayOfWeek",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).MaintenanceWindowDayOfWeek, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ReplicaRole"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaRole = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole?) content.GetValueForProperty("ReplicaRole",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaRole, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationRole.CreateFrom);
            }
            if (content.Contains("ReplicaPromoteMode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteMode = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode?) content.GetValueForProperty("ReplicaPromoteMode",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteMode, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReadReplicaPromoteMode.CreateFrom);
            }
            if (content.Contains("ReplicaPromoteOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteOption = (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption?) content.GetValueForProperty("ReplicaPromoteOption",((Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerPropertiesInternal)this).ReplicaPromoteOption, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Support.ReplicationPromoteOption.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The properties of a server.
    [System.ComponentModel.TypeConverter(typeof(ServerPropertiesTypeConverter))]
    public partial interface IServerProperties

    {

    }
}