// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Extensions;

    /// <summary>Capability for the PostgreSQL server</summary>
    public partial class FlexibleServerCapability
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject into a new instance of <see cref="FlexibleServerCapability" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal FlexibleServerCapability(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            __capabilityBase = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api10.CapabilityBase(json);
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_supportedServerEdition = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray>("supportedServerEditions"), out var __jsonSupportedServerEditions) ? If( __jsonSupportedServerEditions as Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFlexibleServerEditionCapability[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFlexibleServerEditionCapability) (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.FlexibleServerEditionCapability.FromJson(__u) )) ))() : null : SupportedServerEdition;}
            {_supportedServerVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray>("supportedServerVersions"), out var __jsonSupportedServerVersions) ? If( __jsonSupportedServerVersions as Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerVersionCapability[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IServerVersionCapability) (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ServerVersionCapability.FromJson(__p) )) ))() : null : SupportedServerVersion;}
            {_supportedFeature = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray>("supportedFeatures"), out var __jsonSupportedFeatures) ? If( __jsonSupportedFeatures as Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISupportedFeature[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.ISupportedFeature) (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.SupportedFeature.FromJson(__k) )) ))() : null : SupportedFeature;}
            {_fastProvisioningSupported = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("fastProvisioningSupported"), out var __jsonFastProvisioningSupported) ? (string)__jsonFastProvisioningSupported : (string)FastProvisioningSupported;}
            {_supportedFastProvisioningEdition = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray>("supportedFastProvisioningEditions"), out var __jsonSupportedFastProvisioningEditions) ? If( __jsonSupportedFastProvisioningEditions as Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFastProvisioningEditionCapability[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFastProvisioningEditionCapability) (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.FastProvisioningEditionCapability.FromJson(__f) )) ))() : null : SupportedFastProvisioningEdition;}
            {_geoBackupSupported = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("geoBackupSupported"), out var __jsonGeoBackupSupported) ? (string)__jsonGeoBackupSupported : (string)GeoBackupSupported;}
            {_zoneRedundantHaSupported = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("zoneRedundantHaSupported"), out var __jsonZoneRedundantHaSupported) ? (string)__jsonZoneRedundantHaSupported : (string)ZoneRedundantHaSupported;}
            {_zoneRedundantHaAndGeoBackupSupported = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("zoneRedundantHaAndGeoBackupSupported"), out var __jsonZoneRedundantHaAndGeoBackupSupported) ? (string)__jsonZoneRedundantHaAndGeoBackupSupported : (string)ZoneRedundantHaAndGeoBackupSupported;}
            {_storageAutoGrowthSupported = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("storageAutoGrowthSupported"), out var __jsonStorageAutoGrowthSupported) ? (string)__jsonStorageAutoGrowthSupported : (string)StorageAutoGrowthSupported;}
            {_onlineResizeSupported = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("onlineResizeSupported"), out var __jsonOnlineResizeSupported) ? (string)__jsonOnlineResizeSupported : (string)OnlineResizeSupported;}
            {_restricted = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString>("restricted"), out var __jsonRestricted) ? (string)__jsonRestricted : (string)Restricted;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFlexibleServerCapability.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFlexibleServerCapability.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Models.Api20241101Preview.IFlexibleServerCapability FromJson(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject json ? new FlexibleServerCapability(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="FlexibleServerCapability" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="FlexibleServerCapability" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            __capabilityBase?.ToJson(container, serializationMode);
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._supportedServerEdition)
                {
                    var __w = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.XNodeArray();
                    foreach( var __x in this._supportedServerEdition )
                    {
                        AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                    }
                    container.Add("supportedServerEditions",__w);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._supportedServerVersion)
                {
                    var __r = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.XNodeArray();
                    foreach( var __s in this._supportedServerVersion )
                    {
                        AddIf(__s?.ToJson(null, serializationMode) ,__r.Add);
                    }
                    container.Add("supportedServerVersions",__r);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._supportedFeature)
                {
                    var __m = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.XNodeArray();
                    foreach( var __n in this._supportedFeature )
                    {
                        AddIf(__n?.ToJson(null, serializationMode) ,__m.Add);
                    }
                    container.Add("supportedFeatures",__m);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._fastProvisioningSupported)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._fastProvisioningSupported.ToString()) : null, "fastProvisioningSupported" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                if (null != this._supportedFastProvisioningEdition)
                {
                    var __h = new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.XNodeArray();
                    foreach( var __i in this._supportedFastProvisioningEdition )
                    {
                        AddIf(__i?.ToJson(null, serializationMode) ,__h.Add);
                    }
                    container.Add("supportedFastProvisioningEditions",__h);
                }
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._geoBackupSupported)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._geoBackupSupported.ToString()) : null, "geoBackupSupported" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._zoneRedundantHaSupported)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._zoneRedundantHaSupported.ToString()) : null, "zoneRedundantHaSupported" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._zoneRedundantHaAndGeoBackupSupported)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._zoneRedundantHaAndGeoBackupSupported.ToString()) : null, "zoneRedundantHaAndGeoBackupSupported" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._storageAutoGrowthSupported)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._storageAutoGrowthSupported.ToString()) : null, "storageAutoGrowthSupported" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._onlineResizeSupported)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._onlineResizeSupported.ToString()) : null, "onlineResizeSupported" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._restricted)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.PostgreSqlServer.Runtime.Json.JsonString(this._restricted.ToString()) : null, "restricted" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}