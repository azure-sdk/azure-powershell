// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Extensions;

    /// <summary>Represents a server to be updated.</summary>
    public partial class ServerForUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal
    {

        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication
        /// and does not have default administrator login.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string AdministratorLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AdministratorLogin; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AdministratorLogin = value ?? null; }

        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public System.Security.SecureString AdministratorLoginPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AdministratorLoginPassword; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AdministratorLoginPassword = value ?? null; }

        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfigActiveDirectoryAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfigActiveDirectoryAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum)""); }

        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfigPasswordAuth; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfigPasswordAuth = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum)""); }

        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string AuthConfigTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfigTenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfigTenantId = value ?? null; }

        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public global::System.DateTime? BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate; }

        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupGeoRedundantBackup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupGeoRedundantBackup = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum)""); }

        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? BackupRetentionDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupRetentionDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupRetentionDay = value ?? default(int); }

        /// <summary>The mode to update a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate? CreateMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).CreateMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).CreateMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate)""); }

        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupEncryptionKeyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupEncryptionKeyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum)""); }

        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionGeoBackupUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionGeoBackupUserAssignedIdentityId = value ?? null; }

        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryEncryptionKeyStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryEncryptionKeyStatus = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum)""); }

        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryKeyUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryKeyUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryKeyUri = value ?? null; }

        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string DataEncryptionPrimaryUserAssignedIdentityId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionPrimaryUserAssignedIdentityId = value ?? null; }

        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType)""); }

        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode)""); }

        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string HighAvailabilityStandbyAvailabilityZone { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityStandbyAvailabilityZone; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityStandbyAvailabilityZone = value ?? null; }

        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState; }

        /// <summary>Backing field for <see cref="Identity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentity _identity;

        /// <summary>Describes the identity of the application.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentity Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.UserAssignedIdentity()); set => this._identity = value; }

        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).TenantId; }

        /// <summary>
        /// the types of identities associated with this resource; currently restricted to 'None and UserAssigned'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType? IdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType)""); }

        /// <summary>represents user assigned identities map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).UserAssignedIdentities; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).UserAssignedIdentities = value ?? null /* model class */; }

        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string MaintenanceWindowCustomWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowCustomWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowCustomWindow = value ?? null; }

        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowDayOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowDayOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowDayOfWeek = value ?? default(int); }

        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartHour = value ?? default(int); }

        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? MaintenanceWindowStartMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindowStartMinute = value ?? default(int); }

        /// <summary>Internal Acessors for AuthConfig</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IAuthConfig Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.AuthConfig { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfig; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).AuthConfig = value; }

        /// <summary>Internal Acessors for Backup</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IBackup Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Backup { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Backup; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Backup = value; }

        /// <summary>Internal Acessors for BackupEarliestRestoreDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.BackupEarliestRestoreDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).BackupEarliestRestoreDate = value; }

        /// <summary>Internal Acessors for DataEncryption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IDataEncryption Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.DataEncryption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).DataEncryption = value; }

        /// <summary>Internal Acessors for HighAvailability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IHighAvailability Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.HighAvailability { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailability; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailability = value; }

        /// <summary>Internal Acessors for HighAvailabilityState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.HighAvailabilityState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).HighAvailabilityState = value; }

        /// <summary>Internal Acessors for Identity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentity Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Identity { get => (this._identity = this._identity ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.UserAssignedIdentity()); set { {_identity = value;} } }

        /// <summary>Internal Acessors for IdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.IdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityInternal)Identity).TenantId = value; }

        /// <summary>Internal Acessors for MaintenanceWindow</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IMaintenanceWindow Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.MaintenanceWindow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).MaintenanceWindow = value; }

        /// <summary>Internal Acessors for Network</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.INetwork Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Network { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Network; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Network = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdate Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ServerPropertiesForUpdate()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Replica</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IReplica Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Replica { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Replica; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Replica = value; }

        /// <summary>Internal Acessors for ReplicaCapacity</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.ReplicaCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaCapacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaCapacity = value; }

        /// <summary>Internal Acessors for ReplicaReplicationState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaReplicationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaReplicationState = value; }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISku Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.Sku()); set { {_sku = value;} } }

        /// <summary>Internal Acessors for Storage</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IStorage Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateInternal.Storage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Storage; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Storage = value; }

        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string NetworkDelegatedSubnetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).NetworkDelegatedSubnetResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).NetworkDelegatedSubnetResourceId = value ?? null; }

        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string NetworkPrivateDnsZoneArmResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).NetworkPrivateDnsZoneArmResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).NetworkPrivateDnsZoneArmResourceId = value ?? null; }

        /// <summary>public network access is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).NetworkPublicNetworkAccess; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).NetworkPublicNetworkAccess = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdate _property;

        /// <summary>Properties of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdate Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ServerPropertiesForUpdate()); set => this._property = value; }

        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? ReplicaCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaCapacity; }

        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaPromoteMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaPromoteMode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode)""); }

        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption? ReplicaPromoteOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaPromoteOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaPromoteOption = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption)""); }

        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? ReplicaReplicationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaReplicationState; }

        /// <summary>Used to indicate role of the server in replication set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicaRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicaRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole)""); }

        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicationRole; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).ReplicationRole = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole)""); }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISku _sku;

        /// <summary>The SKU (pricing tier) of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.Sku()); set => this._sku = value; }

        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISkuInternal)Sku).Name = value ?? null; }

        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier)""); }

        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow? StorageAutoGrow { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageAutoGrow; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageAutoGrow = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow)""); }

        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageIop { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageIop; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageIop = value ?? default(int); }

        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageSizeGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageSizeGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageSizeGb = value ?? default(int); }

        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public int? StorageThroughput { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageThroughput; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageThroughput = value ?? default(int); }

        /// <summary>Name of storage tier for IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers? StorageTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers)""); }

        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType? StorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).StorageType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType)""); }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateTags _tag;

        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateTags Tag { get => (this._tag = this._tag ?? new Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ServerForUpdateTags()); set => this._tag = value; }

        /// <summary>PostgreSQL Server version. Version 16 is currently not supported for MVU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Origin(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdateInternal)Property).Version = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion)""); }

        /// <summary>Creates an new <see cref="ServerForUpdate" /> instance.</summary>
        public ServerForUpdate()
        {

        }
    }
    /// Represents a server to be updated.
    public partial interface IServerForUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication
        /// and does not have default administrator login.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication and does not have default administrator login.",
        SerializedName = @"administratorLogin",
        PossibleTypes = new [] { typeof(string) })]
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The password of the administrator login.",
        SerializedName = @"administratorLoginPassword",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Azure Active Directory authentication is enabled.",
        SerializedName = @"activeDirectoryAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If Enabled, Password authentication is enabled.",
        SerializedName = @"passwordAuth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant id of the server.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AuthConfigTenantId { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The earliest restore point time (ISO8601 format) for server.",
        SerializedName = @"earliestRestoreDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BackupEarliestRestoreDate { get;  }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether Geo-Redundant backup is enabled on the server.",
        SerializedName = @"geoRedundantBackup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Backup retention days for the server.",
        SerializedName = @"backupRetentionDays",
        PossibleTypes = new [] { typeof(int) })]
        int? BackupRetentionDay { get; set; }
        /// <summary>The mode to update a new PostgreSQL server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The mode to update a new PostgreSQL server.",
        SerializedName = @"createMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate? CreateMode { get; set; }
        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geo-backup encryption key status for Data encryption enabled server.",
        SerializedName = @"geoBackupEncryptionKeyStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key in keyvault for data encryption for geo-backup of server.",
        SerializedName = @"geoBackupKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.",
        SerializedName = @"geoBackupUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Primary encryption key status for Data encryption enabled server.",
        SerializedName = @"primaryEncryptionKeyStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"URI for the key in keyvault for data encryption of the primary server.",
        SerializedName = @"primaryKeyURI",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id for the User assigned identity to be used for data encryption of the primary server.",
        SerializedName = @"primaryUserAssignedIdentityId",
        PossibleTypes = new [] { typeof(string) })]
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data encryption type to depict if it is System Managed vs Azure Key vault.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>The HA mode for the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The HA mode for the server.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"availability zone information of the standby.",
        SerializedName = @"standbyAvailabilityZone",
        PossibleTypes = new [] { typeof(string) })]
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"A state of a HA server that is visible to user.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get;  }
        /// <summary>Tenant id of the server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Tenant id of the server.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityTenantId { get;  }
        /// <summary>
        /// the types of identities associated with this resource; currently restricted to 'None and UserAssigned'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the types of identities associated with this resource; currently restricted to 'None and UserAssigned'",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType? IdentityType { get; set; }
        /// <summary>represents user assigned identities map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"represents user assigned identities map.",
        SerializedName = @"userAssignedIdentities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityMap) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"indicates whether custom window is enabled or disabled",
        SerializedName = @"customWindow",
        PossibleTypes = new [] { typeof(string) })]
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"day of week for maintenance window",
        SerializedName = @"dayOfWeek",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start hour for maintenance window",
        SerializedName = @"startHour",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"start minute for maintenance window",
        SerializedName = @"startMinute",
        PossibleTypes = new [] { typeof(int) })]
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.",
        SerializedName = @"delegatedSubnetResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected, i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.",
        SerializedName = @"privateDnsZoneArmResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string NetworkPrivateDnsZoneArmResourceId { get; set; }
        /// <summary>public network access is enabled or not</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"public network access is enabled or not",
        SerializedName = @"publicNetworkAccess",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Replicas allowed for a server.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? ReplicaCapacity { get;  }
        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the promote mode for a replica server. This is a write only property.",
        SerializedName = @"promoteMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get; set; }
        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Sets the promote options for a replica server. This is a write only property.",
        SerializedName = @"promoteOption",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption? ReplicaPromoteOption { get; set; }
        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring",
        SerializedName = @"replicationState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? ReplicaReplicationState { get;  }
        /// <summary>Used to indicate role of the server in replication set.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to indicate role of the server in replication set.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>Replication role of the server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Replication role of the server",
        SerializedName = @"replicationRole",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tier of the particular SKU, e.g. Burstable.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier? SkuTier { get; set; }
        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to enable / disable Storage Auto grow for flexible server.",
        SerializedName = @"autoGrow",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow? StorageAutoGrow { get; set; }
        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageIop { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Max storage allowed for a server.",
        SerializedName = @"storageSizeGB",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeGb { get; set; }
        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS",
        SerializedName = @"throughput",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageThroughput { get; set; }
        /// <summary>Name of storage tier for IOPS.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of storage tier for IOPS.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers? StorageTier { get; set; }
        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType? StorageType { get; set; }
        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application-specific metadata in the form of key-value pairs.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateTags Tag { get; set; }
        /// <summary>PostgreSQL Server version. Version 16 is currently not supported for MVU.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"PostgreSQL Server version. Version 16 is currently not supported for MVU.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion) })]
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get; set; }

    }
    /// Represents a server to be updated.
    internal partial interface IServerForUpdateInternal

    {
        /// <summary>
        /// The administrator's login name of a server. Can only be specified when the server is trying to switch to password authentication
        /// and does not have default administrator login.
        /// </summary>
        string AdministratorLogin { get; set; }
        /// <summary>The password of the administrator login.</summary>
        System.Security.SecureString AdministratorLoginPassword { get; set; }
        /// <summary>AuthConfig properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IAuthConfig AuthConfig { get; set; }
        /// <summary>If Enabled, Azure Active Directory authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ActiveDirectoryAuthEnum? AuthConfigActiveDirectoryAuth { get; set; }
        /// <summary>If Enabled, Password authentication is enabled.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.PasswordAuthEnum? AuthConfigPasswordAuth { get; set; }
        /// <summary>Tenant id of the server.</summary>
        string AuthConfigTenantId { get; set; }
        /// <summary>Backup properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IBackup Backup { get; set; }
        /// <summary>The earliest restore point time (ISO8601 format) for server.</summary>
        global::System.DateTime? BackupEarliestRestoreDate { get; set; }
        /// <summary>A value indicating whether Geo-Redundant backup is enabled on the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.GeoRedundantBackupEnum? BackupGeoRedundantBackup { get; set; }
        /// <summary>Backup retention days for the server.</summary>
        int? BackupRetentionDay { get; set; }
        /// <summary>The mode to update a new PostgreSQL server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.CreateModeForUpdate? CreateMode { get; set; }
        /// <summary>Data encryption properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IDataEncryption DataEncryption { get; set; }
        /// <summary>Geo-backup encryption key status for Data encryption enabled server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionGeoBackupEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption for geo-backup of server.</summary>
        string DataEncryptionGeoBackupKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption for geo-backup of server.
        /// </summary>
        string DataEncryptionGeoBackupUserAssignedIdentityId { get; set; }
        /// <summary>Primary encryption key status for Data encryption enabled server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.KeyStatusEnum? DataEncryptionPrimaryEncryptionKeyStatus { get; set; }
        /// <summary>URI for the key in keyvault for data encryption of the primary server.</summary>
        string DataEncryptionPrimaryKeyUri { get; set; }
        /// <summary>
        /// Resource Id for the User assigned identity to be used for data encryption of the primary server.
        /// </summary>
        string DataEncryptionPrimaryUserAssignedIdentityId { get; set; }
        /// <summary>Data encryption type to depict if it is System Managed vs Azure Key vault.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ArmServerKeyType? DataEncryptionType { get; set; }
        /// <summary>High availability properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IHighAvailability HighAvailability { get; set; }
        /// <summary>The HA mode for the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.HighAvailabilityMode? HighAvailabilityMode { get; set; }
        /// <summary>availability zone information of the standby.</summary>
        string HighAvailabilityStandbyAvailabilityZone { get; set; }
        /// <summary>A state of a HA server that is visible to user.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerHaState? HighAvailabilityState { get; set; }
        /// <summary>Describes the identity of the application.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentity Identity { get; set; }
        /// <summary>Tenant id of the server.</summary>
        string IdentityTenantId { get; set; }
        /// <summary>
        /// the types of identities associated with this resource; currently restricted to 'None and UserAssigned'
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.IdentityType? IdentityType { get; set; }
        /// <summary>represents user assigned identities map.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IUserAssignedIdentityMap IdentityUserAssignedIdentity { get; set; }
        /// <summary>Maintenance window properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IMaintenanceWindow MaintenanceWindow { get; set; }
        /// <summary>indicates whether custom window is enabled or disabled</summary>
        string MaintenanceWindowCustomWindow { get; set; }
        /// <summary>day of week for maintenance window</summary>
        int? MaintenanceWindowDayOfWeek { get; set; }
        /// <summary>start hour for maintenance window</summary>
        int? MaintenanceWindowStartHour { get; set; }
        /// <summary>start minute for maintenance window</summary>
        int? MaintenanceWindowStartMinute { get; set; }
        /// <summary>
        /// Network properties of a server. These are required to be passed only in case if server is a private access server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.INetwork Network { get; set; }
        /// <summary>
        /// Delegated subnet arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        string NetworkDelegatedSubnetResourceId { get; set; }
        /// <summary>
        /// Private dns zone arm resource id. This is required to be passed during create, in case we want the server to be VNET injected,
        /// i.e. Private access server. During update, pass this only if we want to update the value for Private DNS zone.
        /// </summary>
        string NetworkPrivateDnsZoneArmResourceId { get; set; }
        /// <summary>public network access is enabled or not</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerPublicNetworkAccessState? NetworkPublicNetworkAccess { get; set; }
        /// <summary>Properties of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerPropertiesForUpdate Property { get; set; }
        /// <summary>
        /// Replica properties of a server. These Replica properties are required to be passed only in case you want to Promote a
        /// server.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IReplica Replica { get; set; }
        /// <summary>Replicas allowed for a server.</summary>
        int? ReplicaCapacity { get; set; }
        /// <summary>Sets the promote mode for a replica server. This is a write only property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReadReplicaPromoteMode? ReplicaPromoteMode { get; set; }
        /// <summary>Sets the promote options for a replica server. This is a write only property.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationPromoteOption? ReplicaPromoteOption { get; set; }
        /// <summary>
        /// Gets the replication state of a replica server. This property is returned only for replicas api call. Supported values
        /// are Active, Catchup, Provisioning, Updating, Broken, Reconfiguring
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationState? ReplicaReplicationState { get; set; }
        /// <summary>Used to indicate role of the server in replication set.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicaRole { get; set; }
        /// <summary>Replication role of the server</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ReplicationRole? ReplicationRole { get; set; }
        /// <summary>The SKU (pricing tier) of the server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.ISku Sku { get; set; }
        /// <summary>The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.</summary>
        string SkuName { get; set; }
        /// <summary>The tier of the particular SKU, e.g. Burstable.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.SkuTier? SkuTier { get; set; }
        /// <summary>Storage properties of a server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IStorage Storage { get; set; }
        /// <summary>Flag to enable / disable Storage Auto grow for flexible server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageAutoGrow? StorageAutoGrow { get; set; }
        /// <summary>
        /// Storage tier IOPS quantity. This property is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        int? StorageIop { get; set; }
        /// <summary>Max storage allowed for a server.</summary>
        int? StorageSizeGb { get; set; }
        /// <summary>
        /// Storage throughput for the server. This is required to be set for storage Type PremiumV2_LRS
        /// </summary>
        int? StorageThroughput { get; set; }
        /// <summary>Name of storage tier for IOPS.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.AzureManagedDiskPerformanceTiers? StorageTier { get; set; }
        /// <summary>
        /// Storage type for the server. Allowed values are Premium_LRS and PremiumV2_LRS, and default is Premium_LRS if not specified
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.StorageType? StorageType { get; set; }
        /// <summary>Application-specific metadata in the form of key-value pairs.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Models.Api20240801.IServerForUpdateTags Tag { get; set; }
        /// <summary>PostgreSQL Server version. Version 16 is currently not supported for MVU.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PostgreSql.Support.ServerVersion? Version { get; set; }

    }
}