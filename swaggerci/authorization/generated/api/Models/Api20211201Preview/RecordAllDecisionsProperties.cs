// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Record All Decisions payload.</summary>
    public partial class RecordAllDecisionsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IRecordAllDecisionsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IRecordAllDecisionsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Decision" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.RecordAllDecisionsResult? _decision;

        /// <summary>The decision to make. Approvers can take action of Approve/Deny</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.RecordAllDecisionsResult? Decision { get => this._decision; set => this._decision = value; }

        /// <summary>Backing field for <see cref="Justification" /> property.</summary>
        private string _justification;

        /// <summary>Justification provided by approvers for their action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Justification { get => this._justification; set => this._justification = value; }

        /// <summary>Internal Acessors for PrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IRecordAllDecisionsPropertiesInternal.PrincipalId { get => this._principalId; set { {_principalId = value;} } }

        /// <summary>Internal Acessors for ResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IRecordAllDecisionsPropertiesInternal.ResourceId { get => this._resourceId; set { {_resourceId = value;} } }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>The id of principal which needs to be approved/denied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string PrincipalId { get => this._principalId; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>The id of resource which needs to be approved/denied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; }

        /// <summary>Creates an new <see cref="RecordAllDecisionsProperties" /> instance.</summary>
        public RecordAllDecisionsProperties()
        {

        }
    }
    /// Record All Decisions payload.
    public partial interface IRecordAllDecisionsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The decision to make. Approvers can take action of Approve/Deny</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The decision to make. Approvers can take action of Approve/Deny",
        SerializedName = @"decision",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.RecordAllDecisionsResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.RecordAllDecisionsResult? Decision { get; set; }
        /// <summary>Justification provided by approvers for their action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Justification provided by approvers for their action",
        SerializedName = @"justification",
        PossibleTypes = new [] { typeof(string) })]
        string Justification { get; set; }
        /// <summary>The id of principal which needs to be approved/denied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of principal which needs to be approved/denied.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get;  }
        /// <summary>The id of resource which needs to be approved/denied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of resource which needs to be approved/denied.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get;  }

    }
    /// Record All Decisions payload.
    internal partial interface IRecordAllDecisionsPropertiesInternal

    {
        /// <summary>The decision to make. Approvers can take action of Approve/Deny</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.RecordAllDecisionsResult? Decision { get; set; }
        /// <summary>Justification provided by approvers for their action</summary>
        string Justification { get; set; }
        /// <summary>The id of principal which needs to be approved/denied.</summary>
        string PrincipalId { get; set; }
        /// <summary>The id of resource which needs to be approved/denied.</summary>
        string ResourceId { get; set; }

    }
}