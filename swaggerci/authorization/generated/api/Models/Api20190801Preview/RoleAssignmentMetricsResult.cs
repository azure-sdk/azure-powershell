// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Role Assignment Metrics</summary>
    public partial class RoleAssignmentMetricsResult :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview.IRoleAssignmentMetricsResult,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview.IRoleAssignmentMetricsResultInternal
    {

        /// <summary>Internal Acessors for RoleAssignmentsCurrentCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview.IRoleAssignmentMetricsResultInternal.RoleAssignmentsCurrentCount { get => this._roleAssignmentsCurrentCount; set { {_roleAssignmentsCurrentCount = value;} } }

        /// <summary>Internal Acessors for RoleAssignmentsLimit</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview.IRoleAssignmentMetricsResultInternal.RoleAssignmentsLimit { get => this._roleAssignmentsLimit; set { {_roleAssignmentsLimit = value;} } }

        /// <summary>Internal Acessors for RoleAssignmentsRemainingCount</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview.IRoleAssignmentMetricsResultInternal.RoleAssignmentsRemainingCount { get => this._roleAssignmentsRemainingCount; set { {_roleAssignmentsRemainingCount = value;} } }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20190801Preview.IRoleAssignmentMetricsResultInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>Backing field for <see cref="RoleAssignmentsCurrentCount" /> property.</summary>
        private long? _roleAssignmentsCurrentCount;

        /// <summary>The number of current role assignments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public long? RoleAssignmentsCurrentCount { get => this._roleAssignmentsCurrentCount; }

        /// <summary>Backing field for <see cref="RoleAssignmentsLimit" /> property.</summary>
        private long? _roleAssignmentsLimit;

        /// <summary>The role assignment limit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public long? RoleAssignmentsLimit { get => this._roleAssignmentsLimit; }

        /// <summary>Backing field for <see cref="RoleAssignmentsRemainingCount" /> property.</summary>
        private long? _roleAssignmentsRemainingCount;

        /// <summary>The number of remaining role assignments available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public long? RoleAssignmentsRemainingCount { get => this._roleAssignmentsRemainingCount; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>Creates an new <see cref="RoleAssignmentMetricsResult" /> instance.</summary>
        public RoleAssignmentMetricsResult()
        {

        }
    }
    /// Role Assignment Metrics
    public partial interface IRoleAssignmentMetricsResult :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The number of current role assignments.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of current role assignments.",
        SerializedName = @"roleAssignmentsCurrentCount",
        PossibleTypes = new [] { typeof(long) })]
        long? RoleAssignmentsCurrentCount { get;  }
        /// <summary>The role assignment limit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The role assignment limit.",
        SerializedName = @"roleAssignmentsLimit",
        PossibleTypes = new [] { typeof(long) })]
        long? RoleAssignmentsLimit { get;  }
        /// <summary>The number of remaining role assignments available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of remaining role assignments available.",
        SerializedName = @"roleAssignmentsRemainingCount",
        PossibleTypes = new [] { typeof(long) })]
        long? RoleAssignmentsRemainingCount { get;  }
        /// <summary>The subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription ID.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }

    }
    /// Role Assignment Metrics
    internal partial interface IRoleAssignmentMetricsResultInternal

    {
        /// <summary>The number of current role assignments.</summary>
        long? RoleAssignmentsCurrentCount { get; set; }
        /// <summary>The role assignment limit.</summary>
        long? RoleAssignmentsLimit { get; set; }
        /// <summary>The number of remaining role assignments available.</summary>
        long? RoleAssignmentsRemainingCount { get; set; }
        /// <summary>The subscription ID.</summary>
        string SubscriptionId { get; set; }

    }
}