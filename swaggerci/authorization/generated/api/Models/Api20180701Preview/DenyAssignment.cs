// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Deny Assignment</summary>
    public partial class DenyAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignment,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentInternal
    {

        /// <summary>The display name of the deny assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string DenyAssignmentName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).DenyAssignmentName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).DenyAssignmentName = value ?? null; }

        /// <summary>The description of the deny assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Description = value ?? null; }

        /// <summary>
        /// Determines if the deny assignment applies to child scopes. Default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public bool? DoNotApplyToChildScope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).DoNotApplyToChildScope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).DoNotApplyToChildScope = value ?? default(bool); }

        /// <summary>Array of principals to which the deny assignment does not apply.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal[] ExcludePrincipal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).ExcludePrincipal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).ExcludePrincipal = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The deny assignment ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>
        /// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public bool? IsSystemProtected { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).IsSystemProtected; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).IsSystemProtected = value ?? default(bool); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentProperties Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.DenyAssignmentProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The deny assignment name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>An array of permissions that are denied by the deny assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPermission[] Permission { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Permission; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Permission = value ?? null /* arrayOf */; }

        /// <summary>Array of principals to which the deny assignment applies.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal[] Principal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Principal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Principal = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentProperties _property;

        /// <summary>Deny assignment properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.DenyAssignmentProperties()); set => this._property = value; }

        /// <summary>The deny assignment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPropertiesInternal)Property).Scope = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The deny assignment type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="DenyAssignment" /> instance.</summary>
        public DenyAssignment()
        {

        }
    }
    /// Deny Assignment
    public partial interface IDenyAssignment :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The display name of the deny assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the deny assignment.",
        SerializedName = @"denyAssignmentName",
        PossibleTypes = new [] { typeof(string) })]
        string DenyAssignmentName { get; set; }
        /// <summary>The description of the deny assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the deny assignment.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>
        /// Determines if the deny assignment applies to child scopes. Default value is false.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines if the deny assignment applies to child scopes. Default value is false.",
        SerializedName = @"doNotApplyToChildScopes",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DoNotApplyToChildScope { get; set; }
        /// <summary>Array of principals to which the deny assignment does not apply.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of principals to which the deny assignment does not apply.",
        SerializedName = @"excludePrincipals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal[] ExcludePrincipal { get; set; }
        /// <summary>The deny assignment ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The deny assignment ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>
        /// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.",
        SerializedName = @"isSystemProtected",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSystemProtected { get; set; }
        /// <summary>The deny assignment name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The deny assignment name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>An array of permissions that are denied by the deny assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of permissions that are denied by the deny assignment.",
        SerializedName = @"permissions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPermission) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPermission[] Permission { get; set; }
        /// <summary>Array of principals to which the deny assignment applies.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of principals to which the deny assignment applies.",
        SerializedName = @"principals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal[] Principal { get; set; }
        /// <summary>The deny assignment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The deny assignment scope.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>The deny assignment type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The deny assignment type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Deny Assignment
    internal partial interface IDenyAssignmentInternal

    {
        /// <summary>The display name of the deny assignment.</summary>
        string DenyAssignmentName { get; set; }
        /// <summary>The description of the deny assignment.</summary>
        string Description { get; set; }
        /// <summary>
        /// Determines if the deny assignment applies to child scopes. Default value is false.
        /// </summary>
        bool? DoNotApplyToChildScope { get; set; }
        /// <summary>Array of principals to which the deny assignment does not apply.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal[] ExcludePrincipal { get; set; }
        /// <summary>The deny assignment ID.</summary>
        string Id { get; set; }
        /// <summary>
        /// Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
        /// </summary>
        bool? IsSystemProtected { get; set; }
        /// <summary>The deny assignment name.</summary>
        string Name { get; set; }
        /// <summary>An array of permissions that are denied by the deny assignment.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentPermission[] Permission { get; set; }
        /// <summary>Array of principals to which the deny assignment applies.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20201001Preview.IPrincipal[] Principal { get; set; }
        /// <summary>Deny assignment properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180701Preview.IDenyAssignmentProperties Property { get; set; }
        /// <summary>The deny assignment scope.</summary>
        string Scope { get; set; }
        /// <summary>The deny assignment type.</summary>
        string Type { get; set; }

    }
}