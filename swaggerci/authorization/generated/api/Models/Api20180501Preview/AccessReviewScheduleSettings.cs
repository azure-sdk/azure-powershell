// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Settings of an Access Review.</summary>
    public partial class AccessReviewScheduleSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewScheduleSettings,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewScheduleSettingsInternal
    {

        /// <summary>Backing field for <see cref="AutoApplyDecisionsEnabled" /> property.</summary>
        private bool? _autoApplyDecisionsEnabled;

        /// <summary>
        /// Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled.
        /// If not enabled, a user must, after the review completes, apply the access review.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? AutoApplyDecisionsEnabled { get => this._autoApplyDecisionsEnabled; set => this._autoApplyDecisionsEnabled = value; }

        /// <summary>Backing field for <see cref="DefaultDecision" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType? _defaultDecision;

        /// <summary>
        /// This specifies the behavior for the autoReview feature when an access review completes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType? DefaultDecision { get => this._defaultDecision; set => this._defaultDecision = value; }

        /// <summary>Backing field for <see cref="DefaultDecisionEnabled" /> property.</summary>
        private bool? _defaultDecisionEnabled;

        /// <summary>
        /// Flag to indicate whether reviewers are required to provide a justification when reviewing access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? DefaultDecisionEnabled { get => this._defaultDecisionEnabled; set => this._defaultDecisionEnabled = value; }

        /// <summary>Backing field for <see cref="InstanceDurationInDay" /> property.</summary>
        private int? _instanceDurationInDay;

        /// <summary>The duration in days for an instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public int? InstanceDurationInDay { get => this._instanceDurationInDay; set => this._instanceDurationInDay = value; }

        /// <summary>Backing field for <see cref="JustificationRequiredOnApproval" /> property.</summary>
        private bool? _justificationRequiredOnApproval;

        /// <summary>
        /// Flag to indicate whether the reviewer is required to pass justification when recording a decision.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? JustificationRequiredOnApproval { get => this._justificationRequiredOnApproval; set => this._justificationRequiredOnApproval = value; }

        /// <summary>Backing field for <see cref="MailNotificationsEnabled" /> property.</summary>
        private bool? _mailNotificationsEnabled;

        /// <summary>
        /// Flag to indicate whether sending mails to reviewers and the review creator is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? MailNotificationsEnabled { get => this._mailNotificationsEnabled; set => this._mailNotificationsEnabled = value; }

        /// <summary>Internal Acessors for Recurrence</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettings Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewScheduleSettingsInternal.Recurrence { get => (this._recurrence = this._recurrence ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.AccessReviewRecurrenceSettings()); set { {_recurrence = value;} } }

        /// <summary>Internal Acessors for RecurrencePattern</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrencePattern Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewScheduleSettingsInternal.RecurrencePattern { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).Pattern; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).Pattern = value; }

        /// <summary>Internal Acessors for RecurrenceRange</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceRange Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewScheduleSettingsInternal.RecurrenceRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).Range; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).Range = value; }

        /// <summary>
        /// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public int? PatternInterval { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).PatternInterval; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).PatternInterval = value ?? default(int); }

        /// <summary>The recurrence type : weekly, monthly, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType? PatternType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).PatternType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).PatternType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType)""); }

        /// <summary>The DateTime when the review is scheduled to end. Required if type is endDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? RangeEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeEndDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// The number of times to repeat the access review. Required and must be positive if type is numbered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public int? RangeNumberOfOccurrence { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeNumberOfOccurrence; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeNumberOfOccurrence = value ?? default(int); }

        /// <summary>
        /// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? RangeStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeStartDate = value ?? default(global::System.DateTime); }

        /// <summary>The recurrence range type. The possible values are: endDate, noEnd, numbered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType? RangeType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettingsInternal)Recurrence).RangeType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType)""); }

        /// <summary>Backing field for <see cref="RecommendationsEnabled" /> property.</summary>
        private bool? _recommendationsEnabled;

        /// <summary>Flag to indicate whether showing recommendations to reviewers is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? RecommendationsEnabled { get => this._recommendationsEnabled; set => this._recommendationsEnabled = value; }

        /// <summary>Backing field for <see cref="Recurrence" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettings _recurrence;

        /// <summary>Access Review Settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettings Recurrence { get => (this._recurrence = this._recurrence ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.AccessReviewRecurrenceSettings()); set => this._recurrence = value; }

        /// <summary>Backing field for <see cref="ReminderNotificationsEnabled" /> property.</summary>
        private bool? _reminderNotificationsEnabled;

        /// <summary>Flag to indicate whether sending reminder emails to reviewers are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? ReminderNotificationsEnabled { get => this._reminderNotificationsEnabled; set => this._reminderNotificationsEnabled = value; }

        /// <summary>Creates an new <see cref="AccessReviewScheduleSettings" /> instance.</summary>
        public AccessReviewScheduleSettings()
        {

        }
    }
    /// Settings of an Access Review.
    public partial interface IAccessReviewScheduleSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled.
        /// If not enabled, a user must, after the review completes, apply the access review.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review.",
        SerializedName = @"autoApplyDecisionsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoApplyDecisionsEnabled { get; set; }
        /// <summary>
        /// This specifies the behavior for the autoReview feature when an access review completes.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This specifies the behavior for the autoReview feature when an access review completes.",
        SerializedName = @"defaultDecision",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType? DefaultDecision { get; set; }
        /// <summary>
        /// Flag to indicate whether reviewers are required to provide a justification when reviewing access.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to indicate whether reviewers are required to provide a justification when reviewing access.",
        SerializedName = @"defaultDecisionEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DefaultDecisionEnabled { get; set; }
        /// <summary>The duration in days for an instance.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The duration in days for an instance.",
        SerializedName = @"instanceDurationInDays",
        PossibleTypes = new [] { typeof(int) })]
        int? InstanceDurationInDay { get; set; }
        /// <summary>
        /// Flag to indicate whether the reviewer is required to pass justification when recording a decision.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to indicate whether the reviewer is required to pass justification when recording a decision.",
        SerializedName = @"justificationRequiredOnApproval",
        PossibleTypes = new [] { typeof(bool) })]
        bool? JustificationRequiredOnApproval { get; set; }
        /// <summary>
        /// Flag to indicate whether sending mails to reviewers and the review creator is enabled.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to indicate whether sending mails to reviewers and the review creator is enabled.",
        SerializedName = @"mailNotificationsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? MailNotificationsEnabled { get; set; }
        /// <summary>
        /// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.",
        SerializedName = @"interval",
        PossibleTypes = new [] { typeof(int) })]
        int? PatternInterval { get; set; }
        /// <summary>The recurrence type : weekly, monthly, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The recurrence type : weekly, monthly, etc.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType? PatternType { get; set; }
        /// <summary>The DateTime when the review is scheduled to end. Required if type is endDate</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DateTime when the review is scheduled to end. Required if type is endDate",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RangeEndDate { get; set; }
        /// <summary>
        /// The number of times to repeat the access review. Required and must be positive if type is numbered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of times to repeat the access review. Required and must be positive if type is numbered.",
        SerializedName = @"numberOfOccurrences",
        PossibleTypes = new [] { typeof(int) })]
        int? RangeNumberOfOccurrence { get; set; }
        /// <summary>
        /// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? RangeStartDate { get; set; }
        /// <summary>The recurrence range type. The possible values are: endDate, noEnd, numbered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The recurrence range type. The possible values are: endDate, noEnd, numbered.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType? RangeType { get; set; }
        /// <summary>Flag to indicate whether showing recommendations to reviewers is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to indicate whether showing recommendations to reviewers is enabled.",
        SerializedName = @"recommendationsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RecommendationsEnabled { get; set; }
        /// <summary>Flag to indicate whether sending reminder emails to reviewers are enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to indicate whether sending reminder emails to reviewers are enabled.",
        SerializedName = @"reminderNotificationsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ReminderNotificationsEnabled { get; set; }

    }
    /// Settings of an Access Review.
    internal partial interface IAccessReviewScheduleSettingsInternal

    {
        /// <summary>
        /// Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled.
        /// If not enabled, a user must, after the review completes, apply the access review.
        /// </summary>
        bool? AutoApplyDecisionsEnabled { get; set; }
        /// <summary>
        /// This specifies the behavior for the autoReview feature when an access review completes.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DefaultDecisionType? DefaultDecision { get; set; }
        /// <summary>
        /// Flag to indicate whether reviewers are required to provide a justification when reviewing access.
        /// </summary>
        bool? DefaultDecisionEnabled { get; set; }
        /// <summary>The duration in days for an instance.</summary>
        int? InstanceDurationInDay { get; set; }
        /// <summary>
        /// Flag to indicate whether the reviewer is required to pass justification when recording a decision.
        /// </summary>
        bool? JustificationRequiredOnApproval { get; set; }
        /// <summary>
        /// Flag to indicate whether sending mails to reviewers and the review creator is enabled.
        /// </summary>
        bool? MailNotificationsEnabled { get; set; }
        /// <summary>
        /// The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.
        /// </summary>
        int? PatternInterval { get; set; }
        /// <summary>The recurrence type : weekly, monthly, etc.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrencePatternType? PatternType { get; set; }
        /// <summary>The DateTime when the review is scheduled to end. Required if type is endDate</summary>
        global::System.DateTime? RangeEndDate { get; set; }
        /// <summary>
        /// The number of times to repeat the access review. Required and must be positive if type is numbered.
        /// </summary>
        int? RangeNumberOfOccurrence { get; set; }
        /// <summary>
        /// The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
        /// </summary>
        global::System.DateTime? RangeStartDate { get; set; }
        /// <summary>The recurrence range type. The possible values are: endDate, noEnd, numbered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewRecurrenceRangeType? RangeType { get; set; }
        /// <summary>Flag to indicate whether showing recommendations to reviewers is enabled.</summary>
        bool? RecommendationsEnabled { get; set; }
        /// <summary>Access Review Settings.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceSettings Recurrence { get; set; }
        /// <summary>Access Review schedule definition recurrence pattern.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrencePattern RecurrencePattern { get; set; }
        /// <summary>Access Review schedule definition recurrence range.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20180501Preview.IAccessReviewRecurrenceRange RecurrenceRange { get; set; }
        /// <summary>Flag to indicate whether sending reminder emails to reviewers are enabled.</summary>
        bool? ReminderNotificationsEnabled { get; set; }

    }
}