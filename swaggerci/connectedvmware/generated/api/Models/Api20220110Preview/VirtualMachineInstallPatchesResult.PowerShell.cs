// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.PowerShell;

    /// <summary>The result summary of an installation operation.</summary>
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInstallPatchesResultTypeConverter))]
    public partial class VirtualMachineInstallPatchesResult
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.VirtualMachineInstallPatchesResult"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResult"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResult DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new VirtualMachineInstallPatchesResult(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.VirtualMachineInstallPatchesResult"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResult"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResult DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new VirtualMachineInstallPatchesResult(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="VirtualMachineInstallPatchesResult" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="VirtualMachineInstallPatchesResult" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResult FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.SerializationMode.IncludeAll)?.ToString();

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.VirtualMachineInstallPatchesResult"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal VirtualMachineInstallPatchesResult(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ErrorDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetail = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IErrorDetail) content.GetValueForProperty("ErrorDetail",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetail, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.ErrorDetailTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStatus.CreateFrom);
            }
            if (content.Contains("InstallationActivityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstallationActivityId = (string) content.GetValueForProperty("InstallationActivityId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstallationActivityId, global::System.Convert.ToString);
            }
            if (content.Contains("RebootStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).RebootStatus = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchRebootStatus?) content.GetValueForProperty("RebootStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).RebootStatus, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchRebootStatus.CreateFrom);
            }
            if (content.Contains("MaintenanceWindowExceeded"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).MaintenanceWindowExceeded = (bool?) content.GetValueForProperty("MaintenanceWindowExceeded",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).MaintenanceWindowExceeded, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExcludedPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ExcludedPatchCount = (int?) content.GetValueForProperty("ExcludedPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ExcludedPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NotSelectedPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).NotSelectedPatchCount = (int?) content.GetValueForProperty("NotSelectedPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).NotSelectedPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PendingPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PendingPatchCount = (int?) content.GetValueForProperty("PendingPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PendingPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InstalledPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstalledPatchCount = (int?) content.GetValueForProperty("InstalledPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstalledPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FailedPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).FailedPatchCount = (int?) content.GetValueForProperty("FailedPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).FailedPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartDateTime = (global::System.DateTime?) content.GetValueForProperty("StartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastModifiedDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).LastModifiedDateTime = (global::System.DateTime?) content.GetValueForProperty("LastModifiedDateTime",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).LastModifiedDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StartedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartedBy = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStartedBy?) content.GetValueForProperty("StartedBy",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartedBy, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStartedBy.CreateFrom);
            }
            if (content.Contains("PatchServiceUsed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PatchServiceUsed = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchServiceUsed?) content.GetValueForProperty("PatchServiceUsed",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PatchServiceUsed, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchServiceUsed.CreateFrom);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSTypeUm?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSTypeUm.CreateFrom);
            }
            if (content.Contains("ErrorDetailCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailCode = (string) content.GetValueForProperty("ErrorDetailCode",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailCode, global::System.Convert.ToString);
            }
            if (content.Contains("ErrorDetailMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailMessage = (string) content.GetValueForProperty("ErrorDetailMessage",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailMessage, global::System.Convert.ToString);
            }
            if (content.Contains("ErrorDetailTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailTarget = (string) content.GetValueForProperty("ErrorDetailTarget",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailTarget, global::System.Convert.ToString);
            }
            if (content.Contains("ErrorDetailsDetails"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailsDetails = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IErrorDetail[]) content.GetValueForProperty("ErrorDetailsDetails",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailsDetails, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IErrorDetail>(__y, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.ErrorDetailTypeConverter.ConvertFrom));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.VirtualMachineInstallPatchesResult"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal VirtualMachineInstallPatchesResult(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("ErrorDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetail = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IErrorDetail) content.GetValueForProperty("ErrorDetail",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetail, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.ErrorDetailTypeConverter.ConvertFrom);
            }
            if (content.Contains("Status"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).Status = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStatus?) content.GetValueForProperty("Status",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).Status, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStatus.CreateFrom);
            }
            if (content.Contains("InstallationActivityId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstallationActivityId = (string) content.GetValueForProperty("InstallationActivityId",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstallationActivityId, global::System.Convert.ToString);
            }
            if (content.Contains("RebootStatus"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).RebootStatus = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchRebootStatus?) content.GetValueForProperty("RebootStatus",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).RebootStatus, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchRebootStatus.CreateFrom);
            }
            if (content.Contains("MaintenanceWindowExceeded"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).MaintenanceWindowExceeded = (bool?) content.GetValueForProperty("MaintenanceWindowExceeded",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).MaintenanceWindowExceeded, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("ExcludedPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ExcludedPatchCount = (int?) content.GetValueForProperty("ExcludedPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ExcludedPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NotSelectedPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).NotSelectedPatchCount = (int?) content.GetValueForProperty("NotSelectedPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).NotSelectedPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("PendingPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PendingPatchCount = (int?) content.GetValueForProperty("PendingPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PendingPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("InstalledPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstalledPatchCount = (int?) content.GetValueForProperty("InstalledPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).InstalledPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("FailedPatchCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).FailedPatchCount = (int?) content.GetValueForProperty("FailedPatchCount",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).FailedPatchCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("StartDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartDateTime = (global::System.DateTime?) content.GetValueForProperty("StartDateTime",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastModifiedDateTime"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).LastModifiedDateTime = (global::System.DateTime?) content.GetValueForProperty("LastModifiedDateTime",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).LastModifiedDateTime, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("StartedBy"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartedBy = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStartedBy?) content.GetValueForProperty("StartedBy",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).StartedBy, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchOperationStartedBy.CreateFrom);
            }
            if (content.Contains("PatchServiceUsed"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PatchServiceUsed = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchServiceUsed?) content.GetValueForProperty("PatchServiceUsed",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).PatchServiceUsed, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.PatchServiceUsed.CreateFrom);
            }
            if (content.Contains("OSType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).OSType = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSTypeUm?) content.GetValueForProperty("OSType",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).OSType, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.OSTypeUm.CreateFrom);
            }
            if (content.Contains("ErrorDetailCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailCode = (string) content.GetValueForProperty("ErrorDetailCode",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailCode, global::System.Convert.ToString);
            }
            if (content.Contains("ErrorDetailMessage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailMessage = (string) content.GetValueForProperty("ErrorDetailMessage",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailMessage, global::System.Convert.ToString);
            }
            if (content.Contains("ErrorDetailTarget"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailTarget = (string) content.GetValueForProperty("ErrorDetailTarget",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailTarget, global::System.Convert.ToString);
            }
            if (content.Contains("ErrorDetailsDetails"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailsDetails = (Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IErrorDetail[]) content.GetValueForProperty("ErrorDetailsDetails",((Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IVirtualMachineInstallPatchesResultInternal)this).ErrorDetailsDetails, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.IErrorDetail>(__y, Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220110Preview.ErrorDetailTypeConverter.ConvertFrom));
            }
            AfterDeserializePSObject(content);
        }
    }
    /// The result summary of an installation operation.
    [System.ComponentModel.TypeConverter(typeof(VirtualMachineInstallPatchesResultTypeConverter))]
    public partial interface IVirtualMachineInstallPatchesResult

    {

    }
}