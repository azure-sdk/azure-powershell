// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220715Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Extensions;

    /// <summary>Input for InstallPatches on a Linux VM, as directly received by the API</summary>
    public partial class LinuxParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220715Preview.ILinuxParameters,
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Models.Api20220715Preview.ILinuxParametersInternal
    {

        /// <summary>Backing field for <see cref="ClassificationsToInclude" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchClassificationLinux[] _classificationsToInclude;

        /// <summary>The update classifications to select when installing patches for Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchClassificationLinux[] ClassificationsToInclude { get => this._classificationsToInclude; set => this._classificationsToInclude = value; }

        /// <summary>Backing field for <see cref="PackageNameMasksToExclude" /> property.</summary>
        private string[] _packageNameMasksToExclude;

        /// <summary>packages to exclude in the patch operation. Format: packageName=packageVersion</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string[] PackageNameMasksToExclude { get => this._packageNameMasksToExclude; set => this._packageNameMasksToExclude = value; }

        /// <summary>Backing field for <see cref="PackageNameMasksToInclude" /> property.</summary>
        private string[] _packageNameMasksToInclude;

        /// <summary>packages to include in the patch operation. Format: packageName=packageVersion</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.PropertyOrigin.Owned)]
        public string[] PackageNameMasksToInclude { get => this._packageNameMasksToInclude; set => this._packageNameMasksToInclude = value; }

        /// <summary>Creates an new <see cref="LinuxParameters" /> instance.</summary>
        public LinuxParameters()
        {

        }
    }
    /// Input for InstallPatches on a Linux VM, as directly received by the API
    public partial interface ILinuxParameters :
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.IJsonSerializable
    {
        /// <summary>The update classifications to select when installing patches for Linux.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The update classifications to select when installing patches for Linux.",
        SerializedName = @"classificationsToInclude",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchClassificationLinux) })]
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchClassificationLinux[] ClassificationsToInclude { get; set; }
        /// <summary>packages to exclude in the patch operation. Format: packageName=packageVersion</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"packages to exclude in the patch operation. Format: packageName=packageVersion",
        SerializedName = @"packageNameMasksToExclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] PackageNameMasksToExclude { get; set; }
        /// <summary>packages to include in the patch operation. Format: packageName=packageVersion</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"packages to include in the patch operation. Format: packageName=packageVersion",
        SerializedName = @"packageNameMasksToInclude",
        PossibleTypes = new [] { typeof(string) })]
        string[] PackageNameMasksToInclude { get; set; }

    }
    /// Input for InstallPatches on a Linux VM, as directly received by the API
    internal partial interface ILinuxParametersInternal

    {
        /// <summary>The update classifications to select when installing patches for Linux.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ArcVMwareServiceApi.Support.VMGuestPatchClassificationLinux[] ClassificationsToInclude { get; set; }
        /// <summary>packages to exclude in the patch operation. Format: packageName=packageVersion</summary>
        string[] PackageNameMasksToExclude { get; set; }
        /// <summary>packages to include in the patch operation. Format: packageName=packageVersion</summary>
        string[] PackageNameMasksToInclude { get; set; }

    }
}