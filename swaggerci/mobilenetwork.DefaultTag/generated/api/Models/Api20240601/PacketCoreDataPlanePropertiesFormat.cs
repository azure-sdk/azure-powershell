// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Extensions;

    /// <summary>Packet core data plane properties.</summary>
    public partial class PacketCoreDataPlanePropertiesFormat :
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IPacketCoreDataPlanePropertiesFormat,
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IPacketCoreDataPlanePropertiesFormatInternal
    {

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IPacketCoreDataPlanePropertiesFormatInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for UserPlaneAccessInterface</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfaceProperties Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IPacketCoreDataPlanePropertiesFormatInternal.UserPlaneAccessInterface { get => (this._userPlaneAccessInterface = this._userPlaneAccessInterface ?? new Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.InterfaceProperties()); set { {_userPlaneAccessInterface = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Support.ProvisioningState? _provisioningState;

        /// <summary>The provisioning state of the packet core data plane resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="UserPlaneAccessInterface" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfaceProperties _userPlaneAccessInterface;

        /// <summary>
        /// The user plane interface on the access network. For 5G networks, this is the N3 interface. For 4G networks, this is the
        /// S1-U interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfaceProperties UserPlaneAccessInterface { get => (this._userPlaneAccessInterface = this._userPlaneAccessInterface ?? new Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.InterfaceProperties()); set => this._userPlaneAccessInterface = value; }

        /// <summary>The IPv4 addresses of the endpoints to send BFD probes to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public string[] UserPlaneAccessInterfaceBfdIpv4Endpoint { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).BfdIpv4Endpoint; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).BfdIpv4Endpoint = value ?? null /* arrayOf */; }

        /// <summary>The IPv4 address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public string UserPlaneAccessInterfaceIpv4Address { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4Address; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4Address = value ?? null; }

        /// <summary>The list of IPv4 addresses, for a multi-node system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public string[] UserPlaneAccessInterfaceIpv4AddressList { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4AddressList; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4AddressList = value ?? null /* arrayOf */; }

        /// <summary>The default IPv4 gateway (router).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public string UserPlaneAccessInterfaceIpv4Gateway { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4Gateway; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4Gateway = value ?? null; }

        /// <summary>The IPv4 subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public string UserPlaneAccessInterfaceIpv4Subnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4Subnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Ipv4Subnet = value ?? null; }

        /// <summary>
        /// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public string UserPlaneAccessInterfaceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).Name = value ?? null; }

        /// <summary>VLAN identifier of the network interface. Example: 501.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Inlined)]
        public int? UserPlaneAccessInterfaceVlanId { get => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).VlanId; set => ((Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfacePropertiesInternal)UserPlaneAccessInterface).VlanId = value ?? default(int); }

        /// <summary>Backing field for <see cref="UserPlaneAccessVirtualIpv4Address" /> property.</summary>
        private string[] _userPlaneAccessVirtualIpv4Address;

        /// <summary>
        /// The virtual IP address(es) for the user plane on the access network in a High Availability (HA) system. In an HA deployment
        /// the access network router should be configured to forward traffic for this address to the control plane access interface
        /// on the active or standby node. In non-HA system this list should be omitted or empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.PropertyOrigin.Owned)]
        public string[] UserPlaneAccessVirtualIpv4Address { get => this._userPlaneAccessVirtualIpv4Address; set => this._userPlaneAccessVirtualIpv4Address = value; }

        /// <summary>Creates an new <see cref="PacketCoreDataPlanePropertiesFormat" /> instance.</summary>
        public PacketCoreDataPlanePropertiesFormat()
        {

        }
    }
    /// Packet core data plane properties.
    public partial interface IPacketCoreDataPlanePropertiesFormat :
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.IJsonSerializable
    {
        /// <summary>The provisioning state of the packet core data plane resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The provisioning state of the packet core data plane resource.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>The IPv4 addresses of the endpoints to send BFD probes to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 addresses of the endpoints to send BFD probes to.",
        SerializedName = @"bfdIpv4Endpoints",
        PossibleTypes = new [] { typeof(string) })]
        string[] UserPlaneAccessInterfaceBfdIpv4Endpoint { get; set; }
        /// <summary>The IPv4 address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 address.",
        SerializedName = @"ipv4Address",
        PossibleTypes = new [] { typeof(string) })]
        string UserPlaneAccessInterfaceIpv4Address { get; set; }
        /// <summary>The list of IPv4 addresses, for a multi-node system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of IPv4 addresses, for a multi-node system.",
        SerializedName = @"ipv4AddressList",
        PossibleTypes = new [] { typeof(string) })]
        string[] UserPlaneAccessInterfaceIpv4AddressList { get; set; }
        /// <summary>The default IPv4 gateway (router).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default IPv4 gateway (router).",
        SerializedName = @"ipv4Gateway",
        PossibleTypes = new [] { typeof(string) })]
        string UserPlaneAccessInterfaceIpv4Gateway { get; set; }
        /// <summary>The IPv4 subnet.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The IPv4 subnet.",
        SerializedName = @"ipv4Subnet",
        PossibleTypes = new [] { typeof(string) })]
        string UserPlaneAccessInterfaceIpv4Subnet { get; set; }
        /// <summary>
        /// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge device.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string UserPlaneAccessInterfaceName { get; set; }
        /// <summary>VLAN identifier of the network interface. Example: 501.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"VLAN identifier of the network interface. Example: 501.",
        SerializedName = @"vlanId",
        PossibleTypes = new [] { typeof(int) })]
        int? UserPlaneAccessInterfaceVlanId { get; set; }
        /// <summary>
        /// The virtual IP address(es) for the user plane on the access network in a High Availability (HA) system. In an HA deployment
        /// the access network router should be configured to forward traffic for this address to the control plane access interface
        /// on the active or standby node. In non-HA system this list should be omitted or empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The virtual IP address(es) for the user plane on the access network in a High Availability (HA) system. In an HA deployment the access network router should be configured to forward traffic for this address to the control plane access interface on the active or standby node. In non-HA system this list should be omitted or empty.",
        SerializedName = @"userPlaneAccessVirtualIpv4Addresses",
        PossibleTypes = new [] { typeof(string) })]
        string[] UserPlaneAccessVirtualIpv4Address { get; set; }

    }
    /// Packet core data plane properties.
    internal partial interface IPacketCoreDataPlanePropertiesFormatInternal

    {
        /// <summary>The provisioning state of the packet core data plane resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The user plane interface on the access network. For 5G networks, this is the N3 interface. For 4G networks, this is the
        /// S1-U interface.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.MobileNetwork.Models.Api20240601.IInterfaceProperties UserPlaneAccessInterface { get; set; }
        /// <summary>The IPv4 addresses of the endpoints to send BFD probes to.</summary>
        string[] UserPlaneAccessInterfaceBfdIpv4Endpoint { get; set; }
        /// <summary>The IPv4 address.</summary>
        string UserPlaneAccessInterfaceIpv4Address { get; set; }
        /// <summary>The list of IPv4 addresses, for a multi-node system.</summary>
        string[] UserPlaneAccessInterfaceIpv4AddressList { get; set; }
        /// <summary>The default IPv4 gateway (router).</summary>
        string UserPlaneAccessInterfaceIpv4Gateway { get; set; }
        /// <summary>The IPv4 subnet.</summary>
        string UserPlaneAccessInterfaceIpv4Subnet { get; set; }
        /// <summary>
        /// The logical name for this interface. This should match one of the interfaces configured on your Azure Stack Edge device.
        /// </summary>
        string UserPlaneAccessInterfaceName { get; set; }
        /// <summary>VLAN identifier of the network interface. Example: 501.</summary>
        int? UserPlaneAccessInterfaceVlanId { get; set; }
        /// <summary>
        /// The virtual IP address(es) for the user plane on the access network in a High Availability (HA) system. In an HA deployment
        /// the access network router should be configured to forward traffic for this address to the control plane access interface
        /// on the active or standby node. In non-HA system this list should be omitted or empty.
        /// </summary>
        string[] UserPlaneAccessVirtualIpv4Address { get; set; }

    }
}