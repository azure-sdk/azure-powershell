// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Extensions;

    /// <summary>A metric specification.</summary>
    public partial class MetricSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecification,
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal
    {

        /// <summary>Backing field for <see cref="AggregationType" /> property.</summary>
        private string _aggregationType;

        /// <summary>Type of the aggregation (Average, Minimum, Maximum, Total or Count).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string AggregationType { get => this._aggregationType; }

        /// <summary>Backing field for <see cref="Availability" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IAvailability[] _availability;

        /// <summary>List of availabilities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IAvailability[] Availability { get => this._availability; }

        /// <summary>Backing field for <see cref="DisplayDescription" /> property.</summary>
        private string _displayDescription;

        /// <summary>Description of the metric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string DisplayDescription { get => this._displayDescription; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>User-visible metric name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="FillGapWithZero" /> property.</summary>
        private bool? _fillGapWithZero;

        /// <summary>
        /// Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public bool? FillGapWithZero { get => this._fillGapWithZero; }

        /// <summary>Backing field for <see cref="MetricFilterPattern" /> property.</summary>
        private string _metricFilterPattern;

        /// <summary>
        /// The matching regex pattern to be applied to the field pointed by the "metricsFilterPathSelector" flag in the ARM manifest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string MetricFilterPattern { get => this._metricFilterPattern; }

        /// <summary>Internal Acessors for AggregationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.AggregationType { get => this._aggregationType; set { {_aggregationType = value;} } }

        /// <summary>Internal Acessors for Availability</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IAvailability[] Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.Availability { get => this._availability; set { {_availability = value;} } }

        /// <summary>Internal Acessors for DisplayDescription</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.DisplayDescription { get => this._displayDescription; set { {_displayDescription = value;} } }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for FillGapWithZero</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.FillGapWithZero { get => this._fillGapWithZero; set { {_fillGapWithZero = value;} } }

        /// <summary>Internal Acessors for MetricFilterPattern</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.MetricFilterPattern { get => this._metricFilterPattern; set { {_metricFilterPattern = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for SupportedTimeGrainType</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.SupportedTimeGrainType { get => this._supportedTimeGrainType; set { {_supportedTimeGrainType = value;} } }

        /// <summary>Internal Acessors for Unit</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IMetricSpecificationInternal.Unit { get => this._unit; set { {_unit = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Metric name / id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>Backing field for <see cref="SupportedTimeGrainType" /> property.</summary>
        private string[] _supportedTimeGrainType;

        /// <summary>List of supported time grain types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string[] SupportedTimeGrainType { get => this._supportedTimeGrainType; }

        /// <summary>Backing field for <see cref="Unit" /> property.</summary>
        private string _unit;

        /// <summary>Metric unit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Origin(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.PropertyOrigin.Owned)]
        public string Unit { get => this._unit; }

        /// <summary>Creates an new <see cref="MetricSpecification" /> instance.</summary>
        public MetricSpecification()
        {

        }
    }
    /// A metric specification.
    public partial interface IMetricSpecification :
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.IJsonSerializable
    {
        /// <summary>Type of the aggregation (Average, Minimum, Maximum, Total or Count).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Type of the aggregation (Average, Minimum, Maximum, Total or Count).",
        SerializedName = @"aggregationType",
        PossibleTypes = new [] { typeof(string) })]
        string AggregationType { get;  }
        /// <summary>List of availabilities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of availabilities.",
        SerializedName = @"availabilities",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IAvailability) })]
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IAvailability[] Availability { get;  }
        /// <summary>Description of the metric.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Description of the metric.",
        SerializedName = @"displayDescription",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayDescription { get;  }
        /// <summary>User-visible metric name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"User-visible metric name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>
        /// Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.",
        SerializedName = @"fillGapWithZero",
        PossibleTypes = new [] { typeof(bool) })]
        bool? FillGapWithZero { get;  }
        /// <summary>
        /// The matching regex pattern to be applied to the field pointed by the "metricsFilterPathSelector" flag in the ARM manifest.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The matching regex pattern to be applied to the field pointed by the ""metricsFilterPathSelector"" flag in the ARM manifest.",
        SerializedName = @"metricFilterPattern",
        PossibleTypes = new [] { typeof(string) })]
        string MetricFilterPattern { get;  }
        /// <summary>Metric name / id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Metric name / id.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>List of supported time grain types.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"List of supported time grain types.",
        SerializedName = @"supportedTimeGrainTypes",
        PossibleTypes = new [] { typeof(string) })]
        string[] SupportedTimeGrainType { get;  }
        /// <summary>Metric unit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Metric unit.",
        SerializedName = @"unit",
        PossibleTypes = new [] { typeof(string) })]
        string Unit { get;  }

    }
    /// A metric specification.
    internal partial interface IMetricSpecificationInternal

    {
        /// <summary>Type of the aggregation (Average, Minimum, Maximum, Total or Count).</summary>
        string AggregationType { get; set; }
        /// <summary>List of availabilities.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.NotificationHubsRp.Models.Api20240301Preview.IAvailability[] Availability { get; set; }
        /// <summary>Description of the metric.</summary>
        string DisplayDescription { get; set; }
        /// <summary>User-visible metric name.</summary>
        string DisplayName { get; set; }
        /// <summary>
        /// Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.
        /// </summary>
        bool? FillGapWithZero { get; set; }
        /// <summary>
        /// The matching regex pattern to be applied to the field pointed by the "metricsFilterPathSelector" flag in the ARM manifest.
        /// </summary>
        string MetricFilterPattern { get; set; }
        /// <summary>Metric name / id.</summary>
        string Name { get; set; }
        /// <summary>List of supported time grain types.</summary>
        string[] SupportedTimeGrainType { get; set; }
        /// <summary>Metric unit.</summary>
        string Unit { get; set; }

    }
}