// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Models.Api202301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Runtime.Extensions;

    /// <summary>Remote Cloud Resource filter.</summary>
    public partial class ResourceFilter :
        Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Models.Api202301Preview.IResourceFilter,
        Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Models.Api202301Preview.IResourceFilterInternal
    {

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Remote Resource name to filter on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Region" /> property.</summary>
        private string _region;

        /// <summary>Remote Resource location/region to filter on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.PropertyOrigin.Owned)]
        public string Region { get => this._region; set => this._region = value; }

        /// <summary>Backing field for <see cref="Tag" /> property.</summary>
        private string _tag;

        /// <summary>Remote Resource tags to filter on in key:value format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.PropertyOrigin.Owned)]
        public string Tag { get => this._tag; set => this._tag = value; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>Remote Resource type to filter on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="ResourceFilter" /> instance.</summary>
        public ResourceFilter()
        {

        }
    }
    /// Remote Cloud Resource filter.
    public partial interface IResourceFilter :
        Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Runtime.IJsonSerializable
    {
        /// <summary>Remote Resource name to filter on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Remote Resource name to filter on.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Remote Resource location/region to filter on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Remote Resource location/region to filter on.",
        SerializedName = @"region",
        PossibleTypes = new [] { typeof(string) })]
        string Region { get; set; }
        /// <summary>Remote Resource tags to filter on in key:value format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Remote Resource tags to filter on in key:value format.",
        SerializedName = @"tag",
        PossibleTypes = new [] { typeof(string) })]
        string Tag { get; set; }
        /// <summary>Remote Resource type to filter on.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridCloud.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Remote Resource type to filter on.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Remote Cloud Resource filter.
    internal partial interface IResourceFilterInternal

    {
        /// <summary>Remote Resource name to filter on.</summary>
        string Name { get; set; }
        /// <summary>Remote Resource location/region to filter on.</summary>
        string Region { get; set; }
        /// <summary>Remote Resource tags to filter on in key:value format.</summary>
        string Tag { get; set; }
        /// <summary>Remote Resource type to filter on.</summary>
        string Type { get; set; }

    }
}