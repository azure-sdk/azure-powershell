// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20240401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Extensions;

    /// <summary>Parameters for Redis import operation.</summary>
    public partial class ImportRdbParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20240401Preview.IImportRdbParameters,
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Models.Api20240401Preview.IImportRdbParametersInternal
    {

        /// <summary>Backing field for <see cref="File" /> property.</summary>
        private string[] _file;

        /// <summary>files to import.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public string[] File { get => this._file; set => this._file = value; }

        /// <summary>Backing field for <see cref="Format" /> property.</summary>
        private string _format;

        /// <summary>File format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public string Format { get => this._format; set => this._format = value; }

        /// <summary>Backing field for <see cref="PreferredDataArchiveAuthMethod" /> property.</summary>
        private string _preferredDataArchiveAuthMethod;

        /// <summary>
        /// Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default
        /// value is SAS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public string PreferredDataArchiveAuthMethod { get => this._preferredDataArchiveAuthMethod; set => this._preferredDataArchiveAuthMethod = value; }

        /// <summary>Backing field for <see cref="StorageSubscriptionId" /> property.</summary>
        private string _storageSubscriptionId;

        /// <summary>
        /// Subscription id of the storage container containing files to import using Managed Identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Origin(Microsoft.Azure.PowerShell.Cmdlets.Redis.PropertyOrigin.Owned)]
        public string StorageSubscriptionId { get => this._storageSubscriptionId; set => this._storageSubscriptionId = value; }

        /// <summary>Creates an new <see cref="ImportRdbParameters" /> instance.</summary>
        public ImportRdbParameters()
        {

        }
    }
    /// Parameters for Redis import operation.
    public partial interface IImportRdbParameters :
        Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.IJsonSerializable
    {
        /// <summary>files to import.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"files to import.",
        SerializedName = @"files",
        PossibleTypes = new [] { typeof(string) })]
        string[] File { get; set; }
        /// <summary>File format.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"File format.",
        SerializedName = @"format",
        PossibleTypes = new [] { typeof(string) })]
        string Format { get; set; }
        /// <summary>
        /// Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default
        /// value is SAS
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default value is SAS",
        SerializedName = @"preferred-data-archive-auth-method",
        PossibleTypes = new [] { typeof(string) })]
        string PreferredDataArchiveAuthMethod { get; set; }
        /// <summary>
        /// Subscription id of the storage container containing files to import using Managed Identity.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Redis.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription id of the storage container containing files to import using Managed Identity.",
        SerializedName = @"storage-subscription-id",
        PossibleTypes = new [] { typeof(string) })]
        string StorageSubscriptionId { get; set; }

    }
    /// Parameters for Redis import operation.
    internal partial interface IImportRdbParametersInternal

    {
        /// <summary>files to import.</summary>
        string[] File { get; set; }
        /// <summary>File format.</summary>
        string Format { get; set; }
        /// <summary>
        /// Preferred auth method to communicate to storage account used for data archive, specify SAS or ManagedIdentity, default
        /// value is SAS
        /// </summary>
        string PreferredDataArchiveAuthMethod { get; set; }
        /// <summary>
        /// Subscription id of the storage container containing files to import using Managed Identity.
        /// </summary>
        string StorageSubscriptionId { get; set; }

    }
}