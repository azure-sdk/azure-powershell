// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Extensions;

    /// <summary>DbServer resource model</summary>
    public partial class DbServer :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServer,
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal,
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.Resource();

        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string[] AutonomousVMClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).AutonomousVMClusterId; }

        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string[] AutonomousVirtualMachineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).AutonomousVirtualMachineId; }

        /// <summary>The OCID of the compartment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string CompartmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).CompartmentId; }

        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? CpuCoreCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).CpuCoreCount; }

        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string[] DbNodeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbNodeId; }

        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? DbNodeStorageSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbNodeStorageSizeInGb; }

        /// <summary>The name for the Db Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DisplayName; }

        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string ExadataInfrastructureId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).ExadataInfrastructureId; }

        /// <summary>
        /// Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Id; }

        /// <summary>Lifecycle details of dbServer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string LifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).LifecycleDetail; }

        /// <summary>DbServer provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerProvisioningState? LifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).LifecycleState; }

        /// <summary>The total number of CPU cores available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? MaxCpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxCpuCount; }

        /// <summary>The total max dbNode storage in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? MaxDbNodeStorageInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxDbNodeStorageInGb; }

        /// <summary>The total memory available in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? MaxMemoryInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxMemoryInGb; }

        /// <summary>The total memory size in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? MemorySizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MemorySizeInGb; }

        /// <summary>Internal Acessors for AutonomousVMClusterId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.AutonomousVMClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).AutonomousVMClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).AutonomousVMClusterId = value; }

        /// <summary>Internal Acessors for AutonomousVirtualMachineId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.AutonomousVirtualMachineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).AutonomousVirtualMachineId; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).AutonomousVirtualMachineId = value; }

        /// <summary>Internal Acessors for CompartmentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.CompartmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).CompartmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).CompartmentId = value; }

        /// <summary>Internal Acessors for CpuCoreCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.CpuCoreCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).CpuCoreCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).CpuCoreCount = value; }

        /// <summary>Internal Acessors for DbNodeId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.DbNodeId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbNodeId; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbNodeId = value; }

        /// <summary>Internal Acessors for DbNodeStorageSizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.DbNodeStorageSizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbNodeStorageSizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbNodeStorageSizeInGb = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DisplayName = value; }

        /// <summary>Internal Acessors for ExadataInfrastructureId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.ExadataInfrastructureId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).ExadataInfrastructureId; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).ExadataInfrastructureId = value; }

        /// <summary>Internal Acessors for LifecycleDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.LifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).LifecycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).LifecycleDetail = value; }

        /// <summary>Internal Acessors for LifecycleState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.LifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).LifecycleState; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).LifecycleState = value; }

        /// <summary>Internal Acessors for MaxCpuCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.MaxCpuCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxCpuCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxCpuCount = value; }

        /// <summary>Internal Acessors for MaxDbNodeStorageInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.MaxDbNodeStorageInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxDbNodeStorageInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxDbNodeStorageInGb = value; }

        /// <summary>Internal Acessors for MaxMemoryInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.MaxMemoryInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxMemoryInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MaxMemoryInGb = value; }

        /// <summary>Internal Acessors for MemorySizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.MemorySizeInGb { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MemorySizeInGb; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).MemorySizeInGb = value; }

        /// <summary>Internal Acessors for Ocid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.Ocid { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).Ocid; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).Ocid = value; }

        /// <summary>Internal Acessors for PatchingDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPatchingDetails Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.PatchingDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetail = value; }

        /// <summary>Internal Acessors for PatchingDetailEstimatedPatchDuration</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.PatchingDetailEstimatedPatchDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailEstimatedPatchDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailEstimatedPatchDuration = value; }

        /// <summary>Internal Acessors for PatchingDetailPatchingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerPatchingStatus? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.PatchingDetailPatchingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailPatchingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailPatchingStatus = value; }

        /// <summary>Internal Acessors for PatchingDetailTimePatchingEnded</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.PatchingDetailTimePatchingEnded { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailTimePatchingEnded; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailTimePatchingEnded = value; }

        /// <summary>Internal Acessors for PatchingDetailTimePatchingStarted</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.PatchingDetailTimePatchingStarted { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailTimePatchingStarted; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailTimePatchingStarted = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerProperties Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.DbServerProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ResourceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for Shape</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.Shape { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).Shape; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).Shape = value; }

        /// <summary>Internal Acessors for TimeCreated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.TimeCreated { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).TimeCreated; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).TimeCreated = value; }

        /// <summary>Internal Acessors for VMClusterId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerInternal.VMClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).VMClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).VMClusterId = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.ISystemData Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Name; }

        /// <summary>Db server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string Ocid { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).Ocid; }

        /// <summary>Estimated Patch Duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public int? PatchingDetailEstimatedPatchDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailEstimatedPatchDuration; }

        /// <summary>Patching Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerPatchingStatus? PatchingDetailPatchingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailPatchingStatus; }

        /// <summary>Time Patching Ended</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public global::System.DateTime? PatchingDetailTimePatchingEnded { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailTimePatchingEnded; }

        /// <summary>Time Patching Started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public global::System.DateTime? PatchingDetailTimePatchingStarted { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).DbServerPatchingDetailTimePatchingStarted; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerProperties _property;

        /// <summary>The resource-specific properties for this resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.DbServerProperties()); set => this._property = value; }

        /// <summary>Azure resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ResourceProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string Shape { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).Shape; }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CreatedByType)""); }

        /// <summary>The date and time that the Db Server was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimeCreated { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).TimeCreated; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal)__resource).Type; }

        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string[] VMClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPropertiesInternal)Property).VMClusterId; }

        /// <summary>Creates an new <see cref="DbServer" /> instance.</summary>
        public DbServer()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// DbServer resource model
    public partial interface IDbServer :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResource
    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of OCIDs of the Autonomous VM Clusters associated with the Db server.",
        SerializedName = @"autonomousVmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AutonomousVMClusterId { get;  }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.",
        SerializedName = @"autonomousVirtualMachineIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AutonomousVirtualMachineId { get;  }
        /// <summary>The OCID of the compartment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the compartment.",
        SerializedName = @"compartmentId",
        PossibleTypes = new [] { typeof(string) })]
        string CompartmentId { get;  }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of CPU cores enabled on the Db server.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCoreCount { get;  }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the Db nodes associated with the Db server.",
        SerializedName = @"dbNodeIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] DbNodeId { get;  }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The allocated local node storage in GBs on the Db server.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGb { get;  }
        /// <summary>The name for the Db Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name for the Db Server.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the Exadata infrastructure.",
        SerializedName = @"exadataInfrastructureId",
        PossibleTypes = new [] { typeof(string) })]
        string ExadataInfrastructureId { get;  }
        /// <summary>Lifecycle details of dbServer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Lifecycle details of dbServer.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetail { get;  }
        /// <summary>DbServer provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DbServer provisioning state.",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerProvisioningState? LifecycleState { get;  }
        /// <summary>The total number of CPU cores available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of CPU cores available.",
        SerializedName = @"maxCpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCpuCount { get;  }
        /// <summary>The total max dbNode storage in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total max dbNode storage in GBs.",
        SerializedName = @"maxDbNodeStorageInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDbNodeStorageInGb { get;  }
        /// <summary>The total memory available in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total memory available in GBs.",
        SerializedName = @"maxMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxMemoryInGb { get;  }
        /// <summary>The total memory size in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total memory size in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGb { get;  }
        /// <summary>Db server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Db server name.",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>Estimated Patch Duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Estimated Patch Duration",
        SerializedName = @"estimatedPatchDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? PatchingDetailEstimatedPatchDuration { get;  }
        /// <summary>Patching Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Patching Status",
        SerializedName = @"patchingStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerPatchingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerPatchingStatus? PatchingDetailPatchingStatus { get;  }
        /// <summary>Time Patching Ended</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time Patching Ended",
        SerializedName = @"timePatchingEnded",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PatchingDetailTimePatchingEnded { get;  }
        /// <summary>Time Patching Started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time Patching Started",
        SerializedName = @"timePatchingStarted",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? PatchingDetailTimePatchingStarted { get;  }
        /// <summary>Azure resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure resource provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ResourceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ResourceProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get;  }
        /// <summary>The date and time that the Db Server was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time that the Db Server was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCreated { get;  }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the VM Clusters associated with the Db server.",
        SerializedName = @"vmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VMClusterId { get;  }

    }
    /// DbServer resource model
    internal partial interface IDbServerInternal :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api50.IResourceInternal
    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        string[] AutonomousVMClusterId { get; set; }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        string[] AutonomousVirtualMachineId { get; set; }
        /// <summary>The OCID of the compartment.</summary>
        string CompartmentId { get; set; }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        int? CpuCoreCount { get; set; }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        string[] DbNodeId { get; set; }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>The name for the Db Server.</summary>
        string DisplayName { get; set; }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        string ExadataInfrastructureId { get; set; }
        /// <summary>Lifecycle details of dbServer.</summary>
        string LifecycleDetail { get; set; }
        /// <summary>DbServer provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerProvisioningState? LifecycleState { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        int? MaxCpuCount { get; set; }
        /// <summary>The total max dbNode storage in GBs.</summary>
        int? MaxDbNodeStorageInGb { get; set; }
        /// <summary>The total memory available in GBs.</summary>
        int? MaxMemoryInGb { get; set; }
        /// <summary>The total memory size in GBs.</summary>
        int? MemorySizeInGb { get; set; }
        /// <summary>Db server name.</summary>
        string Ocid { get; set; }
        /// <summary>dbServerPatching details of the Db server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerPatchingDetails PatchingDetail { get; set; }
        /// <summary>Estimated Patch Duration</summary>
        int? PatchingDetailEstimatedPatchDuration { get; set; }
        /// <summary>Patching Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DbServerPatchingStatus? PatchingDetailPatchingStatus { get; set; }
        /// <summary>Time Patching Ended</summary>
        global::System.DateTime? PatchingDetailTimePatchingEnded { get; set; }
        /// <summary>Time Patching Started</summary>
        global::System.DateTime? PatchingDetailTimePatchingStarted { get; set; }
        /// <summary>The resource-specific properties for this resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20230901.IDbServerProperties Property { get; set; }
        /// <summary>Azure resource provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ResourceProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        string Shape { get; set; }
        /// <summary>The date and time that the Db Server was created.</summary>
        global::System.DateTime? TimeCreated { get; set; }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        string[] VMClusterId { get; set; }

    }
}