// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Extensions;

    /// <summary>DbServer resource properties</summary>
    public partial class DbServerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AutonomousVMClusterId" /> property.</summary>
        private string[] _autonomousVMClusterId;

        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string[] AutonomousVMClusterId { get => this._autonomousVMClusterId; }

        /// <summary>Backing field for <see cref="AutonomousVirtualMachineId" /> property.</summary>
        private string[] _autonomousVirtualMachineId;

        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string[] AutonomousVirtualMachineId { get => this._autonomousVirtualMachineId; }

        /// <summary>Backing field for <see cref="CompartmentId" /> property.</summary>
        private string _compartmentId;

        /// <summary>The OCID of the compartment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string CompartmentId { get => this._compartmentId; }

        /// <summary>Backing field for <see cref="CpuCoreCount" /> property.</summary>
        private int? _cpuCoreCount;

        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public int? CpuCoreCount { get => this._cpuCoreCount; }

        /// <summary>Backing field for <see cref="DbNodeId" /> property.</summary>
        private string[] _dbNodeId;

        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string[] DbNodeId { get => this._dbNodeId; }

        /// <summary>Backing field for <see cref="DbNodeStorageSizeInGb" /> property.</summary>
        private int? _dbNodeStorageSizeInGb;

        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public int? DbNodeStorageSizeInGb { get => this._dbNodeStorageSizeInGb; }

        /// <summary>Backing field for <see cref="DbServerPatchingDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetails _dbServerPatchingDetail;

        /// <summary>dbServerPatching details of the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetails DbServerPatchingDetail { get => (this._dbServerPatchingDetail = this._dbServerPatchingDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.DbServerPatchingDetails()); }

        /// <summary>Estimated Patch Duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Inlined)]
        public int? DbServerPatchingDetailEstimatedPatchDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).EstimatedPatchDuration; }

        /// <summary>Patching Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerPatchingStatus? DbServerPatchingDetailPatchingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).PatchingStatus; }

        /// <summary>Time Patching Ended</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Inlined)]
        public global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).TimePatchingEnded; }

        /// <summary>Time Patching Started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Inlined)]
        public global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).TimePatchingStarted; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The name for the Db Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; }

        /// <summary>Backing field for <see cref="ExadataInfrastructureId" /> property.</summary>
        private string _exadataInfrastructureId;

        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string ExadataInfrastructureId { get => this._exadataInfrastructureId; }

        /// <summary>Backing field for <see cref="LifecycleDetail" /> property.</summary>
        private string _lifecycleDetail;

        /// <summary>Lifecycle details of dbServer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string LifecycleDetail { get => this._lifecycleDetail; }

        /// <summary>Backing field for <see cref="LifecycleState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerProvisioningState? _lifecycleState;

        /// <summary>DbServer provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerProvisioningState? LifecycleState { get => this._lifecycleState; }

        /// <summary>Backing field for <see cref="MaxCpuCount" /> property.</summary>
        private int? _maxCpuCount;

        /// <summary>The total number of CPU cores available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public int? MaxCpuCount { get => this._maxCpuCount; }

        /// <summary>Backing field for <see cref="MaxDbNodeStorageInGb" /> property.</summary>
        private int? _maxDbNodeStorageInGb;

        /// <summary>The total max dbNode storage in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public int? MaxDbNodeStorageInGb { get => this._maxDbNodeStorageInGb; }

        /// <summary>Backing field for <see cref="MaxMemoryInGb" /> property.</summary>
        private int? _maxMemoryInGb;

        /// <summary>The total memory available in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public int? MaxMemoryInGb { get => this._maxMemoryInGb; }

        /// <summary>Backing field for <see cref="MemorySizeInGb" /> property.</summary>
        private int? _memorySizeInGb;

        /// <summary>The total memory size in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public int? MemorySizeInGb { get => this._memorySizeInGb; }

        /// <summary>Internal Acessors for AutonomousVMClusterId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.AutonomousVMClusterId { get => this._autonomousVMClusterId; set { {_autonomousVMClusterId = value;} } }

        /// <summary>Internal Acessors for AutonomousVirtualMachineId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.AutonomousVirtualMachineId { get => this._autonomousVirtualMachineId; set { {_autonomousVirtualMachineId = value;} } }

        /// <summary>Internal Acessors for CompartmentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.CompartmentId { get => this._compartmentId; set { {_compartmentId = value;} } }

        /// <summary>Internal Acessors for CpuCoreCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.CpuCoreCount { get => this._cpuCoreCount; set { {_cpuCoreCount = value;} } }

        /// <summary>Internal Acessors for DbNodeId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbNodeId { get => this._dbNodeId; set { {_dbNodeId = value;} } }

        /// <summary>Internal Acessors for DbNodeStorageSizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbNodeStorageSizeInGb { get => this._dbNodeStorageSizeInGb; set { {_dbNodeStorageSizeInGb = value;} } }

        /// <summary>Internal Acessors for DbServerPatchingDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetails Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbServerPatchingDetail { get => (this._dbServerPatchingDetail = this._dbServerPatchingDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.DbServerPatchingDetails()); set { {_dbServerPatchingDetail = value;} } }

        /// <summary>Internal Acessors for DbServerPatchingDetailEstimatedPatchDuration</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbServerPatchingDetailEstimatedPatchDuration { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).EstimatedPatchDuration; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).EstimatedPatchDuration = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailPatchingStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerPatchingStatus? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbServerPatchingDetailPatchingStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).PatchingStatus; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).PatchingStatus = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailTimePatchingEnded</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbServerPatchingDetailTimePatchingEnded { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).TimePatchingEnded; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).TimePatchingEnded = value; }

        /// <summary>Internal Acessors for DbServerPatchingDetailTimePatchingStarted</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DbServerPatchingDetailTimePatchingStarted { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).TimePatchingStarted; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetailsInternal)DbServerPatchingDetail).TimePatchingStarted = value; }

        /// <summary>Internal Acessors for DisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.DisplayName { get => this._displayName; set { {_displayName = value;} } }

        /// <summary>Internal Acessors for ExadataInfrastructureId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.ExadataInfrastructureId { get => this._exadataInfrastructureId; set { {_exadataInfrastructureId = value;} } }

        /// <summary>Internal Acessors for LifecycleDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.LifecycleDetail { get => this._lifecycleDetail; set { {_lifecycleDetail = value;} } }

        /// <summary>Internal Acessors for LifecycleState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.LifecycleState { get => this._lifecycleState; set { {_lifecycleState = value;} } }

        /// <summary>Internal Acessors for MaxCpuCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.MaxCpuCount { get => this._maxCpuCount; set { {_maxCpuCount = value;} } }

        /// <summary>Internal Acessors for MaxDbNodeStorageInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.MaxDbNodeStorageInGb { get => this._maxDbNodeStorageInGb; set { {_maxDbNodeStorageInGb = value;} } }

        /// <summary>Internal Acessors for MaxMemoryInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.MaxMemoryInGb { get => this._maxMemoryInGb; set { {_maxMemoryInGb = value;} } }

        /// <summary>Internal Acessors for MemorySizeInGb</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.MemorySizeInGb { get => this._memorySizeInGb; set { {_memorySizeInGb = value;} } }

        /// <summary>Internal Acessors for Ocid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.Ocid { get => this._ocid; set { {_ocid = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.ResourceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Shape</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.Shape { get => this._shape; set { {_shape = value;} } }

        /// <summary>Internal Acessors for TimeCreated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.TimeCreated { get => this._timeCreated; set { {_timeCreated = value;} } }

        /// <summary>Internal Acessors for VMClusterId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPropertiesInternal.VMClusterId { get => this._vMClusterId; set { {_vMClusterId = value;} } }

        /// <summary>Backing field for <see cref="Ocid" /> property.</summary>
        private string _ocid;

        /// <summary>Db server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string Ocid { get => this._ocid; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.ResourceProvisioningState? _provisioningState;

        /// <summary>Azure resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.ResourceProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Shape" /> property.</summary>
        private string _shape;

        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string Shape { get => this._shape; }

        /// <summary>Backing field for <see cref="TimeCreated" /> property.</summary>
        private global::System.DateTime? _timeCreated;

        /// <summary>The date and time that the Db Server was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public global::System.DateTime? TimeCreated { get => this._timeCreated; }

        /// <summary>Backing field for <see cref="VMClusterId" /> property.</summary>
        private string[] _vMClusterId;

        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.PropertyOrigin.Owned)]
        public string[] VMClusterId { get => this._vMClusterId; }

        /// <summary>Creates an new <see cref="DbServerProperties" /> instance.</summary>
        public DbServerProperties()
        {

        }
    }
    /// DbServer resource properties
    public partial interface IDbServerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.IJsonSerializable
    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of OCIDs of the Autonomous VM Clusters associated with the Db server.",
        SerializedName = @"autonomousVmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AutonomousVMClusterId { get;  }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.",
        SerializedName = @"autonomousVirtualMachineIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] AutonomousVirtualMachineId { get;  }
        /// <summary>The OCID of the compartment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the compartment.",
        SerializedName = @"compartmentId",
        PossibleTypes = new [] { typeof(string) })]
        string CompartmentId { get;  }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of CPU cores enabled on the Db server.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int? CpuCoreCount { get;  }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the Db nodes associated with the Db server.",
        SerializedName = @"dbNodeIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] DbNodeId { get;  }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The allocated local node storage in GBs on the Db server.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGb { get;  }
        /// <summary>Estimated Patch Duration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Estimated Patch Duration",
        SerializedName = @"estimatedPatchDuration",
        PossibleTypes = new [] { typeof(int) })]
        int? DbServerPatchingDetailEstimatedPatchDuration { get;  }
        /// <summary>Patching Status</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Patching Status",
        SerializedName = @"patchingStatus",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerPatchingStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerPatchingStatus? DbServerPatchingDetailPatchingStatus { get;  }
        /// <summary>Time Patching Ended</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time Patching Ended",
        SerializedName = @"timePatchingEnded",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get;  }
        /// <summary>Time Patching Started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time Patching Started",
        SerializedName = @"timePatchingStarted",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get;  }
        /// <summary>The name for the Db Server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The name for the Db Server.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get;  }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the Exadata infrastructure.",
        SerializedName = @"exadataInfrastructureId",
        PossibleTypes = new [] { typeof(string) })]
        string ExadataInfrastructureId { get;  }
        /// <summary>Lifecycle details of dbServer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Lifecycle details of dbServer.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetail { get;  }
        /// <summary>DbServer provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"DbServer provisioning state.",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerProvisioningState? LifecycleState { get;  }
        /// <summary>The total number of CPU cores available.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of CPU cores available.",
        SerializedName = @"maxCpuCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxCpuCount { get;  }
        /// <summary>The total max dbNode storage in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total max dbNode storage in GBs.",
        SerializedName = @"maxDbNodeStorageInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxDbNodeStorageInGb { get;  }
        /// <summary>The total memory available in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total memory available in GBs.",
        SerializedName = @"maxMemoryInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxMemoryInGb { get;  }
        /// <summary>The total memory size in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total memory size in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGb { get;  }
        /// <summary>Db server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Db server name.",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>Azure resource provisioning state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Azure resource provisioning state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.ResourceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.ResourceProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get;  }
        /// <summary>The date and time that the Db Server was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time that the Db Server was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCreated { get;  }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the VM Clusters associated with the Db server.",
        SerializedName = @"vmClusterIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VMClusterId { get;  }

    }
    /// DbServer resource properties
    internal partial interface IDbServerPropertiesInternal

    {
        /// <summary>The list of OCIDs of the Autonomous VM Clusters associated with the Db server.</summary>
        string[] AutonomousVMClusterId { get; set; }
        /// <summary>
        /// The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.
        /// </summary>
        string[] AutonomousVirtualMachineId { get; set; }
        /// <summary>The OCID of the compartment.</summary>
        string CompartmentId { get; set; }
        /// <summary>The number of CPU cores enabled on the Db server.</summary>
        int? CpuCoreCount { get; set; }
        /// <summary>The OCID of the Db nodes associated with the Db server.</summary>
        string[] DbNodeId { get; set; }
        /// <summary>The allocated local node storage in GBs on the Db server.</summary>
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>dbServerPatching details of the Db server.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Models.Api20240601.IDbServerPatchingDetails DbServerPatchingDetail { get; set; }
        /// <summary>Estimated Patch Duration</summary>
        int? DbServerPatchingDetailEstimatedPatchDuration { get; set; }
        /// <summary>Patching Status</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerPatchingStatus? DbServerPatchingDetailPatchingStatus { get; set; }
        /// <summary>Time Patching Ended</summary>
        global::System.DateTime? DbServerPatchingDetailTimePatchingEnded { get; set; }
        /// <summary>Time Patching Started</summary>
        global::System.DateTime? DbServerPatchingDetailTimePatchingStarted { get; set; }
        /// <summary>The name for the Db Server.</summary>
        string DisplayName { get; set; }
        /// <summary>The OCID of the Exadata infrastructure.</summary>
        string ExadataInfrastructureId { get; set; }
        /// <summary>Lifecycle details of dbServer.</summary>
        string LifecycleDetail { get; set; }
        /// <summary>DbServer provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.DbServerProvisioningState? LifecycleState { get; set; }
        /// <summary>The total number of CPU cores available.</summary>
        int? MaxCpuCount { get; set; }
        /// <summary>The total max dbNode storage in GBs.</summary>
        int? MaxDbNodeStorageInGb { get; set; }
        /// <summary>The total memory available in GBs.</summary>
        int? MaxMemoryInGb { get; set; }
        /// <summary>The total memory size in GBs.</summary>
        int? MemorySizeInGb { get; set; }
        /// <summary>Db server name.</summary>
        string Ocid { get; set; }
        /// <summary>Azure resource provisioning state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManagerForTesting.Support.ResourceProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        string Shape { get; set; }
        /// <summary>The date and time that the Db Server was created.</summary>
        global::System.DateTime? TimeCreated { get; set; }
        /// <summary>The OCID of the VM Clusters associated with the Db server.</summary>
        string[] VMClusterId { get; set; }

    }
}