// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Extensions;

    /// <summary>CloudVmCluster resource model</summary>
    public partial class CloudVMClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterProperties,
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BackupSubnetCidr" /> property.</summary>
        private string _backupSubnetCidr;

        /// <summary>Client OCI backup subnet CIDR, default is 192.168.252.0/22</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string BackupSubnetCidr { get => this._backupSubnetCidr; set => this._backupSubnetCidr = value; }

        /// <summary>Backing field for <see cref="CloudExadataInfrastructureId" /> property.</summary>
        private string _cloudExadataInfrastructureId;

        /// <summary>Cloud Exadata Infrastructure ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string CloudExadataInfrastructureId { get => this._cloudExadataInfrastructureId; set => this._cloudExadataInfrastructureId = value; }

        /// <summary>Backing field for <see cref="ClusterName" /> property.</summary>
        private string _clusterName;

        /// <summary>
        /// The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens
        /// (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string ClusterName { get => this._clusterName; set => this._clusterName = value; }

        /// <summary>Backing field for <see cref="CompartmentId" /> property.</summary>
        private string _compartmentId;

        /// <summary>Cluster compartmentId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string CompartmentId { get => this._compartmentId; }

        /// <summary>Backing field for <see cref="ComputeModel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ComputeModel? _computeModel;

        /// <summary>The compute model of the VM Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ComputeModel? ComputeModel { get => this._computeModel; }

        /// <summary>Backing field for <see cref="ComputeNode" /> property.</summary>
        private string[] _computeNode;

        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string[] ComputeNode { get => this._computeNode; set => this._computeNode = value; }

        /// <summary>Backing field for <see cref="CpuCoreCount" /> property.</summary>
        private int _cpuCoreCount;

        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int CpuCoreCount { get => this._cpuCoreCount; set => this._cpuCoreCount = value; }

        /// <summary>Backing field for <see cref="DataCollectionOption" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptions _dataCollectionOption;

        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptions DataCollectionOption { get => (this._dataCollectionOption = this._dataCollectionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.DataCollectionOptions()); set => this._dataCollectionOption = value; }

        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptionsInternal)DataCollectionOption).IsDiagnosticsEventsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptionsInternal)DataCollectionOption).IsDiagnosticsEventsEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsHealthMonitoringEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptionsInternal)DataCollectionOption).IsHealthMonitoringEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptionsInternal)DataCollectionOption).IsHealthMonitoringEnabled = value ?? default(bool); }

        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public bool? DataCollectionOptionIsIncidentLogsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptionsInternal)DataCollectionOption).IsIncidentLogsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptionsInternal)DataCollectionOption).IsIncidentLogsEnabled = value ?? default(bool); }

        /// <summary>Backing field for <see cref="DataStoragePercentage" /> property.</summary>
        private int? _dataStoragePercentage;

        /// <summary>
        /// The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage
        /// (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is
        /// 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in
        /// the Exadata documentation for details on the impact of the configuration settings on storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? DataStoragePercentage { get => this._dataStoragePercentage; set => this._dataStoragePercentage = value; }

        /// <summary>Backing field for <see cref="DataStorageSizeInTb" /> property.</summary>
        private double? _dataStorageSizeInTb;

        /// <summary>The data disk group size to be allocated in TBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public double? DataStorageSizeInTb { get => this._dataStorageSizeInTb; set => this._dataStorageSizeInTb = value; }

        /// <summary>Backing field for <see cref="DbNodeStorageSizeInGb" /> property.</summary>
        private int? _dbNodeStorageSizeInGb;

        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? DbNodeStorageSizeInGb { get => this._dbNodeStorageSizeInGb; set => this._dbNodeStorageSizeInGb = value; }

        /// <summary>Backing field for <see cref="DbServer" /> property.</summary>
        private string[] _dbServer;

        /// <summary>The list of DB servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string[] DbServer { get => this._dbServer; set => this._dbServer = value; }

        /// <summary>Backing field for <see cref="DiskRedundancy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DiskRedundancy? _diskRedundancy;

        /// <summary>
        /// The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DiskRedundancy? DiskRedundancy { get => this._diskRedundancy; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="Domain" /> property.</summary>
        private string _domain;

        /// <summary>The domain name for the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string Domain { get => this._domain; set => this._domain = value; }

        /// <summary>Backing field for <see cref="FileSystemConfigurationDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IFileSystemConfigurationDetails[] _fileSystemConfigurationDetail;

        /// <summary>Array of mount path and size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IFileSystemConfigurationDetails[] FileSystemConfigurationDetail { get => this._fileSystemConfigurationDetail; set => this._fileSystemConfigurationDetail = value; }

        /// <summary>Backing field for <see cref="GiVersion" /> property.</summary>
        private string _giVersion;

        /// <summary>Oracle Grid Infrastructure (GI) software version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string GiVersion { get => this._giVersion; set => this._giVersion = value; }

        /// <summary>Backing field for <see cref="Hostname" /> property.</summary>
        private string _hostname;

        /// <summary>The hostname for the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string Hostname { get => this._hostname; set => this._hostname = value; }

        /// <summary>Backing field for <see cref="IormConfigCache" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfig _iormConfigCache;

        /// <summary>iormConfigCache details for cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfig IormConfigCache { get => (this._iormConfigCache = this._iormConfigCache ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadataIormConfig()); }

        /// <summary>An array of IORM settings for all the database in the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig[] IormConfigCacheDbPlan { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).DbPlan; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).DbPlan = value ?? null /* arrayOf */; }

        /// <summary>Additional information about the current lifecycleState.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public string IormConfigCacheLifecycleDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).LifecycleDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).LifecycleDetail = value ?? null; }

        /// <summary>The current state of IORM configuration for the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState? IormConfigCacheLifecycleState { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).LifecycleState; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).LifecycleState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState)""); }

        /// <summary>The current value for the IORM objective. The default is AUTO.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective? IormConfigCacheObjective { get => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).Objective; set => ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfigInternal)IormConfigCache).Objective = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective)""); }

        /// <summary>Backing field for <see cref="IsLocalBackupEnabled" /> property.</summary>
        private bool? _isLocalBackupEnabled;

        /// <summary>
        /// If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on
        /// local Exadata storage is not available in the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public bool? IsLocalBackupEnabled { get => this._isLocalBackupEnabled; set => this._isLocalBackupEnabled = value; }

        /// <summary>Backing field for <see cref="IsSparseDiskgroupEnabled" /> property.</summary>
        private bool? _isSparseDiskgroupEnabled;

        /// <summary>
        /// If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public bool? IsSparseDiskgroupEnabled { get => this._isSparseDiskgroupEnabled; set => this._isSparseDiskgroupEnabled = value; }

        /// <summary>Backing field for <see cref="LastUpdateHistoryEntryId" /> property.</summary>
        private string _lastUpdateHistoryEntryId;

        /// <summary>The OCID of the last maintenance update history entry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string LastUpdateHistoryEntryId { get => this._lastUpdateHistoryEntryId; }

        /// <summary>Backing field for <see cref="LicenseModel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel? _licenseModel;

        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel? LicenseModel { get => this._licenseModel; set => this._licenseModel = value; }

        /// <summary>Backing field for <see cref="LifecycleDetail" /> property.</summary>
        private string _lifecycleDetail;

        /// <summary>Additional information about the current lifecycle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string LifecycleDetail { get => this._lifecycleDetail; }

        /// <summary>Backing field for <see cref="LifecycleState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CloudVMClusterLifecycleState? _lifecycleState;

        /// <summary>CloudVmCluster lifecycle state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CloudVMClusterLifecycleState? LifecycleState { get => this._lifecycleState; }

        /// <summary>Backing field for <see cref="ListenerPort" /> property.</summary>
        private long? _listenerPort;

        /// <summary>The port number configured for the listener on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public long? ListenerPort { get => this._listenerPort; }

        /// <summary>Backing field for <see cref="MemorySizeInGb" /> property.</summary>
        private int? _memorySizeInGb;

        /// <summary>The memory to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? MemorySizeInGb { get => this._memorySizeInGb; set => this._memorySizeInGb = value; }

        /// <summary>Internal Acessors for CompartmentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.CompartmentId { get => this._compartmentId; set { {_compartmentId = value;} } }

        /// <summary>Internal Acessors for ComputeModel</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ComputeModel? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.ComputeModel { get => this._computeModel; set { {_computeModel = value;} } }

        /// <summary>Internal Acessors for DataCollectionOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptions Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.DataCollectionOption { get => (this._dataCollectionOption = this._dataCollectionOption ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.DataCollectionOptions()); set { {_dataCollectionOption = value;} } }

        /// <summary>Internal Acessors for DiskRedundancy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DiskRedundancy? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.DiskRedundancy { get => this._diskRedundancy; set { {_diskRedundancy = value;} } }

        /// <summary>Internal Acessors for IormConfigCache</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfig Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.IormConfigCache { get => (this._iormConfigCache = this._iormConfigCache ?? new Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadataIormConfig()); set { {_iormConfigCache = value;} } }

        /// <summary>Internal Acessors for LastUpdateHistoryEntryId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.LastUpdateHistoryEntryId { get => this._lastUpdateHistoryEntryId; set { {_lastUpdateHistoryEntryId = value;} } }

        /// <summary>Internal Acessors for LifecycleDetail</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.LifecycleDetail { get => this._lifecycleDetail; set { {_lifecycleDetail = value;} } }

        /// <summary>Internal Acessors for LifecycleState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CloudVMClusterLifecycleState? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.LifecycleState { get => this._lifecycleState; set { {_lifecycleState = value;} } }

        /// <summary>Internal Acessors for ListenerPort</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.ListenerPort { get => this._listenerPort; set { {_listenerPort = value;} } }

        /// <summary>Internal Acessors for NodeCount</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.NodeCount { get => this._nodeCount; set { {_nodeCount = value;} } }

        /// <summary>Internal Acessors for NsgUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.NsgUrl { get => this._nsgUrl; set { {_nsgUrl = value;} } }

        /// <summary>Internal Acessors for OciUrl</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.OciUrl { get => this._ociUrl; set { {_ociUrl = value;} } }

        /// <summary>Internal Acessors for Ocid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.Ocid { get => this._ocid; set { {_ocid = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for ScanDnsName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.ScanDnsName { get => this._scanDnsName; set { {_scanDnsName = value;} } }

        /// <summary>Internal Acessors for ScanDnsRecordId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.ScanDnsRecordId { get => this._scanDnsRecordId; set { {_scanDnsRecordId = value;} } }

        /// <summary>Internal Acessors for ScanIPId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.ScanIPId { get => this._scanIPId; set { {_scanIPId = value;} } }

        /// <summary>Internal Acessors for Shape</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.Shape { get => this._shape; set { {_shape = value;} } }

        /// <summary>Internal Acessors for SubnetOcid</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.SubnetOcid { get => this._subnetOcid; set { {_subnetOcid = value;} } }

        /// <summary>Internal Acessors for TimeCreated</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.TimeCreated { get => this._timeCreated; set { {_timeCreated = value;} } }

        /// <summary>Internal Acessors for VipId</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ICloudVMClusterPropertiesInternal.VipId { get => this._vipId; set { {_vipId = value;} } }

        /// <summary>Backing field for <see cref="NodeCount" /> property.</summary>
        private int? _nodeCount;

        /// <summary>The number of nodes in the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? NodeCount { get => this._nodeCount; }

        /// <summary>Backing field for <see cref="NsgCidr" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr[] _nsgCidr;

        /// <summary>
        /// CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr[] NsgCidr { get => this._nsgCidr; set => this._nsgCidr = value; }

        /// <summary>Backing field for <see cref="NsgUrl" /> property.</summary>
        private string _nsgUrl;

        /// <summary>
        /// HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string NsgUrl { get => this._nsgUrl; }

        /// <summary>Backing field for <see cref="OciUrl" /> property.</summary>
        private string _ociUrl;

        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string OciUrl { get => this._ociUrl; }

        /// <summary>Backing field for <see cref="Ocid" /> property.</summary>
        private string _ocid;

        /// <summary>Cloud VM Cluster ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string Ocid { get => this._ocid; }

        /// <summary>Backing field for <see cref="OcpuCount" /> property.</summary>
        private float? _ocpuCount;

        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public float? OcpuCount { get => this._ocpuCount; set => this._ocpuCount = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState? _provisioningState;

        /// <summary>CloudVmCluster provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ScanDnsName" /> property.</summary>
        private string _scanDnsName;

        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string ScanDnsName { get => this._scanDnsName; }

        /// <summary>Backing field for <see cref="ScanDnsRecordId" /> property.</summary>
        private string _scanDnsRecordId;

        /// <summary>
        /// The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string ScanDnsRecordId { get => this._scanDnsRecordId; }

        /// <summary>Backing field for <see cref="ScanIPId" /> property.</summary>
        private string[] _scanIPId;

        /// <summary>
        /// The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically
        /// used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate
        /// nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string[] ScanIPId { get => this._scanIPId; }

        /// <summary>Backing field for <see cref="ScanListenerPortTcp" /> property.</summary>
        private int? _scanListenerPortTcp;

        /// <summary>The TCP Single Client Access Name (SCAN) port. The default port is 1521.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? ScanListenerPortTcp { get => this._scanListenerPortTcp; set => this._scanListenerPortTcp = value; }

        /// <summary>Backing field for <see cref="ScanListenerPortTcpSsl" /> property.</summary>
        private int? _scanListenerPortTcpSsl;

        /// <summary>The TCPS Single Client Access Name (SCAN) port. The default port is 2484.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? ScanListenerPortTcpSsl { get => this._scanListenerPortTcpSsl; set => this._scanListenerPortTcpSsl = value; }

        /// <summary>Backing field for <see cref="Shape" /> property.</summary>
        private string _shape;

        /// <summary>The model name of the Exadata hardware running the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string Shape { get => this._shape; }

        /// <summary>Backing field for <see cref="SshPublicKey" /> property.</summary>
        private string[] _sshPublicKey;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string[] SshPublicKey { get => this._sshPublicKey; set => this._sshPublicKey = value; }

        /// <summary>Backing field for <see cref="StorageSizeInGb" /> property.</summary>
        private int? _storageSizeInGb;

        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public int? StorageSizeInGb { get => this._storageSizeInGb; set => this._storageSizeInGb = value; }

        /// <summary>Backing field for <see cref="SubnetId" /> property.</summary>
        private string _subnetId;

        /// <summary>Client subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string SubnetId { get => this._subnetId; set => this._subnetId = value; }

        /// <summary>Backing field for <see cref="SubnetOcid" /> property.</summary>
        private string _subnetOcid;

        /// <summary>Cluster subnet ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string SubnetOcid { get => this._subnetOcid; }

        /// <summary>Backing field for <see cref="SystemVersion" /> property.</summary>
        private string _systemVersion;

        /// <summary>Operating system version of the image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string SystemVersion { get => this._systemVersion; set => this._systemVersion = value; }

        /// <summary>Backing field for <see cref="TimeCreated" /> property.</summary>
        private global::System.DateTime? _timeCreated;

        /// <summary>The date and time that the cloud VM cluster was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public global::System.DateTime? TimeCreated { get => this._timeCreated; }

        /// <summary>Backing field for <see cref="TimeZone" /> property.</summary>
        private string _timeZone;

        /// <summary>
        /// The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string TimeZone { get => this._timeZone; set => this._timeZone = value; }

        /// <summary>Backing field for <see cref="VipId" /> property.</summary>
        private string[] _vipId;

        /// <summary>
        /// The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains
        /// one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is
        /// reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string[] VipId { get => this._vipId; }

        /// <summary>Backing field for <see cref="VnetId" /> property.</summary>
        private string _vnetId;

        /// <summary>VNET for network connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string VnetId { get => this._vnetId; set => this._vnetId = value; }

        /// <summary>Backing field for <see cref="ZoneId" /> property.</summary>
        private string _zoneId;

        /// <summary>The OCID of the zone the cloud VM cluster is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string ZoneId { get => this._zoneId; set => this._zoneId = value; }

        /// <summary>Creates an new <see cref="CloudVMClusterProperties" /> instance.</summary>
        public CloudVMClusterProperties()
        {

        }
    }
    /// CloudVmCluster resource model
    public partial interface ICloudVMClusterProperties :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.IJsonSerializable
    {
        /// <summary>Client OCI backup subnet CIDR, default is 192.168.252.0/22</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client OCI backup subnet CIDR, default is 192.168.252.0/22",
        SerializedName = @"backupSubnetCidr",
        PossibleTypes = new [] { typeof(string) })]
        string BackupSubnetCidr { get; set; }
        /// <summary>Cloud Exadata Infrastructure ID</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Cloud Exadata Infrastructure ID",
        SerializedName = @"cloudExadataInfrastructureId",
        PossibleTypes = new [] { typeof(string) })]
        string CloudExadataInfrastructureId { get; set; }
        /// <summary>
        /// The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens
        /// (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. ",
        SerializedName = @"clusterName",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterName { get; set; }
        /// <summary>Cluster compartmentId</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cluster compartmentId",
        SerializedName = @"compartmentId",
        PossibleTypes = new [] { typeof(string) })]
        string CompartmentId { get;  }
        /// <summary>The compute model of the VM Cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The compute model of the VM Cluster.",
        SerializedName = @"computeModel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ComputeModel) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ComputeModel? ComputeModel { get;  }
        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of compute servers to be added to the cloud VM cluster.",
        SerializedName = @"computeNodes",
        PossibleTypes = new [] { typeof(string) })]
        string[] ComputeNode { get; set; }
        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The number of CPU cores enabled on the cloud VM cluster.",
        SerializedName = @"cpuCoreCount",
        PossibleTypes = new [] { typeof(int) })]
        int CpuCoreCount { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.",
        SerializedName = @"isDiagnosticsEventsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isHealthMonitoringEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
        SerializedName = @"isIncidentLogsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>
        /// The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage
        /// (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is
        /// 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in
        /// the Exadata documentation for details on the impact of the configuration settings on storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. ",
        SerializedName = @"dataStoragePercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? DataStoragePercentage { get; set; }
        /// <summary>The data disk group size to be allocated in TBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data disk group size to be allocated in TBs.",
        SerializedName = @"dataStorageSizeInTbs",
        PossibleTypes = new [] { typeof(double) })]
        double? DataStorageSizeInTb { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The local node storage to be allocated in GBs.",
        SerializedName = @"dbNodeStorageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>The list of DB servers.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of DB servers.",
        SerializedName = @"dbServers",
        PossibleTypes = new [] { typeof(string) })]
        string[] DbServer { get; set; }
        /// <summary>
        /// The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. ",
        SerializedName = @"diskRedundancy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DiskRedundancy) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DiskRedundancy? DiskRedundancy { get;  }
        /// <summary>Display Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Display Name",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The domain name for the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain name for the cloud VM cluster.",
        SerializedName = @"domain",
        PossibleTypes = new [] { typeof(string) })]
        string Domain { get; set; }
        /// <summary>Array of mount path and size.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of mount path and size.",
        SerializedName = @"fileSystemConfigurationDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IFileSystemConfigurationDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IFileSystemConfigurationDetails[] FileSystemConfigurationDetail { get; set; }
        /// <summary>Oracle Grid Infrastructure (GI) software version</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Oracle Grid Infrastructure (GI) software version",
        SerializedName = @"giVersion",
        PossibleTypes = new [] { typeof(string) })]
        string GiVersion { get; set; }
        /// <summary>The hostname for the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The hostname for the cloud VM cluster.",
        SerializedName = @"hostname",
        PossibleTypes = new [] { typeof(string) })]
        string Hostname { get; set; }
        /// <summary>An array of IORM settings for all the database in the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"An array of IORM settings for all the database in the Exadata DB system.",
        SerializedName = @"dbPlans",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig[] IormConfigCacheDbPlan { get; set; }
        /// <summary>Additional information about the current lifecycleState.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Additional information about the current lifecycleState.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string IormConfigCacheLifecycleDetail { get; set; }
        /// <summary>The current state of IORM configuration for the Exadata DB system.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current state of IORM configuration for the Exadata DB system.",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState? IormConfigCacheLifecycleState { get; set; }
        /// <summary>The current value for the IORM objective. The default is AUTO.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The current value for the IORM objective. The default is AUTO.",
        SerializedName = @"objective",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective? IormConfigCacheObjective { get; set; }
        /// <summary>
        /// If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on
        /// local Exadata storage is not available in the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. ",
        SerializedName = @"isLocalBackupEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsLocalBackupEnabled { get; set; }
        /// <summary>
        /// If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. ",
        SerializedName = @"isSparseDiskgroupEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSparseDiskgroupEnabled { get; set; }
        /// <summary>The OCID of the last maintenance update history entry.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the last maintenance update history entry.",
        SerializedName = @"lastUpdateHistoryEntryId",
        PossibleTypes = new [] { typeof(string) })]
        string LastUpdateHistoryEntryId { get;  }
        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. ",
        SerializedName = @"licenseModel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel? LicenseModel { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Additional information about the current lifecycle state.",
        SerializedName = @"lifecycleDetails",
        PossibleTypes = new [] { typeof(string) })]
        string LifecycleDetail { get;  }
        /// <summary>CloudVmCluster lifecycle state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"CloudVmCluster lifecycle state",
        SerializedName = @"lifecycleState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CloudVMClusterLifecycleState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CloudVMClusterLifecycleState? LifecycleState { get;  }
        /// <summary>The port number configured for the listener on the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The port number configured for the listener on the cloud VM cluster.",
        SerializedName = @"listenerPort",
        PossibleTypes = new [] { typeof(long) })]
        long? ListenerPort { get;  }
        /// <summary>The memory to be allocated in GBs.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The memory to be allocated in GBs.",
        SerializedName = @"memorySizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? MemorySizeInGb { get; set; }
        /// <summary>The number of nodes in the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of nodes in the cloud VM cluster. ",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeCount { get;  }
        /// <summary>
        /// CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.",
        SerializedName = @"nsgCidrs",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr[] NsgCidr { get; set; }
        /// <summary>
        /// HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.",
        SerializedName = @"nsgUrl",
        PossibleTypes = new [] { typeof(string) })]
        string NsgUrl { get;  }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
        SerializedName = @"ociUrl",
        PossibleTypes = new [] { typeof(string) })]
        string OciUrl { get;  }
        /// <summary>Cloud VM Cluster ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cloud VM Cluster ocid",
        SerializedName = @"ocid",
        PossibleTypes = new [] { typeof(string) })]
        string Ocid { get;  }
        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.",
        SerializedName = @"ocpuCount",
        PossibleTypes = new [] { typeof(float) })]
        float? OcpuCount { get; set; }
        /// <summary>CloudVmCluster provisioning state</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"CloudVmCluster provisioning state",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster. ",
        SerializedName = @"scanDnsName",
        PossibleTypes = new [] { typeof(string) })]
        string ScanDnsName { get;  }
        /// <summary>
        /// The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.",
        SerializedName = @"scanDnsRecordId",
        PossibleTypes = new [] { typeof(string) })]
        string ScanDnsRecordId { get;  }
        /// <summary>
        /// The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically
        /// used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate
        /// nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.",
        SerializedName = @"scanIpIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] ScanIPId { get;  }
        /// <summary>The TCP Single Client Access Name (SCAN) port. The default port is 1521.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TCP Single Client Access Name (SCAN) port. The default port is 1521.",
        SerializedName = @"scanListenerPortTcp",
        PossibleTypes = new [] { typeof(int) })]
        int? ScanListenerPortTcp { get; set; }
        /// <summary>The TCPS Single Client Access Name (SCAN) port. The default port is 2484.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The TCPS Single Client Access Name (SCAN) port. The default port is 2484.",
        SerializedName = @"scanListenerPortTcpSsl",
        PossibleTypes = new [] { typeof(int) })]
        int? ScanListenerPortTcpSsl { get; set; }
        /// <summary>The model name of the Exadata hardware running the cloud VM cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The model name of the Exadata hardware running the cloud VM cluster.",
        SerializedName = @"shape",
        PossibleTypes = new [] { typeof(string) })]
        string Shape { get;  }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
        SerializedName = @"sshPublicKeys",
        PossibleTypes = new [] { typeof(string) })]
        string[] SshPublicKey { get; set; }
        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The data disk group size to be allocated in GBs per VM.",
        SerializedName = @"storageSizeInGbs",
        PossibleTypes = new [] { typeof(int) })]
        int? StorageSizeInGb { get; set; }
        /// <summary>Client subnet</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Client subnet",
        SerializedName = @"subnetId",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetId { get; set; }
        /// <summary>Cluster subnet ocid</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Cluster subnet ocid",
        SerializedName = @"subnetOcid",
        PossibleTypes = new [] { typeof(string) })]
        string SubnetOcid { get;  }
        /// <summary>Operating system version of the image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operating system version of the image.",
        SerializedName = @"systemVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SystemVersion { get; set; }
        /// <summary>The date and time that the cloud VM cluster was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time that the cloud VM cluster was created.",
        SerializedName = @"timeCreated",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeCreated { get;  }
        /// <summary>
        /// The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).",
        SerializedName = @"timeZone",
        PossibleTypes = new [] { typeof(string) })]
        string TimeZone { get; set; }
        /// <summary>
        /// The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains
        /// one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is
        /// reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.",
        SerializedName = @"vipIds",
        PossibleTypes = new [] { typeof(string) })]
        string[] VipId { get;  }
        /// <summary>VNET for network connectivity</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"VNET for network connectivity",
        SerializedName = @"vnetId",
        PossibleTypes = new [] { typeof(string) })]
        string VnetId { get; set; }
        /// <summary>The OCID of the zone the cloud VM cluster is associated with.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The OCID of the zone the cloud VM cluster is associated with.",
        SerializedName = @"zoneId",
        PossibleTypes = new [] { typeof(string) })]
        string ZoneId { get; set; }

    }
    /// CloudVmCluster resource model
    internal partial interface ICloudVMClusterPropertiesInternal

    {
        /// <summary>Client OCI backup subnet CIDR, default is 192.168.252.0/22</summary>
        string BackupSubnetCidr { get; set; }
        /// <summary>Cloud Exadata Infrastructure ID</summary>
        string CloudExadataInfrastructureId { get; set; }
        /// <summary>
        /// The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens
        /// (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
        /// </summary>
        string ClusterName { get; set; }
        /// <summary>Cluster compartmentId</summary>
        string CompartmentId { get; set; }
        /// <summary>The compute model of the VM Cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ComputeModel? ComputeModel { get; set; }
        /// <summary>The list of compute servers to be added to the cloud VM cluster.</summary>
        string[] ComputeNode { get; set; }
        /// <summary>The number of CPU cores enabled on the cloud VM cluster.</summary>
        int CpuCoreCount { get; set; }
        /// <summary>
        /// Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptions DataCollectionOption { get; set; }
        /// <summary>
        /// Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsDiagnosticsEventsEnabled { get; set; }
        /// <summary>
        /// Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsHealthMonitoringEnabled { get; set; }
        /// <summary>
        /// Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.
        /// </summary>
        bool? DataCollectionOptionIsIncidentLogsEnabled { get; set; }
        /// <summary>
        /// The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage
        /// (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is
        /// 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in
        /// the Exadata documentation for details on the impact of the configuration settings on storage.
        /// </summary>
        int? DataStoragePercentage { get; set; }
        /// <summary>The data disk group size to be allocated in TBs.</summary>
        double? DataStorageSizeInTb { get; set; }
        /// <summary>The local node storage to be allocated in GBs.</summary>
        int? DbNodeStorageSizeInGb { get; set; }
        /// <summary>The list of DB servers.</summary>
        string[] DbServer { get; set; }
        /// <summary>
        /// The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.DiskRedundancy? DiskRedundancy { get; set; }
        /// <summary>Display Name</summary>
        string DisplayName { get; set; }
        /// <summary>The domain name for the cloud VM cluster.</summary>
        string Domain { get; set; }
        /// <summary>Array of mount path and size.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IFileSystemConfigurationDetails[] FileSystemConfigurationDetail { get; set; }
        /// <summary>Oracle Grid Infrastructure (GI) software version</summary>
        string GiVersion { get; set; }
        /// <summary>The hostname for the cloud VM cluster.</summary>
        string Hostname { get; set; }
        /// <summary>iormConfigCache details for cloud VM cluster.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfig IormConfigCache { get; set; }
        /// <summary>An array of IORM settings for all the database in the Exadata DB system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig[] IormConfigCacheDbPlan { get; set; }
        /// <summary>Additional information about the current lifecycleState.</summary>
        string IormConfigCacheLifecycleDetail { get; set; }
        /// <summary>The current state of IORM configuration for the Exadata DB system.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState? IormConfigCacheLifecycleState { get; set; }
        /// <summary>The current value for the IORM objective. The default is AUTO.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective? IormConfigCacheObjective { get; set; }
        /// <summary>
        /// If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on
        /// local Exadata storage is not available in the cloud VM cluster.
        /// </summary>
        bool? IsLocalBackupEnabled { get; set; }
        /// <summary>
        /// If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
        /// </summary>
        bool? IsSparseDiskgroupEnabled { get; set; }
        /// <summary>The OCID of the last maintenance update history entry.</summary>
        string LastUpdateHistoryEntryId { get; set; }
        /// <summary>
        /// The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel? LicenseModel { get; set; }
        /// <summary>Additional information about the current lifecycle state.</summary>
        string LifecycleDetail { get; set; }
        /// <summary>CloudVmCluster lifecycle state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.CloudVMClusterLifecycleState? LifecycleState { get; set; }
        /// <summary>The port number configured for the listener on the cloud VM cluster.</summary>
        long? ListenerPort { get; set; }
        /// <summary>The memory to be allocated in GBs.</summary>
        int? MemorySizeInGb { get; set; }
        /// <summary>The number of nodes in the cloud VM cluster.</summary>
        int? NodeCount { get; set; }
        /// <summary>
        /// CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr[] NsgCidr { get; set; }
        /// <summary>
        /// HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.
        /// </summary>
        string NsgUrl { get; set; }
        /// <summary>HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.</summary>
        string OciUrl { get; set; }
        /// <summary>Cloud VM Cluster ocid</summary>
        string Ocid { get; set; }
        /// <summary>
        /// The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
        /// </summary>
        float? OcpuCount { get; set; }
        /// <summary>CloudVmCluster provisioning state</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
        /// </summary>
        string ScanDnsName { get; set; }
        /// <summary>
        /// The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
        /// </summary>
        string ScanDnsRecordId { get; set; }
        /// <summary>
        /// The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically
        /// used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate
        /// nodes in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        string[] ScanIPId { get; set; }
        /// <summary>The TCP Single Client Access Name (SCAN) port. The default port is 1521.</summary>
        int? ScanListenerPortTcp { get; set; }
        /// <summary>The TCPS Single Client Access Name (SCAN) port. The default port is 2484.</summary>
        int? ScanListenerPortTcpSsl { get; set; }
        /// <summary>The model name of the Exadata hardware running the cloud VM cluster.</summary>
        string Shape { get; set; }
        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
        /// </summary>
        string[] SshPublicKey { get; set; }
        /// <summary>The data disk group size to be allocated in GBs per VM.</summary>
        int? StorageSizeInGb { get; set; }
        /// <summary>Client subnet</summary>
        string SubnetId { get; set; }
        /// <summary>Cluster subnet ocid</summary>
        string SubnetOcid { get; set; }
        /// <summary>Operating system version of the image.</summary>
        string SystemVersion { get; set; }
        /// <summary>The date and time that the cloud VM cluster was created.</summary>
        global::System.DateTime? TimeCreated { get; set; }
        /// <summary>
        /// The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).
        /// </summary>
        string TimeZone { get; set; }
        /// <summary>
        /// The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains
        /// one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is
        /// reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.
        /// </summary>
        string[] VipId { get; set; }
        /// <summary>VNET for network connectivity</summary>
        string VnetId { get; set; }
        /// <summary>The OCID of the zone the cloud VM cluster is associated with.</summary>
        string ZoneId { get; set; }

    }
}