// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Extensions;

    /// <summary>
    /// The connection string profile to allow clients to group, filter and select connection string values based on structured
    /// metadata.
    /// </summary>
    public partial class ProfileType :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IProfileType,
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IProfileTypeInternal
    {

        /// <summary>Backing field for <see cref="ConsumerGroup" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ConsumerGroup? _consumerGroup;

        /// <summary>Consumer group used by the connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ConsumerGroup? ConsumerGroup { get => this._consumerGroup; set => this._consumerGroup = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>A user-friendly name for the connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="HostFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.HostFormatType _hostFormat;

        /// <summary>Host format used in connection string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.HostFormatType HostFormat { get => this._hostFormat; set => this._hostFormat = value; }

        /// <summary>Backing field for <see cref="IsRegional" /> property.</summary>
        private bool? _isRegional;

        /// <summary>True for a regional connection string, applicable to cross-region DG only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public bool? IsRegional { get => this._isRegional; set => this._isRegional = value; }

        /// <summary>Backing field for <see cref="Protocol" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ProtocolType _protocol;

        /// <summary>Protocol used by the connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ProtocolType Protocol { get => this._protocol; set => this._protocol = value; }

        /// <summary>Backing field for <see cref="SessionMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SessionModeType _sessionMode;

        /// <summary>
        /// Specifies whether the listener performs a direct hand-off of the session, or redirects the session.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SessionModeType SessionMode { get => this._sessionMode; set => this._sessionMode = value; }

        /// <summary>Backing field for <see cref="SyntaxFormat" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SyntaxFormatType _syntaxFormat;

        /// <summary>
        /// Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS)
        /// format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SyntaxFormatType SyntaxFormat { get => this._syntaxFormat; set => this._syntaxFormat = value; }

        /// <summary>Backing field for <see cref="TlsAuthentication" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.TlsAuthenticationType? _tlsAuthentication;

        /// <summary>
        /// Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.TlsAuthenticationType? TlsAuthentication { get => this._tlsAuthentication; set => this._tlsAuthentication = value; }

        /// <summary>Backing field for <see cref="Value" /> property.</summary>
        private string _value;

        /// <summary>Connection string value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Origin(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.PropertyOrigin.Owned)]
        public string Value { get => this._value; set => this._value = value; }

        /// <summary>Creates an new <see cref="ProfileType" /> instance.</summary>
        public ProfileType()
        {

        }
    }
    /// The connection string profile to allow clients to group, filter and select connection string values based on structured
    /// metadata.
    public partial interface IProfileType :
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.IJsonSerializable
    {
        /// <summary>Consumer group used by the connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Consumer group used by the connection.",
        SerializedName = @"consumerGroup",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ConsumerGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ConsumerGroup? ConsumerGroup { get; set; }
        /// <summary>A user-friendly name for the connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"A user-friendly name for the connection.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Host format used in connection string.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Host format used in connection string.",
        SerializedName = @"hostFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.HostFormatType) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.HostFormatType HostFormat { get; set; }
        /// <summary>True for a regional connection string, applicable to cross-region DG only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"True for a regional connection string, applicable to cross-region DG only.",
        SerializedName = @"isRegional",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsRegional { get; set; }
        /// <summary>Protocol used by the connection.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Protocol used by the connection.",
        SerializedName = @"protocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ProtocolType) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ProtocolType Protocol { get; set; }
        /// <summary>
        /// Specifies whether the listener performs a direct hand-off of the session, or redirects the session.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies whether the listener performs a direct hand-off of the session, or redirects the session.",
        SerializedName = @"sessionMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SessionModeType) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SessionModeType SessionMode { get; set; }
        /// <summary>
        /// Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS)
        /// format.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS) format.",
        SerializedName = @"syntaxFormat",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SyntaxFormatType) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SyntaxFormatType SyntaxFormat { get; set; }
        /// <summary>
        /// Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication.",
        SerializedName = @"tlsAuthentication",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.TlsAuthenticationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.TlsAuthenticationType? TlsAuthentication { get; set; }
        /// <summary>Connection string value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Connection string value.",
        SerializedName = @"value",
        PossibleTypes = new [] { typeof(string) })]
        string Value { get; set; }

    }
    /// The connection string profile to allow clients to group, filter and select connection string values based on structured
    /// metadata.
    internal partial interface IProfileTypeInternal

    {
        /// <summary>Consumer group used by the connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ConsumerGroup? ConsumerGroup { get; set; }
        /// <summary>A user-friendly name for the connection.</summary>
        string DisplayName { get; set; }
        /// <summary>Host format used in connection string.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.HostFormatType HostFormat { get; set; }
        /// <summary>True for a regional connection string, applicable to cross-region DG only.</summary>
        bool? IsRegional { get; set; }
        /// <summary>Protocol used by the connection.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ProtocolType Protocol { get; set; }
        /// <summary>
        /// Specifies whether the listener performs a direct hand-off of the session, or redirects the session.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SessionModeType SessionMode { get; set; }
        /// <summary>
        /// Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS)
        /// format.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.SyntaxFormatType SyntaxFormat { get; set; }
        /// <summary>
        /// Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.TlsAuthenticationType? TlsAuthentication { get; set; }
        /// <summary>Connection string value.</summary>
        string Value { get; set; }

    }
}