// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301
{
    using Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.PowerShell;

    /// <summary>ExadbVmCluster resource model</summary>
    [System.ComponentModel.TypeConverter(typeof(ExadbVMClusterPropertiesTypeConverter))]
    public partial class ExadbVMClusterProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ExadbVMClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ExadbVMClusterProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ExadbVMClusterProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DataCollectionOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOption = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptions) content.GetValueForProperty("DataCollectionOption",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOption, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.DataCollectionOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMFileSystemStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorage = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterStorageDetails) content.GetValueForProperty("VMFileSystemStorage",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorage, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterStorageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapshotFileSystemStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorage = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterStorageDetails) content.GetValueForProperty("SnapshotFileSystemStorage",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorage, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterStorageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TotalFileSystemStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorage = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterStorageDetails) content.GetValueForProperty("TotalFileSystemStorage",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorage, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterStorageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IormConfigCache"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCache = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfig) content.GetValueForProperty("IormConfigCache",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCache, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadataIormConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("Ocid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Ocid = (string) content.GetValueForProperty("Ocid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Ocid, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("BackupSubnetCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetCidr = (string) content.GetValueForProperty("BackupSubnetCidr",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NsgUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgUrl = (string) content.GetValueForProperty("NsgUrl",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState.CreateFrom);
            }
            if (content.Contains("LifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleState = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ExadbVMClusterLifecycleState?) content.GetValueForProperty("LifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleState, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ExadbVMClusterLifecycleState.CreateFrom);
            }
            if (content.Contains("VnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VnetId = (string) content.GetValueForProperty("VnetId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VnetId, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Domain = (string) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Domain, global::System.Convert.ToString);
            }
            if (content.Contains("EnabledEcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).EnabledEcpuCount = (int) content.GetValueForProperty("EnabledEcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).EnabledEcpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ExascaleDbStorageVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ExascaleDbStorageVaultId = (string) content.GetValueForProperty("ExascaleDbStorageVaultId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ExascaleDbStorageVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("GridImageOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageOcid = (string) content.GetValueForProperty("GridImageOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageOcid, global::System.Convert.ToString);
            }
            if (content.Contains("GridImageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageType = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.GridImageType?) content.GetValueForProperty("GridImageType",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageType, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.GridImageType.CreateFrom);
            }
            if (content.Contains("GiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GiVersion = (string) content.GetValueForProperty("GiVersion",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Hostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Hostname = (string) content.GetValueForProperty("Hostname",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Hostname, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LicenseModel = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel?) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LicenseModel, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel.CreateFrom);
            }
            if (content.Contains("MemorySizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).MemorySizeInGb = (int?) content.GetValueForProperty("MemorySizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).MemorySizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NodeCount = (int) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NsgCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgCidr = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr[]) content.GetValueForProperty("NsgCidr",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgCidr, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr>(__y, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.NsgCidrTypeConverter.ConvertFrom));
            }
            if (content.Contains("ZoneOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ZoneOcid = (string) content.GetValueForProperty("ZoneOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ZoneOcid, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateZoneOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).PrivateZoneOcid = (string) content.GetValueForProperty("PrivateZoneOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).PrivateZoneOcid, global::System.Convert.ToString);
            }
            if (content.Contains("ScanListenerPortTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcp = (int?) content.GetValueForProperty("ScanListenerPortTcp",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScanListenerPortTcpSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcpSsl = (int?) content.GetValueForProperty("ScanListenerPortTcpSsl",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcpSsl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ListenerPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ListenerPort = (int?) content.GetValueForProperty("ListenerPort",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ListenerPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Shape"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Shape = (string) content.GetValueForProperty("Shape",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Shape, global::System.Convert.ToString);
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SshPublicKey = (string[]) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SystemVersion = (string) content.GetValueForProperty("SystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("TotalEcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalEcpuCount = (int) content.GetValueForProperty("TotalEcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalEcpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleDetail = (string) content.GetValueForProperty("LifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("ScanDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsName = (string) content.GetValueForProperty("ScanDnsName",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("ScanIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanIPId = (string[]) content.GetValueForProperty("ScanIPId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanIPId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScanDnsRecordId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsRecordId = (string) content.GetValueForProperty("ScanDnsRecordId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsRecordId, global::System.Convert.ToString);
            }
            if (content.Contains("VipId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VipId = (string[]) content.GetValueForProperty("VipId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VipId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("OciUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).OciUrl = (string) content.GetValueForProperty("OciUrl",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).OciUrl, global::System.Convert.ToString);
            }
            if (content.Contains("BackupSubnetOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetOcid = (string) content.GetValueForProperty("BackupSubnetOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetOcid, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetOcid = (string) content.GetValueForProperty("SubnetOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetOcid, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheObjective"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheObjective = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective?) content.GetValueForProperty("IormConfigCacheObjective",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheObjective, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective.CreateFrom);
            }
            if (content.Contains("DataCollectionOptionIsDiagnosticsEventsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsDiagnosticsEventsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsHealthMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsHealthMonitoringEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsHealthMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsHealthMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsIncidentLogsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsIncidentLogsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsIncidentLogsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsIncidentLogsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VMFileSystemStorageTotalSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorageTotalSizeInGb = (int) content.GetValueForProperty("VMFileSystemStorageTotalSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorageTotalSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SnapshotFileSystemStorageTotalSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorageTotalSizeInGb = (int) content.GetValueForProperty("SnapshotFileSystemStorageTotalSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorageTotalSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalFileSystemStorageTotalSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorageTotalSizeInGb = (int) content.GetValueForProperty("TotalFileSystemStorageTotalSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorageTotalSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IormConfigCacheDbPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheDbPlan = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig[]) content.GetValueForProperty("IormConfigCacheDbPlan",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheDbPlan, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.DbIormConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("IormConfigCacheLifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleDetail = (string) content.GetValueForProperty("IormConfigCacheLifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheLifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleState = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState?) content.GetValueForProperty("IormConfigCacheLifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleState, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ExadbVMClusterProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("DataCollectionOption"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOption = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDataCollectionOptions) content.GetValueForProperty("DataCollectionOption",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOption, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.DataCollectionOptionsTypeConverter.ConvertFrom);
            }
            if (content.Contains("VMFileSystemStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorage = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterStorageDetails) content.GetValueForProperty("VMFileSystemStorage",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorage, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterStorageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("SnapshotFileSystemStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorage = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterStorageDetails) content.GetValueForProperty("SnapshotFileSystemStorage",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorage, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterStorageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("TotalFileSystemStorage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorage = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterStorageDetails) content.GetValueForProperty("TotalFileSystemStorage",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorage, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadbVMClusterStorageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("IormConfigCache"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCache = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadataIormConfig) content.GetValueForProperty("IormConfigCache",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCache, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.ExadataIormConfigTypeConverter.ConvertFrom);
            }
            if (content.Contains("Ocid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Ocid = (string) content.GetValueForProperty("Ocid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Ocid, global::System.Convert.ToString);
            }
            if (content.Contains("ClusterName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ClusterName = (string) content.GetValueForProperty("ClusterName",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ClusterName, global::System.Convert.ToString);
            }
            if (content.Contains("BackupSubnetCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetCidr = (string) content.GetValueForProperty("BackupSubnetCidr",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetCidr, global::System.Convert.ToString);
            }
            if (content.Contains("NsgUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgUrl = (string) content.GetValueForProperty("NsgUrl",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgUrl, global::System.Convert.ToString);
            }
            if (content.Contains("ProvisioningState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ProvisioningState = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState?) content.GetValueForProperty("ProvisioningState",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ProvisioningState, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.AzureResourceProvisioningState.CreateFrom);
            }
            if (content.Contains("LifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleState = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ExadbVMClusterLifecycleState?) content.GetValueForProperty("LifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleState, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.ExadbVMClusterLifecycleState.CreateFrom);
            }
            if (content.Contains("VnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VnetId = (string) content.GetValueForProperty("VnetId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VnetId, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetId = (string) content.GetValueForProperty("SubnetId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetId, global::System.Convert.ToString);
            }
            if (content.Contains("DisplayName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DisplayName = (string) content.GetValueForProperty("DisplayName",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DisplayName, global::System.Convert.ToString);
            }
            if (content.Contains("Domain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Domain = (string) content.GetValueForProperty("Domain",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Domain, global::System.Convert.ToString);
            }
            if (content.Contains("EnabledEcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).EnabledEcpuCount = (int) content.GetValueForProperty("EnabledEcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).EnabledEcpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ExascaleDbStorageVaultId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ExascaleDbStorageVaultId = (string) content.GetValueForProperty("ExascaleDbStorageVaultId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ExascaleDbStorageVaultId, global::System.Convert.ToString);
            }
            if (content.Contains("GridImageOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageOcid = (string) content.GetValueForProperty("GridImageOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageOcid, global::System.Convert.ToString);
            }
            if (content.Contains("GridImageType"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageType = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.GridImageType?) content.GetValueForProperty("GridImageType",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GridImageType, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.GridImageType.CreateFrom);
            }
            if (content.Contains("GiVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GiVersion = (string) content.GetValueForProperty("GiVersion",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).GiVersion, global::System.Convert.ToString);
            }
            if (content.Contains("Hostname"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Hostname = (string) content.GetValueForProperty("Hostname",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Hostname, global::System.Convert.ToString);
            }
            if (content.Contains("LicenseModel"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LicenseModel = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel?) content.GetValueForProperty("LicenseModel",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LicenseModel, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.LicenseModel.CreateFrom);
            }
            if (content.Contains("MemorySizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).MemorySizeInGb = (int?) content.GetValueForProperty("MemorySizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).MemorySizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NodeCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NodeCount = (int) content.GetValueForProperty("NodeCount",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NodeCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("NsgCidr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgCidr = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr[]) content.GetValueForProperty("NsgCidr",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).NsgCidr, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.INsgCidr>(__y, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.NsgCidrTypeConverter.ConvertFrom));
            }
            if (content.Contains("ZoneOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ZoneOcid = (string) content.GetValueForProperty("ZoneOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ZoneOcid, global::System.Convert.ToString);
            }
            if (content.Contains("PrivateZoneOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).PrivateZoneOcid = (string) content.GetValueForProperty("PrivateZoneOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).PrivateZoneOcid, global::System.Convert.ToString);
            }
            if (content.Contains("ScanListenerPortTcp"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcp = (int?) content.GetValueForProperty("ScanListenerPortTcp",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcp, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ScanListenerPortTcpSsl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcpSsl = (int?) content.GetValueForProperty("ScanListenerPortTcpSsl",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanListenerPortTcpSsl, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ListenerPort"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ListenerPort = (int?) content.GetValueForProperty("ListenerPort",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ListenerPort, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("Shape"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Shape = (string) content.GetValueForProperty("Shape",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).Shape, global::System.Convert.ToString);
            }
            if (content.Contains("SshPublicKey"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SshPublicKey = (string[]) content.GetValueForProperty("SshPublicKey",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SshPublicKey, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("SystemVersion"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SystemVersion = (string) content.GetValueForProperty("SystemVersion",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SystemVersion, global::System.Convert.ToString);
            }
            if (content.Contains("TimeZone"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TimeZone = (string) content.GetValueForProperty("TimeZone",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TimeZone, global::System.Convert.ToString);
            }
            if (content.Contains("TotalEcpuCount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalEcpuCount = (int) content.GetValueForProperty("TotalEcpuCount",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalEcpuCount, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("LifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleDetail = (string) content.GetValueForProperty("LifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).LifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("ScanDnsName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsName = (string) content.GetValueForProperty("ScanDnsName",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsName, global::System.Convert.ToString);
            }
            if (content.Contains("ScanIPId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanIPId = (string[]) content.GetValueForProperty("ScanIPId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanIPId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("ScanDnsRecordId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsRecordId = (string) content.GetValueForProperty("ScanDnsRecordId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).ScanDnsRecordId, global::System.Convert.ToString);
            }
            if (content.Contains("VipId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VipId = (string[]) content.GetValueForProperty("VipId",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VipId, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("OciUrl"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).OciUrl = (string) content.GetValueForProperty("OciUrl",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).OciUrl, global::System.Convert.ToString);
            }
            if (content.Contains("BackupSubnetOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetOcid = (string) content.GetValueForProperty("BackupSubnetOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).BackupSubnetOcid, global::System.Convert.ToString);
            }
            if (content.Contains("SubnetOcid"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetOcid = (string) content.GetValueForProperty("SubnetOcid",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SubnetOcid, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheObjective"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheObjective = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective?) content.GetValueForProperty("IormConfigCacheObjective",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheObjective, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.Objective.CreateFrom);
            }
            if (content.Contains("DataCollectionOptionIsDiagnosticsEventsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsDiagnosticsEventsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsDiagnosticsEventsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsHealthMonitoringEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsHealthMonitoringEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsHealthMonitoringEnabled",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsHealthMonitoringEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("DataCollectionOptionIsIncidentLogsEnabled"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsIncidentLogsEnabled = (bool?) content.GetValueForProperty("DataCollectionOptionIsIncidentLogsEnabled",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).DataCollectionOptionIsIncidentLogsEnabled, (__y)=> (bool) global::System.Convert.ChangeType(__y, typeof(bool)));
            }
            if (content.Contains("VMFileSystemStorageTotalSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorageTotalSizeInGb = (int) content.GetValueForProperty("VMFileSystemStorageTotalSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).VMFileSystemStorageTotalSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("SnapshotFileSystemStorageTotalSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorageTotalSizeInGb = (int) content.GetValueForProperty("SnapshotFileSystemStorageTotalSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).SnapshotFileSystemStorageTotalSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("TotalFileSystemStorageTotalSizeInGb"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorageTotalSizeInGb = (int) content.GetValueForProperty("TotalFileSystemStorageTotalSizeInGb",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).TotalFileSystemStorageTotalSizeInGb, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("IormConfigCacheDbPlan"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheDbPlan = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig[]) content.GetValueForProperty("IormConfigCacheDbPlan",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheDbPlan, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IDbIormConfig>(__y, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.DbIormConfigTypeConverter.ConvertFrom));
            }
            if (content.Contains("IormConfigCacheLifecycleDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleDetail = (string) content.GetValueForProperty("IormConfigCacheLifecycleDetail",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleDetail, global::System.Convert.ToString);
            }
            if (content.Contains("IormConfigCacheLifecycleState"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleState = (Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState?) content.GetValueForProperty("IormConfigCacheLifecycleState",((Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterPropertiesInternal)this).IormConfigCacheLifecycleState, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Support.IormLifecycleState.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ExadbVMClusterProperties" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ExadbVMClusterProperties" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Models.Api20250301.IExadbVMClusterProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.OracleDatabaseResourceManager.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// ExadbVmCluster resource model
    [System.ComponentModel.TypeConverter(typeof(ExadbVMClusterPropertiesTypeConverter))]
    public partial interface IExadbVMClusterProperties

    {

    }
}