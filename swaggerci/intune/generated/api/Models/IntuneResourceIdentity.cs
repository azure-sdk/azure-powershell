// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Models
{
    using static Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Extensions;

    public partial class IntuneResourceIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Models.IIntuneResourceIdentity,
        Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Models.IIntuneResourceIdentityInternal
    {

        /// <summary>Backing field for <see cref="AppName" /> property.</summary>
        private string _appName;

        /// <summary>application unique Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string AppName { get => this._appName; set => this._appName = value; }

        /// <summary>Backing field for <see cref="DeviceName" /> property.</summary>
        private string _deviceName;

        /// <summary>device name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string DeviceName { get => this._deviceName; set => this._deviceName = value; }

        /// <summary>Backing field for <see cref="GroupId" /> property.</summary>
        private string _groupId;

        /// <summary>group Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string GroupId { get => this._groupId; set => this._groupId = value; }

        /// <summary>Backing field for <see cref="HostName" /> property.</summary>
        private string _hostName;

        /// <summary>Location hostName for the tenant</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string HostName { get => this._hostName; set => this._hostName = value; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Backing field for <see cref="PolicyName" /> property.</summary>
        private string _policyName;

        /// <summary>Unique name for the policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string PolicyName { get => this._policyName; set => this._policyName = value; }

        /// <summary>Backing field for <see cref="UserName" /> property.</summary>
        private string _userName;

        /// <summary>user unique Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Origin(Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.PropertyOrigin.Owned)]
        public string UserName { get => this._userName; set => this._userName = value; }

        /// <summary>Creates an new <see cref="IntuneResourceIdentity" /> instance.</summary>
        public IntuneResourceIdentity()
        {

        }
    }
    public partial interface IIntuneResourceIdentity :
        Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.IJsonSerializable
    {
        /// <summary>application unique Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"application unique Name",
        SerializedName = @"appName",
        PossibleTypes = new [] { typeof(string) })]
        string AppName { get; set; }
        /// <summary>device name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"device name",
        SerializedName = @"deviceName",
        PossibleTypes = new [] { typeof(string) })]
        string DeviceName { get; set; }
        /// <summary>group Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"group Id",
        SerializedName = @"groupId",
        PossibleTypes = new [] { typeof(string) })]
        string GroupId { get; set; }
        /// <summary>Location hostName for the tenant</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Location hostName for the tenant",
        SerializedName = @"hostName",
        PossibleTypes = new [] { typeof(string) })]
        string HostName { get; set; }
        /// <summary>Resource identity path</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource identity path",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>Unique name for the policy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique name for the policy",
        SerializedName = @"policyName",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyName { get; set; }
        /// <summary>user unique Name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.IntuneResource.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"user unique Name",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    internal partial interface IIntuneResourceIdentityInternal

    {
        /// <summary>application unique Name</summary>
        string AppName { get; set; }
        /// <summary>device name</summary>
        string DeviceName { get; set; }
        /// <summary>group Id</summary>
        string GroupId { get; set; }
        /// <summary>Location hostName for the tenant</summary>
        string HostName { get; set; }
        /// <summary>Resource identity path</summary>
        string Id { get; set; }
        /// <summary>Unique name for the policy</summary>
        string PolicyName { get; set; }
        /// <summary>user unique Name</summary>
        string UserName { get; set; }

    }
}