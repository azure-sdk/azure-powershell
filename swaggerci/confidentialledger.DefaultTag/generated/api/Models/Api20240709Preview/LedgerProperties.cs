// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Extensions;

    /// <summary>Additional Confidential Ledger properties.</summary>
    public partial class LedgerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AadBasedSecurityPrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.IAadBasedSecurityPrincipal[] _aadBasedSecurityPrincipal;

        /// <summary>Array of all AAD based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.IAadBasedSecurityPrincipal[] AadBasedSecurityPrincipal { get => this._aadBasedSecurityPrincipal; set => this._aadBasedSecurityPrincipal = value; }

        /// <summary>Backing field for <see cref="CertBasedSecurityPrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ICertBasedSecurityPrincipal[] _certBasedSecurityPrincipal;

        /// <summary>Array of all cert based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ICertBasedSecurityPrincipal[] CertBasedSecurityPrincipal { get => this._certBasedSecurityPrincipal; set => this._certBasedSecurityPrincipal = value; }

        /// <summary>Backing field for <see cref="HostLevel" /> property.</summary>
        private string _hostLevel;

        /// <summary>
        /// CCF Property for the logging level for the untrusted host: Trace, Debug, Info, Fail, Fatal.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string HostLevel { get => this._hostLevel; set => this._hostLevel = value; }

        /// <summary>Backing field for <see cref="IdentityServiceUri" /> property.</summary>
        private string _identityServiceUri;

        /// <summary>Endpoint for accessing network identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string IdentityServiceUri { get => this._identityServiceUri; }

        /// <summary>Backing field for <see cref="LedgerInternalNamespace" /> property.</summary>
        private string _ledgerInternalNamespace;

        /// <summary>Internal namespace for the Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string LedgerInternalNamespace { get => this._ledgerInternalNamespace; }

        /// <summary>Backing field for <see cref="LedgerName" /> property.</summary>
        private string _ledgerName;

        /// <summary>Unique name for the Confidential Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string LedgerName { get => this._ledgerName; }

        /// <summary>Backing field for <see cref="LedgerSku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerSku? _ledgerSku;

        /// <summary>SKU associated with the ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerSku? LedgerSku { get => this._ledgerSku; set => this._ledgerSku = value; }

        /// <summary>Backing field for <see cref="LedgerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? _ledgerType;

        /// <summary>Type of Confidential Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? LedgerType { get => this._ledgerType; set => this._ledgerType = value; }

        /// <summary>Backing field for <see cref="LedgerUri" /> property.</summary>
        private string _ledgerUri;

        /// <summary>Endpoint for calling Ledger Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string LedgerUri { get => this._ledgerUri; }

        /// <summary>Backing field for <see cref="MaxBodySizeInMb" /> property.</summary>
        private int? _maxBodySizeInMb;

        /// <summary>CCF Property for the maximum size of the http request body: 1MB, 5MB, 10MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public int? MaxBodySizeInMb { get => this._maxBodySizeInMb; set => this._maxBodySizeInMb = value; }

        /// <summary>Internal Acessors for IdentityServiceUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerPropertiesInternal.IdentityServiceUri { get => this._identityServiceUri; set { {_identityServiceUri = value;} } }

        /// <summary>Internal Acessors for LedgerInternalNamespace</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerPropertiesInternal.LedgerInternalNamespace { get => this._ledgerInternalNamespace; set { {_ledgerInternalNamespace = value;} } }

        /// <summary>Internal Acessors for LedgerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerPropertiesInternal.LedgerName { get => this._ledgerName; set { {_ledgerName = value;} } }

        /// <summary>Internal Acessors for LedgerUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerPropertiesInternal.LedgerUri { get => this._ledgerUri; set { {_ledgerUri = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ILedgerPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="NodeCount" /> property.</summary>
        private int? _nodeCount;

        /// <summary>Number of CCF nodes in the ACC Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public int? NodeCount { get => this._nodeCount; set => this._nodeCount = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? _provisioningState;

        /// <summary>Provisioning state of Ledger Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="RunningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.RunningState? _runningState;

        /// <summary>Object representing RunningState for Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.RunningState? RunningState { get => this._runningState; set => this._runningState = value; }

        /// <summary>Backing field for <see cref="SubjectName" /> property.</summary>
        private string _subjectName;

        /// <summary>
        /// CCF Property for the subject name to include in the node certificate. Default: CN=CCF Node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string SubjectName { get => this._subjectName; set => this._subjectName = value; }

        /// <summary>Backing field for <see cref="WorkerThread" /> property.</summary>
        private int? _workerThread;

        /// <summary>
        /// Number of additional threads processing incoming client requests in the enclave (modify with care!)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public int? WorkerThread { get => this._workerThread; set => this._workerThread = value; }

        /// <summary>Backing field for <see cref="WriteLbAddressPrefix" /> property.</summary>
        private string _writeLbAddressPrefix;

        /// <summary>Prefix for the write load balancer. Example: write</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Origin(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.PropertyOrigin.Owned)]
        public string WriteLbAddressPrefix { get => this._writeLbAddressPrefix; set => this._writeLbAddressPrefix = value; }

        /// <summary>Creates an new <see cref="LedgerProperties" /> instance.</summary>
        public LedgerProperties()
        {

        }
    }
    /// Additional Confidential Ledger properties.
    public partial interface ILedgerProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.IJsonSerializable
    {
        /// <summary>Array of all AAD based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of all AAD based Security Principals.",
        SerializedName = @"aadBasedSecurityPrincipals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.IAadBasedSecurityPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.IAadBasedSecurityPrincipal[] AadBasedSecurityPrincipal { get; set; }
        /// <summary>Array of all cert based Security Principals.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of all cert based Security Principals.",
        SerializedName = @"certBasedSecurityPrincipals",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ICertBasedSecurityPrincipal) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ICertBasedSecurityPrincipal[] CertBasedSecurityPrincipal { get; set; }
        /// <summary>
        /// CCF Property for the logging level for the untrusted host: Trace, Debug, Info, Fail, Fatal.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CCF Property for the logging level for the untrusted host: Trace, Debug, Info, Fail, Fatal.",
        SerializedName = @"hostLevel",
        PossibleTypes = new [] { typeof(string) })]
        string HostLevel { get; set; }
        /// <summary>Endpoint for accessing network identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Endpoint for accessing network identity.",
        SerializedName = @"identityServiceUri",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityServiceUri { get;  }
        /// <summary>Internal namespace for the Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Internal namespace for the Ledger",
        SerializedName = @"ledgerInternalNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string LedgerInternalNamespace { get;  }
        /// <summary>Unique name for the Confidential Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Unique name for the Confidential Ledger.",
        SerializedName = @"ledgerName",
        PossibleTypes = new [] { typeof(string) })]
        string LedgerName { get;  }
        /// <summary>SKU associated with the ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU associated with the ledger",
        SerializedName = @"ledgerSku",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerSku) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerSku? LedgerSku { get; set; }
        /// <summary>Type of Confidential Ledger</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of Confidential Ledger",
        SerializedName = @"ledgerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? LedgerType { get; set; }
        /// <summary>Endpoint for calling Ledger Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Endpoint for calling Ledger Service.",
        SerializedName = @"ledgerUri",
        PossibleTypes = new [] { typeof(string) })]
        string LedgerUri { get;  }
        /// <summary>CCF Property for the maximum size of the http request body: 1MB, 5MB, 10MB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CCF Property for the maximum size of the http request body: 1MB, 5MB, 10MB.",
        SerializedName = @"maxBodySizeInMb",
        PossibleTypes = new [] { typeof(int) })]
        int? MaxBodySizeInMb { get; set; }
        /// <summary>Number of CCF nodes in the ACC Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of CCF nodes in the ACC Ledger.",
        SerializedName = @"nodeCount",
        PossibleTypes = new [] { typeof(int) })]
        int? NodeCount { get; set; }
        /// <summary>Provisioning state of Ledger Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state of Ledger Resource",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>Object representing RunningState for Ledger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Object representing RunningState for Ledger.",
        SerializedName = @"runningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.RunningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.RunningState? RunningState { get; set; }
        /// <summary>
        /// CCF Property for the subject name to include in the node certificate. Default: CN=CCF Node.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"CCF Property for the subject name to include in the node certificate. Default: CN=CCF Node.",
        SerializedName = @"subjectName",
        PossibleTypes = new [] { typeof(string) })]
        string SubjectName { get; set; }
        /// <summary>
        /// Number of additional threads processing incoming client requests in the enclave (modify with care!)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Number of additional threads processing incoming client requests in the enclave (modify with care!)",
        SerializedName = @"workerThreads",
        PossibleTypes = new [] { typeof(int) })]
        int? WorkerThread { get; set; }
        /// <summary>Prefix for the write load balancer. Example: write</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Prefix for the write load balancer. Example: write",
        SerializedName = @"writeLBAddressPrefix",
        PossibleTypes = new [] { typeof(string) })]
        string WriteLbAddressPrefix { get; set; }

    }
    /// Additional Confidential Ledger properties.
    internal partial interface ILedgerPropertiesInternal

    {
        /// <summary>Array of all AAD based Security Principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.IAadBasedSecurityPrincipal[] AadBasedSecurityPrincipal { get; set; }
        /// <summary>Array of all cert based Security Principals.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Models.Api20240709Preview.ICertBasedSecurityPrincipal[] CertBasedSecurityPrincipal { get; set; }
        /// <summary>
        /// CCF Property for the logging level for the untrusted host: Trace, Debug, Info, Fail, Fatal.
        /// </summary>
        string HostLevel { get; set; }
        /// <summary>Endpoint for accessing network identity.</summary>
        string IdentityServiceUri { get; set; }
        /// <summary>Internal namespace for the Ledger</summary>
        string LedgerInternalNamespace { get; set; }
        /// <summary>Unique name for the Confidential Ledger.</summary>
        string LedgerName { get; set; }
        /// <summary>SKU associated with the ledger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerSku? LedgerSku { get; set; }
        /// <summary>Type of Confidential Ledger</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.LedgerType? LedgerType { get; set; }
        /// <summary>Endpoint for calling Ledger Service.</summary>
        string LedgerUri { get; set; }
        /// <summary>CCF Property for the maximum size of the http request body: 1MB, 5MB, 10MB.</summary>
        int? MaxBodySizeInMb { get; set; }
        /// <summary>Number of CCF nodes in the ACC Ledger.</summary>
        int? NodeCount { get; set; }
        /// <summary>Provisioning state of Ledger Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>Object representing RunningState for Ledger.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ConfidentialLedger.Support.RunningState? RunningState { get; set; }
        /// <summary>
        /// CCF Property for the subject name to include in the node certificate. Default: CN=CCF Node.
        /// </summary>
        string SubjectName { get; set; }
        /// <summary>
        /// Number of additional threads processing incoming client requests in the enclave (modify with care!)
        /// </summary>
        int? WorkerThread { get; set; }
        /// <summary>Prefix for the write load balancer. Example: write</summary>
        string WriteLbAddressPrefix { get; set; }

    }
}