
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The operation to create an ASR replication protection cluster item.
.Description
The operation to create an ASR replication protection cluster item.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20240201.IReplicationProtectionCluster
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

CLUSTERREGISTEREDNODE <IRegisteredClusterNodes[]>: The registered node details.
  [BiosId <String>]: The BIOS ID.
  [ClusterNodeFqdn <String>]: The cluster node name.
  [IsSharedDiskVirtualNode <Boolean?>]: A value indicating whether this represents virtual entity hosting all the shared disks.
  [MachineId <String>]: The machine ID.

HEALTHERROR <IHealthError[]>: List of health errors.
  [CreationTimeUtc <DateTime?>]: Error creation time (UTC).
  [CustomerResolvability <HealthErrorCustomerResolvability?>]: Value indicating whether the health error is customer resolvable.
  [EntityId <String>]: ID of the entity.
  [ErrorCategory <String>]: Category of error.
  [ErrorCode <String>]: Error code.
  [ErrorId <String>]: The health error unique id.
  [ErrorLevel <String>]: Level of error.
  [ErrorMessage <String>]: Error message.
  [ErrorSource <String>]: Source of error.
  [ErrorType <String>]: Type of error.
  [InnerHealthError <IInnerHealthError[]>]: The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
    [CreationTimeUtc <DateTime?>]: Error creation time (UTC).
    [CustomerResolvability <HealthErrorCustomerResolvability?>]: Value indicating whether the health error is customer resolvable.
    [EntityId <String>]: ID of the entity.
    [ErrorCategory <String>]: Category of error.
    [ErrorCode <String>]: Error code.
    [ErrorId <String>]: The health error unique id.
    [ErrorLevel <String>]: Level of error.
    [ErrorMessage <String>]: Error message.
    [ErrorSource <String>]: Source of error.
    [ErrorType <String>]: Type of error.
    [PossibleCaus <String>]: Possible causes of error.
    [RecommendedAction <String>]: Recommended action to resolve error.
    [RecoveryProviderErrorMessage <String>]: DRA error message.
    [SummaryMessage <String>]: Summary message of the entity.
  [PossibleCaus <String>]: Possible causes of error.
  [RecommendedAction <String>]: Recommended action to resolve error.
  [RecoveryProviderErrorMessage <String>]: DRA error message.
  [SummaryMessage <String>]: Summary message of the entity.

SHAREDDISKPROPERTYHEALTHERROR <IHealthError[]>: List of health errors.
  [CreationTimeUtc <DateTime?>]: Error creation time (UTC).
  [CustomerResolvability <HealthErrorCustomerResolvability?>]: Value indicating whether the health error is customer resolvable.
  [EntityId <String>]: ID of the entity.
  [ErrorCategory <String>]: Category of error.
  [ErrorCode <String>]: Error code.
  [ErrorId <String>]: The health error unique id.
  [ErrorLevel <String>]: Level of error.
  [ErrorMessage <String>]: Error message.
  [ErrorSource <String>]: Source of error.
  [ErrorType <String>]: Type of error.
  [InnerHealthError <IInnerHealthError[]>]: The inner health errors. HealthError having a list of HealthError as child errors is problematic. InnerHealthError is used because this will prevent an infinite loop of structures when Hydra tries to auto-generate the contract. We are exposing the related health errors as inner health errors and all API consumers can utilize this in the same fashion as Exception -&gt; InnerException.
    [CreationTimeUtc <DateTime?>]: Error creation time (UTC).
    [CustomerResolvability <HealthErrorCustomerResolvability?>]: Value indicating whether the health error is customer resolvable.
    [EntityId <String>]: ID of the entity.
    [ErrorCategory <String>]: Category of error.
    [ErrorCode <String>]: Error code.
    [ErrorId <String>]: The health error unique id.
    [ErrorLevel <String>]: Level of error.
    [ErrorMessage <String>]: Error message.
    [ErrorSource <String>]: Source of error.
    [ErrorType <String>]: Type of error.
    [PossibleCaus <String>]: Possible causes of error.
    [RecommendedAction <String>]: Recommended action to resolve error.
    [RecoveryProviderErrorMessage <String>]: DRA error message.
    [SummaryMessage <String>]: Summary message of the entity.
  [PossibleCaus <String>]: Possible causes of error.
  [RecommendedAction <String>]: Recommended action to resolve error.
  [RecoveryProviderErrorMessage <String>]: DRA error message.
  [SummaryMessage <String>]: Summary message of the entity.
.Link
https://learn.microsoft.com/powershell/module/az.siterecovery/new-azsiterecoveryreplicationprotectioncluster
#>
function New-AzSiteRecoveryReplicationProtectionCluster {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20240201.IReplicationProtectionCluster])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # Fabric name.
    ${FabricName},

    [Parameter(Mandatory)]
    [Alias('ReplicationProtectionClusterName')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # Replication protection cluster name.
    ${Name},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # Protection container name.
    ${ProtectionContainerName},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # The name of the resource group where the recovery services vault is present.
    ${ResourceGroupName},

    [Parameter(Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [System.String]
    # The name of the recovery services vault.
    ${ResourceName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # The subscription Id.
    ${SubscriptionId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Current active location of the Protection cluster.
    ${ActiveLocation},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Agent cluster Id.
    ${AgentClusterId},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String[]]
    # The allowed operations on the Replication protection cluster.
    ${AllowedOperation},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # A value indicating whether all nodes of the cluster are registered or not.
    ${AreAllClusterNodesRegistered},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The cluster FQDN.
    ${ClusterFqdn},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String[]]
    # The List of cluster Node FQDNs.
    ${ClusterNodeFqdn},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String[]]
    # The List of Protected Item Id's.
    ${ClusterProtectedItemId},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20240201.IRegisteredClusterNodes[]]
    # The registered node details.
    # To construct, see NOTES section for CLUSTERREGISTEREDNODE properties and create a hash table.
    ${ClusterRegisteredNode},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # Scenario name.
    ${CurrentScenarioName},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20240201.IHealthError[]]
    # List of health errors.
    # To construct, see NOTES section for HEALTHERROR properties and create a hash table.
    ${HealthError},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # ARM Id of the job being executed.
    ${JobId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.DateTime]
    # The last successful failover time.
    ${LastSuccessfulFailoverTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.DateTime]
    # The last successful test failover time.
    ${LastSuccessfulTestFailoverTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The name of Policy governing this PE.
    ${PolicyFriendlyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Policy Id.
    ${PolicyId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The friendly name of the primary fabric.
    ${PrimaryFabricFriendlyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The fabric provider of the primary fabric.
    ${PrimaryFabricProvider},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The name of primary protection container friendly name.
    ${PrimaryProtectionContainerFriendlyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The type of protection cluster type.
    ${ProtectionClusterType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The protection status.
    ${ProtectionState},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The protection state description.
    ${ProtectionStateDescription},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # Gets the Instance type.
    ${ProviderSpecificDetailInstanceType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The recovery container Id.
    ${RecoveryContainerId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The friendly name of recovery fabric.
    ${RecoveryFabricFriendlyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Arm Id of recovery fabric.
    ${RecoveryFabricId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The name of recovery container friendly name.
    ${RecoveryProtectionContainerFriendlyName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account.
    # This is a string representation of the ProtectionHealth enumeration.
    ${ReplicationHealth},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # ARM Id of the job being executed.
    ${SharedDiskPropertiesCurrentScenarioJobId},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # Scenario name.
    ${SharedDiskPropertiesCurrentScenarioName},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.DateTime]
    # Start time of the workflow.
    ${SharedDiskPropertiesCurrentScenarioStartTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Current active location of the PE.
    ${SharedDiskPropertyActiveLocation},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String[]]
    # The allowed operations on the Replication protected item.
    ${SharedDiskPropertyAllowedOperation},

    [Parameter()]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20240201.IHealthError[]]
    # List of health errors.
    # To construct, see NOTES section for SHAREDDISKPROPERTYHEALTHERROR properties and create a hash table.
    ${SharedDiskPropertyHealthError},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The protection state of shared disk.
    ${SharedDiskPropertyProtectionState},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account.
    # This is a string representation of the ProtectionHealth enumeration.
    ${SharedDiskPropertyReplicationHealth},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The tfo state of shared disk.
    ${SharedDiskPropertyTestFailoverState},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # Gets the Instance type.
    ${SharedDiskProviderSpecificDetailInstanceType},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.DateTime]
    # Start time of the workflow.
    ${StartTime},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Test failover state.
    ${TestFailoverState},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Body')]
    [System.String]
    # The Test failover state description.
    ${TestFailoverStateDescription},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The DefaultProfile parameter is not functional.
    # Use the SubscriptionId parameter when available if executing the cmdlet against a different subscription.
    ${DefaultProfile},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command as a job
    ${AsJob},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Run the command asynchronously
    ${NoWait},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $PSVersionTable.PSVersion.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            CreateExpanded = 'Az.SiteRecovery.private\New-AzSiteRecoveryReplicationProtectionCluster_CreateExpanded';
        }
        if (('CreateExpanded') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $testPlayback = $false
            $PSBoundParameters['HttpPipelinePrepend'] | Foreach-Object { if ($_) { $testPlayback = $testPlayback -or ('Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.PipelineMock' -eq $_.Target.GetType().FullName -and 'Playback' -eq $_.Target.Mode) } }
            if ($testPlayback) {
                $PSBoundParameters['SubscriptionId'] = . (Join-Path $PSScriptRoot '..' 'utils' 'Get-SubscriptionIdTestSafe.ps1')
            } else {
                $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
            }
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        if ($null -ne $MyInvocation.MyCommand -and [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets -notcontains $MyInvocation.MyCommand.Name -and [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.MessageAttributeHelper]::ContainsPreviewAttribute($cmdInfo, $MyInvocation)){
            [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.MessageAttributeHelper]::ProcessPreviewMessageAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PromptedPreviewMessageCmdlets.Enqueue($MyInvocation.MyCommand.Name)
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
