// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Extensions;

    /// <summary>VMwareCbt disk input for update.</summary>
    public partial class VMwareCbtUpdateDiskInput :
        Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20250301.IVMwareCbtUpdateDiskInput,
        Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Models.Api20250301.IVMwareCbtUpdateDiskInputInternal
    {

        /// <summary>Backing field for <see cref="DiskId" /> property.</summary>
        private string _diskId;

        /// <summary>The disk Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Origin(Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.PropertyOrigin.Owned)]
        public string DiskId { get => this._diskId; set => this._diskId = value; }

        /// <summary>Backing field for <see cref="DiskSizeInGb" /> property.</summary>
        private long? _diskSizeInGb;

        /// <summary>The target disk size in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Origin(Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.PropertyOrigin.Owned)]
        public long? DiskSizeInGb { get => this._diskSizeInGb; set => this._diskSizeInGb = value; }

        /// <summary>Backing field for <see cref="Iop" /> property.</summary>
        private long? _iop;

        /// <summary>The number of IOPS allowed for Premium V2 and Ultra disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Origin(Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.PropertyOrigin.Owned)]
        public long? Iop { get => this._iop; set => this._iop = value; }

        /// <summary>Backing field for <see cref="IsOSDisk" /> property.</summary>
        private string _isOSDisk;

        /// <summary>A value indicating whether the disk is the OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Origin(Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.PropertyOrigin.Owned)]
        public string IsOSDisk { get => this._isOSDisk; set => this._isOSDisk = value; }

        /// <summary>Backing field for <see cref="TargetDiskName" /> property.</summary>
        private string _targetDiskName;

        /// <summary>The target disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Origin(Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.PropertyOrigin.Owned)]
        public string TargetDiskName { get => this._targetDiskName; set => this._targetDiskName = value; }

        /// <summary>Backing field for <see cref="ThroughputInMbps" /> property.</summary>
        private long? _throughputInMbps;

        /// <summary>The total throughput in Mbps for Premium V2 and Ultra disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Origin(Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.PropertyOrigin.Owned)]
        public long? ThroughputInMbps { get => this._throughputInMbps; set => this._throughputInMbps = value; }

        /// <summary>Creates an new <see cref="VMwareCbtUpdateDiskInput" /> instance.</summary>
        public VMwareCbtUpdateDiskInput()
        {

        }
    }
    /// VMwareCbt disk input for update.
    public partial interface IVMwareCbtUpdateDiskInput :
        Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.IJsonSerializable
    {
        /// <summary>The disk Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The disk Id.",
        SerializedName = @"diskId",
        PossibleTypes = new [] { typeof(string) })]
        string DiskId { get; set; }
        /// <summary>The target disk size in GB.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target disk size in GB.",
        SerializedName = @"diskSizeInGB",
        PossibleTypes = new [] { typeof(long) })]
        long? DiskSizeInGb { get; set; }
        /// <summary>The number of IOPS allowed for Premium V2 and Ultra disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of IOPS allowed for Premium V2 and Ultra disks.",
        SerializedName = @"iops",
        PossibleTypes = new [] { typeof(long) })]
        long? Iop { get; set; }
        /// <summary>A value indicating whether the disk is the OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A value indicating whether the disk is the OS disk.",
        SerializedName = @"isOSDisk",
        PossibleTypes = new [] { typeof(string) })]
        string IsOSDisk { get; set; }
        /// <summary>The target disk name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The target disk name.",
        SerializedName = @"targetDiskName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDiskName { get; set; }
        /// <summary>The total throughput in Mbps for Premium V2 and Ultra disks.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SiteRecovery.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The total throughput in Mbps for Premium V2 and Ultra disks.",
        SerializedName = @"throughputInMbps",
        PossibleTypes = new [] { typeof(long) })]
        long? ThroughputInMbps { get; set; }

    }
    /// VMwareCbt disk input for update.
    internal partial interface IVMwareCbtUpdateDiskInputInternal

    {
        /// <summary>The disk Id.</summary>
        string DiskId { get; set; }
        /// <summary>The target disk size in GB.</summary>
        long? DiskSizeInGb { get; set; }
        /// <summary>The number of IOPS allowed for Premium V2 and Ultra disks.</summary>
        long? Iop { get; set; }
        /// <summary>A value indicating whether the disk is the OS disk.</summary>
        string IsOSDisk { get; set; }
        /// <summary>The target disk name.</summary>
        string TargetDiskName { get; set; }
        /// <summary>The total throughput in Mbps for Premium V2 and Ultra disks.</summary>
        long? ThroughputInMbps { get; set; }

    }
}