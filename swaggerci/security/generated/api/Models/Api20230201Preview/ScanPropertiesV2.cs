// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>A vulnerability assessment scan record properties.</summary>
    public partial class ScanPropertiesV2 :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesV2,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesV2Internal
    {

        /// <summary>Backing field for <see cref="Database" /> property.</summary>
        private string _database;

        /// <summary>The database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string Database { get => this._database; set => this._database = value; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime? _endTime;

        /// <summary>Scan results are valid until end time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public global::System.DateTime? EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="HighSeverityFailedRulesCount" /> property.</summary>
        private int? _highSeverityFailedRulesCount;

        /// <summary>The number of failed rules with high severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public int? HighSeverityFailedRulesCount { get => this._highSeverityFailedRulesCount; set => this._highSeverityFailedRulesCount = value; }

        /// <summary>Backing field for <see cref="IsBaselineApplied" /> property.</summary>
        private bool? _isBaselineApplied;

        /// <summary>Baseline created for this database, and has one or more rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public bool? IsBaselineApplied { get => this._isBaselineApplied; set => this._isBaselineApplied = value; }

        /// <summary>Backing field for <see cref="LastScanTime" /> property.</summary>
        private global::System.DateTime? _lastScanTime;

        /// <summary>Last scan time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public global::System.DateTime? LastScanTime { get => this._lastScanTime; set => this._lastScanTime = value; }

        /// <summary>Backing field for <see cref="LowSeverityFailedRulesCount" /> property.</summary>
        private int? _lowSeverityFailedRulesCount;

        /// <summary>The number of failed rules with low severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public int? LowSeverityFailedRulesCount { get => this._lowSeverityFailedRulesCount; set => this._lowSeverityFailedRulesCount = value; }

        /// <summary>Backing field for <see cref="MediumSeverityFailedRulesCount" /> property.</summary>
        private int? _mediumSeverityFailedRulesCount;

        /// <summary>The number of failed rules with medium severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public int? MediumSeverityFailedRulesCount { get => this._mediumSeverityFailedRulesCount; set => this._mediumSeverityFailedRulesCount = value; }

        /// <summary>Backing field for <see cref="Server" /> property.</summary>
        private string _server;

        /// <summary>The server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string Server { get => this._server; set => this._server = value; }

        /// <summary>Backing field for <see cref="SqlVersion" /> property.</summary>
        private string _sqlVersion;

        /// <summary>The SQL version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string SqlVersion { get => this._sqlVersion; set => this._sqlVersion = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>The scan start time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? _state;

        /// <summary>The scan status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? State { get => this._state; set => this._state = value; }

        /// <summary>Backing field for <see cref="TotalFailedRulesCount" /> property.</summary>
        private int? _totalFailedRulesCount;

        /// <summary>The number of total failed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public int? TotalFailedRulesCount { get => this._totalFailedRulesCount; set => this._totalFailedRulesCount = value; }

        /// <summary>Backing field for <see cref="TotalPassedRulesCount" /> property.</summary>
        private int? _totalPassedRulesCount;

        /// <summary>The number of total passed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public int? TotalPassedRulesCount { get => this._totalPassedRulesCount; set => this._totalPassedRulesCount = value; }

        /// <summary>Backing field for <see cref="TotalRulesCount" /> property.</summary>
        private int? _totalRulesCount;

        /// <summary>The number of total rules assessed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public int? TotalRulesCount { get => this._totalRulesCount; set => this._totalRulesCount = value; }

        /// <summary>Backing field for <see cref="TriggerType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? _triggerType;

        /// <summary>The scan trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? TriggerType { get => this._triggerType; set => this._triggerType = value; }

        /// <summary>Creates an new <see cref="ScanPropertiesV2" /> instance.</summary>
        public ScanPropertiesV2()
        {

        }
    }
    /// A vulnerability assessment scan record properties.
    public partial interface IScanPropertiesV2 :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable
    {
        /// <summary>The database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The database name.",
        SerializedName = @"database",
        PossibleTypes = new [] { typeof(string) })]
        string Database { get; set; }
        /// <summary>Scan results are valid until end time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scan results are valid until end time (UTC).",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The number of failed rules with high severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of failed rules with high severity.",
        SerializedName = @"highSeverityFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? HighSeverityFailedRulesCount { get; set; }
        /// <summary>Baseline created for this database, and has one or more rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Baseline created for this database, and has one or more rules.",
        SerializedName = @"isBaselineApplied",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsBaselineApplied { get; set; }
        /// <summary>Last scan time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Last scan time.",
        SerializedName = @"lastScanTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastScanTime { get; set; }
        /// <summary>The number of failed rules with low severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of failed rules with low severity.",
        SerializedName = @"lowSeverityFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LowSeverityFailedRulesCount { get; set; }
        /// <summary>The number of failed rules with medium severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of failed rules with medium severity.",
        SerializedName = @"mediumSeverityFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MediumSeverityFailedRulesCount { get; set; }
        /// <summary>The server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The server name.",
        SerializedName = @"server",
        PossibleTypes = new [] { typeof(string) })]
        string Server { get; set; }
        /// <summary>The SQL version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SQL version.",
        SerializedName = @"sqlVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SqlVersion { get; set; }
        /// <summary>The scan start time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scan start time (UTC).",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The scan status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scan status.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? State { get; set; }
        /// <summary>The number of total failed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total failed rules.",
        SerializedName = @"totalFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalFailedRulesCount { get; set; }
        /// <summary>The number of total passed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total passed rules.",
        SerializedName = @"totalPassedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalPassedRulesCount { get; set; }
        /// <summary>The number of total rules assessed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total rules assessed.",
        SerializedName = @"totalRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalRulesCount { get; set; }
        /// <summary>The scan trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scan trigger type.",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? TriggerType { get; set; }

    }
    /// A vulnerability assessment scan record properties.
    internal partial interface IScanPropertiesV2Internal

    {
        /// <summary>The database name.</summary>
        string Database { get; set; }
        /// <summary>Scan results are valid until end time (UTC).</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The number of failed rules with high severity.</summary>
        int? HighSeverityFailedRulesCount { get; set; }
        /// <summary>Baseline created for this database, and has one or more rules.</summary>
        bool? IsBaselineApplied { get; set; }
        /// <summary>Last scan time.</summary>
        global::System.DateTime? LastScanTime { get; set; }
        /// <summary>The number of failed rules with low severity.</summary>
        int? LowSeverityFailedRulesCount { get; set; }
        /// <summary>The number of failed rules with medium severity.</summary>
        int? MediumSeverityFailedRulesCount { get; set; }
        /// <summary>The server name.</summary>
        string Server { get; set; }
        /// <summary>The SQL version.</summary>
        string SqlVersion { get; set; }
        /// <summary>The scan start time (UTC).</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The scan status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? State { get; set; }
        /// <summary>The number of total failed rules.</summary>
        int? TotalFailedRulesCount { get; set; }
        /// <summary>The number of total passed rules.</summary>
        int? TotalPassedRulesCount { get; set; }
        /// <summary>The number of total rules assessed.</summary>
        int? TotalRulesCount { get; set; }
        /// <summary>The scan trigger type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? TriggerType { get; set; }

    }
}