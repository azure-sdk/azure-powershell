// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>A vulnerability assessment scan result properties for a single rule.</summary>
    public partial class ScanResultProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultPropertiesInternal
    {

        /// <summary>Backing field for <see cref="BaselineAdjustedResult" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResult _baselineAdjustedResult;

        /// <summary>The rule result adjusted with baseline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResult BaselineAdjustedResult { get => (this._baselineAdjustedResult = this._baselineAdjustedResult ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.BaselineAdjustedResult()); set => this._baselineAdjustedResult = value; }

        /// <summary>Results the are not in baseline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[][] BaselineAdjustedResultResultsNotInBaseline { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).ResultsNotInBaseline; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).ResultsNotInBaseline = value ?? null /* arrayOf */; }

        /// <summary>Results the are in baseline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[][] BaselineAdjustedResultResultsOnlyInBaseline { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).ResultsOnlyInBaseline; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).ResultsOnlyInBaseline = value ?? null /* arrayOf */; }

        /// <summary>The rule result status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? BaselineAdjustedResultStatus { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus)""); }

        /// <summary>Expected results.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[][] BaselineExpectedResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).BaselineExpectedResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).BaselineExpectedResult = value ?? null /* arrayOf */; }

        /// <summary>Baseline update time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public global::System.DateTime? BaselineUpdatedTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).BaselineUpdatedTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).BaselineUpdatedTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="IsTrimmed" /> property.</summary>
        private bool? _isTrimmed;

        /// <summary>Indicated whether the results specified here are trimmed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public bool? IsTrimmed { get => this._isTrimmed; set => this._isTrimmed = value; }

        /// <summary>Internal Acessors for BaselineAdjustedResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResult Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultPropertiesInternal.BaselineAdjustedResult { get => (this._baselineAdjustedResult = this._baselineAdjustedResult ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.BaselineAdjustedResult()); set { {_baselineAdjustedResult = value;} } }

        /// <summary>Internal Acessors for BaselineAdjustedResultBaseline</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaseline Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultPropertiesInternal.BaselineAdjustedResultBaseline { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).Baseline; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResultInternal)BaselineAdjustedResult).Baseline = value; }

        /// <summary>Internal Acessors for Remediation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediation Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultPropertiesInternal.Remediation { get => (this._remediation = this._remediation ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.Remediation()); set { {_remediation = value;} } }

        /// <summary>Internal Acessors for RuleMetadata</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRule Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultPropertiesInternal.RuleMetadata { get => (this._ruleMetadata = this._ruleMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.VaRule()); set { {_ruleMetadata = value;} } }

        /// <summary>Internal Acessors for RuleMetadataQueryCheck</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IQueryCheck Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanResultPropertiesInternal.RuleMetadataQueryCheck { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheck; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheck = value; }

        /// <summary>Column names of expected result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[] QueryCheckColumnName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheckColumnName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheckColumnName = value ?? null /* arrayOf */; }

        /// <summary>Expected result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[][] QueryCheckExpectedResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheckExpectedResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheckExpectedResult = value ?? null /* arrayOf */; }

        /// <summary>The rule query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string QueryCheckQuery { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheckQuery; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).QueryCheckQuery = value ?? null; }

        /// <summary>Backing field for <see cref="QueryResult" /> property.</summary>
        private string[][] _queryResult;

        /// <summary>The results of the query that was run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string[][] QueryResult { get => this._queryResult; set => this._queryResult = value; }

        /// <summary>Backing field for <see cref="Remediation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediation _remediation;

        /// <summary>Remediation details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediation Remediation { get => (this._remediation = this._remediation ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.Remediation()); set => this._remediation = value; }

        /// <summary>Is remediation automated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? RemediationAutomated { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).Automated; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).Automated = value ?? default(bool); }

        /// <summary>Remediation description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RemediationDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).Description = value ?? null; }

        /// <summary>Optional link to remediate in Azure Portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RemediationPortalLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).PortalLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).PortalLink = value ?? null; }

        /// <summary>Remediation script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string[] RemediationScript { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).Script; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediationInternal)Remediation).Script = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="RuleId" /> property.</summary>
        private string _ruleId;

        /// <summary>The rule Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public string RuleId { get => this._ruleId; set => this._ruleId = value; }

        /// <summary>Backing field for <see cref="RuleMetadata" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRule _ruleMetadata;

        /// <summary>vulnerability assessment rule metadata details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRule RuleMetadata { get => (this._ruleMetadata = this._ruleMetadata ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.VaRule()); set => this._ruleMetadata = value; }

        /// <summary>The benchmark references.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBenchmarkReference[] RuleMetadataBenchmarkReference { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).BenchmarkReference; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).BenchmarkReference = value ?? null /* arrayOf */; }

        /// <summary>The rule category.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RuleMetadataCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Category = value ?? null; }

        /// <summary>The rule description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RuleMetadataDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Description = value ?? null; }

        /// <summary>The rule rationale.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RuleMetadataRationale { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Rationale; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Rationale = value ?? null; }

        /// <summary>The rule Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RuleMetadataRuleId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).RuleId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).RuleId = value ?? null; }

        /// <summary>The rule type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleType? RuleMetadataRuleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).RuleType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).RuleType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleType)""); }

        /// <summary>The rule severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleSeverity? RuleMetadataSeverity { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Severity; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Severity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleSeverity)""); }

        /// <summary>The rule title.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string RuleMetadataTitle { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Title; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRuleInternal)RuleMetadata).Title = value ?? null; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? _status;

        /// <summary>The rule result status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? Status { get => this._status; set => this._status = value; }

        /// <summary>Creates an new <see cref="ScanResultProperties" /> instance.</summary>
        public ScanResultProperties()
        {

        }
    }
    /// A vulnerability assessment scan result properties for a single rule.
    public partial interface IScanResultProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable
    {
        /// <summary>Results the are not in baseline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Results the are not in baseline.",
        SerializedName = @"resultsNotInBaseline",
        PossibleTypes = new [] { typeof(string) })]
        string[][] BaselineAdjustedResultResultsNotInBaseline { get; set; }
        /// <summary>Results the are in baseline.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Results the are in baseline.",
        SerializedName = @"resultsOnlyInBaseline",
        PossibleTypes = new [] { typeof(string) })]
        string[][] BaselineAdjustedResultResultsOnlyInBaseline { get; set; }
        /// <summary>The rule result status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule result status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? BaselineAdjustedResultStatus { get; set; }
        /// <summary>Expected results.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expected results.",
        SerializedName = @"expectedResults",
        PossibleTypes = new [] { typeof(string) })]
        string[][] BaselineExpectedResult { get; set; }
        /// <summary>Baseline update time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Baseline update time (UTC).",
        SerializedName = @"updatedTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? BaselineUpdatedTime { get; set; }
        /// <summary>Indicated whether the results specified here are trimmed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Indicated whether the results specified here are trimmed.",
        SerializedName = @"isTrimmed",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsTrimmed { get; set; }
        /// <summary>Column names of expected result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Column names of expected result.",
        SerializedName = @"columnNames",
        PossibleTypes = new [] { typeof(string) })]
        string[] QueryCheckColumnName { get; set; }
        /// <summary>Expected result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expected result.",
        SerializedName = @"expectedResult",
        PossibleTypes = new [] { typeof(string) })]
        string[][] QueryCheckExpectedResult { get; set; }
        /// <summary>The rule query.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule query.",
        SerializedName = @"query",
        PossibleTypes = new [] { typeof(string) })]
        string QueryCheckQuery { get; set; }
        /// <summary>The results of the query that was run.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The results of the query that was run.",
        SerializedName = @"queryResults",
        PossibleTypes = new [] { typeof(string) })]
        string[][] QueryResult { get; set; }
        /// <summary>Is remediation automated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Is remediation automated.",
        SerializedName = @"automated",
        PossibleTypes = new [] { typeof(bool) })]
        bool? RemediationAutomated { get; set; }
        /// <summary>Remediation description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Remediation description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string RemediationDescription { get; set; }
        /// <summary>Optional link to remediate in Azure Portal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional link to remediate in Azure Portal.",
        SerializedName = @"portalLink",
        PossibleTypes = new [] { typeof(string) })]
        string RemediationPortalLink { get; set; }
        /// <summary>Remediation script.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Remediation script.",
        SerializedName = @"scripts",
        PossibleTypes = new [] { typeof(string) })]
        string[] RemediationScript { get; set; }
        /// <summary>The rule Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule Id.",
        SerializedName = @"ruleId",
        PossibleTypes = new [] { typeof(string) })]
        string RuleId { get; set; }
        /// <summary>The benchmark references.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The benchmark references.",
        SerializedName = @"benchmarkReferences",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBenchmarkReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBenchmarkReference[] RuleMetadataBenchmarkReference { get; set; }
        /// <summary>The rule category.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule category.",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string RuleMetadataCategory { get; set; }
        /// <summary>The rule description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string RuleMetadataDescription { get; set; }
        /// <summary>The rule rationale.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule rationale.",
        SerializedName = @"rationale",
        PossibleTypes = new [] { typeof(string) })]
        string RuleMetadataRationale { get; set; }
        /// <summary>The rule Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule Id.",
        SerializedName = @"ruleId",
        PossibleTypes = new [] { typeof(string) })]
        string RuleMetadataRuleId { get; set; }
        /// <summary>The rule type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule type.",
        SerializedName = @"ruleType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleType? RuleMetadataRuleType { get; set; }
        /// <summary>The rule severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule severity.",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleSeverity) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleSeverity? RuleMetadataSeverity { get; set; }
        /// <summary>The rule title.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule title.",
        SerializedName = @"title",
        PossibleTypes = new [] { typeof(string) })]
        string RuleMetadataTitle { get; set; }
        /// <summary>The rule result status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The rule result status.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? Status { get; set; }

    }
    /// A vulnerability assessment scan result properties for a single rule.
    internal partial interface IScanResultPropertiesInternal

    {
        /// <summary>The rule result adjusted with baseline.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaselineAdjustedResult BaselineAdjustedResult { get; set; }
        /// <summary>Baseline details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBaseline BaselineAdjustedResultBaseline { get; set; }
        /// <summary>Results the are not in baseline.</summary>
        string[][] BaselineAdjustedResultResultsNotInBaseline { get; set; }
        /// <summary>Results the are in baseline.</summary>
        string[][] BaselineAdjustedResultResultsOnlyInBaseline { get; set; }
        /// <summary>The rule result status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? BaselineAdjustedResultStatus { get; set; }
        /// <summary>Expected results.</summary>
        string[][] BaselineExpectedResult { get; set; }
        /// <summary>Baseline update time (UTC).</summary>
        global::System.DateTime? BaselineUpdatedTime { get; set; }
        /// <summary>Indicated whether the results specified here are trimmed.</summary>
        bool? IsTrimmed { get; set; }
        /// <summary>Column names of expected result.</summary>
        string[] QueryCheckColumnName { get; set; }
        /// <summary>Expected result.</summary>
        string[][] QueryCheckExpectedResult { get; set; }
        /// <summary>The rule query.</summary>
        string QueryCheckQuery { get; set; }
        /// <summary>The results of the query that was run.</summary>
        string[][] QueryResult { get; set; }
        /// <summary>Remediation details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IRemediation Remediation { get; set; }
        /// <summary>Is remediation automated.</summary>
        bool? RemediationAutomated { get; set; }
        /// <summary>Remediation description.</summary>
        string RemediationDescription { get; set; }
        /// <summary>Optional link to remediate in Azure Portal.</summary>
        string RemediationPortalLink { get; set; }
        /// <summary>Remediation script.</summary>
        string[] RemediationScript { get; set; }
        /// <summary>The rule Id.</summary>
        string RuleId { get; set; }
        /// <summary>vulnerability assessment rule metadata details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IVaRule RuleMetadata { get; set; }
        /// <summary>The benchmark references.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IBenchmarkReference[] RuleMetadataBenchmarkReference { get; set; }
        /// <summary>The rule category.</summary>
        string RuleMetadataCategory { get; set; }
        /// <summary>The rule description.</summary>
        string RuleMetadataDescription { get; set; }
        /// <summary>The rule query details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IQueryCheck RuleMetadataQueryCheck { get; set; }
        /// <summary>The rule rationale.</summary>
        string RuleMetadataRationale { get; set; }
        /// <summary>The rule Id.</summary>
        string RuleMetadataRuleId { get; set; }
        /// <summary>The rule type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleType? RuleMetadataRuleType { get; set; }
        /// <summary>The rule severity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleSeverity? RuleMetadataSeverity { get; set; }
        /// <summary>The rule title.</summary>
        string RuleMetadataTitle { get; set; }
        /// <summary>The rule result status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.RuleStatus? Status { get; set; }

    }
}