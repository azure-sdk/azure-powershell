// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Extensions;

    /// <summary>A vulnerability assessment scan record.</summary>
    public partial class Scan :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScan,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.Resource();

        /// <summary>The database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string Database { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).Database; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).Database = value ?? null; }

        /// <summary>Scan results are valid until end time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public global::System.DateTime? EndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).EndTime = value ?? default(global::System.DateTime); }

        /// <summary>The number of failed rules with high severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? HighSeverityFailedRulesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).HighSeverityFailedRulesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).HighSeverityFailedRulesCount = value ?? default(int); }

        /// <summary>Resource Id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Id; }

        /// <summary>Baseline created for this database, and has one or more rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public bool? IsBaselineApplied { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).IsBaselineApplied; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).IsBaselineApplied = value ?? default(bool); }

        /// <summary>The number of failed rules with low severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? LowSeverityFailedRulesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).LowSeverityFailedRulesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).LowSeverityFailedRulesCount = value ?? default(int); }

        /// <summary>The number of failed rules with medium severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? MediumSeverityFailedRulesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).MediumSeverityFailedRulesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).MediumSeverityFailedRulesCount = value ?? default(int); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.ScanProperties()); set { {_property = value;} } }

        /// <summary>Resource name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanProperties _property;

        /// <summary>A vulnerability assessment scan record properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.ScanProperties()); set => this._property = value; }

        /// <summary>The server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string Server { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).Server; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).Server = value ?? null; }

        /// <summary>The SQL version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public string SqlVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).SqlVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).SqlVersion = value ?? null; }

        /// <summary>The scan start time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>The scan status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? State { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).State; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).State = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState)""); }

        /// <summary>The number of total failed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? TotalFailedRulesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TotalFailedRulesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TotalFailedRulesCount = value ?? default(int); }

        /// <summary>The number of total passed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? TotalPassedRulesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TotalPassedRulesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TotalPassedRulesCount = value ?? default(int); }

        /// <summary>The number of total rules assessed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public int? TotalRulesCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TotalRulesCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TotalRulesCount = value ?? default(int); }

        /// <summary>The scan trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? TriggerType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TriggerType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanPropertiesInternal)Property).TriggerType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType)""); }

        /// <summary>Resource type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="Scan" /> instance.</summary>
        public Scan()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// A vulnerability assessment scan record.
    public partial interface IScan :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResource
    {
        /// <summary>The database name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The database name.",
        SerializedName = @"database",
        PossibleTypes = new [] { typeof(string) })]
        string Database { get; set; }
        /// <summary>Scan results are valid until end time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scan results are valid until end time (UTC).",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The number of failed rules with high severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of failed rules with high severity.",
        SerializedName = @"highSeverityFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? HighSeverityFailedRulesCount { get; set; }
        /// <summary>Baseline created for this database, and has one or more rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Baseline created for this database, and has one or more rules.",
        SerializedName = @"isBaselineApplied",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsBaselineApplied { get; set; }
        /// <summary>The number of failed rules with low severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of failed rules with low severity.",
        SerializedName = @"lowSeverityFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? LowSeverityFailedRulesCount { get; set; }
        /// <summary>The number of failed rules with medium severity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of failed rules with medium severity.",
        SerializedName = @"mediumSeverityFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? MediumSeverityFailedRulesCount { get; set; }
        /// <summary>The server name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The server name.",
        SerializedName = @"server",
        PossibleTypes = new [] { typeof(string) })]
        string Server { get; set; }
        /// <summary>The SQL version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SQL version.",
        SerializedName = @"sqlVersion",
        PossibleTypes = new [] { typeof(string) })]
        string SqlVersion { get; set; }
        /// <summary>The scan start time (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scan start time (UTC).",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The scan status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scan status.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? State { get; set; }
        /// <summary>The number of total failed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total failed rules.",
        SerializedName = @"totalFailedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalFailedRulesCount { get; set; }
        /// <summary>The number of total passed rules.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total passed rules.",
        SerializedName = @"totalPassedRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalPassedRulesCount { get; set; }
        /// <summary>The number of total rules assessed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of total rules assessed.",
        SerializedName = @"totalRulesCount",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalRulesCount { get; set; }
        /// <summary>The scan trigger type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The scan trigger type.",
        SerializedName = @"triggerType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? TriggerType { get; set; }

    }
    /// A vulnerability assessment scan record.
    internal partial interface IScanInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api10.IResourceInternal
    {
        /// <summary>The database name.</summary>
        string Database { get; set; }
        /// <summary>Scan results are valid until end time (UTC).</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>The number of failed rules with high severity.</summary>
        int? HighSeverityFailedRulesCount { get; set; }
        /// <summary>Baseline created for this database, and has one or more rules.</summary>
        bool? IsBaselineApplied { get; set; }
        /// <summary>The number of failed rules with low severity.</summary>
        int? LowSeverityFailedRulesCount { get; set; }
        /// <summary>The number of failed rules with medium severity.</summary>
        int? MediumSeverityFailedRulesCount { get; set; }
        /// <summary>A vulnerability assessment scan record properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Models.Api20230201Preview.IScanProperties Property { get; set; }
        /// <summary>The server name.</summary>
        string Server { get; set; }
        /// <summary>The SQL version.</summary>
        string SqlVersion { get; set; }
        /// <summary>The scan start time (UTC).</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>The scan status.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanState? State { get; set; }
        /// <summary>The number of total failed rules.</summary>
        int? TotalFailedRulesCount { get; set; }
        /// <summary>The number of total passed rules.</summary>
        int? TotalPassedRulesCount { get; set; }
        /// <summary>The number of total rules assessed.</summary>
        int? TotalRulesCount { get; set; }
        /// <summary>The scan trigger type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityCenter.Support.ScanTriggerType? TriggerType { get; set; }

    }
}