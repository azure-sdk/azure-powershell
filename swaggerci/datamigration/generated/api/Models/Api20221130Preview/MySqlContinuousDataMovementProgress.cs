// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    public partial class MySqlContinuousDataMovementProgress :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgress,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal
    {

        /// <summary>Backing field for <see cref="BinlogPosition" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutput _binlogPosition;

        /// <summary>Current binlog position of the last event committed at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutput BinlogPosition { get => (this._binlogPosition = this._binlogPosition ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MySqlBinlogPositionOutput()); }

        /// <summary>
        /// Specifies the the sequential number of the binlog fie, extracted from the file name
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? BinlogPositionFileSeqNum { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).FileSeqNum; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).FileSeqNum = value ?? default(int); }

        /// <summary>Specifies the MySQL binlog file name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string BinlogPositionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).Name; }

        /// <summary>Specifies the position in the binlog file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public long? BinlogPositionPosition { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).Position; }

        /// <summary>Internal Acessors for BinlogPosition</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutput Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.BinlogPosition { get => (this._binlogPosition = this._binlogPosition ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MySqlBinlogPositionOutput()); set { {_binlogPosition = value;} } }

        /// <summary>Internal Acessors for BinlogPositionName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.BinlogPositionName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).Name = value; }

        /// <summary>Internal Acessors for BinlogPositionPosition</summary>
        long? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.BinlogPositionPosition { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).Position; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutputInternal)BinlogPosition).Position = value; }

        /// <summary>Internal Acessors for NumberOfDeleteRowsEventsProcessed</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfDeleteRowsEventsProcessed { get => this._numberOfDeleteRowsEventsProcessed; set { {_numberOfDeleteRowsEventsProcessed = value;} } }

        /// <summary>Internal Acessors for NumberOfQueryEventsProcessed</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfQueryEventsProcessed { get => this._numberOfQueryEventsProcessed; set { {_numberOfQueryEventsProcessed = value;} } }

        /// <summary>Internal Acessors for NumberOfRowsDeleted</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfRowsDeleted { get => this._numberOfRowsDeleted; set { {_numberOfRowsDeleted = value;} } }

        /// <summary>Internal Acessors for NumberOfRowsInserted</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfRowsInserted { get => this._numberOfRowsInserted; set { {_numberOfRowsInserted = value;} } }

        /// <summary>Internal Acessors for NumberOfRowsUpdated</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfRowsUpdated { get => this._numberOfRowsUpdated; set { {_numberOfRowsUpdated = value;} } }

        /// <summary>Internal Acessors for NumberOfUpdateRowsEventsProcessed</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfUpdateRowsEventsProcessed { get => this._numberOfUpdateRowsEventsProcessed; set { {_numberOfUpdateRowsEventsProcessed = value;} } }

        /// <summary>Internal Acessors for NumberOfWriteRowsEventsProcessed</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.NumberOfWriteRowsEventsProcessed { get => this._numberOfWriteRowsEventsProcessed; set { {_numberOfWriteRowsEventsProcessed = value;} } }

        /// <summary>Internal Acessors for SecondsBehindSource</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.SecondsBehindSource { get => this._secondsBehindSource; set { {_secondsBehindSource = value;} } }

        /// <summary>Internal Acessors for Timestamp</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlContinuousDataMovementProgressInternal.Timestamp { get => this._timestamp; set { {_timestamp = value;} } }

        /// <summary>Backing field for <see cref="NumberOfDeleteRowsEventsProcessed" /> property.</summary>
        private int? _numberOfDeleteRowsEventsProcessed;

        /// <summary>The total number of the DELETE_ROWS_EVENTs processed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfDeleteRowsEventsProcessed { get => this._numberOfDeleteRowsEventsProcessed; }

        /// <summary>Backing field for <see cref="NumberOfQueryEventsProcessed" /> property.</summary>
        private int? _numberOfQueryEventsProcessed;

        /// <summary>
        /// The total number of query events executed at target, such as DDL, or DML when using mixed binlog mode
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfQueryEventsProcessed { get => this._numberOfQueryEventsProcessed; }

        /// <summary>Backing field for <see cref="NumberOfRowsDeleted" /> property.</summary>
        private int? _numberOfRowsDeleted;

        /// <summary>The total number of rows deleted at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfRowsDeleted { get => this._numberOfRowsDeleted; }

        /// <summary>Backing field for <see cref="NumberOfRowsInserted" /> property.</summary>
        private int? _numberOfRowsInserted;

        /// <summary>The total number of rows inserted at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfRowsInserted { get => this._numberOfRowsInserted; }

        /// <summary>Backing field for <see cref="NumberOfRowsUpdated" /> property.</summary>
        private int? _numberOfRowsUpdated;

        /// <summary>The total number of rows updated at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfRowsUpdated { get => this._numberOfRowsUpdated; }

        /// <summary>Backing field for <see cref="NumberOfUpdateRowsEventsProcessed" /> property.</summary>
        private int? _numberOfUpdateRowsEventsProcessed;

        /// <summary>The the total number of the UPDATE_ROWS_EVENTs processed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfUpdateRowsEventsProcessed { get => this._numberOfUpdateRowsEventsProcessed; }

        /// <summary>Backing field for <see cref="NumberOfWriteRowsEventsProcessed" /> property.</summary>
        private int? _numberOfWriteRowsEventsProcessed;

        /// <summary>The the total number of the WRITE_ROWS_EVENTs processed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? NumberOfWriteRowsEventsProcessed { get => this._numberOfWriteRowsEventsProcessed; }

        /// <summary>Backing field for <see cref="SecondsBehindSource" /> property.</summary>
        private int? _secondsBehindSource;

        /// <summary>The the number of seconds the replica server is behind the source server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public int? SecondsBehindSource { get => this._secondsBehindSource; }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private global::System.DateTime? _timestamp;

        /// <summary>
        /// The timestamp exposed by the last binlog event that has been committed at target
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? Timestamp { get => this._timestamp; }

        /// <summary>Creates an new <see cref="MySqlContinuousDataMovementProgress" /> instance.</summary>
        public MySqlContinuousDataMovementProgress()
        {

        }
    }
    public partial interface IMySqlContinuousDataMovementProgress :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the the sequential number of the binlog fie, extracted from the file name
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the the sequential number of the binlog fie, extracted from the file name",
        SerializedName = @"fileSeqNum",
        PossibleTypes = new [] { typeof(int) })]
        int? BinlogPositionFileSeqNum { get; set; }
        /// <summary>Specifies the MySQL binlog file name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the MySQL binlog file name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string BinlogPositionName { get;  }
        /// <summary>Specifies the position in the binlog file</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Specifies the position in the binlog file",
        SerializedName = @"position",
        PossibleTypes = new [] { typeof(long) })]
        long? BinlogPositionPosition { get;  }
        /// <summary>The total number of the DELETE_ROWS_EVENTs processed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of the DELETE_ROWS_EVENTs processed",
        SerializedName = @"numberOfDeleteRowsEventsProcessed",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfDeleteRowsEventsProcessed { get;  }
        /// <summary>
        /// The total number of query events executed at target, such as DDL, or DML when using mixed binlog mode
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of query events executed at target, such as DDL, or DML when using mixed binlog mode",
        SerializedName = @"numberOfQueryEventsProcessed",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfQueryEventsProcessed { get;  }
        /// <summary>The total number of rows deleted at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of rows deleted at target",
        SerializedName = @"numberOfRowsDeleted",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfRowsDeleted { get;  }
        /// <summary>The total number of rows inserted at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of rows inserted at target",
        SerializedName = @"numberOfRowsInserted",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfRowsInserted { get;  }
        /// <summary>The total number of rows updated at target</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The total number of rows updated at target",
        SerializedName = @"numberOfRowsUpdated",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfRowsUpdated { get;  }
        /// <summary>The the total number of the UPDATE_ROWS_EVENTs processed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The the total number of the UPDATE_ROWS_EVENTs processed",
        SerializedName = @"numberOfUpdateRowsEventsProcessed",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfUpdateRowsEventsProcessed { get;  }
        /// <summary>The the total number of the WRITE_ROWS_EVENTs processed</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The the total number of the WRITE_ROWS_EVENTs processed",
        SerializedName = @"numberOfWriteRowsEventsProcessed",
        PossibleTypes = new [] { typeof(int) })]
        int? NumberOfWriteRowsEventsProcessed { get;  }
        /// <summary>The the number of seconds the replica server is behind the source server</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The the number of seconds the replica server is behind the source server",
        SerializedName = @"secondsBehindSource",
        PossibleTypes = new [] { typeof(int) })]
        int? SecondsBehindSource { get;  }
        /// <summary>
        /// The timestamp exposed by the last binlog event that has been committed at target
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The timestamp exposed by the last binlog event that has been committed at target",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Timestamp { get;  }

    }
    internal partial interface IMySqlContinuousDataMovementProgressInternal

    {
        /// <summary>Current binlog position of the last event committed at target</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMySqlBinlogPositionOutput BinlogPosition { get; set; }
        /// <summary>
        /// Specifies the the sequential number of the binlog fie, extracted from the file name
        /// </summary>
        int? BinlogPositionFileSeqNum { get; set; }
        /// <summary>Specifies the MySQL binlog file name</summary>
        string BinlogPositionName { get; set; }
        /// <summary>Specifies the position in the binlog file</summary>
        long? BinlogPositionPosition { get; set; }
        /// <summary>The total number of the DELETE_ROWS_EVENTs processed</summary>
        int? NumberOfDeleteRowsEventsProcessed { get; set; }
        /// <summary>
        /// The total number of query events executed at target, such as DDL, or DML when using mixed binlog mode
        /// </summary>
        int? NumberOfQueryEventsProcessed { get; set; }
        /// <summary>The total number of rows deleted at target</summary>
        int? NumberOfRowsDeleted { get; set; }
        /// <summary>The total number of rows inserted at target</summary>
        int? NumberOfRowsInserted { get; set; }
        /// <summary>The total number of rows updated at target</summary>
        int? NumberOfRowsUpdated { get; set; }
        /// <summary>The the total number of the UPDATE_ROWS_EVENTs processed</summary>
        int? NumberOfUpdateRowsEventsProcessed { get; set; }
        /// <summary>The the total number of the WRITE_ROWS_EVENTs processed</summary>
        int? NumberOfWriteRowsEventsProcessed { get; set; }
        /// <summary>The the number of seconds the replica server is behind the source server</summary>
        int? SecondsBehindSource { get; set; }
        /// <summary>
        /// The timestamp exposed by the last binlog event that has been committed at target
        /// </summary>
        global::System.DateTime? Timestamp { get; set; }

    }
}