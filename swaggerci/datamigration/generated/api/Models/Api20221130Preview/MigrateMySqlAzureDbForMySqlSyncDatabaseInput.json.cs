// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>
    /// Database specific information for MySQL to Azure Database for MySQL migration task inputs
    /// </summary>
    public partial class MigrateMySqlAzureDbForMySqlSyncDatabaseInput
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMigrateMySqlAzureDbForMySqlSyncDatabaseInput.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMigrateMySqlAzureDbForMySqlSyncDatabaseInput.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.IMigrateMySqlAzureDbForMySqlSyncDatabaseInput FromJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json ? new MigrateMySqlAzureDbForMySqlSyncDatabaseInput(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject into a new instance of <see cref="MigrateMySqlAzureDbForMySqlSyncDatabaseInput"
        /// />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal MigrateMySqlAzureDbForMySqlSyncDatabaseInput(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_name = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("name"), out var __jsonName) ? (string)__jsonName : (string)Name;}
            {_targetDatabaseName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString>("targetDatabaseName"), out var __jsonTargetDatabaseName) ? (string)__jsonTargetDatabaseName : (string)TargetDatabaseName;}
            {_migrationSetting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("migrationSetting"), out var __jsonMigrationSetting) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MigrateMySqlAzureDbForMySqlSyncDatabaseInputMigrationSetting.FromJson(__jsonMigrationSetting) : MigrationSetting;}
            {_sourceSetting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("sourceSetting"), out var __jsonSourceSetting) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MigrateMySqlAzureDbForMySqlSyncDatabaseInputSourceSetting.FromJson(__jsonSourceSetting) : SourceSetting;}
            {_targetSetting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("targetSetting"), out var __jsonTargetSetting) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MigrateMySqlAzureDbForMySqlSyncDatabaseInputTargetSetting.FromJson(__jsonTargetSetting) : TargetSetting;}
            {_tableMap = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("tableMap"), out var __jsonTableMap) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MigrateMySqlAzureDbForMySqlSyncDatabaseInputTableMap.FromJson(__jsonTableMap) : TableMap;}
            {_tablesToMigrateSchema = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject>("tablesToMigrateSchema"), out var __jsonTablesToMigrateSchema) ? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221130Preview.MigrateMySqlAzureDbForMySqlSyncDatabaseInputTablesToMigrateSchema.FromJson(__jsonTablesToMigrateSchema) : TablesToMigrateSchema;}
            {_selectedView = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("selectedViews"), out var __jsonSelectedViews) ? If( __jsonSelectedViews as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(string) (__u is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString __t ? (string)(__t.ToString()) : null)) ))() : null : SelectedView;}
            {_selectedTrigger = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("selectedTriggers"), out var __jsonSelectedTriggers) ? If( __jsonSelectedTriggers as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __q) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__q, (__p)=>(string) (__p is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString __o ? (string)(__o.ToString()) : null)) ))() : null : SelectedTrigger;}
            {_selectedRoutine = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("selectedRoutines"), out var __jsonSelectedRoutines) ? If( __jsonSelectedRoutines as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __l) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__l, (__k)=>(string) (__k is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString __j ? (string)(__j.ToString()) : null)) ))() : null : SelectedRoutine;}
            {_selectedEvent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray>("selectedEvents"), out var __jsonSelectedEvents) ? If( __jsonSelectedEvents as Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonArray, out var __g) ? new global::System.Func<string[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__g, (__f)=>(string) (__f is Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString __e ? (string)(__e.ToString()) : null)) ))() : null : SelectedEvent;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MigrateMySqlAzureDbForMySqlSyncDatabaseInput" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode"
        /// />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MigrateMySqlAzureDbForMySqlSyncDatabaseInput" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode"
        /// />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._name)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._name.ToString()) : null, "name" ,container.Add );
            AddIf( null != (((object)this._targetDatabaseName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(this._targetDatabaseName.ToString()) : null, "targetDatabaseName" ,container.Add );
            AddIf( null != this._migrationSetting ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._migrationSetting.ToJson(null,serializationMode) : null, "migrationSetting" ,container.Add );
            AddIf( null != this._sourceSetting ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._sourceSetting.ToJson(null,serializationMode) : null, "sourceSetting" ,container.Add );
            AddIf( null != this._targetSetting ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._targetSetting.ToJson(null,serializationMode) : null, "targetSetting" ,container.Add );
            AddIf( null != this._tableMap ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._tableMap.ToJson(null,serializationMode) : null, "tableMap" ,container.Add );
            AddIf( null != this._tablesToMigrateSchema ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) this._tablesToMigrateSchema.ToJson(null,serializationMode) : null, "tablesToMigrateSchema" ,container.Add );
            if (null != this._selectedView)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                foreach( var __x in this._selectedView )
                {
                    AddIf(null != (((object)__x)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(__x.ToString()) : null ,__w.Add);
                }
                container.Add("selectedViews",__w);
            }
            if (null != this._selectedTrigger)
            {
                var __r = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                foreach( var __s in this._selectedTrigger )
                {
                    AddIf(null != (((object)__s)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(__s.ToString()) : null ,__r.Add);
                }
                container.Add("selectedTriggers",__r);
            }
            if (null != this._selectedRoutine)
            {
                var __m = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                foreach( var __n in this._selectedRoutine )
                {
                    AddIf(null != (((object)__n)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(__n.ToString()) : null ,__m.Add);
                }
                container.Add("selectedRoutines",__m);
            }
            if (null != this._selectedEvent)
            {
                var __h = new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.XNodeArray();
                foreach( var __i in this._selectedEvent )
                {
                    AddIf(null != (((object)__i)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Json.JsonString(__i.ToString()) : null ,__h.Add);
                }
                container.Add("selectedEvents",__h);
            }
            AfterToJson(ref container);
            return container;
        }
    }
}