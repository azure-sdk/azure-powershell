// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Backup Configuration</summary>
    public partial class SqlDbBackupConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal
    {

        /// <summary>Internal Acessors for SourceLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal.SourceLocation { get => (this._sourceLocation = this._sourceLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbSourceBackupLocation()); set { {_sourceLocation = value;} } }

        /// <summary>Internal Acessors for SourceLocationFileStorageType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal.SourceLocationFileStorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocationInternal)SourceLocation).FileStorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocationInternal)SourceLocation).FileStorageType = value; }

        /// <summary>Backing field for <see cref="SourceLocation" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation _sourceLocation;

        /// <summary>Source location of backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation SourceLocation { get => (this._sourceLocation = this._sourceLocation ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbSourceBackupLocation()); }

        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceLocationFileStorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocationInternal)SourceLocation).FileStorageType; }

        /// <summary>Creates an new <see cref="SqlDbBackupConfiguration" /> instance.</summary>
        public SqlDbBackupConfiguration()
        {

        }
    }
    /// Backup Configuration
    public partial interface ISqlDbBackupConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup storage Type.",
        SerializedName = @"fileStorageType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceLocationFileStorageType { get;  }

    }
    /// Backup Configuration
    internal partial interface ISqlDbBackupConfigurationInternal

    {
        /// <summary>Source location of backups.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation SourceLocation { get; set; }
        /// <summary>Backup storage Type.</summary>
        string SourceLocationFileStorageType { get; set; }

    }
}