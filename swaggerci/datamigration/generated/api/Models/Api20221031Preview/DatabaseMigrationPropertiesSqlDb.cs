// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Database Migration Resource properties for SQL database.</summary>
    public partial class DatabaseMigrationPropertiesSqlDb :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDb,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal
    {

        /// <summary>Backing field for <see cref="BackupConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfiguration _backupConfiguration;

        /// <summary>Source Location details of backups.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfiguration BackupConfiguration { get => (this._backupConfiguration = this._backupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbBackupConfiguration()); }

        /// <summary>Backing field for <see cref="EndedOn" /> property.</summary>
        private global::System.DateTime? _endedOn;

        /// <summary>Database migration end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? EndedOn { get => this._endedOn; }

        /// <summary>Backing field for <see cref="KeyVault" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultProperties _keyVault;

        /// <summary>Key Vault Properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultProperties KeyVault { get => (this._keyVault = this._keyVault ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.KeyVaultProperties()); set => this._keyVault = value; }

        /// <summary>Key Vault Secret Name corresponding to file share password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string KeyVaultFileSharePasswordSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).FileSharePasswordSecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).FileSharePasswordSecretName = value ?? null; }

        /// <summary>Key Vault Secret Name corresponding to file share username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string KeyVaultFileShareUsernameSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).FileShareUsernameSecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).FileShareUsernameSecretName = value ?? null; }

        /// <summary>Key Vault Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string KeyVaultName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).Name = value ?? null; }

        /// <summary>Key Vault Secret Name corresponding to source password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string KeyVaultSourcePasswordSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).SourcePasswordSecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).SourcePasswordSecretName = value ?? null; }

        /// <summary>Key Vault Secret Name corresponding to source username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string KeyVaultSourceUsernameSecretName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).SourceUsernameSecretName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultPropertiesInternal)KeyVault).SourceUsernameSecretName = value ?? null; }

        /// <summary>Backing field for <see cref="Kind" /> property.</summary>
        private string _kind;

        /// <summary>Resource Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Kind { get => this._kind; set => this._kind = value; }

        /// <summary>Internal Acessors for BackupConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfiguration Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.BackupConfiguration { get => (this._backupConfiguration = this._backupConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbBackupConfiguration()); set { {_backupConfiguration = value;} } }

        /// <summary>Internal Acessors for BackupConfigurationSourceLocation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.BackupConfigurationSourceLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal)BackupConfiguration).SourceLocation; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal)BackupConfiguration).SourceLocation = value; }

        /// <summary>Internal Acessors for EndedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.EndedOn { get => this._endedOn; set { {_endedOn = value;} } }

        /// <summary>Internal Acessors for KeyVault</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultProperties Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.KeyVault { get => (this._keyVault = this._keyVault ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.KeyVaultProperties()); set { {_keyVault = value;} } }

        /// <summary>Internal Acessors for MigrationFailureError</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfo Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationFailureError { get => (this._migrationFailureError = this._migrationFailureError ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ErrorInfo()); set { {_migrationFailureError = value;} } }

        /// <summary>Internal Acessors for MigrationFailureErrorCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfoInternal)MigrationFailureError).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfoInternal)MigrationFailureError).Code = value; }

        /// <summary>Internal Acessors for MigrationFailureErrorMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfoInternal)MigrationFailureError).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfoInternal)MigrationFailureError).Message = value; }

        /// <summary>Internal Acessors for MigrationStatus</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatus { get => this._migrationStatus; set { {_migrationStatus = value;} } }

        /// <summary>Internal Acessors for MigrationStatusDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetails Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetail { get => (this._migrationStatusDetail = this._migrationStatusDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbMigrationStatusDetails()); set { {_migrationStatusDetail = value;} } }

        /// <summary>Internal Acessors for MigrationStatusDetailListOfCopyProgressDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ICopyProgressDetails[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetailListOfCopyProgressDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).ListOfCopyProgressDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).ListOfCopyProgressDetail = value; }

        /// <summary>Internal Acessors for MigrationStatusDetailMigrationState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetailMigrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).MigrationState; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).MigrationState = value; }

        /// <summary>Internal Acessors for MigrationStatusDetailSqlDataCopyError</summary>
        string[] Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.MigrationStatusDetailSqlDataCopyError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).SqlDataCopyError; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).SqlDataCopyError = value; }

        /// <summary>Internal Acessors for OfflineConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfiguration Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.OfflineConfiguration { get => (this._offlineConfiguration = this._offlineConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbOfflineConfiguration()); set { {_offlineConfiguration = value;} } }

        /// <summary>Internal Acessors for OfflineConfigurationOffline</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.OfflineConfigurationOffline { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfigurationInternal)OfflineConfiguration).Offline; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfigurationInternal)OfflineConfiguration).Offline = value; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for SourceLocationFileStorageType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.SourceLocationFileStorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal)BackupConfiguration).SourceLocationFileStorageType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal)BackupConfiguration).SourceLocationFileStorageType = value; }

        /// <summary>Internal Acessors for SourceServerName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.SourceServerName { get => this._sourceServerName; set { {_sourceServerName = value;} } }

        /// <summary>Internal Acessors for SourceSqlConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.SourceSqlConnection { get => (this._sourceSqlConnection = this._sourceSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlConnectionInformation()); set { {_sourceSqlConnection = value;} } }

        /// <summary>Internal Acessors for SqlDataCopyThreshold</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholds Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.SqlDataCopyThreshold { get => (this._sqlDataCopyThreshold = this._sqlDataCopyThreshold ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDataCopyThresholds()); set { {_sqlDataCopyThreshold = value;} } }

        /// <summary>Internal Acessors for StartedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.StartedOn { get => this._startedOn; set { {_startedOn = value;} } }

        /// <summary>Internal Acessors for TargetSqlConnection</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IDatabaseMigrationPropertiesSqlDbInternal.TargetSqlConnection { get => (this._targetSqlConnection = this._targetSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlConnectionInformation()); set { {_targetSqlConnection = value;} } }

        /// <summary>Backing field for <see cref="MigrationFailureError" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfo _migrationFailureError;

        /// <summary>Error details in case of migration failure.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfo MigrationFailureError { get => (this._migrationFailureError = this._migrationFailureError ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ErrorInfo()); }

        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string MigrationFailureErrorCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfoInternal)MigrationFailureError).Code; }

        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string MigrationFailureErrorMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfoInternal)MigrationFailureError).Message; }

        /// <summary>Backing field for <see cref="MigrationOperationId" /> property.</summary>
        private string _migrationOperationId;

        /// <summary>ID tracking current migration operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string MigrationOperationId { get => this._migrationOperationId; set => this._migrationOperationId = value; }

        /// <summary>Backing field for <see cref="MigrationService" /> property.</summary>
        private string _migrationService;

        /// <summary>Resource Id of the Migration Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string MigrationService { get => this._migrationService; set => this._migrationService = value; }

        /// <summary>Backing field for <see cref="MigrationStatus" /> property.</summary>
        private string _migrationStatus;

        /// <summary>Migration status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string MigrationStatus { get => this._migrationStatus; }

        /// <summary>Backing field for <see cref="MigrationStatusDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetails _migrationStatusDetail;

        /// <summary>Detailed migration status. Not included by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetails MigrationStatusDetail { get => (this._migrationStatusDetail = this._migrationStatusDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbMigrationStatusDetails()); }

        /// <summary>Details on progress of ADF copy activities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ICopyProgressDetails[] MigrationStatusDetailListOfCopyProgressDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).ListOfCopyProgressDetail; }

        /// <summary>Current State of Migration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string MigrationStatusDetailMigrationState { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).MigrationState; }

        /// <summary>Sql Data Copy errors, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string[] MigrationStatusDetailSqlDataCopyError { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetailsInternal)MigrationStatusDetail).SqlDataCopyError; }

        /// <summary>Backing field for <see cref="OfflineConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfiguration _offlineConfiguration;

        /// <summary>Offline configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfiguration OfflineConfiguration { get => (this._offlineConfiguration = this._offlineConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDbOfflineConfiguration()); }

        /// <summary>Offline migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? OfflineConfigurationOffline { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfigurationInternal)OfflineConfiguration).Offline; }

        /// <summary>Backing field for <see cref="ProvisioningError" /> property.</summary>
        private string _provisioningError;

        /// <summary>Error message for migration provisioning failure, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ProvisioningError { get => this._provisioningError; set => this._provisioningError = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>Scope of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="SourceDatabaseName" /> property.</summary>
        private string _sourceDatabaseName;

        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceDatabaseName { get => this._sourceDatabaseName; set => this._sourceDatabaseName = value; }

        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceLocationFileStorageType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfigurationInternal)BackupConfiguration).SourceLocationFileStorageType; }

        /// <summary>Backing field for <see cref="SourceServerName" /> property.</summary>
        private string _sourceServerName;

        /// <summary>Name of the source sql server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string SourceServerName { get => this._sourceServerName; }

        /// <summary>Backing field for <see cref="SourceSqlConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation _sourceSqlConnection;

        /// <summary>Source SQL Server connection details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation SourceSqlConnection { get => (this._sourceSqlConnection = this._sourceSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlConnectionInformation()); set => this._sourceSqlConnection = value; }

        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Authentication = value ?? null; }

        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).DataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).DataSource = value ?? null; }

        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? SourceSqlConnectionEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).EncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).EncryptConnection = value ?? default(bool); }

        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).Password = value ?? null; }

        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? SourceSqlConnectionTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).TrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).TrustServerCertificate = value ?? default(bool); }

        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string SourceSqlConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)SourceSqlConnection).UserName = value ?? null; }

        /// <summary>Backing field for <see cref="SqlDataCopyThreshold" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholds _sqlDataCopyThreshold;

        /// <summary>
        /// Minimum Row count and size of a table with a clustered index required to perform parallel data copy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholds SqlDataCopyThreshold { get => (this._sqlDataCopyThreshold = this._sqlDataCopyThreshold ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlDataCopyThresholds()); }

        /// <summary>
        /// Minimum required size in kbs of a table with a clustered index to perform parallel data copy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? SqlDataCopyThresholdCidxKbsThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholdsInternal)SqlDataCopyThreshold).CidxKbsThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholdsInternal)SqlDataCopyThreshold).CidxKbsThreshold = value ?? default(int); }

        /// <summary>Minimum row count of a table with clustered index to perform parallel data copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public int? SqlDataCopyThresholdCidxRowThreshold { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholdsInternal)SqlDataCopyThreshold).CidxRowThreshold; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholdsInternal)SqlDataCopyThreshold).CidxRowThreshold = value ?? default(int); }

        /// <summary>Backing field for <see cref="StartedOn" /> property.</summary>
        private global::System.DateTime? _startedOn;

        /// <summary>Database migration start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public global::System.DateTime? StartedOn { get => this._startedOn; }

        /// <summary>Backing field for <see cref="TableList" /> property.</summary>
        private string[] _tableList;

        /// <summary>List of tables to copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string[] TableList { get => this._tableList; set => this._tableList = value; }

        /// <summary>Backing field for <see cref="TargetDatabaseCollation" /> property.</summary>
        private string _targetDatabaseCollation;

        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string TargetDatabaseCollation { get => this._targetDatabaseCollation; set => this._targetDatabaseCollation = value; }

        /// <summary>Backing field for <see cref="TargetSqlConnection" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation _targetSqlConnection;

        /// <summary>Target SQL DB connection details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation TargetSqlConnection { get => (this._targetSqlConnection = this._targetSqlConnection ?? new Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.SqlConnectionInformation()); set => this._targetSqlConnection = value; }

        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionAuthentication { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Authentication; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Authentication = value ?? null; }

        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionDataSource { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).DataSource; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).DataSource = value ?? null; }

        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? TargetSqlConnectionEncryptConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).EncryptConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).EncryptConnection = value ?? default(bool); }

        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionPassword { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Password; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).Password = value ?? null; }

        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public bool? TargetSqlConnectionTrustServerCertificate { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).TrustServerCertificate; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).TrustServerCertificate = value ?? default(bool); }

        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Inlined)]
        public string TargetSqlConnectionUserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformationInternal)TargetSqlConnection).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="DatabaseMigrationPropertiesSqlDb" /> instance.</summary>
        public DatabaseMigrationPropertiesSqlDb()
        {

        }
    }
    /// Database Migration Resource properties for SQL database.
    public partial interface IDatabaseMigrationPropertiesSqlDb :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Database migration end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database migration end time.",
        SerializedName = @"endedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndedOn { get;  }
        /// <summary>Key Vault Secret Name corresponding to file share password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault Secret Name corresponding to file share password.",
        SerializedName = @"fileSharePasswordSecretName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultFileSharePasswordSecretName { get; set; }
        /// <summary>Key Vault Secret Name corresponding to file share username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault Secret Name corresponding to file share username.",
        SerializedName = @"fileShareUsernameSecretName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultFileShareUsernameSecretName { get; set; }
        /// <summary>Key Vault Name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault Name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultName { get; set; }
        /// <summary>Key Vault Secret Name corresponding to source password.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault Secret Name corresponding to source password.",
        SerializedName = @"sourcePasswordSecretName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultSourcePasswordSecretName { get; set; }
        /// <summary>Key Vault Secret Name corresponding to source username.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Key Vault Secret Name corresponding to source username.",
        SerializedName = @"sourceUsernameSecretName",
        PossibleTypes = new [] { typeof(string) })]
        string KeyVaultSourceUsernameSecretName { get; set; }
        /// <summary>Resource Type</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Type",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string Kind { get; set; }
        /// <summary>Error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationFailureErrorCode { get;  }
        /// <summary>Error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationFailureErrorMessage { get;  }
        /// <summary>ID tracking current migration operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID tracking current migration operation.",
        SerializedName = @"migrationOperationId",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationOperationId { get; set; }
        /// <summary>Resource Id of the Migration Service.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource Id of the Migration Service.",
        SerializedName = @"migrationService",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationService { get; set; }
        /// <summary>Migration status.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Migration status.",
        SerializedName = @"migrationStatus",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationStatus { get;  }
        /// <summary>Details on progress of ADF copy activities.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Details on progress of ADF copy activities.",
        SerializedName = @"listOfCopyProgressDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ICopyProgressDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ICopyProgressDetails[] MigrationStatusDetailListOfCopyProgressDetail { get;  }
        /// <summary>Current State of Migration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Current State of Migration.",
        SerializedName = @"migrationState",
        PossibleTypes = new [] { typeof(string) })]
        string MigrationStatusDetailMigrationState { get;  }
        /// <summary>Sql Data Copy errors, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Sql Data Copy errors, if any.",
        SerializedName = @"sqlDataCopyErrors",
        PossibleTypes = new [] { typeof(string) })]
        string[] MigrationStatusDetailSqlDataCopyError { get;  }
        /// <summary>Offline migration</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Offline migration",
        SerializedName = @"offline",
        PossibleTypes = new [] { typeof(bool) })]
        bool? OfflineConfigurationOffline { get;  }
        /// <summary>Error message for migration provisioning failure, if any.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Error message for migration provisioning failure, if any.",
        SerializedName = @"provisioningError",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningError { get; set; }
        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Scope of the database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scope of the database.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Name of the source database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the source database.",
        SerializedName = @"sourceDatabaseName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceDatabaseName { get; set; }
        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup storage Type.",
        SerializedName = @"fileStorageType",
        PossibleTypes = new [] { typeof(string) })]
        string SourceLocationFileStorageType { get;  }
        /// <summary>Name of the source sql server.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Name of the source sql server.",
        SerializedName = @"sourceServerName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceServerName { get;  }
        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type.",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data source.",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt connection or not.",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password to connect to source SQL.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust server certificate or not.",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? SourceSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name to connect to source SQL.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string SourceSqlConnectionUserName { get; set; }
        /// <summary>
        /// Minimum required size in kbs of a table with a clustered index to perform parallel data copy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum required size in kbs of a table with a clustered index to perform parallel data copy",
        SerializedName = @"cidxKbsThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlDataCopyThresholdCidxKbsThreshold { get; set; }
        /// <summary>Minimum row count of a table with clustered index to perform parallel data copy</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Minimum row count of a table with clustered index to perform parallel data copy",
        SerializedName = @"cidxRowThreshold",
        PossibleTypes = new [] { typeof(int) })]
        int? SqlDataCopyThresholdCidxRowThreshold { get; set; }
        /// <summary>Database migration start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Database migration start time.",
        SerializedName = @"startedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartedOn { get;  }
        /// <summary>List of tables to copy.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of tables to copy.",
        SerializedName = @"tableList",
        PossibleTypes = new [] { typeof(string) })]
        string[] TableList { get; set; }
        /// <summary>Database collation to be used for the target database.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Database collation to be used for the target database.",
        SerializedName = @"targetDatabaseCollation",
        PossibleTypes = new [] { typeof(string) })]
        string TargetDatabaseCollation { get; set; }
        /// <summary>Authentication type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Authentication type.",
        SerializedName = @"authentication",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Data source.",
        SerializedName = @"dataSource",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to encrypt connection or not.",
        SerializedName = @"encryptConnection",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TargetSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Password to connect to source SQL.",
        SerializedName = @"password",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether to trust server certificate or not.",
        SerializedName = @"trustServerCertificate",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TargetSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name to connect to source SQL.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string TargetSqlConnectionUserName { get; set; }

    }
    /// Database Migration Resource properties for SQL database.
    internal partial interface IDatabaseMigrationPropertiesSqlDbInternal

    {
        /// <summary>Source Location details of backups.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbBackupConfiguration BackupConfiguration { get; set; }
        /// <summary>Source location of backups.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation BackupConfigurationSourceLocation { get; set; }
        /// <summary>Database migration end time.</summary>
        global::System.DateTime? EndedOn { get; set; }
        /// <summary>Key Vault Properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IKeyVaultProperties KeyVault { get; set; }
        /// <summary>Key Vault Secret Name corresponding to file share password.</summary>
        string KeyVaultFileSharePasswordSecretName { get; set; }
        /// <summary>Key Vault Secret Name corresponding to file share username.</summary>
        string KeyVaultFileShareUsernameSecretName { get; set; }
        /// <summary>Key Vault Name.</summary>
        string KeyVaultName { get; set; }
        /// <summary>Key Vault Secret Name corresponding to source password.</summary>
        string KeyVaultSourcePasswordSecretName { get; set; }
        /// <summary>Key Vault Secret Name corresponding to source username.</summary>
        string KeyVaultSourceUsernameSecretName { get; set; }
        /// <summary>Resource Type</summary>
        string Kind { get; set; }
        /// <summary>Error details in case of migration failure.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.IErrorInfo MigrationFailureError { get; set; }
        /// <summary>Error code.</summary>
        string MigrationFailureErrorCode { get; set; }
        /// <summary>Error message.</summary>
        string MigrationFailureErrorMessage { get; set; }
        /// <summary>ID tracking current migration operation.</summary>
        string MigrationOperationId { get; set; }
        /// <summary>Resource Id of the Migration Service.</summary>
        string MigrationService { get; set; }
        /// <summary>Migration status.</summary>
        string MigrationStatus { get; set; }
        /// <summary>Detailed migration status. Not included by default.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbMigrationStatusDetails MigrationStatusDetail { get; set; }
        /// <summary>Details on progress of ADF copy activities.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ICopyProgressDetails[] MigrationStatusDetailListOfCopyProgressDetail { get; set; }
        /// <summary>Current State of Migration.</summary>
        string MigrationStatusDetailMigrationState { get; set; }
        /// <summary>Sql Data Copy errors, if any.</summary>
        string[] MigrationStatusDetailSqlDataCopyError { get; set; }
        /// <summary>Offline configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbOfflineConfiguration OfflineConfiguration { get; set; }
        /// <summary>Offline migration</summary>
        bool? OfflineConfigurationOffline { get; set; }
        /// <summary>Error message for migration provisioning failure, if any.</summary>
        string ProvisioningError { get; set; }
        /// <summary>
        /// Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration
        /// has started.
        /// </summary>
        string ProvisioningState { get; set; }
        /// <summary>Scope of the database.</summary>
        string Scope { get; set; }
        /// <summary>Name of the source database.</summary>
        string SourceDatabaseName { get; set; }
        /// <summary>Backup storage Type.</summary>
        string SourceLocationFileStorageType { get; set; }
        /// <summary>Name of the source sql server.</summary>
        string SourceServerName { get; set; }
        /// <summary>Source SQL Server connection details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation SourceSqlConnection { get; set; }
        /// <summary>Authentication type.</summary>
        string SourceSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        string SourceSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        bool? SourceSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        string SourceSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        bool? SourceSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        string SourceSqlConnectionUserName { get; set; }
        /// <summary>
        /// Minimum Row count and size of a table with a clustered index required to perform parallel data copy
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDataCopyThresholds SqlDataCopyThreshold { get; set; }
        /// <summary>
        /// Minimum required size in kbs of a table with a clustered index to perform parallel data copy
        /// </summary>
        int? SqlDataCopyThresholdCidxKbsThreshold { get; set; }
        /// <summary>Minimum row count of a table with clustered index to perform parallel data copy</summary>
        int? SqlDataCopyThresholdCidxRowThreshold { get; set; }
        /// <summary>Database migration start time.</summary>
        global::System.DateTime? StartedOn { get; set; }
        /// <summary>List of tables to copy.</summary>
        string[] TableList { get; set; }
        /// <summary>Database collation to be used for the target database.</summary>
        string TargetDatabaseCollation { get; set; }
        /// <summary>Target SQL DB connection details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlConnectionInformation TargetSqlConnection { get; set; }
        /// <summary>Authentication type.</summary>
        string TargetSqlConnectionAuthentication { get; set; }
        /// <summary>Data source.</summary>
        string TargetSqlConnectionDataSource { get; set; }
        /// <summary>Whether to encrypt connection or not.</summary>
        bool? TargetSqlConnectionEncryptConnection { get; set; }
        /// <summary>Password to connect to source SQL.</summary>
        string TargetSqlConnectionPassword { get; set; }
        /// <summary>Whether to trust server certificate or not.</summary>
        bool? TargetSqlConnectionTrustServerCertificate { get; set; }
        /// <summary>User name to connect to source SQL.</summary>
        string TargetSqlConnectionUserName { get; set; }

    }
}