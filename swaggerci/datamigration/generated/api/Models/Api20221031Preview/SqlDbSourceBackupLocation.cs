// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Extensions;

    /// <summary>Source Location details of backups.</summary>
    public partial class SqlDbSourceBackupLocation :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocation,
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocationInternal
    {

        /// <summary>Backing field for <see cref="FileStorageType" /> property.</summary>
        private string _fileStorageType;

        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Origin(Microsoft.Azure.PowerShell.Cmdlets.DataMigration.PropertyOrigin.Owned)]
        public string FileStorageType { get => this._fileStorageType; }

        /// <summary>Internal Acessors for FileStorageType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Models.Api20221031Preview.ISqlDbSourceBackupLocationInternal.FileStorageType { get => this._fileStorageType; set { {_fileStorageType = value;} } }

        /// <summary>Creates an new <see cref="SqlDbSourceBackupLocation" /> instance.</summary>
        public SqlDbSourceBackupLocation()
        {

        }
    }
    /// Source Location details of backups.
    public partial interface ISqlDbSourceBackupLocation :
        Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.IJsonSerializable
    {
        /// <summary>Backup storage Type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DataMigration.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Backup storage Type.",
        SerializedName = @"fileStorageType",
        PossibleTypes = new [] { typeof(string) })]
        string FileStorageType { get;  }

    }
    /// Source Location details of backups.
    internal partial interface ISqlDbSourceBackupLocationInternal

    {
        /// <summary>Backup storage Type.</summary>
        string FileStorageType { get; set; }

    }
}