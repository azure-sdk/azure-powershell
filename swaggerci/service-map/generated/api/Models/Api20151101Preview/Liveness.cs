// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Specifies the contents of a check liveness response.</summary>
    public partial class Liveness :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ILiveness,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ILivenessInternal
    {

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime _endTime;

        /// <summary>Liveness interval end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public global::System.DateTime EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="Live" /> property.</summary>
        private bool _live;

        /// <summary>`true` if the resource is live during [startTime, endTime], `false` otherwise</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public bool Live { get => this._live; set => this._live = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime _startTime;

        /// <summary>Liveness interval start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public global::System.DateTime StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Creates an new <see cref="Liveness" /> instance.</summary>
        public Liveness()
        {

        }
    }
    /// Specifies the contents of a check liveness response.
    public partial interface ILiveness :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable
    {
        /// <summary>Liveness interval end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Liveness interval end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime EndTime { get; set; }
        /// <summary>`true` if the resource is live during [startTime, endTime], `false` otherwise</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"`true` if the resource is live during [startTime, endTime], `false` otherwise",
        SerializedName = @"live",
        PossibleTypes = new [] { typeof(bool) })]
        bool Live { get; set; }
        /// <summary>Liveness interval start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Liveness interval start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartTime { get; set; }

    }
    /// Specifies the contents of a check liveness response.
    internal partial interface ILivenessInternal

    {
        /// <summary>Liveness interval end time.</summary>
        global::System.DateTime EndTime { get; set; }
        /// <summary>`true` if the resource is live during [startTime, endTime], `false` otherwise</summary>
        bool Live { get; set; }
        /// <summary>Liveness interval start time.</summary>
        global::System.DateTime StartTime { get; set; }

    }
}