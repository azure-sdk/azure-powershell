// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>A network connection.</summary>
    public partial class Connection :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnection,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationship"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationship __relationship = new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.Relationship();

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DestinationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationId = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DestinationKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationKind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DestinationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DestinationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationType; }

        /// <summary>Relationship end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public global::System.DateTime? EndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).EndTime = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? FailureState { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).FailureState; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).FailureState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState)""); }

        /// <summary>IP address of the port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).IPAddress; }

        /// <summary>Resource identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Id; }

        /// <summary>Additional resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipInternal)__relationship).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipInternal)__relationship).Kind = value ; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineId = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineKind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineType; }

        /// <summary>Internal Acessors for Destination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.Destination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).Destination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).Destination = value; }

        /// <summary>Internal Acessors for DestinationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.DestinationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationName = value; }

        /// <summary>Internal Acessors for DestinationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.DestinationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).DestinationType = value; }

        /// <summary>Internal Acessors for IPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).IPAddress = value; }

        /// <summary>Internal Acessors for Machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.Machine { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).Machine; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).Machine = value; }

        /// <summary>Internal Acessors for MachineName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineName = value; }

        /// <summary>Internal Acessors for MachineType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).MachineType = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ConnectionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ServerPort</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.ServerPort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPort = value; }

        /// <summary>Internal Acessors for ServerPortName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.ServerPortName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortName = value; }

        /// <summary>Internal Acessors for ServerPortProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.ServerPortProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortProperty = value; }

        /// <summary>Internal Acessors for ServerPortType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.ServerPortType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortType = value; }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).Source = value; }

        /// <summary>Internal Acessors for SourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceName = value; }

        /// <summary>Internal Acessors for SourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionInternal.SourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceType = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Name; }

        /// <summary>Port number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public int? PortNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).PortNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).PortNumber = value ?? default(int); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionProperties _property;

        /// <summary>Properties for a connection resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ConnectionProperties()); set => this._property = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortId = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortKind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal)Property).ServerPortType; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string SourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceId = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string SourceKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceKind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string SourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).SourceType; }

        /// <summary>Relationship start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public global::System.DateTime? StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)Property).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceInternal)__relationship).Type; }

        /// <summary>Creates an new <see cref="Connection" /> instance.</summary>
        public Connection()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__relationship), __relationship);
            await eventListener.AssertObjectIsValid(nameof(__relationship), __relationship);
        }
    }
    /// A network connection.
    public partial interface IConnection :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationship
    {
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string DestinationType { get;  }
        /// <summary>Relationship end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Relationship end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EndTime { get; set; }
        /// <summary>
        /// Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.",
        SerializedName = @"failureState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? FailureState { get; set; }
        /// <summary>IP address of the port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IP address of the port.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get;  }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MachineName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string MachineType { get;  }
        /// <summary>Port number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port number.",
        SerializedName = @"portNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? PortNumber { get; set; }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortType { get;  }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string SourceId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string SourceKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string SourceType { get;  }
        /// <summary>Relationship start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Relationship start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }

    }
    /// A network connection.
    internal partial interface IConnectionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipInternal
    {
        /// <summary>Destination resource of the relationship.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Destination { get; set; }
        /// <summary>Resource URI.</summary>
        string DestinationId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string DestinationKind { get; set; }
        /// <summary>Resource name.</summary>
        string DestinationName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string DestinationType { get; set; }
        /// <summary>Relationship end time.</summary>
        global::System.DateTime? EndTime { get; set; }
        /// <summary>
        /// Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? FailureState { get; set; }
        /// <summary>IP address of the port.</summary>
        string IPAddress { get; set; }
        /// <summary>Machine hosting the port.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Machine { get; set; }
        /// <summary>Resource URI.</summary>
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        string MachineName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string MachineType { get; set; }
        /// <summary>Port number.</summary>
        int? PortNumber { get; set; }
        /// <summary>Properties for a connection resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionProperties Property { get; set; }
        /// <summary>Reference to the server port via which this connection has been established.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference ServerPort { get; set; }
        /// <summary>Resource URI.</summary>
        string ServerPortId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string ServerPortKind { get; set; }
        /// <summary>Resource name.</summary>
        string ServerPortName { get; set; }
        /// <summary>Resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceProperties ServerPortProperty { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string ServerPortType { get; set; }
        /// <summary>Source resource of the relationship.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Source { get; set; }
        /// <summary>Resource URI.</summary>
        string SourceId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string SourceKind { get; set; }
        /// <summary>Resource name.</summary>
        string SourceName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string SourceType { get; set; }
        /// <summary>Relationship start time.</summary>
        global::System.DateTime? StartTime { get; set; }

    }
}