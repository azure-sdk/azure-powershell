// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Resource properties.</summary>
    public partial class ProcessProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AcceptorOf" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference _acceptorOf;

        /// <summary>
        /// Present only for a discovered process acting as a server. References the port on which the discovered process is accepting.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference AcceptorOf { get => (this._acceptorOf = this._acceptorOf ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ResourceReference()); set => this._acceptorOf = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string AcceptorOfId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Id = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string AcceptorOfKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Kind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string AcceptorOfName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Name; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string AcceptorOfType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Type; }

        /// <summary>Backing field for <see cref="ClientOf" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference _clientOf;

        /// <summary>
        /// Present only for a discovered process acting as a client of a monitored process/machine/port. References the monitored
        /// process/machine/port that this process is a client of.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference ClientOf { get => (this._clientOf = this._clientOf ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ResourceReference()); set => this._clientOf = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ClientOfId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Id = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ClientOfKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Kind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ClientOfName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Name; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ClientOfType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Type; }

        /// <summary>Backing field for <see cref="Detail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails _detail;

        /// <summary>Process metadata (command line, product name, etc.).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails Detail { get => (this._detail = this._detail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessDetails()); set => this._detail = value; }

        /// <summary>Process command line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailCommandLine { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).CommandLine; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).CommandLine = value ?? null; }

        /// <summary>Name of company that created the process executable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailCompanyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).CompanyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).CompanyName = value ?? null; }

        /// <summary>Process description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailDescription { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).Description = value ?? null; }

        /// <summary>Process executable path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailExecutablePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ExecutablePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ExecutablePath = value ?? null; }

        /// <summary>File version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailFileVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).FileVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).FileVersion = value ?? null; }

        /// <summary>
        /// The Operating System Process Identifier (PID) of the first process in this process pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public int? DetailFirstPid { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).FirstPid; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).FirstPid = value ?? default(int); }

        /// <summary>Internal process name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailInternalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).InternalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).InternalName = value ?? null; }

        /// <summary>
        /// A unique identifier for a process, generally resilient to process restart, computed by Service Map.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailPersistentKey { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).PersistentKey; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).PersistentKey = value ?? null; }

        /// <summary>
        /// Represents the identity of the process pool assigned to the process by Dependency Agent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public int? DetailPoolId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).PoolId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).PoolId = value ?? default(int); }

        /// <summary>Product name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailProductName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ProductName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ProductName = value ?? null; }

        /// <summary>Product version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailProductVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ProductVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ProductVersion = value ?? null; }

        /// <summary>Collection of services hosted by this Process (Windows only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostedService[] DetailService { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).Service; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).Service = value ?? null /* arrayOf */; }

        /// <summary>Process workingDirectory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailWorkingDirectory { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).WorkingDirectory; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).WorkingDirectory = value ?? null; }

        /// <summary>Process zone name (Linux only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string DetailZoneName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ZoneName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetailsInternal)Detail).ZoneName = value ?? null; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>Name to use for display purposes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="ExecutableName" /> property.</summary>
        private string _executableName;

        /// <summary>The name of the process executable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string ExecutableName { get => this._executableName; set => this._executableName = value; }

        /// <summary>Backing field for <see cref="Group" /> property.</summary>
        private string _group;

        /// <summary>
        /// The name of the product or suite of the process. The group is determined by its executable name, command line, etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string Group { get => this._group; set => this._group = value; }

        /// <summary>Backing field for <see cref="Hosting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfiguration _hosting;

        /// <summary>Information about the hosting environment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfiguration Hosting { get => (this._hosting = this._hosting ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessHostingConfiguration()); set => this._hosting = value; }

        /// <summary>Additional hosting configuration type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string HostingKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfigurationInternal)Hosting).Kind; }

        /// <summary>The hosting provider of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string HostingProvider { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfigurationInternal)Hosting).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfigurationInternal)Hosting).Provider = value ?? null; }

        /// <summary>Backing field for <see cref="Machine" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference _machine;

        /// <summary>Machine hosting this process.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Machine { get => (this._machine = this._machine ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ResourceReference()); set => this._machine = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Id = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Kind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Name; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Type; }

        /// <summary>Internal Acessors for AcceptorOf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.AcceptorOf { get => (this._acceptorOf = this._acceptorOf ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ResourceReference()); set { {_acceptorOf = value;} } }

        /// <summary>Internal Acessors for AcceptorOfName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.AcceptorOfName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Name = value; }

        /// <summary>Internal Acessors for AcceptorOfType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.AcceptorOfType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)AcceptorOf).Type = value; }

        /// <summary>Internal Acessors for ClientOf</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.ClientOf { get => (this._clientOf = this._clientOf ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ResourceReference()); set { {_clientOf = value;} } }

        /// <summary>Internal Acessors for ClientOfName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.ClientOfName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Name = value; }

        /// <summary>Internal Acessors for ClientOfType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.ClientOfType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ClientOf).Type = value; }

        /// <summary>Internal Acessors for Detail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.Detail { get => (this._detail = this._detail ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessDetails()); set { {_detail = value;} } }

        /// <summary>Internal Acessors for Hosting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfiguration Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.Hosting { get => (this._hosting = this._hosting ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessHostingConfiguration()); set { {_hosting = value;} } }

        /// <summary>Internal Acessors for HostingKind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.HostingKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfigurationInternal)Hosting).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfigurationInternal)Hosting).Kind = value; }

        /// <summary>Internal Acessors for Machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.Machine { get => (this._machine = this._machine ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ResourceReference()); set { {_machine = value;} } }

        /// <summary>Internal Acessors for MachineName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Name = value; }

        /// <summary>Internal Acessors for MachineType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Machine).Type = value; }

        /// <summary>Internal Acessors for User</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUser Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessPropertiesInternal.User { get => (this._user = this._user ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessUser()); set { {_user = value;} } }

        /// <summary>Backing field for <see cref="MonitoringState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.MonitoringState? _monitoringState;

        /// <summary>Specifies whether the process is actively monitored or discovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.MonitoringState? MonitoringState { get => this._monitoringState; set => this._monitoringState = value; }

        /// <summary>Backing field for <see cref="Role" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ProcessRole? _role;

        /// <summary>The inferred role of this process based on its name, command line, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ProcessRole? Role { get => this._role; set => this._role = value; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime? _startTime;

        /// <summary>UTC date and time when the process started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public global::System.DateTime? StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Backing field for <see cref="Timestamp" /> property.</summary>
        private global::System.DateTime? _timestamp;

        /// <summary>UTC date and time when this process resource was updated in the system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public global::System.DateTime? Timestamp { get => this._timestamp; set => this._timestamp = value; }

        /// <summary>Backing field for <see cref="User" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUser _user;

        /// <summary>Information about the account under which the process is executing.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUser User { get => (this._user = this._user ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessUser()); set => this._user = value; }

        /// <summary>Domain name for the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string UserDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUserInternal)User).UserDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUserInternal)User).UserDomain = value ?? null; }

        /// <summary>User name under which the process is running.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string UserName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUserInternal)User).UserName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUserInternal)User).UserName = value ?? null; }

        /// <summary>Creates an new <see cref="ProcessProperties" /> instance.</summary>
        public ProcessProperties()
        {

        }
    }
    /// Resource properties.
    public partial interface IProcessProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable
    {
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string AcceptorOfId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string AcceptorOfKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string AcceptorOfName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string AcceptorOfType { get;  }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ClientOfId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string ClientOfKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ClientOfName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ClientOfType { get;  }
        /// <summary>Process command line.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Process command line.",
        SerializedName = @"commandLine",
        PossibleTypes = new [] { typeof(string) })]
        string DetailCommandLine { get; set; }
        /// <summary>Name of company that created the process executable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of company that created the process executable.",
        SerializedName = @"companyName",
        PossibleTypes = new [] { typeof(string) })]
        string DetailCompanyName { get; set; }
        /// <summary>Process description.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Process description.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string DetailDescription { get; set; }
        /// <summary>Process executable path.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Process executable path.",
        SerializedName = @"executablePath",
        PossibleTypes = new [] { typeof(string) })]
        string DetailExecutablePath { get; set; }
        /// <summary>File version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"File version.",
        SerializedName = @"fileVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DetailFileVersion { get; set; }
        /// <summary>
        /// The Operating System Process Identifier (PID) of the first process in this process pool.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Operating System Process Identifier (PID) of the first process in this process pool.",
        SerializedName = @"firstPid",
        PossibleTypes = new [] { typeof(int) })]
        int? DetailFirstPid { get; set; }
        /// <summary>Internal process name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Internal process name.",
        SerializedName = @"internalName",
        PossibleTypes = new [] { typeof(string) })]
        string DetailInternalName { get; set; }
        /// <summary>
        /// A unique identifier for a process, generally resilient to process restart, computed by Service Map.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A unique identifier for a process, generally resilient to process restart, computed by Service Map.",
        SerializedName = @"persistentKey",
        PossibleTypes = new [] { typeof(string) })]
        string DetailPersistentKey { get; set; }
        /// <summary>
        /// Represents the identity of the process pool assigned to the process by Dependency Agent.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Represents the identity of the process pool assigned to the process by Dependency Agent.",
        SerializedName = @"poolId",
        PossibleTypes = new [] { typeof(int) })]
        int? DetailPoolId { get; set; }
        /// <summary>Product name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product name.",
        SerializedName = @"productName",
        PossibleTypes = new [] { typeof(string) })]
        string DetailProductName { get; set; }
        /// <summary>Product version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Product version.",
        SerializedName = @"productVersion",
        PossibleTypes = new [] { typeof(string) })]
        string DetailProductVersion { get; set; }
        /// <summary>Collection of services hosted by this Process (Windows only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Collection of services hosted by this Process (Windows only).",
        SerializedName = @"services",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostedService) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostedService[] DetailService { get; set; }
        /// <summary>Process workingDirectory.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Process workingDirectory.",
        SerializedName = @"workingDirectory",
        PossibleTypes = new [] { typeof(string) })]
        string DetailWorkingDirectory { get; set; }
        /// <summary>Process zone name (Linux only).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Process zone name (Linux only).",
        SerializedName = @"zoneName",
        PossibleTypes = new [] { typeof(string) })]
        string DetailZoneName { get; set; }
        /// <summary>Name to use for display purposes</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name to use for display purposes",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>The name of the process executable</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the process executable",
        SerializedName = @"executableName",
        PossibleTypes = new [] { typeof(string) })]
        string ExecutableName { get; set; }
        /// <summary>
        /// The name of the product or suite of the process. The group is determined by its executable name, command line, etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the product or suite of the process. The group is determined by its executable name, command line, etc.",
        SerializedName = @"group",
        PossibleTypes = new [] { typeof(string) })]
        string Group { get; set; }
        /// <summary>Additional hosting configuration type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Additional hosting configuration type qualifier.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string HostingKind { get;  }
        /// <summary>The hosting provider of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The hosting provider of the VM.",
        SerializedName = @"provider",
        PossibleTypes = new [] { typeof(string) })]
        string HostingProvider { get; set; }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MachineName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string MachineType { get;  }
        /// <summary>Specifies whether the process is actively monitored or discovered.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether the process is actively monitored or discovered.",
        SerializedName = @"monitoringState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.MonitoringState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.MonitoringState? MonitoringState { get; set; }
        /// <summary>The inferred role of this process based on its name, command line, etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The inferred role of this process based on its name, command line, etc.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ProcessRole) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ProcessRole? Role { get; set; }
        /// <summary>UTC date and time when the process started</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC date and time when the process started",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? StartTime { get; set; }
        /// <summary>UTC date and time when this process resource was updated in the system</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC date and time when this process resource was updated in the system",
        SerializedName = @"timestamp",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Timestamp { get; set; }
        /// <summary>Domain name for the user.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Domain name for the user.",
        SerializedName = @"userDomain",
        PossibleTypes = new [] { typeof(string) })]
        string UserDomain { get; set; }
        /// <summary>User name under which the process is running.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User name under which the process is running.",
        SerializedName = @"userName",
        PossibleTypes = new [] { typeof(string) })]
        string UserName { get; set; }

    }
    /// Resource properties.
    internal partial interface IProcessPropertiesInternal

    {
        /// <summary>
        /// Present only for a discovered process acting as a server. References the port on which the discovered process is accepting.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference AcceptorOf { get; set; }
        /// <summary>Resource URI.</summary>
        string AcceptorOfId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string AcceptorOfKind { get; set; }
        /// <summary>Resource name.</summary>
        string AcceptorOfName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string AcceptorOfType { get; set; }
        /// <summary>
        /// Present only for a discovered process acting as a client of a monitored process/machine/port. References the monitored
        /// process/machine/port that this process is a client of.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference ClientOf { get; set; }
        /// <summary>Resource URI.</summary>
        string ClientOfId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string ClientOfKind { get; set; }
        /// <summary>Resource name.</summary>
        string ClientOfName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string ClientOfType { get; set; }
        /// <summary>Process metadata (command line, product name, etc.).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails Detail { get; set; }
        /// <summary>Process command line.</summary>
        string DetailCommandLine { get; set; }
        /// <summary>Name of company that created the process executable.</summary>
        string DetailCompanyName { get; set; }
        /// <summary>Process description.</summary>
        string DetailDescription { get; set; }
        /// <summary>Process executable path.</summary>
        string DetailExecutablePath { get; set; }
        /// <summary>File version.</summary>
        string DetailFileVersion { get; set; }
        /// <summary>
        /// The Operating System Process Identifier (PID) of the first process in this process pool.
        /// </summary>
        int? DetailFirstPid { get; set; }
        /// <summary>Internal process name.</summary>
        string DetailInternalName { get; set; }
        /// <summary>
        /// A unique identifier for a process, generally resilient to process restart, computed by Service Map.
        /// </summary>
        string DetailPersistentKey { get; set; }
        /// <summary>
        /// Represents the identity of the process pool assigned to the process by Dependency Agent.
        /// </summary>
        int? DetailPoolId { get; set; }
        /// <summary>Product name.</summary>
        string DetailProductName { get; set; }
        /// <summary>Product version.</summary>
        string DetailProductVersion { get; set; }
        /// <summary>Collection of services hosted by this Process (Windows only).</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostedService[] DetailService { get; set; }
        /// <summary>Process workingDirectory.</summary>
        string DetailWorkingDirectory { get; set; }
        /// <summary>Process zone name (Linux only).</summary>
        string DetailZoneName { get; set; }
        /// <summary>Name to use for display purposes</summary>
        string DisplayName { get; set; }
        /// <summary>The name of the process executable</summary>
        string ExecutableName { get; set; }
        /// <summary>
        /// The name of the product or suite of the process. The group is determined by its executable name, command line, etc.
        /// </summary>
        string Group { get; set; }
        /// <summary>Information about the hosting environment</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostingConfiguration Hosting { get; set; }
        /// <summary>Additional hosting configuration type qualifier.</summary>
        string HostingKind { get; set; }
        /// <summary>The hosting provider of the VM.</summary>
        string HostingProvider { get; set; }
        /// <summary>Machine hosting this process.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Machine { get; set; }
        /// <summary>Resource URI.</summary>
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        string MachineName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string MachineType { get; set; }
        /// <summary>Specifies whether the process is actively monitored or discovered.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.MonitoringState? MonitoringState { get; set; }
        /// <summary>The inferred role of this process based on its name, command line, etc.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ProcessRole? Role { get; set; }
        /// <summary>UTC date and time when the process started</summary>
        global::System.DateTime? StartTime { get; set; }
        /// <summary>UTC date and time when this process resource was updated in the system</summary>
        global::System.DateTime? Timestamp { get; set; }
        /// <summary>Information about the account under which the process is executing.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessUser User { get; set; }
        /// <summary>Domain name for the user.</summary>
        string UserDomain { get; set; }
        /// <summary>User name under which the process is running.</summary>
        string UserName { get; set; }

    }
}