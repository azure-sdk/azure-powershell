// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Resource properties.</summary>
    public partial class ClientGroupMemberProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal
    {

        /// <summary>Backing field for <see cref="IPAddress" /> property.</summary>
        private string _iPAddress;

        /// <summary>IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string IPAddress { get => this._iPAddress; set => this._iPAddress = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineId = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineKind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineType; }

        /// <summary>Internal Acessors for Machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.Machine { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).Machine; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).Machine = value; }

        /// <summary>Internal Acessors for MachineName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineName = value; }

        /// <summary>Internal Acessors for MachineType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).MachineType = value; }

        /// <summary>Internal Acessors for Port</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.Port { get => (this._port = this._port ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.PortReference()); set { {_port = value;} } }

        /// <summary>Internal Acessors for PortName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.PortName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Name = value; }

        /// <summary>Internal Acessors for PortPropertiesIPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.PortPropertiesIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).IPAddress = value; }

        /// <summary>Internal Acessors for PortProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.PortProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).Property = value; }

        /// <summary>Internal Acessors for PortType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroupMemberPropertiesInternal.PortType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Type = value; }

        /// <summary>Backing field for <see cref="Port" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference _port;

        /// <summary>Port into which this client connected</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference Port { get => (this._port = this._port ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.PortReference()); set => this._port = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string PortId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Id = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string PortKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Kind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string PortName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Name; }

        /// <summary>Port number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public int? PortNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).PortNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).PortNumber = value ?? default(int); }

        /// <summary>IP address of the port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string PortPropertiesIPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)Port).IPAddress; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string PortType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)Port).Type; }

        /// <summary>Backing field for <see cref="Process" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessReference[] _process;

        /// <summary>
        /// Processes accepting on the above port that received connections from this client.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessReference[] Process { get => this._process; set => this._process = value; }

        /// <summary>Creates an new <see cref="ClientGroupMemberProperties" /> instance.</summary>
        public ClientGroupMemberProperties()
        {

        }
    }
    /// Resource properties.
    public partial interface IClientGroupMemberProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable
    {
        /// <summary>IP address.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"IP address.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get; set; }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MachineName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string MachineType { get;  }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PortId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string PortKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string PortName { get;  }
        /// <summary>Port number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port number.",
        SerializedName = @"portNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? PortNumber { get; set; }
        /// <summary>IP address of the port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IP address of the port.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PortPropertiesIPAddress { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string PortType { get;  }
        /// <summary>
        /// Processes accepting on the above port that received connections from this client.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Processes accepting on the above port that received connections from this client.",
        SerializedName = @"processes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessReference[] Process { get; set; }

    }
    /// Resource properties.
    internal partial interface IClientGroupMemberPropertiesInternal

    {
        /// <summary>IP address.</summary>
        string IPAddress { get; set; }
        /// <summary>Machine hosting the port.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Machine { get; set; }
        /// <summary>Resource URI.</summary>
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        string MachineName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string MachineType { get; set; }
        /// <summary>Port into which this client connected</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference Port { get; set; }
        /// <summary>Resource URI.</summary>
        string PortId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string PortKind { get; set; }
        /// <summary>Resource name.</summary>
        string PortName { get; set; }
        /// <summary>Port number.</summary>
        int? PortNumber { get; set; }
        /// <summary>IP address of the port.</summary>
        string PortPropertiesIPAddress { get; set; }
        /// <summary>Resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceProperties PortProperty { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string PortType { get; set; }
        /// <summary>
        /// Processes accepting on the above port that received connections from this client.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessReference[] Process { get; set; }

    }
}