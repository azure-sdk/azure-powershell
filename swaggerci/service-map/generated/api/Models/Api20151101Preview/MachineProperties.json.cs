// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Resource properties.</summary>
    public partial class MachineProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachineProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachineProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachineProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json ? new MachineProperties(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject into a new instance of <see cref="MachineProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal MachineProperties(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_timezone = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("timezone"), out var __jsonTimezone) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.Timezone.FromJson(__jsonTimezone) : Timezone;}
            {_agent = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("agent"), out var __jsonAgent) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AgentConfiguration.FromJson(__jsonAgent) : Agent;}
            {_resource = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("resources"), out var __jsonResources) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.MachineResourcesConfiguration.FromJson(__jsonResources) : Resource;}
            {_networking = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("networking"), out var __jsonNetworking) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.NetworkConfiguration.FromJson(__jsonNetworking) : Networking;}
            {_operatingSystem = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("operatingSystem"), out var __jsonOperatingSystem) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.OperatingSystemConfiguration.FromJson(__jsonOperatingSystem) : OperatingSystem;}
            {_virtualMachine = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("virtualMachine"), out var __jsonVirtualMachine) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.VirtualMachineConfiguration.FromJson(__jsonVirtualMachine) : VirtualMachine;}
            {_hypervisor = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("hypervisor"), out var __jsonHypervisor) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.HypervisorConfiguration.FromJson(__jsonHypervisor) : Hypervisor;}
            {_hosting = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject>("hosting"), out var __jsonHosting) ? Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.HostingConfiguration.FromJson(__jsonHosting) : Hosting;}
            {_timestamp = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("timestamp"), out var __jsonTimestamp) ? global::System.DateTime.TryParse((string)__jsonTimestamp, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonTimestampValue) ? __jsonTimestampValue : Timestamp : Timestamp;}
            {_monitoringState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("monitoringState"), out var __jsonMonitoringState) ? (string)__jsonMonitoringState : (string)MonitoringState;}
            {_virtualizationState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("virtualizationState"), out var __jsonVirtualizationState) ? (string)__jsonVirtualizationState : (string)VirtualizationState;}
            {_displayName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("displayName"), out var __jsonDisplayName) ? (string)__jsonDisplayName : (string)DisplayName;}
            {_computerName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("computerName"), out var __jsonComputerName) ? (string)__jsonComputerName : (string)ComputerName;}
            {_fullyQualifiedDomainName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("fullyQualifiedDomainName"), out var __jsonFullyQualifiedDomainName) ? (string)__jsonFullyQualifiedDomainName : (string)FullyQualifiedDomainName;}
            {_bootTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("bootTime"), out var __jsonBootTime) ? global::System.DateTime.TryParse((string)__jsonBootTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonBootTimeValue) ? __jsonBootTimeValue : BootTime : BootTime;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="MachineProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="MachineProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._timezone ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._timezone.ToJson(null,serializationMode) : null, "timezone" ,container.Add );
            AddIf( null != this._agent ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._agent.ToJson(null,serializationMode) : null, "agent" ,container.Add );
            AddIf( null != this._resource ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._resource.ToJson(null,serializationMode) : null, "resources" ,container.Add );
            AddIf( null != this._networking ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._networking.ToJson(null,serializationMode) : null, "networking" ,container.Add );
            AddIf( null != this._operatingSystem ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._operatingSystem.ToJson(null,serializationMode) : null, "operatingSystem" ,container.Add );
            AddIf( null != this._virtualMachine ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._virtualMachine.ToJson(null,serializationMode) : null, "virtualMachine" ,container.Add );
            AddIf( null != this._hypervisor ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._hypervisor.ToJson(null,serializationMode) : null, "hypervisor" ,container.Add );
            AddIf( null != this._hosting ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) this._hosting.ToJson(null,serializationMode) : null, "hosting" ,container.Add );
            AddIf( null != this._timestamp ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._timestamp?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "timestamp" ,container.Add );
            AddIf( null != (((object)this._monitoringState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._monitoringState.ToString()) : null, "monitoringState" ,container.Add );
            AddIf( null != (((object)this._virtualizationState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._virtualizationState.ToString()) : null, "virtualizationState" ,container.Add );
            AddIf( null != (((object)this._displayName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._displayName.ToString()) : null, "displayName" ,container.Add );
            AddIf( null != (((object)this._computerName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._computerName.ToString()) : null, "computerName" ,container.Add );
            AddIf( null != (((object)this._fullyQualifiedDomainName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._fullyQualifiedDomainName.ToString()) : null, "fullyQualifiedDomainName" ,container.Add );
            AddIf( null != this._bootTime ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._bootTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "bootTime" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}