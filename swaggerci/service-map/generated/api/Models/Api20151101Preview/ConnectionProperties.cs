// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Properties for a connection resource.</summary>
    public partial class ConnectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipProperties __relationshipProperties = new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.RelationshipProperties();

        /// <summary>Destination resource of the relationship.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Destination { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).Destination; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).Destination = value ; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string DestinationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationId = value ; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string DestinationKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationKind = value ; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string DestinationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string DestinationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationType; }

        /// <summary>Relationship end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public global::System.DateTime? EndTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).EndTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).EndTime = value ?? default(global::System.DateTime); }

        /// <summary>Backing field for <see cref="FailureState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? _failureState;

        /// <summary>
        /// Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? FailureState { get => this._failureState; set => this._failureState = value; }

        /// <summary>IP address of the port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).IPAddress; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineId = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineKind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineType; }

        /// <summary>Internal Acessors for IPAddress</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.IPAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).IPAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).IPAddress = value; }

        /// <summary>Internal Acessors for Machine</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.Machine { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).Machine; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).Machine = value; }

        /// <summary>Internal Acessors for MachineName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.MachineName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineName = value; }

        /// <summary>Internal Acessors for MachineType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.MachineType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).MachineType = value; }

        /// <summary>Internal Acessors for ServerPort</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.ServerPort { get => (this._serverPort = this._serverPort ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.PortReference()); set { {_serverPort = value;} } }

        /// <summary>Internal Acessors for ServerPortName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.ServerPortName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Name = value; }

        /// <summary>Internal Acessors for ServerPortProperty</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceProperties Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.ServerPortProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).Property; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).Property = value; }

        /// <summary>Internal Acessors for ServerPortType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnectionPropertiesInternal.ServerPortType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Type = value; }

        /// <summary>Internal Acessors for DestinationName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal.DestinationName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationName = value; }

        /// <summary>Internal Acessors for DestinationType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal.DestinationType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).DestinationType = value; }

        /// <summary>Internal Acessors for SourceName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal.SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceName = value; }

        /// <summary>Internal Acessors for SourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal.SourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceType = value; }

        /// <summary>Port number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public int? PortNumber { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).PortNumber; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceInternal)ServerPort).PortNumber = value ?? default(int); }

        /// <summary>Backing field for <see cref="ServerPort" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference _serverPort;

        /// <summary>Reference to the server port via which this connection has been established.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference ServerPort { get => (this._serverPort = this._serverPort ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.PortReference()); set => this._serverPort = value; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Id = value ?? null; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Kind = value ?? null; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Name; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServerPortType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReferenceInternal)ServerPort).Type; }

        /// <summary>Source resource of the relationship.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).Source = value ; }

        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string SourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceId = value ; }

        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string SourceKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceKind = value ; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceName; }

        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string SourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).SourceType; }

        /// <summary>Relationship start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public global::System.DateTime? StartTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).StartTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal)__relationshipProperties).StartTime = value ?? default(global::System.DateTime); }

        /// <summary>Creates an new <see cref="ConnectionProperties" /> instance.</summary>
        public ConnectionProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__relationshipProperties), __relationshipProperties);
            await eventListener.AssertObjectIsValid(nameof(__relationshipProperties), __relationshipProperties);
        }
    }
    /// Properties for a connection resource.
    public partial interface IConnectionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipProperties
    {
        /// <summary>
        /// Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.",
        SerializedName = @"failureState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? FailureState { get; set; }
        /// <summary>IP address of the port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"IP address of the port.",
        SerializedName = @"ipAddress",
        PossibleTypes = new [] { typeof(string) })]
        string IPAddress { get;  }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string MachineName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string MachineType { get;  }
        /// <summary>Port number.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port number.",
        SerializedName = @"portNumber",
        PossibleTypes = new [] { typeof(int) })]
        int? PortNumber { get; set; }
        /// <summary>Resource URI.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource URI.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the sub-class of the reference.",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortKind { get; set; }
        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortName { get;  }
        /// <summary>Resource type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource type qualifier.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ServerPortType { get;  }

    }
    /// Properties for a connection resource.
    internal partial interface IConnectionPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IRelationshipPropertiesInternal
    {
        /// <summary>
        /// Specifies whether there are only successful, failed or a mixture of both connections represented by this resource.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.ConnectionFailureState? FailureState { get; set; }
        /// <summary>IP address of the port.</summary>
        string IPAddress { get; set; }
        /// <summary>Machine hosting the port.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IResourceReference Machine { get; set; }
        /// <summary>Resource URI.</summary>
        string MachineId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string MachineKind { get; set; }
        /// <summary>Resource name.</summary>
        string MachineName { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string MachineType { get; set; }
        /// <summary>Port number.</summary>
        int? PortNumber { get; set; }
        /// <summary>Reference to the server port via which this connection has been established.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReference ServerPort { get; set; }
        /// <summary>Resource URI.</summary>
        string ServerPortId { get; set; }
        /// <summary>Specifies the sub-class of the reference.</summary>
        string ServerPortKind { get; set; }
        /// <summary>Resource name.</summary>
        string ServerPortName { get; set; }
        /// <summary>Resource properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPortReferenceProperties ServerPortProperty { get; set; }
        /// <summary>Resource type qualifier.</summary>
        string ServerPortType { get; set; }

    }
}