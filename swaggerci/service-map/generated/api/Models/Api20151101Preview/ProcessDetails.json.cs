// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Describes process metadata.</summary>
    public partial class ProcessDetails
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json erialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <see "returnNow" /> output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessDetails FromJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json ? new ProcessDetails(json) : null;
        }

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject into a new instance of <see cref="ProcessDetails" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal ProcessDetails(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_persistentKey = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("persistentKey"), out var __jsonPersistentKey) ? (string)__jsonPersistentKey : (string)PersistentKey;}
            {_poolId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNumber>("poolId"), out var __jsonPoolId) ? (int?)__jsonPoolId : PoolId;}
            {_firstPid = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNumber>("firstPid"), out var __jsonFirstPid) ? (int?)__jsonFirstPid : FirstPid;}
            {_description = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("description"), out var __jsonDescription) ? (string)__jsonDescription : (string)Description;}
            {_companyName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("companyName"), out var __jsonCompanyName) ? (string)__jsonCompanyName : (string)CompanyName;}
            {_internalName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("internalName"), out var __jsonInternalName) ? (string)__jsonInternalName : (string)InternalName;}
            {_productName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("productName"), out var __jsonProductName) ? (string)__jsonProductName : (string)ProductName;}
            {_productVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("productVersion"), out var __jsonProductVersion) ? (string)__jsonProductVersion : (string)ProductVersion;}
            {_fileVersion = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("fileVersion"), out var __jsonFileVersion) ? (string)__jsonFileVersion : (string)FileVersion;}
            {_commandLine = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("commandLine"), out var __jsonCommandLine) ? (string)__jsonCommandLine : (string)CommandLine;}
            {_executablePath = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("executablePath"), out var __jsonExecutablePath) ? (string)__jsonExecutablePath : (string)ExecutablePath;}
            {_workingDirectory = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("workingDirectory"), out var __jsonWorkingDirectory) ? (string)__jsonWorkingDirectory : (string)WorkingDirectory;}
            {_service = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonArray>("services"), out var __jsonServices) ? If( __jsonServices as Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonArray, out var __v) ? new global::System.Func<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostedService[]>(()=> global::System.Linq.Enumerable.ToArray(global::System.Linq.Enumerable.Select(__v, (__u)=>(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcessHostedService) (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ProcessHostedService.FromJson(__u) )) ))() : null : Service;}
            {_zoneName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString>("zoneName"), out var __jsonZoneName) ? (string)__jsonZoneName : (string)ZoneName;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Serializes this instance of <see cref="ProcessDetails" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="ProcessDetails" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != (((object)this._persistentKey)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._persistentKey.ToString()) : null, "persistentKey" ,container.Add );
            AddIf( null != this._poolId ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNumber((int)this._poolId) : null, "poolId" ,container.Add );
            AddIf( null != this._firstPid ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNumber((int)this._firstPid) : null, "firstPid" ,container.Add );
            AddIf( null != (((object)this._description)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._description.ToString()) : null, "description" ,container.Add );
            AddIf( null != (((object)this._companyName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._companyName.ToString()) : null, "companyName" ,container.Add );
            AddIf( null != (((object)this._internalName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._internalName.ToString()) : null, "internalName" ,container.Add );
            AddIf( null != (((object)this._productName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._productName.ToString()) : null, "productName" ,container.Add );
            AddIf( null != (((object)this._productVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._productVersion.ToString()) : null, "productVersion" ,container.Add );
            AddIf( null != (((object)this._fileVersion)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._fileVersion.ToString()) : null, "fileVersion" ,container.Add );
            AddIf( null != (((object)this._commandLine)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._commandLine.ToString()) : null, "commandLine" ,container.Add );
            AddIf( null != (((object)this._executablePath)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._executablePath.ToString()) : null, "executablePath" ,container.Add );
            AddIf( null != (((object)this._workingDirectory)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._workingDirectory.ToString()) : null, "workingDirectory" ,container.Add );
            if (null != this._service)
            {
                var __w = new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.XNodeArray();
                foreach( var __x in this._service )
                {
                    AddIf(__x?.ToJson(null, serializationMode) ,__w.Add);
                }
                container.Add("services",__w);
            }
            AddIf( null != (((object)this._zoneName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Json.JsonString(this._zoneName.ToString()) : null, "zoneName" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}