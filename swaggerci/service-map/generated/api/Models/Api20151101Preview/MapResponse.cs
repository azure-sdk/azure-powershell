// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Specified the contents of a map response.</summary>
    public partial class MapResponse :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapResponse,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapResponseInternal
    {

        /// <summary>Processes accepting on a port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAcceptor[] EdgeAcceptor { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).EdgeAcceptor; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).EdgeAcceptor = value ?? null /* arrayOf */; }

        /// <summary>Network connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnection[] EdgeConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).EdgeConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).EdgeConnection = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="EndTime" /> property.</summary>
        private global::System.DateTime _endTime;

        /// <summary>Map interval end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public global::System.DateTime EndTime { get => this._endTime; set => this._endTime = value; }

        /// <summary>Backing field for <see cref="Map" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMap _map;

        /// <summary>The generated map.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMap Map { get => (this._map = this._map ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.Map()); set => this._map = value; }

        /// <summary>Internal Acessors for Map</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMap Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapResponseInternal.Map { get => (this._map = this._map ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.Map()); set { {_map = value;} } }

        /// <summary>Internal Acessors for MapEdge</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapEdges Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapResponseInternal.MapEdge { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).Edge; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).Edge = value; }

        /// <summary>Internal Acessors for MapNode</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapNodes Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapResponseInternal.MapNode { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).Node; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).Node = value; }

        /// <summary>Client Group resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroup[] NodeClientGroup { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodeClientGroup; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodeClientGroup = value ?? null /* arrayOf */; }

        /// <summary>Machine resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachine[] NodeMachine { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodeMachine; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodeMachine = value ?? null /* arrayOf */; }

        /// <summary>Port resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPort[] NodePort { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodePort; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodePort = value ?? null /* arrayOf */; }

        /// <summary>Process resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcess[] NodeProcess { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodeProcess; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapInternal)Map).NodeProcess = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="StartTime" /> property.</summary>
        private global::System.DateTime _startTime;

        /// <summary>Map interval start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public global::System.DateTime StartTime { get => this._startTime; set => this._startTime = value; }

        /// <summary>Creates an new <see cref="MapResponse" /> instance.</summary>
        public MapResponse()
        {

        }
    }
    /// Specified the contents of a map response.
    public partial interface IMapResponse :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable
    {
        /// <summary>Processes accepting on a port.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Processes accepting on a port.",
        SerializedName = @"acceptors",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAcceptor) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAcceptor[] EdgeAcceptor { get; set; }
        /// <summary>Network connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Network connections.",
        SerializedName = @"connections",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnection) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnection[] EdgeConnection { get; set; }
        /// <summary>Map interval end time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Map interval end time.",
        SerializedName = @"endTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime EndTime { get; set; }
        /// <summary>Client Group resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Client Group resources.",
        SerializedName = @"clientGroups",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroup) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroup[] NodeClientGroup { get; set; }
        /// <summary>Machine resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Machine resources.",
        SerializedName = @"machines",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachine) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachine[] NodeMachine { get; set; }
        /// <summary>Port resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Port resources.",
        SerializedName = @"ports",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPort) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPort[] NodePort { get; set; }
        /// <summary>Process resources.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Process resources.",
        SerializedName = @"processes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcess) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcess[] NodeProcess { get; set; }
        /// <summary>Map interval start time.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Map interval start time.",
        SerializedName = @"startTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartTime { get; set; }

    }
    /// Specified the contents of a map response.
    internal partial interface IMapResponseInternal

    {
        /// <summary>Processes accepting on a port.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAcceptor[] EdgeAcceptor { get; set; }
        /// <summary>Network connections.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IConnection[] EdgeConnection { get; set; }
        /// <summary>Map interval end time.</summary>
        global::System.DateTime EndTime { get; set; }
        /// <summary>The generated map.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMap Map { get; set; }
        /// <summary>The edges (relationships) of a map.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapEdges MapEdge { get; set; }
        /// <summary>The nodes (entities) of a map.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMapNodes MapNode { get; set; }
        /// <summary>Client Group resources.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IClientGroup[] NodeClientGroup { get; set; }
        /// <summary>Machine resources.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IMachine[] NodeMachine { get; set; }
        /// <summary>Port resources.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IPort[] NodePort { get; set; }
        /// <summary>Process resources.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IProcess[] NodeProcess { get; set; }
        /// <summary>Map interval start time.</summary>
        global::System.DateTime StartTime { get; set; }

    }
}