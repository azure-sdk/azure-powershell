// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Provides information about how a machine is hosted in Azure</summary>
    public partial class AzureHostingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureHostingConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureHostingConfigurationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfiguration"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfiguration __hostingConfiguration = new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.HostingConfiguration();

        /// <summary>Backing field for <see cref="CloudService" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfiguration _cloudService;

        /// <summary>Contains information about machines hosted as an Azure Cloud Service</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfiguration CloudService { get => (this._cloudService = this._cloudService ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AzureCloudServiceConfiguration()); set => this._cloudService = value; }

        /// <summary>Cloud Service deployment identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string CloudServiceDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).Deployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).Deployment = value ?? null; }

        /// <summary>Cloud Service instance identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string CloudServiceInstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).InstanceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).InstanceId = value ?? null; }

        /// <summary>Cloud Service name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string CloudServiceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).Name = value ?? null; }

        /// <summary>Cloud Service role name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string CloudServiceRoleName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).RoleName; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).RoleName = value ?? null; }

        /// <summary>Used to specify type of an Azure Cloud Service role</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.AzureCloudServiceRoleType? CloudServiceRoleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).RoleType; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfigurationInternal)CloudService).RoleType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.AzureCloudServiceRoleType)""); }

        /// <summary>Backing field for <see cref="FaultDomain" /> property.</summary>
        private string _faultDomain;

        /// <summary>Fault domain of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string FaultDomain { get => this._faultDomain; set => this._faultDomain = value; }

        /// <summary>Backing field for <see cref="Image" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfiguration _image;

        /// <summary>Image of the machine.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfiguration Image { get => (this._image = this._image ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ImageConfiguration()); set => this._image = value; }

        /// <summary>Offering of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ImageOffering { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Offering; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Offering = value ?? null; }

        /// <summary>Publisher of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ImagePublisher { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Publisher; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Publisher = value ?? null; }

        /// <summary>SKU of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ImageSku { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Sku = value ?? null; }

        /// <summary>Version of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ImageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfigurationInternal)Image).Version = value ?? null; }

        /// <summary>Additional hosting configuration type qualifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal)__hostingConfiguration).Kind; }

        /// <summary>Backing field for <see cref="Location" /> property.</summary>
        private string _location;

        /// <summary>Geographical location of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string Location { get => this._location; set => this._location = value; }

        /// <summary>Internal Acessors for CloudService</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfiguration Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureHostingConfigurationInternal.CloudService { get => (this._cloudService = this._cloudService ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AzureCloudServiceConfiguration()); set { {_cloudService = value;} } }

        /// <summary>Internal Acessors for Image</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfiguration Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureHostingConfigurationInternal.Image { get => (this._image = this._image ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.ImageConfiguration()); set { {_image = value;} } }

        /// <summary>Internal Acessors for ServiceFabricCluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfiguration Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureHostingConfigurationInternal.ServiceFabricCluster { get => (this._serviceFabricCluster = this._serviceFabricCluster ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AzureServiceFabricClusterConfiguration()); set { {_serviceFabricCluster = value;} } }

        /// <summary>Internal Acessors for VMScaleSet</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfiguration Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureHostingConfigurationInternal.VMScaleSet { get => (this._vMScaleSet = this._vMScaleSet ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AzureVMScaleSetConfiguration()); set { {_vMScaleSet = value;} } }

        /// <summary>Internal Acessors for Kind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal.Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal)__hostingConfiguration).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal)__hostingConfiguration).Kind = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Machine name according to the hosting provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>The hosting provider of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inherited)]
        public string Provider { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal)__hostingConfiguration).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal)__hostingConfiguration).Provider = value ?? null; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>Resource group name within the specified subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; set => this._resourceGroup = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>Unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="ServiceFabricCluster" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfiguration _serviceFabricCluster;

        /// <summary>Contains information about machines that belong an Azure Service Fabric Cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfiguration ServiceFabricCluster { get => (this._serviceFabricCluster = this._serviceFabricCluster ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AzureServiceFabricClusterConfiguration()); set => this._serviceFabricCluster = value; }

        /// <summary>Service Fabric cluster identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServiceFabricClusterId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfigurationInternal)ServiceFabricCluster).ClusterId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfigurationInternal)ServiceFabricCluster).ClusterId = value ?? null; }

        /// <summary>Service Fabric cluster name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string ServiceFabricClusterName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfigurationInternal)ServiceFabricCluster).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfigurationInternal)ServiceFabricCluster).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Size" /> property.</summary>
        private string _size;

        /// <summary>Size of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string Size { get => this._size; set => this._size = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>Subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="UpdateDomain" /> property.</summary>
        private string _updateDomain;

        /// <summary>Update domain of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string UpdateDomain { get => this._updateDomain; set => this._updateDomain = value; }

        /// <summary>Backing field for <see cref="VMId" /> property.</summary>
        private string _vMId;

        /// <summary>Virtual Machine ID (unique identifier).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string VMId { get => this._vMId; set => this._vMId = value; }

        /// <summary>Backing field for <see cref="VMScaleSet" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfiguration _vMScaleSet;

        /// <summary>
        /// Contains information about machines hosted as an Azure Virtual Machine Scale Set
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfiguration VMScaleSet { get => (this._vMScaleSet = this._vMScaleSet ?? new Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.AzureVMScaleSetConfiguration()); set => this._vMScaleSet = value; }

        /// <summary>Virtual Machine Scale Set deployment identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string VMScaleSetDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).Deployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).Deployment = value ?? null; }

        /// <summary>Virtual Machine Scale Set instance identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string VMScaleSetInstanceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).InstanceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).InstanceId = value ?? null; }

        /// <summary>Virtual Machine Scale Set name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string VMScaleSetName { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).Name = value ?? null; }

        /// <summary>Unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Inlined)]
        public string VMScaleSetResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfigurationInternal)VMScaleSet).ResourceId = value ?? null; }

        /// <summary>Creates an new <see cref="AzureHostingConfiguration" /> instance.</summary>
        public AzureHostingConfiguration()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__hostingConfiguration), __hostingConfiguration);
            await eventListener.AssertObjectIsValid(nameof(__hostingConfiguration), __hostingConfiguration);
        }
    }
    /// Provides information about how a machine is hosted in Azure
    public partial interface IAzureHostingConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfiguration
    {
        /// <summary>Cloud Service deployment identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Service deployment identifier",
        SerializedName = @"deployment",
        PossibleTypes = new [] { typeof(string) })]
        string CloudServiceDeployment { get; set; }
        /// <summary>Cloud Service instance identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Service instance identifier",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string CloudServiceInstanceId { get; set; }
        /// <summary>Cloud Service name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Service name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string CloudServiceName { get; set; }
        /// <summary>Cloud Service role name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cloud Service role name",
        SerializedName = @"roleName",
        PossibleTypes = new [] { typeof(string) })]
        string CloudServiceRoleName { get; set; }
        /// <summary>Used to specify type of an Azure Cloud Service role</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Used to specify type of an Azure Cloud Service role",
        SerializedName = @"roleType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.AzureCloudServiceRoleType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.AzureCloudServiceRoleType? CloudServiceRoleType { get; set; }
        /// <summary>Fault domain of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Fault domain of the VM.",
        SerializedName = @"faultDomain",
        PossibleTypes = new [] { typeof(string) })]
        string FaultDomain { get; set; }
        /// <summary>Offering of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Offering of the VM image.",
        SerializedName = @"offering",
        PossibleTypes = new [] { typeof(string) })]
        string ImageOffering { get; set; }
        /// <summary>Publisher of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Publisher of the VM image.",
        SerializedName = @"publisher",
        PossibleTypes = new [] { typeof(string) })]
        string ImagePublisher { get; set; }
        /// <summary>SKU of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"SKU of the VM image.",
        SerializedName = @"sku",
        PossibleTypes = new [] { typeof(string) })]
        string ImageSku { get; set; }
        /// <summary>Version of the VM image.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the VM image.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string ImageVersion { get; set; }
        /// <summary>Geographical location of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Geographical location of the VM.",
        SerializedName = @"location",
        PossibleTypes = new [] { typeof(string) })]
        string Location { get; set; }
        /// <summary>Machine name according to the hosting provider.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Machine name according to the hosting provider.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Resource group name within the specified subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource group name within the specified subscription.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get; set; }
        /// <summary>Unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique identifier of the resource.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>Service Fabric cluster identifier.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Service Fabric cluster identifier.",
        SerializedName = @"clusterId",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceFabricClusterId { get; set; }
        /// <summary>Service Fabric cluster name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Service Fabric cluster name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string ServiceFabricClusterName { get; set; }
        /// <summary>Size of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Size of the VM.",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string Size { get; set; }
        /// <summary>Subscription ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subscription ID.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Update domain of the VM.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Update domain of the VM.",
        SerializedName = @"updateDomain",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateDomain { get; set; }
        /// <summary>Virtual Machine ID (unique identifier).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine ID (unique identifier).",
        SerializedName = @"vmId",
        PossibleTypes = new [] { typeof(string) })]
        string VMId { get; set; }
        /// <summary>Virtual Machine Scale Set deployment identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine Scale Set deployment identifier",
        SerializedName = @"deployment",
        PossibleTypes = new [] { typeof(string) })]
        string VMScaleSetDeployment { get; set; }
        /// <summary>Virtual Machine Scale Set instance identifier</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine Scale Set instance identifier",
        SerializedName = @"instanceId",
        PossibleTypes = new [] { typeof(string) })]
        string VMScaleSetInstanceId { get; set; }
        /// <summary>Virtual Machine Scale Set name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Virtual Machine Scale Set name",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string VMScaleSetName { get; set; }
        /// <summary>Unique identifier of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Unique identifier of the resource.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string VMScaleSetResourceId { get; set; }

    }
    /// Provides information about how a machine is hosted in Azure
    internal partial interface IAzureHostingConfigurationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHostingConfigurationInternal
    {
        /// <summary>Contains information about machines hosted as an Azure Cloud Service</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureCloudServiceConfiguration CloudService { get; set; }
        /// <summary>Cloud Service deployment identifier</summary>
        string CloudServiceDeployment { get; set; }
        /// <summary>Cloud Service instance identifier</summary>
        string CloudServiceInstanceId { get; set; }
        /// <summary>Cloud Service name</summary>
        string CloudServiceName { get; set; }
        /// <summary>Cloud Service role name</summary>
        string CloudServiceRoleName { get; set; }
        /// <summary>Used to specify type of an Azure Cloud Service role</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.AzureCloudServiceRoleType? CloudServiceRoleType { get; set; }
        /// <summary>Fault domain of the VM.</summary>
        string FaultDomain { get; set; }
        /// <summary>Image of the machine.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IImageConfiguration Image { get; set; }
        /// <summary>Offering of the VM image.</summary>
        string ImageOffering { get; set; }
        /// <summary>Publisher of the VM image.</summary>
        string ImagePublisher { get; set; }
        /// <summary>SKU of the VM image.</summary>
        string ImageSku { get; set; }
        /// <summary>Version of the VM image.</summary>
        string ImageVersion { get; set; }
        /// <summary>Geographical location of the VM.</summary>
        string Location { get; set; }
        /// <summary>Machine name according to the hosting provider.</summary>
        string Name { get; set; }
        /// <summary>Resource group name within the specified subscription.</summary>
        string ResourceGroup { get; set; }
        /// <summary>Unique identifier of the resource.</summary>
        string ResourceId { get; set; }
        /// <summary>Contains information about machines that belong an Azure Service Fabric Cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureServiceFabricClusterConfiguration ServiceFabricCluster { get; set; }
        /// <summary>Service Fabric cluster identifier.</summary>
        string ServiceFabricClusterId { get; set; }
        /// <summary>Service Fabric cluster name.</summary>
        string ServiceFabricClusterName { get; set; }
        /// <summary>Size of the VM.</summary>
        string Size { get; set; }
        /// <summary>Subscription ID.</summary>
        string SubscriptionId { get; set; }
        /// <summary>Update domain of the VM.</summary>
        string UpdateDomain { get; set; }
        /// <summary>Virtual Machine ID (unique identifier).</summary>
        string VMId { get; set; }
        /// <summary>
        /// Contains information about machines hosted as an Azure Virtual Machine Scale Set
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IAzureVMScaleSetConfiguration VMScaleSet { get; set; }
        /// <summary>Virtual Machine Scale Set deployment identifier</summary>
        string VMScaleSetDeployment { get; set; }
        /// <summary>Virtual Machine Scale Set instance identifier</summary>
        string VMScaleSetInstanceId { get; set; }
        /// <summary>Virtual Machine Scale Set name</summary>
        string VMScaleSetName { get; set; }
        /// <summary>Unique identifier of the resource.</summary>
        string VMScaleSetResourceId { get; set; }

    }
}