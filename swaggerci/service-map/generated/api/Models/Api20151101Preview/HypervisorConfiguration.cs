// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Extensions;

    /// <summary>Describes the hypervisor configuration of a machine.</summary>
    public partial class HypervisorConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHypervisorConfiguration,
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Models.Api20151101Preview.IHypervisorConfigurationInternal
    {

        /// <summary>Backing field for <see cref="HypervisorType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.HypervisorType? _hypervisorType;

        /// <summary>
        /// Specifies the virtualization technology used by the hypervisor (hyperv, vmware, etc.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.HypervisorType? HypervisorType { get => this._hypervisorType; set => this._hypervisorType = value; }

        /// <summary>Backing field for <see cref="NativeHostMachineId" /> property.</summary>
        private string _nativeHostMachineId;

        /// <summary>
        /// The unique identifier of the hypervisor machine as reported by the underlying virtualization system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Origin(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.PropertyOrigin.Owned)]
        public string NativeHostMachineId { get => this._nativeHostMachineId; set => this._nativeHostMachineId = value; }

        /// <summary>Creates an new <see cref="HypervisorConfiguration" /> instance.</summary>
        public HypervisorConfiguration()
        {

        }
    }
    /// Describes the hypervisor configuration of a machine.
    public partial interface IHypervisorConfiguration :
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the virtualization technology used by the hypervisor (hyperv, vmware, etc.)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the virtualization technology used by the hypervisor (hyperv, vmware, etc.)",
        SerializedName = @"hypervisorType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.HypervisorType) })]
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.HypervisorType? HypervisorType { get; set; }
        /// <summary>
        /// The unique identifier of the hypervisor machine as reported by the underlying virtualization system.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The unique identifier of the hypervisor machine as reported by the underlying virtualization system.",
        SerializedName = @"nativeHostMachineId",
        PossibleTypes = new [] { typeof(string) })]
        string NativeHostMachineId { get; set; }

    }
    /// Describes the hypervisor configuration of a machine.
    internal partial interface IHypervisorConfigurationInternal

    {
        /// <summary>
        /// Specifies the virtualization technology used by the hypervisor (hyperv, vmware, etc.)
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.ServiceMap.Support.HypervisorType? HypervisorType { get; set; }
        /// <summary>
        /// The unique identifier of the hypervisor machine as reported by the underlying virtualization system.
        /// </summary>
        string NativeHostMachineId { get; set; }

    }
}