// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Extensions;

    /// <summary>Session host Managements of HostPool.</summary>
    public partial class SessionHostManagementPatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostManagementPatchProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostManagementPatchPropertiesInternal
    {

        /// <summary>Backing field for <see cref="FailedSessionHostCleanupPolicy" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.FailedSessionHostCleanupPolicyShc? _failedSessionHostCleanupPolicy;

        /// <summary>
        /// The policy that should be applied when the Session Host provisioning operation fails.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.FailedSessionHostCleanupPolicyShc? FailedSessionHostCleanupPolicy { get => this._failedSessionHostCleanupPolicy; set => this._failedSessionHostCleanupPolicy = value; }

        /// <summary>Internal Acessors for Provisioning</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchProperties Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostManagementPatchPropertiesInternal.Provisioning { get => (this._provisioning = this._provisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.SessionHostProvisioningConfigurationPatchProperties()); set { {_provisioning = value;} } }

        /// <summary>Internal Acessors for Update</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchProperties Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostManagementPatchPropertiesInternal.Update { get => (this._update = this._update ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.HostPoolUpdateConfigurationPatchProperties()); set { {_update = value;} } }

        /// <summary>Backing field for <see cref="Provisioning" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchProperties _provisioning;

        /// <summary>Parameters that apply when session hosts are provisioned.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchProperties Provisioning { get => (this._provisioning = this._provisioning ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.SessionHostProvisioningConfigurationPatchProperties()); set => this._provisioning = value; }

        /// <summary>
        /// Policy on whether a Canary VM should be provisioned during a session host provisioning operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.CanaryPolicy? ProvisioningCanaryPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchPropertiesInternal)Provisioning).CanaryPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchPropertiesInternal)Provisioning).CanaryPolicy = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.CanaryPolicy)""); }

        /// <summary>the number of session hosts to exist in the Host Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? ProvisioningInstanceCount { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchPropertiesInternal)Provisioning).InstanceCount; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchPropertiesInternal)Provisioning).InstanceCount = value ?? default(int); }

        /// <summary>Whether the session host should be set in drain mode following provisioning.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public bool? ProvisioningSetDrainMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchPropertiesInternal)Provisioning).SetDrainMode; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchPropertiesInternal)Provisioning).SetDrainMode = value ?? default(bool); }

        /// <summary>Backing field for <see cref="ScheduledDateTimeZone" /> property.</summary>
        private string _scheduledDateTimeZone;

        /// <summary>
        /// Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        /// Must be set if useLocalTime is true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        public string ScheduledDateTimeZone { get => this._scheduledDateTimeZone; set => this._scheduledDateTimeZone = value; }

        /// <summary>Backing field for <see cref="Update" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchProperties _update;

        /// <summary>Parameters for a hostpool update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchProperties Update { get => (this._update = this._update ?? new Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.HostPoolUpdateConfigurationPatchProperties()); set => this._update = value; }

        /// <summary>Whether not to save original disk. False by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public bool? UpdateDeleteOriginalVM { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).DeleteOriginalVM; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).DeleteOriginalVM = value ?? default(bool); }

        /// <summary>Grace period before logging off users in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? UpdateLogOffDelayMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).LogOffDelayMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).LogOffDelayMinute = value ?? default(int); }

        /// <summary>Log off message sent to user for logoff.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public string UpdateLogOffMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).LogOffMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).LogOffMessage = value ?? null; }

        /// <summary>The maximum number of virtual machines to be removed during hostpool update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Origin(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.PropertyOrigin.Inlined)]
        public int? UpdateMaxVmsRemoved { get => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).MaxVmsRemoved; set => ((Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchPropertiesInternal)Update).MaxVmsRemoved = value ?? default(int); }

        /// <summary>Creates an new <see cref="SessionHostManagementPatchProperties" /> instance.</summary>
        public SessionHostManagementPatchProperties()
        {

        }
    }
    /// Session host Managements of HostPool.
    public partial interface ISessionHostManagementPatchProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The policy that should be applied when the Session Host provisioning operation fails.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy that should be applied when the Session Host provisioning operation fails.",
        SerializedName = @"failedSessionHostCleanupPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.FailedSessionHostCleanupPolicyShc) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.FailedSessionHostCleanupPolicyShc? FailedSessionHostCleanupPolicy { get; set; }
        /// <summary>
        /// Policy on whether a Canary VM should be provisioned during a session host provisioning operation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Policy on whether a Canary VM should be provisioned during a session host provisioning operation.",
        SerializedName = @"canaryPolicy",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.CanaryPolicy) })]
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.CanaryPolicy? ProvisioningCanaryPolicy { get; set; }
        /// <summary>the number of session hosts to exist in the Host Pool.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the number of session hosts to exist in the Host Pool.",
        SerializedName = @"instanceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ProvisioningInstanceCount { get; set; }
        /// <summary>Whether the session host should be set in drain mode following provisioning.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether the session host should be set in drain mode following provisioning.",
        SerializedName = @"setDrainMode",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ProvisioningSetDrainMode { get; set; }
        /// <summary>
        /// Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        /// Must be set if useLocalTime is true.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid. Must be set if useLocalTime is true.",
        SerializedName = @"scheduledDateTimeZone",
        PossibleTypes = new [] { typeof(string) })]
        string ScheduledDateTimeZone { get; set; }
        /// <summary>Whether not to save original disk. False by default.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Whether not to save original disk. False by default.",
        SerializedName = @"deleteOriginalVm",
        PossibleTypes = new [] { typeof(bool) })]
        bool? UpdateDeleteOriginalVM { get; set; }
        /// <summary>Grace period before logging off users in minutes.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Grace period before logging off users in minutes.",
        SerializedName = @"logOffDelayMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateLogOffDelayMinute { get; set; }
        /// <summary>Log off message sent to user for logoff.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Log off message sent to user for logoff.",
        SerializedName = @"logOffMessage",
        PossibleTypes = new [] { typeof(string) })]
        string UpdateLogOffMessage { get; set; }
        /// <summary>The maximum number of virtual machines to be removed during hostpool update.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum number of virtual machines to be removed during hostpool update.",
        SerializedName = @"maxVmsRemoved",
        PossibleTypes = new [] { typeof(int) })]
        int? UpdateMaxVmsRemoved { get; set; }

    }
    /// Session host Managements of HostPool.
    internal partial interface ISessionHostManagementPatchPropertiesInternal

    {
        /// <summary>
        /// The policy that should be applied when the Session Host provisioning operation fails.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.FailedSessionHostCleanupPolicyShc? FailedSessionHostCleanupPolicy { get; set; }
        /// <summary>Parameters that apply when session hosts are provisioned.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.ISessionHostProvisioningConfigurationPatchProperties Provisioning { get; set; }
        /// <summary>
        /// Policy on whether a Canary VM should be provisioned during a session host provisioning operation.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Support.CanaryPolicy? ProvisioningCanaryPolicy { get; set; }
        /// <summary>the number of session hosts to exist in the Host Pool.</summary>
        int? ProvisioningInstanceCount { get; set; }
        /// <summary>Whether the session host should be set in drain mode following provisioning.</summary>
        bool? ProvisioningSetDrainMode { get; set; }
        /// <summary>
        /// Time zone for sessionHostManagement operations as defined in https://docs.microsoft.com/dotnet/api/system.timezoneinfo.findsystemtimezonebyid.
        /// Must be set if useLocalTime is true.
        /// </summary>
        string ScheduledDateTimeZone { get; set; }
        /// <summary>Parameters for a hostpool update.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DesktopVirtualizationApi.Models.Api20250301Preview.IHostPoolUpdateConfigurationPatchProperties Update { get; set; }
        /// <summary>Whether not to save original disk. False by default.</summary>
        bool? UpdateDeleteOriginalVM { get; set; }
        /// <summary>Grace period before logging off users in minutes.</summary>
        int? UpdateLogOffDelayMinute { get; set; }
        /// <summary>Log off message sent to user for logoff.</summary>
        string UpdateLogOffMessage { get; set; }
        /// <summary>The maximum number of virtual machines to be removed during hostpool update.</summary>
        int? UpdateMaxVmsRemoved { get; set; }

    }
}