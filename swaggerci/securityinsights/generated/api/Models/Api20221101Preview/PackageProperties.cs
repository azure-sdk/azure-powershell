// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Describes package properties</summary>
    public partial class PackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageProperties,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal
    {

        /// <summary>Backing field for <see cref="Author" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthor _author;

        /// <summary>The author of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthor Author { get => (this._author = this._author ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataAuthor()); set => this._author = value; }

        /// <summary>Email of author contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthorEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthorInternal)Author).Email; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthorInternal)Author).Email = value ?? null; }

        /// <summary>Link for author/vendor page</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthorLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthorInternal)Author).Link; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthorInternal)Author).Link = value ?? null; }

        /// <summary>Name of the author. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthorInternal)Author).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthorInternal)Author).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Category" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategories _category;

        /// <summary>The categories of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategories Category { get => (this._category = this._category ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataCategories()); set => this._category = value; }

        /// <summary>domain for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] CategoryDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategoriesInternal)Category).Domain; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategoriesInternal)Category).Domain = value ?? null /* arrayOf */; }

        /// <summary>Industry verticals for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] CategoryVertical { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategoriesInternal)Category).Vertical; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategoriesInternal)Category).Vertical = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="ContentSchemaVersion" /> property.</summary>
        private string _contentSchemaVersion;

        /// <summary>The version of the content schema.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ContentSchemaVersion { get => this._contentSchemaVersion; set => this._contentSchemaVersion = value; }

        /// <summary>Backing field for <see cref="Dependency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies _dependency;

        /// <summary>The support tier of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies Dependency { get => (this._dependency = this._dependency ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataDependencies()); set => this._dependency = value; }

        /// <summary>Id of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DependencyContentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).ContentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).ContentId = value ?? null; }

        /// <summary>
        /// This is the list of dependencies we must fulfill, according to the AND/OR operator
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies[] DependencyCriterion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Criterion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Criterion = value ?? null /* arrayOf */; }

        /// <summary>Type of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind? DependencyKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind)""); }

        /// <summary>Name of the content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DependencyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Name = value ?? null; }

        /// <summary>Operator used for list of dependencies in criteria array.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator? DependencyOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Operator; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Operator = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator)""); }

        /// <summary>
        /// Version of the the content item we depend on. Can be blank, * or missing to indicate any version fulfills the dependency.
        /// If version does not match our defined numeric format then an exact match is required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DependencyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependenciesInternal)Dependency).Version = value ?? null; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>The description of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Backing field for <see cref="DisplayName" /> property.</summary>
        private string _displayName;

        /// <summary>The display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string DisplayName { get => this._displayName; set => this._displayName = value; }

        /// <summary>Backing field for <see cref="FirstPublishDate" /> property.</summary>
        private global::System.DateTime? _firstPublishDate;

        /// <summary>first publish date package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? FirstPublishDate { get => this._firstPublishDate; set => this._firstPublishDate = value; }

        /// <summary>Backing field for <see cref="Icon" /> property.</summary>
        private string _icon;

        /// <summary>the icon identifier. this id can later be fetched from the content metadata</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Icon { get => this._icon; set => this._icon = value; }

        /// <summary>Backing field for <see cref="InstalledVersion" /> property.</summary>
        private string _installedVersion;

        /// <summary>The version of the installed package, null or absent means not installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string InstalledVersion { get => this._installedVersion; set => this._installedVersion = value; }

        /// <summary>Backing field for <see cref="IsFeatured" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? _isFeatured;

        /// <summary>Flag indicates if this package is among the featured list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsFeatured { get => this._isFeatured; set => this._isFeatured = value; }

        /// <summary>Backing field for <see cref="IsNew" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? _isNew;

        /// <summary>Flag indicates if this is a newly published package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsNew { get => this._isNew; set => this._isNew = value; }

        /// <summary>Backing field for <see cref="IsPreview" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? _isPreview;

        /// <summary>Flag indicates if this package is in preview.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsPreview { get => this._isPreview; set => this._isPreview = value; }

        /// <summary>Backing field for <see cref="LastPublishDate" /> property.</summary>
        private global::System.DateTime? _lastPublishDate;

        /// <summary>last publish date for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? LastPublishDate { get => this._lastPublishDate; set => this._lastPublishDate = value; }

        /// <summary>Internal Acessors for Author</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthor Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal.Author { get => (this._author = this._author ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataAuthor()); set { {_author = value;} } }

        /// <summary>Internal Acessors for Category</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategories Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal.Category { get => (this._category = this._category ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataCategories()); set { {_category = value;} } }

        /// <summary>Internal Acessors for Dependency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal.Dependency { get => (this._dependency = this._dependency ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataDependencies()); set { {_dependency = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSource Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal.Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataSource()); set { {_source = value;} } }

        /// <summary>Internal Acessors for Support</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupport Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal.Support { get => (this._support = this._support ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataSupport()); set { {_support = value;} } }

        /// <summary>Backing field for <see cref="PackageId" /> property.</summary>
        private string _packageId;

        /// <summary>The package id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string PackageId { get => this._packageId; set => this._packageId = value; }

        /// <summary>Backing field for <see cref="PackageItem" /> property.</summary>
        private string _packageItem;

        /// <summary>The JSON string of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string PackageItem { get => this._packageItem; set => this._packageItem = value; }

        /// <summary>Backing field for <see cref="PackageKind" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind _packageKind;

        /// <summary>The package kind</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind PackageKind { get => this._packageKind; set => this._packageKind = value; }

        /// <summary>Backing field for <see cref="Provider" /> property.</summary>
        private string[] _provider;

        /// <summary>Providers for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] Provider { get => this._provider; set => this._provider = value; }

        /// <summary>Backing field for <see cref="PublisherDisplayName" /> property.</summary>
        private string _publisherDisplayName;

        /// <summary>The publisher display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string PublisherDisplayName { get => this._publisherDisplayName; set => this._publisherDisplayName = value; }

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>The metadata resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSource _source;

        /// <summary>The source of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSource Source { get => (this._source = this._source ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataSource()); set => this._source = value; }

        /// <summary>ID of the content source. The solution ID, workspace ID, etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSourceInternal)Source).SourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSourceInternal)Source).SourceId = value ?? null; }

        /// <summary>Source type of the content</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind? SourceKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSourceInternal)Source).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSourceInternal)Source).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind)""); }

        /// <summary>
        /// Name of the content source. The repo name, solution name, LA workspace name etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSourceInternal)Source).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSourceInternal)Source).Name = value ?? null; }

        /// <summary>Backing field for <see cref="Support" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupport _support;

        /// <summary>The support tier of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupport Support { get => (this._support = this._support ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.MetadataSupport()); set => this._support = value; }

        /// <summary>Email of support contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SupportEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Email; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Email = value ?? null; }

        /// <summary>Link for support help, like to support page to open a ticket etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SupportLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Link; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Link = value ?? null; }

        /// <summary>Name of the support contact. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SupportName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Name = value ?? null; }

        /// <summary>Type of support for content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier? SupportTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupportInternal)Support).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier)""); }

        /// <summary>Backing field for <see cref="ThreatAnalysisTactic" /> property.</summary>
        private string[] _threatAnalysisTactic;

        /// <summary>the tactics the resource covers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] ThreatAnalysisTactic { get => this._threatAnalysisTactic; set => this._threatAnalysisTactic = value; }

        /// <summary>Backing field for <see cref="ThreatAnalyticsTechnique" /> property.</summary>
        private string[] _threatAnalyticsTechnique;

        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string[] ThreatAnalyticsTechnique { get => this._threatAnalyticsTechnique; set => this._threatAnalyticsTechnique = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>the latest version number of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="PackageProperties" /> instance.</summary>
        public PackageProperties()
        {

        }
    }
    /// Describes package properties
    public partial interface IPackageProperties :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable
    {
        /// <summary>Email of author contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of author contact",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorEmail { get; set; }
        /// <summary>Link for author/vendor page</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Link for author/vendor page",
        SerializedName = @"link",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorLink { get; set; }
        /// <summary>Name of the author. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the author. Company or person.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorName { get; set; }
        /// <summary>domain for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"domain for the solution content item",
        SerializedName = @"domains",
        PossibleTypes = new [] { typeof(string) })]
        string[] CategoryDomain { get; set; }
        /// <summary>Industry verticals for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Industry verticals for the solution content item",
        SerializedName = @"verticals",
        PossibleTypes = new [] { typeof(string) })]
        string[] CategoryVertical { get; set; }
        /// <summary>The version of the content schema.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the content schema.",
        SerializedName = @"contentSchemaVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ContentSchemaVersion { get; set; }
        /// <summary>Id of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the content item we depend on",
        SerializedName = @"contentId",
        PossibleTypes = new [] { typeof(string) })]
        string DependencyContentId { get; set; }
        /// <summary>
        /// This is the list of dependencies we must fulfill, according to the AND/OR operator
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the list of dependencies we must fulfill, according to the AND/OR operator",
        SerializedName = @"criteria",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies[] DependencyCriterion { get; set; }
        /// <summary>Type of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the content item we depend on",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind? DependencyKind { get; set; }
        /// <summary>Name of the content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the content item",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DependencyName { get; set; }
        /// <summary>Operator used for list of dependencies in criteria array.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operator used for list of dependencies in criteria array.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator? DependencyOperator { get; set; }
        /// <summary>
        /// Version of the the content item we depend on. Can be blank, * or missing to indicate any version fulfills the dependency.
        /// If version does not match our defined numeric format then an exact match is required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string DependencyVersion { get; set; }
        /// <summary>The description of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the package",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The display name of the package",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>first publish date package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"first publish date package item",
        SerializedName = @"firstPublishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirstPublishDate { get; set; }
        /// <summary>the icon identifier. this id can later be fetched from the content metadata</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the icon identifier. this id can later be fetched from the content metadata",
        SerializedName = @"icon",
        PossibleTypes = new [] { typeof(string) })]
        string Icon { get; set; }
        /// <summary>The version of the installed package, null or absent means not installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the installed package, null or absent means not installed.",
        SerializedName = @"installedVersion",
        PossibleTypes = new [] { typeof(string) })]
        string InstalledVersion { get; set; }
        /// <summary>Flag indicates if this package is among the featured list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicates if this package is among the featured list.",
        SerializedName = @"isFeatured",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsFeatured { get; set; }
        /// <summary>Flag indicates if this is a newly published package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicates if this is a newly published package.",
        SerializedName = @"isNew",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsNew { get; set; }
        /// <summary>Flag indicates if this package is in preview.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicates if this package is in preview.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsPreview { get; set; }
        /// <summary>last publish date for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"last publish date for the package item",
        SerializedName = @"lastPublishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastPublishDate { get; set; }
        /// <summary>The package id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The package id",
        SerializedName = @"packageId",
        PossibleTypes = new [] { typeof(string) })]
        string PackageId { get; set; }
        /// <summary>The JSON string of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The JSON string of the package.",
        SerializedName = @"packageItems",
        PossibleTypes = new [] { typeof(string) })]
        string PackageItem { get; set; }
        /// <summary>The package kind</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The package kind",
        SerializedName = @"packageKind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind PackageKind { get; set; }
        /// <summary>Providers for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Providers for the package item",
        SerializedName = @"providers",
        PossibleTypes = new [] { typeof(string) })]
        string[] Provider { get; set; }
        /// <summary>The publisher display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher display name of the package",
        SerializedName = @"publisherDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherDisplayName { get; set; }
        /// <summary>The metadata resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata resource id.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>ID of the content source. The solution ID, workspace ID, etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the content source.  The solution ID, workspace ID, etc",
        SerializedName = @"sourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceId { get; set; }
        /// <summary>Source type of the content</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source type of the content",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind? SourceKind { get; set; }
        /// <summary>
        /// Name of the content source. The repo name, solution name, LA workspace name etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the content source.  The repo name, solution name, LA workspace name etc.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceName { get; set; }
        /// <summary>Email of support contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of support contact",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SupportEmail { get; set; }
        /// <summary>Link for support help, like to support page to open a ticket etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Link for support help, like to support page to open a ticket etc.",
        SerializedName = @"link",
        PossibleTypes = new [] { typeof(string) })]
        string SupportLink { get; set; }
        /// <summary>Name of the support contact. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the support contact. Company or person.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SupportName { get; set; }
        /// <summary>Type of support for content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of support for content item",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier? SupportTier { get; set; }
        /// <summary>the tactics the resource covers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the tactics the resource covers",
        SerializedName = @"threatAnalysisTactics",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreatAnalysisTactic { get; set; }
        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the techniques the resource covers, these have to be aligned with the tactics being used",
        SerializedName = @"threatAnalyticsTechniques",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreatAnalyticsTechnique { get; set; }
        /// <summary>the latest version number of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"the latest version number of the package",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Describes package properties
    internal partial interface IPackagePropertiesInternal

    {
        /// <summary>The author of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthor Author { get; set; }
        /// <summary>Email of author contact</summary>
        string AuthorEmail { get; set; }
        /// <summary>Link for author/vendor page</summary>
        string AuthorLink { get; set; }
        /// <summary>Name of the author. Company or person.</summary>
        string AuthorName { get; set; }
        /// <summary>The categories of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategories Category { get; set; }
        /// <summary>domain for the solution content item</summary>
        string[] CategoryDomain { get; set; }
        /// <summary>Industry verticals for the solution content item</summary>
        string[] CategoryVertical { get; set; }
        /// <summary>The version of the content schema.</summary>
        string ContentSchemaVersion { get; set; }
        /// <summary>The support tier of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies Dependency { get; set; }
        /// <summary>Id of the content item we depend on</summary>
        string DependencyContentId { get; set; }
        /// <summary>
        /// This is the list of dependencies we must fulfill, according to the AND/OR operator
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies[] DependencyCriterion { get; set; }
        /// <summary>Type of the content item we depend on</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind? DependencyKind { get; set; }
        /// <summary>Name of the content item</summary>
        string DependencyName { get; set; }
        /// <summary>Operator used for list of dependencies in criteria array.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator? DependencyOperator { get; set; }
        /// <summary>
        /// Version of the the content item we depend on. Can be blank, * or missing to indicate any version fulfills the dependency.
        /// If version does not match our defined numeric format then an exact match is required.
        /// </summary>
        string DependencyVersion { get; set; }
        /// <summary>The description of the package</summary>
        string Description { get; set; }
        /// <summary>The display name of the package</summary>
        string DisplayName { get; set; }
        /// <summary>first publish date package item</summary>
        global::System.DateTime? FirstPublishDate { get; set; }
        /// <summary>the icon identifier. this id can later be fetched from the content metadata</summary>
        string Icon { get; set; }
        /// <summary>The version of the installed package, null or absent means not installed.</summary>
        string InstalledVersion { get; set; }
        /// <summary>Flag indicates if this package is among the featured list.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsFeatured { get; set; }
        /// <summary>Flag indicates if this is a newly published package.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsNew { get; set; }
        /// <summary>Flag indicates if this package is in preview.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsPreview { get; set; }
        /// <summary>last publish date for the package item</summary>
        global::System.DateTime? LastPublishDate { get; set; }
        /// <summary>The package id</summary>
        string PackageId { get; set; }
        /// <summary>The JSON string of the package.</summary>
        string PackageItem { get; set; }
        /// <summary>The package kind</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind PackageKind { get; set; }
        /// <summary>Providers for the package item</summary>
        string[] Provider { get; set; }
        /// <summary>The publisher display name of the package</summary>
        string PublisherDisplayName { get; set; }
        /// <summary>The metadata resource id.</summary>
        string ResourceId { get; set; }
        /// <summary>The source of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSource Source { get; set; }
        /// <summary>ID of the content source. The solution ID, workspace ID, etc</summary>
        string SourceId { get; set; }
        /// <summary>Source type of the content</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind? SourceKind { get; set; }
        /// <summary>
        /// Name of the content source. The repo name, solution name, LA workspace name etc.
        /// </summary>
        string SourceName { get; set; }
        /// <summary>The support tier of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupport Support { get; set; }
        /// <summary>Email of support contact</summary>
        string SupportEmail { get; set; }
        /// <summary>Link for support help, like to support page to open a ticket etc.</summary>
        string SupportLink { get; set; }
        /// <summary>Name of the support contact. Company or person.</summary>
        string SupportName { get; set; }
        /// <summary>Type of support for content item</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier? SupportTier { get; set; }
        /// <summary>the tactics the resource covers</summary>
        string[] ThreatAnalysisTactic { get; set; }
        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        string[] ThreatAnalyticsTechnique { get; set; }
        /// <summary>the latest version number of the package</summary>
        string Version { get; set; }

    }
}