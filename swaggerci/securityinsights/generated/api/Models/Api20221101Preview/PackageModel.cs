// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Extensions;

    /// <summary>Represents a Package in Azure Security Insights.</summary>
    public partial class PackageModel :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModel,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtag"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtag __resourceWithEtag = new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.ResourceWithEtag();

        /// <summary>Email of author contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthorEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).AuthorEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).AuthorEmail = value ?? null; }

        /// <summary>Link for author/vendor page</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthorLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).AuthorLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).AuthorLink = value ?? null; }

        /// <summary>Name of the author. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string AuthorName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).AuthorName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).AuthorName = value ?? null; }

        /// <summary>domain for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] CategoryDomain { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).CategoryDomain; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).CategoryDomain = value ?? null /* arrayOf */; }

        /// <summary>Industry verticals for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] CategoryVertical { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).CategoryVertical; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).CategoryVertical = value ?? null /* arrayOf */; }

        /// <summary>The version of the content schema.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ContentSchemaVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ContentSchemaVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ContentSchemaVersion = value ?? null; }

        /// <summary>Id of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DependencyContentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyContentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyContentId = value ?? null; }

        /// <summary>
        /// This is the list of dependencies we must fulfill, according to the AND/OR operator
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies[] DependencyCriterion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyCriterion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyCriterion = value ?? null /* arrayOf */; }

        /// <summary>Type of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind? DependencyKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind)""); }

        /// <summary>Name of the content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DependencyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyName = value ?? null; }

        /// <summary>Operator used for list of dependencies in criteria array.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator? DependencyOperator { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyOperator; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyOperator = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator)""); }

        /// <summary>
        /// Version of the the content item we depend on. Can be blank, * or missing to indicate any version fulfills the dependency.
        /// If version does not match our defined numeric format then an exact match is required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DependencyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DependencyVersion = value ?? null; }

        /// <summary>The description of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Description = value ?? null; }

        /// <summary>The display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Etag of the azure resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Etag { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal)__resourceWithEtag).Etag; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal)__resourceWithEtag).Etag = value ?? null; }

        /// <summary>first publish date package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? FirstPublishDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).FirstPublishDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).FirstPublishDate = value ?? default(global::System.DateTime); }

        /// <summary>the icon identifier. this id can later be fetched from the content metadata</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string Icon { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Icon; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Icon = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Id; }

        /// <summary>The version of the installed package, null or absent means not installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string InstalledVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).InstalledVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).InstalledVersion = value ?? null; }

        /// <summary>Flag indicates if this package is among the featured list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsFeatured { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).IsFeatured; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).IsFeatured = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag)""); }

        /// <summary>Flag indicates if this is a newly published package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsNew { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).IsNew; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).IsNew = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag)""); }

        /// <summary>Flag indicates if this package is in preview.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsPreview { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).IsPreview; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).IsPreview = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag)""); }

        /// <summary>last publish date for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastPublishDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).LastPublishDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).LastPublishDate = value ?? default(global::System.DateTime); }

        /// <summary>Internal Acessors for Author</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthor Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal.Author { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Author; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Author = value; }

        /// <summary>Internal Acessors for Category</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategories Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal.Category { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Category = value; }

        /// <summary>Internal Acessors for Dependency</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal.Dependency { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Dependency; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Dependency = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageProperties Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.PackageProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Source</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSource Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal.Source { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Source; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Source = value; }

        /// <summary>Internal Acessors for Support</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupport Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageModelInternal.Support { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Support; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Support = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.ISystemData Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Type = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Name; }

        /// <summary>The package id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PackageId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PackageId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PackageId = value ?? null; }

        /// <summary>The JSON string of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PackageItem { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PackageItem; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PackageItem = value ?? null; }

        /// <summary>The package kind</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind? PackageKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PackageKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PackageKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageProperties _property;

        /// <summary>package properties</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.PackageProperties()); set => this._property = value; }

        /// <summary>Providers for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] Provider { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Provider; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Provider = value ?? null /* arrayOf */; }

        /// <summary>The publisher display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string PublisherDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PublisherDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).PublisherDisplayName = value ?? null; }

        /// <summary>The metadata resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ResourceId = value ?? null; }

        /// <summary>ID of the content source. The solution ID, workspace ID, etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SourceId = value ?? null; }

        /// <summary>Source type of the content</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind? SourceKind { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SourceKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SourceKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind)""); }

        /// <summary>
        /// Name of the content source. The repo name, solution name, LA workspace name etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SourceName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SourceName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SourceName = value ?? null; }

        /// <summary>Email of support contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SupportEmail { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportEmail; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportEmail = value ?? null; }

        /// <summary>Link for support help, like to support page to open a ticket etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SupportLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportLink = value ?? null; }

        /// <summary>Name of the support contact. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string SupportName { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportName; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportName = value ?? null; }

        /// <summary>Type of support for content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier? SupportTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportTier; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).SupportTier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.CreatedByType)""); }

        /// <summary>the tactics the resource covers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] ThreatAnalysisTactic { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ThreatAnalysisTactic; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ThreatAnalysisTactic = value ?? null /* arrayOf */; }

        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string[] ThreatAnalyticsTechnique { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ThreatAnalyticsTechnique; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).ThreatAnalyticsTechnique = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api30.IResourceInternal)__resourceWithEtag).Type; }

        /// <summary>the latest version number of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.PropertyOrigin.Inlined)]
        public string Version { get => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Version; set => ((Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackagePropertiesInternal)Property).Version = value ?? null; }

        /// <summary>Creates an new <see cref="PackageModel" /> instance.</summary>
        public PackageModel()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resourceWithEtag), __resourceWithEtag);
            await eventListener.AssertObjectIsValid(nameof(__resourceWithEtag), __resourceWithEtag);
        }
    }
    /// Represents a Package in Azure Security Insights.
    public partial interface IPackageModel :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtag
    {
        /// <summary>Email of author contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of author contact",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorEmail { get; set; }
        /// <summary>Link for author/vendor page</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Link for author/vendor page",
        SerializedName = @"link",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorLink { get; set; }
        /// <summary>Name of the author. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the author. Company or person.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string AuthorName { get; set; }
        /// <summary>domain for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"domain for the solution content item",
        SerializedName = @"domains",
        PossibleTypes = new [] { typeof(string) })]
        string[] CategoryDomain { get; set; }
        /// <summary>Industry verticals for the solution content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Industry verticals for the solution content item",
        SerializedName = @"verticals",
        PossibleTypes = new [] { typeof(string) })]
        string[] CategoryVertical { get; set; }
        /// <summary>The version of the content schema.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the content schema.",
        SerializedName = @"contentSchemaVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ContentSchemaVersion { get; set; }
        /// <summary>Id of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the content item we depend on",
        SerializedName = @"contentId",
        PossibleTypes = new [] { typeof(string) })]
        string DependencyContentId { get; set; }
        /// <summary>
        /// This is the list of dependencies we must fulfill, according to the AND/OR operator
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the list of dependencies we must fulfill, according to the AND/OR operator",
        SerializedName = @"criteria",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies[] DependencyCriterion { get; set; }
        /// <summary>Type of the content item we depend on</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the content item we depend on",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind? DependencyKind { get; set; }
        /// <summary>Name of the content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the content item",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string DependencyName { get; set; }
        /// <summary>Operator used for list of dependencies in criteria array.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operator used for list of dependencies in criteria array.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator? DependencyOperator { get; set; }
        /// <summary>
        /// Version of the the content item we depend on. Can be blank, * or missing to indicate any version fulfills the dependency.
        /// If version does not match our defined numeric format then an exact match is required.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string DependencyVersion { get; set; }
        /// <summary>The description of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The description of the package",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The display name of the package",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>first publish date package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"first publish date package item",
        SerializedName = @"firstPublishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? FirstPublishDate { get; set; }
        /// <summary>the icon identifier. this id can later be fetched from the content metadata</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the icon identifier. this id can later be fetched from the content metadata",
        SerializedName = @"icon",
        PossibleTypes = new [] { typeof(string) })]
        string Icon { get; set; }
        /// <summary>The version of the installed package, null or absent means not installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The version of the installed package, null or absent means not installed.",
        SerializedName = @"installedVersion",
        PossibleTypes = new [] { typeof(string) })]
        string InstalledVersion { get; set; }
        /// <summary>Flag indicates if this package is among the featured list.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicates if this package is among the featured list.",
        SerializedName = @"isFeatured",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsFeatured { get; set; }
        /// <summary>Flag indicates if this is a newly published package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicates if this is a newly published package.",
        SerializedName = @"isNew",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsNew { get; set; }
        /// <summary>Flag indicates if this package is in preview.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag indicates if this package is in preview.",
        SerializedName = @"isPreview",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsPreview { get; set; }
        /// <summary>last publish date for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"last publish date for the package item",
        SerializedName = @"lastPublishDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastPublishDate { get; set; }
        /// <summary>The package id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The package id",
        SerializedName = @"packageId",
        PossibleTypes = new [] { typeof(string) })]
        string PackageId { get; set; }
        /// <summary>The JSON string of the package.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The JSON string of the package.",
        SerializedName = @"packageItems",
        PossibleTypes = new [] { typeof(string) })]
        string PackageItem { get; set; }
        /// <summary>The package kind</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The package kind",
        SerializedName = @"packageKind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind? PackageKind { get; set; }
        /// <summary>Providers for the package item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Providers for the package item",
        SerializedName = @"providers",
        PossibleTypes = new [] { typeof(string) })]
        string[] Provider { get; set; }
        /// <summary>The publisher display name of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The publisher display name of the package",
        SerializedName = @"publisherDisplayName",
        PossibleTypes = new [] { typeof(string) })]
        string PublisherDisplayName { get; set; }
        /// <summary>The metadata resource id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The metadata resource id.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>ID of the content source. The solution ID, workspace ID, etc</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the content source.  The solution ID, workspace ID, etc",
        SerializedName = @"sourceId",
        PossibleTypes = new [] { typeof(string) })]
        string SourceId { get; set; }
        /// <summary>Source type of the content</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Source type of the content",
        SerializedName = @"kind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind? SourceKind { get; set; }
        /// <summary>
        /// Name of the content source. The repo name, solution name, LA workspace name etc.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the content source.  The repo name, solution name, LA workspace name etc.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SourceName { get; set; }
        /// <summary>Email of support contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Email of support contact",
        SerializedName = @"email",
        PossibleTypes = new [] { typeof(string) })]
        string SupportEmail { get; set; }
        /// <summary>Link for support help, like to support page to open a ticket etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Link for support help, like to support page to open a ticket etc.",
        SerializedName = @"link",
        PossibleTypes = new [] { typeof(string) })]
        string SupportLink { get; set; }
        /// <summary>Name of the support contact. Company or person.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of the support contact. Company or person.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SupportName { get; set; }
        /// <summary>Type of support for content item</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of support for content item",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier? SupportTier { get; set; }
        /// <summary>the tactics the resource covers</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the tactics the resource covers",
        SerializedName = @"threatAnalysisTactics",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreatAnalysisTactic { get; set; }
        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the techniques the resource covers, these have to be aligned with the tactics being used",
        SerializedName = @"threatAnalyticsTechniques",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreatAnalyticsTechnique { get; set; }
        /// <summary>the latest version number of the package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"the latest version number of the package",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Represents a Package in Azure Security Insights.
    internal partial interface IPackageModelInternal :
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20.IResourceWithEtagInternal
    {
        /// <summary>The author of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataAuthor Author { get; set; }
        /// <summary>Email of author contact</summary>
        string AuthorEmail { get; set; }
        /// <summary>Link for author/vendor page</summary>
        string AuthorLink { get; set; }
        /// <summary>Name of the author. Company or person.</summary>
        string AuthorName { get; set; }
        /// <summary>The categories of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataCategories Category { get; set; }
        /// <summary>domain for the solution content item</summary>
        string[] CategoryDomain { get; set; }
        /// <summary>Industry verticals for the solution content item</summary>
        string[] CategoryVertical { get; set; }
        /// <summary>The version of the content schema.</summary>
        string ContentSchemaVersion { get; set; }
        /// <summary>The support tier of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies Dependency { get; set; }
        /// <summary>Id of the content item we depend on</summary>
        string DependencyContentId { get; set; }
        /// <summary>
        /// This is the list of dependencies we must fulfill, according to the AND/OR operator
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataDependencies[] DependencyCriterion { get; set; }
        /// <summary>Type of the content item we depend on</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Kind? DependencyKind { get; set; }
        /// <summary>Name of the content item</summary>
        string DependencyName { get; set; }
        /// <summary>Operator used for list of dependencies in criteria array.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Operator? DependencyOperator { get; set; }
        /// <summary>
        /// Version of the the content item we depend on. Can be blank, * or missing to indicate any version fulfills the dependency.
        /// If version does not match our defined numeric format then an exact match is required.
        /// </summary>
        string DependencyVersion { get; set; }
        /// <summary>The description of the package</summary>
        string Description { get; set; }
        /// <summary>The display name of the package</summary>
        string DisplayName { get; set; }
        /// <summary>first publish date package item</summary>
        global::System.DateTime? FirstPublishDate { get; set; }
        /// <summary>the icon identifier. this id can later be fetched from the content metadata</summary>
        string Icon { get; set; }
        /// <summary>The version of the installed package, null or absent means not installed.</summary>
        string InstalledVersion { get; set; }
        /// <summary>Flag indicates if this package is among the featured list.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsFeatured { get; set; }
        /// <summary>Flag indicates if this is a newly published package.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsNew { get; set; }
        /// <summary>Flag indicates if this package is in preview.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.Flag? IsPreview { get; set; }
        /// <summary>last publish date for the package item</summary>
        global::System.DateTime? LastPublishDate { get; set; }
        /// <summary>The package id</summary>
        string PackageId { get; set; }
        /// <summary>The JSON string of the package.</summary>
        string PackageItem { get; set; }
        /// <summary>The package kind</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.PackageKind? PackageKind { get; set; }
        /// <summary>package properties</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20221101Preview.IPackageProperties Property { get; set; }
        /// <summary>Providers for the package item</summary>
        string[] Provider { get; set; }
        /// <summary>The publisher display name of the package</summary>
        string PublisherDisplayName { get; set; }
        /// <summary>The metadata resource id.</summary>
        string ResourceId { get; set; }
        /// <summary>The source of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSource Source { get; set; }
        /// <summary>ID of the content source. The solution ID, workspace ID, etc</summary>
        string SourceId { get; set; }
        /// <summary>Source type of the content</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SourceKind? SourceKind { get; set; }
        /// <summary>
        /// Name of the content source. The repo name, solution name, LA workspace name etc.
        /// </summary>
        string SourceName { get; set; }
        /// <summary>The support tier of the package</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Models.Api20220901Preview.IMetadataSupport Support { get; set; }
        /// <summary>Email of support contact</summary>
        string SupportEmail { get; set; }
        /// <summary>Link for support help, like to support page to open a ticket etc.</summary>
        string SupportLink { get; set; }
        /// <summary>Name of the support contact. Company or person.</summary>
        string SupportName { get; set; }
        /// <summary>Type of support for content item</summary>
        Microsoft.Azure.PowerShell.Cmdlets.SecurityInsights.Support.SupportTier? SupportTier { get; set; }
        /// <summary>the tactics the resource covers</summary>
        string[] ThreatAnalysisTactic { get; set; }
        /// <summary>
        /// the techniques the resource covers, these have to be aligned with the tactics being used
        /// </summary>
        string[] ThreatAnalyticsTechnique { get; set; }
        /// <summary>the latest version number of the package</summary>
        string Version { get; set; }

    }
}