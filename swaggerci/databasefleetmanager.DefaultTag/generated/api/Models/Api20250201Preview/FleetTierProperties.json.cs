// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Extensions;

    /// <summary>A Fleet tier properties.</summary>
    public partial class FleetTierProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject into a new instance of <see cref="FleetTierProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal FleetTierProperties(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_disabled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean>("disabled"), out var __jsonDisabled) ? (bool?)__jsonDisabled : Disabled;}
            {_serverless = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean>("serverless"), out var __jsonServerless) ? (bool?)__jsonServerless : Serverless;}
            {_pooled = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean>("pooled"), out var __jsonPooled) ? (bool?)__jsonPooled : Pooled;}
            {_serviceTier = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("serviceTier"), out var __jsonServiceTier) ? (string)__jsonServiceTier : (string)ServiceTier;}
            {_family = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("family"), out var __jsonFamily) ? (string)__jsonFamily : (string)Family;}
            {_capacity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("capacity"), out var __jsonCapacity) ? (int?)__jsonCapacity : Capacity;}
            {_poolNumOfDatabasesMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("poolNumOfDatabasesMax"), out var __jsonPoolNumOfDatabasesMax) ? (int?)__jsonPoolNumOfDatabasesMax : PoolNumOfDatabasesMax;}
            {_highAvailabilityReplicaCount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("highAvailabilityReplicaCount"), out var __jsonHighAvailabilityReplicaCount) ? (int?)__jsonHighAvailabilityReplicaCount : HighAvailabilityReplicaCount;}
            {_zoneRedundancy = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("zoneRedundancy"), out var __jsonZoneRedundancy) ? (string)__jsonZoneRedundancy : (string)ZoneRedundancy;}
            {_databaseCapacityMin = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("databaseCapacityMin"), out var __jsonDatabaseCapacityMin) ? (double?)__jsonDatabaseCapacityMin : DatabaseCapacityMin;}
            {_databaseCapacityMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("databaseCapacityMax"), out var __jsonDatabaseCapacityMax) ? (double?)__jsonDatabaseCapacityMax : DatabaseCapacityMax;}
            {_databaseSizeGbMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("databaseSizeGbMax"), out var __jsonDatabaseSizeGbMax) ? (int?)__jsonDatabaseSizeGbMax : DatabaseSizeGbMax;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetTierProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetTierProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetTierProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json ? new FleetTierProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="FleetTierProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="FleetTierProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._disabled ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean((bool)this._disabled) : null, "disabled" ,container.Add );
            }
            AddIf( null != this._serverless ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean((bool)this._serverless) : null, "serverless" ,container.Add );
            AddIf( null != this._pooled ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean((bool)this._pooled) : null, "pooled" ,container.Add );
            AddIf( null != (((object)this._serviceTier)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._serviceTier.ToString()) : null, "serviceTier" ,container.Add );
            AddIf( null != (((object)this._family)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._family.ToString()) : null, "family" ,container.Add );
            AddIf( null != this._capacity ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((int)this._capacity) : null, "capacity" ,container.Add );
            AddIf( null != this._poolNumOfDatabasesMax ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((int)this._poolNumOfDatabasesMax) : null, "poolNumOfDatabasesMax" ,container.Add );
            AddIf( null != this._highAvailabilityReplicaCount ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((int)this._highAvailabilityReplicaCount) : null, "highAvailabilityReplicaCount" ,container.Add );
            AddIf( null != (((object)this._zoneRedundancy)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._zoneRedundancy.ToString()) : null, "zoneRedundancy" ,container.Add );
            AddIf( null != this._databaseCapacityMin ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((double)this._databaseCapacityMin) : null, "databaseCapacityMin" ,container.Add );
            AddIf( null != this._databaseCapacityMax ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((double)this._databaseCapacityMax) : null, "databaseCapacityMax" ,container.Add );
            AddIf( null != this._databaseSizeGbMax ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((int)this._databaseSizeGbMax) : null, "databaseSizeGbMax" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}