// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Extensions;

    /// <summary>A Fleetspace properties.</summary>
    public partial class FleetspaceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetspaceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetspacePropertiesInternal
    {

        /// <summary>Backing field for <see cref="CapacityMax" /> property.</summary>
        private int? _capacityMax;

        /// <summary>
        /// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Owned)]
        public int? CapacityMax { get => this._capacityMax; set => this._capacityMax = value; }

        /// <summary>Backing field for <see cref="MainPrincipal" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipal _mainPrincipal;

        /// <summary>
        /// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipal MainPrincipal { get => (this._mainPrincipal = this._mainPrincipal ?? new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.MainPrincipal()); set => this._mainPrincipal = value; }

        /// <summary>Application Id of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Inlined)]
        public string MainPrincipalApplicationId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).ApplicationId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).ApplicationId = value ?? null; }

        /// <summary>Login name of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Inlined)]
        public string MainPrincipalLogin { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).Login; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).Login = value ?? null; }

        /// <summary>Object Id of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Inlined)]
        public string MainPrincipalObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).ObjectId = value ?? null; }

        /// <summary>Tenant Id of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Inlined)]
        public string MainPrincipalTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).TenantId = value ?? null; }

        /// <summary>Principal type of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.PrincipalType? MainPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).PrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipalInternal)MainPrincipal).PrincipalType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.PrincipalType)""); }

        /// <summary>Internal Acessors for MainPrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipal Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetspacePropertiesInternal.MainPrincipal { get => (this._mainPrincipal = this._mainPrincipal ?? new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.MainPrincipal()); set { {_mainPrincipal = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.AzureProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetspacePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.AzureProvisioningState? _provisioningState;

        /// <summary>Fleetspace state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Origin(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.AzureProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Creates an new <see cref="FleetspaceProperties" /> instance.</summary>
        public FleetspaceProperties()
        {

        }
    }
    /// A Fleetspace properties.
    public partial interface IFleetspaceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
        SerializedName = @"capacityMax",
        PossibleTypes = new [] { typeof(int) })]
        int? CapacityMax { get; set; }
        /// <summary>Application Id of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Application Id of the main principal.",
        SerializedName = @"applicationId",
        PossibleTypes = new [] { typeof(string) })]
        string MainPrincipalApplicationId { get; set; }
        /// <summary>Login name of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Login name of the main principal.",
        SerializedName = @"login",
        PossibleTypes = new [] { typeof(string) })]
        string MainPrincipalLogin { get; set; }
        /// <summary>Object Id of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Object Id of the main principal.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string MainPrincipalObjectId { get; set; }
        /// <summary>Tenant Id of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tenant Id of the main principal.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string MainPrincipalTenantId { get; set; }
        /// <summary>Principal type of the main principal.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Principal type of the main principal.",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.PrincipalType) })]
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.PrincipalType? MainPrincipalType { get; set; }
        /// <summary>Fleetspace state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Fleetspace state.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.AzureProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.AzureProvisioningState? ProvisioningState { get;  }

    }
    /// A Fleetspace properties.
    internal partial interface IFleetspacePropertiesInternal

    {
        /// <summary>
        /// Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.
        /// </summary>
        int? CapacityMax { get; set; }
        /// <summary>
        /// Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IMainPrincipal MainPrincipal { get; set; }
        /// <summary>Application Id of the main principal.</summary>
        string MainPrincipalApplicationId { get; set; }
        /// <summary>Login name of the main principal.</summary>
        string MainPrincipalLogin { get; set; }
        /// <summary>Object Id of the main principal.</summary>
        string MainPrincipalObjectId { get; set; }
        /// <summary>Tenant Id of the main principal.</summary>
        string MainPrincipalTenantId { get; set; }
        /// <summary>Principal type of the main principal.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.PrincipalType? MainPrincipalType { get; set; }
        /// <summary>Fleetspace state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Support.AzureProvisioningState? ProvisioningState { get; set; }

    }
}