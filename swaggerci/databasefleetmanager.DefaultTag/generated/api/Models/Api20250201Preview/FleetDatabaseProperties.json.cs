// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Extensions;

    /// <summary>Fleet database properties.</summary>
    public partial class FleetDatabaseProperties
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject into a new instance of <see cref="FleetDatabaseProperties" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal FleetDatabaseProperties(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_identity = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject>("identity"), out var __jsonIdentity) ? Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.Identity.FromJson(__jsonIdentity) : Identity;}
            {_transparentDataEncryption = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject>("transparentDataEncryption"), out var __jsonTransparentDataEncryption) ? Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.TransparentDataEncryption.FromJson(__jsonTransparentDataEncryption) : TransparentDataEncryption;}
            {_originalDatabaseId = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("originalDatabaseId"), out var __jsonOriginalDatabaseId) ? (string)__jsonOriginalDatabaseId : (string)OriginalDatabaseId;}
            {_provisioningState = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("provisioningState"), out var __jsonProvisioningState) ? (string)__jsonProvisioningState : (string)ProvisioningState;}
            {_createMode = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("createMode"), out var __jsonCreateMode) ? (string)__jsonCreateMode : (string)CreateMode;}
            {_tierName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("tierName"), out var __jsonTierName) ? (string)__jsonTierName : (string)TierName;}
            {_connectionString = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("connectionString"), out var __jsonConnectionString) ? (string)__jsonConnectionString : (string)ConnectionString;}
            {_recoverable = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean>("recoverable"), out var __jsonRecoverable) ? (bool?)__jsonRecoverable : Recoverable;}
            {_restoreFromTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("restoreFromTime"), out var __jsonRestoreFromTime) ? global::System.DateTime.TryParse((string)__jsonRestoreFromTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonRestoreFromTimeValue) ? __jsonRestoreFromTimeValue : RestoreFromTime : RestoreFromTime;}
            {_earliestRestoreTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("earliestRestoreTime"), out var __jsonEarliestRestoreTime) ? global::System.DateTime.TryParse((string)__jsonEarliestRestoreTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonEarliestRestoreTimeValue) ? __jsonEarliestRestoreTimeValue : EarliestRestoreTime : EarliestRestoreTime;}
            {_latestRestoreTime = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("latestRestoreTime"), out var __jsonLatestRestoreTime) ? global::System.DateTime.TryParse((string)__jsonLatestRestoreTime, global::System.Globalization.CultureInfo.InvariantCulture, global::System.Globalization.DateTimeStyles.AdjustToUniversal, out var __jsonLatestRestoreTimeValue) ? __jsonLatestRestoreTimeValue : LatestRestoreTime : LatestRestoreTime;}
            {_backupRetentionDay = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("backupRetentionDays"), out var __jsonBackupRetentionDays) ? (int?)__jsonBackupRetentionDays : BackupRetentionDay;}
            {_databaseSizeGbMax = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber>("databaseSizeGbMax"), out var __jsonDatabaseSizeGbMax) ? (int?)__jsonDatabaseSizeGbMax : DatabaseSizeGbMax;}
            {_sourceDatabaseName = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("sourceDatabaseName"), out var __jsonSourceDatabaseName) ? (string)__jsonSourceDatabaseName : (string)SourceDatabaseName;}
            {_resourceTag = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject>("resourceTags"), out var __jsonResourceTags) ? Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.FleetDatabasePropertiesResourceTags.FromJson(__jsonResourceTags) : ResourceTag;}
            {_collation = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString>("collation"), out var __jsonCollation) ? (string)__jsonCollation : (string)Collation;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetDatabaseProperties.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetDatabaseProperties.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Models.Api20250201Preview.IFleetDatabaseProperties FromJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject json ? new FleetDatabaseProperties(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="FleetDatabaseProperties" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="FleetDatabaseProperties" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            AddIf( null != this._identity ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) this._identity.ToJson(null,serializationMode) : null, "identity" ,container.Add );
            AddIf( null != this._transparentDataEncryption ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) this._transparentDataEncryption.ToJson(null,serializationMode) : null, "transparentDataEncryption" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._originalDatabaseId)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._originalDatabaseId.ToString()) : null, "originalDatabaseId" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._provisioningState)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._provisioningState.ToString()) : null, "provisioningState" ,container.Add );
            }
            AddIf( null != (((object)this._createMode)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._createMode.ToString()) : null, "createMode" ,container.Add );
            AddIf( null != (((object)this._tierName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._tierName.ToString()) : null, "tierName" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != (((object)this._connectionString)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._connectionString.ToString()) : null, "connectionString" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._recoverable ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonBoolean((bool)this._recoverable) : null, "recoverable" ,container.Add );
            }
            AddIf( null != this._restoreFromTime ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._restoreFromTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "restoreFromTime" ,container.Add );
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._earliestRestoreTime ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._earliestRestoreTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "earliestRestoreTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._latestRestoreTime ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._latestRestoreTime?.ToString(@"yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffffffK",global::System.Globalization.CultureInfo.InvariantCulture)) : null, "latestRestoreTime" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._backupRetentionDay ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((int)this._backupRetentionDay) : null, "backupRetentionDays" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._databaseSizeGbMax ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNumber((int)this._databaseSizeGbMax) : null, "databaseSizeGbMax" ,container.Add );
            }
            AddIf( null != (((object)this._sourceDatabaseName)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._sourceDatabaseName.ToString()) : null, "sourceDatabaseName" ,container.Add );
            AddIf( null != this._resourceTag ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) this._resourceTag.ToJson(null,serializationMode) : null, "resourceTags" ,container.Add );
            AddIf( null != (((object)this._collation)?.ToString()) ? (Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonNode) new Microsoft.Azure.PowerShell.Cmdlets.DatabaseFleet.Runtime.Json.JsonString(this._collation.ToString()) : null, "collation" ,container.Add );
            AfterToJson(ref container);
            return container;
        }
    }
}