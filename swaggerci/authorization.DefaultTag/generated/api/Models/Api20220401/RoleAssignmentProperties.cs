// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Role assignment properties.</summary>
    public partial class RoleAssignmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private string _condition;

        /// <summary>
        /// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
        /// StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Condition { get => this._condition; set => this._condition = value; }

        /// <summary>Backing field for <see cref="ConditionVersion" /> property.</summary>
        private string _conditionVersion;

        /// <summary>Version of the condition. Currently the only accepted value is '2.0'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string ConditionVersion { get => this._conditionVersion; set => this._conditionVersion = value; }

        /// <summary>Backing field for <see cref="CreatedBy" /> property.</summary>
        private string _createdBy;

        /// <summary>Id of the user who created the assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string CreatedBy { get => this._createdBy; }

        /// <summary>Backing field for <see cref="CreatedOn" /> property.</summary>
        private global::System.DateTime? _createdOn;

        /// <summary>Time it was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedOn { get => this._createdOn; }

        /// <summary>Backing field for <see cref="DelegatedManagedIdentityResourceId" /> property.</summary>
        private string _delegatedManagedIdentityResourceId;

        /// <summary>Id of the delegated managed identity resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string DelegatedManagedIdentityResourceId { get => this._delegatedManagedIdentityResourceId; set => this._delegatedManagedIdentityResourceId = value; }

        /// <summary>Backing field for <see cref="Description" /> property.</summary>
        private string _description;

        /// <summary>Description of role assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Description { get => this._description; set => this._description = value; }

        /// <summary>Internal Acessors for CreatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentPropertiesInternal.CreatedBy { get => this._createdBy; set { {_createdBy = value;} } }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentPropertiesInternal.CreatedOn { get => this._createdOn; set { {_createdOn = value;} } }

        /// <summary>Internal Acessors for Scope</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentPropertiesInternal.Scope { get => this._scope; set { {_scope = value;} } }

        /// <summary>Internal Acessors for UpdatedBy</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentPropertiesInternal.UpdatedBy { get => this._updatedBy; set { {_updatedBy = value;} } }

        /// <summary>Internal Acessors for UpdatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220401.IRoleAssignmentPropertiesInternal.UpdatedOn { get => this._updatedOn; set { {_updatedOn = value;} } }

        /// <summary>Backing field for <see cref="PrincipalId" /> property.</summary>
        private string _principalId;

        /// <summary>The principal ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string PrincipalId { get => this._principalId; set => this._principalId = value; }

        /// <summary>Backing field for <see cref="PrincipalType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PrincipalType? _principalType;

        /// <summary>The principal type of the assigned principal ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PrincipalType? PrincipalType { get => this._principalType; set => this._principalType = value; }

        /// <summary>Backing field for <see cref="RoleDefinitionId" /> property.</summary>
        private string _roleDefinitionId;

        /// <summary>The role definition ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string RoleDefinitionId { get => this._roleDefinitionId; set => this._roleDefinitionId = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>The role assignment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; }

        /// <summary>Backing field for <see cref="UpdatedBy" /> property.</summary>
        private string _updatedBy;

        /// <summary>Id of the user who updated the assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string UpdatedBy { get => this._updatedBy; }

        /// <summary>Backing field for <see cref="UpdatedOn" /> property.</summary>
        private global::System.DateTime? _updatedOn;

        /// <summary>Time it was updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public global::System.DateTime? UpdatedOn { get => this._updatedOn; }

        /// <summary>Creates an new <see cref="RoleAssignmentProperties" /> instance.</summary>
        public RoleAssignmentProperties()
        {

        }
    }
    /// Role assignment properties.
    public partial interface IRoleAssignmentProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
        /// StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'",
        SerializedName = @"condition",
        PossibleTypes = new [] { typeof(string) })]
        string Condition { get; set; }
        /// <summary>Version of the condition. Currently the only accepted value is '2.0'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Version of the condition. Currently the only accepted value is '2.0'",
        SerializedName = @"conditionVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ConditionVersion { get; set; }
        /// <summary>Id of the user who created the assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of the user who created the assignment",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string CreatedBy { get;  }
        /// <summary>Time it was created</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time it was created",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>Id of the delegated managed identity resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Id of the delegated managed identity resource",
        SerializedName = @"delegatedManagedIdentityResourceId",
        PossibleTypes = new [] { typeof(string) })]
        string DelegatedManagedIdentityResourceId { get; set; }
        /// <summary>Description of role assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Description of role assignment",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>The principal ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The principal ID.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get; set; }
        /// <summary>The principal type of the assigned principal ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The principal type of the assigned principal ID.",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PrincipalType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PrincipalType? PrincipalType { get; set; }
        /// <summary>The role definition ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The role definition ID.",
        SerializedName = @"roleDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string RoleDefinitionId { get; set; }
        /// <summary>The role assignment scope.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The role assignment scope.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get;  }
        /// <summary>Id of the user who updated the assignment</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Id of the user who updated the assignment",
        SerializedName = @"updatedBy",
        PossibleTypes = new [] { typeof(string) })]
        string UpdatedBy { get;  }
        /// <summary>Time it was updated</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Time it was updated",
        SerializedName = @"updatedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UpdatedOn { get;  }

    }
    /// Role assignment properties.
    internal partial interface IRoleAssignmentPropertiesInternal

    {
        /// <summary>
        /// The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
        /// StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        string Condition { get; set; }
        /// <summary>Version of the condition. Currently the only accepted value is '2.0'</summary>
        string ConditionVersion { get; set; }
        /// <summary>Id of the user who created the assignment</summary>
        string CreatedBy { get; set; }
        /// <summary>Time it was created</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>Id of the delegated managed identity resource</summary>
        string DelegatedManagedIdentityResourceId { get; set; }
        /// <summary>Description of role assignment</summary>
        string Description { get; set; }
        /// <summary>The principal ID.</summary>
        string PrincipalId { get; set; }
        /// <summary>The principal type of the assigned principal ID.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PrincipalType? PrincipalType { get; set; }
        /// <summary>The role definition ID.</summary>
        string RoleDefinitionId { get; set; }
        /// <summary>The role assignment scope.</summary>
        string Scope { get; set; }
        /// <summary>Id of the user who updated the assignment</summary>
        string UpdatedBy { get; set; }
        /// <summary>Time it was updated</summary>
        global::System.DateTime? UpdatedOn { get; set; }

    }
}