// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>The role management policy PIM only mode rule.</summary>
    public partial class RoleManagementPolicyPimOnlyModeRule :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyPimOnlyModeRule,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyPimOnlyModeRuleInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRule"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRule __roleManagementPolicyRule = new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.RoleManagementPolicyRule();

        /// <summary>The id of the rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).Id = value ?? null; }

        /// <summary>Internal Acessors for PimOnlyModeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettings Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyPimOnlyModeRuleInternal.PimOnlyModeSetting { get => (this._pimOnlyModeSetting = this._pimOnlyModeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.PimOnlyModeSettings()); set { {_pimOnlyModeSetting = value;} } }

        /// <summary>Backing field for <see cref="PimOnlyModeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettings _pimOnlyModeSetting;

        /// <summary>The PIM Only Mode settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettings PimOnlyModeSetting { get => (this._pimOnlyModeSetting = this._pimOnlyModeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.PimOnlyModeSettings()); set => this._pimOnlyModeSetting = value; }

        /// <summary>The list of excluded entities that the rule does not apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IUsersOrServicePrincipalSet[] PimOnlyModeSettingExclude { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettingsInternal)PimOnlyModeSetting).Exclude; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettingsInternal)PimOnlyModeSetting).Exclude = value ?? null /* arrayOf */; }

        /// <summary>The list of excluded assignment types allowed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.ExcludedPrincipalTypes[] PimOnlyModeSettingExcludedAssignmentType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettingsInternal)PimOnlyModeSetting).ExcludedAssignmentType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettingsInternal)PimOnlyModeSetting).ExcludedAssignmentType = value ?? null /* arrayOf */; }

        /// <summary>Determines whether the setting is enabled, disabled or report only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? PimOnlyModeSettingMode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettingsInternal)PimOnlyModeSetting).Mode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettingsInternal)PimOnlyModeSetting).Mode = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode)""); }

        /// <summary>The type of rule</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.RoleManagementPolicyRuleType RuleType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).RuleType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).RuleType = value ; }

        /// <summary>The target of the current rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleTarget Target { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).Target = value ?? null /* model class */; }

        /// <summary>The caller of the setting.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string TargetCaller { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetCaller; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetCaller = value ?? null; }

        /// <summary>The list of enforced settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string[] TargetEnforcedSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetEnforcedSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetEnforcedSetting = value ?? null /* arrayOf */; }

        /// <summary>The list of inheritable settings.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string[] TargetInheritableSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetInheritableSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetInheritableSetting = value ?? null /* arrayOf */; }

        /// <summary>The assignment level to which rule is applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string TargetLevel { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetLevel; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetLevel = value ?? null; }

        /// <summary>The list of target objects.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string[] TargetObject { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetObject; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetObject = value ?? null /* arrayOf */; }

        /// <summary>The type of operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inherited)]
        public string[] TargetOperation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetOperation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal)__roleManagementPolicyRule).TargetOperation = value ?? null /* arrayOf */; }

        /// <summary>Creates an new <see cref="RoleManagementPolicyPimOnlyModeRule" /> instance.</summary>
        public RoleManagementPolicyPimOnlyModeRule()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__roleManagementPolicyRule), __roleManagementPolicyRule);
            await eventListener.AssertObjectIsValid(nameof(__roleManagementPolicyRule), __roleManagementPolicyRule);
        }
    }
    /// The role management policy PIM only mode rule.
    public partial interface IRoleManagementPolicyPimOnlyModeRule :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRule
    {
        /// <summary>The list of excluded entities that the rule does not apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of excluded entities that the rule does not apply to.",
        SerializedName = @"excludes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IUsersOrServicePrincipalSet) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IUsersOrServicePrincipalSet[] PimOnlyModeSettingExclude { get; set; }
        /// <summary>The list of excluded assignment types allowed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of excluded assignment types allowed.",
        SerializedName = @"excludedAssignmentTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.ExcludedPrincipalTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.ExcludedPrincipalTypes[] PimOnlyModeSettingExcludedAssignmentType { get; set; }
        /// <summary>Determines whether the setting is enabled, disabled or report only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether the setting is enabled, disabled or report only.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? PimOnlyModeSettingMode { get; set; }

    }
    /// The role management policy PIM only mode rule.
    internal partial interface IRoleManagementPolicyPimOnlyModeRuleInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IRoleManagementPolicyRuleInternal
    {
        /// <summary>The PIM Only Mode settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IPimOnlyModeSettings PimOnlyModeSetting { get; set; }
        /// <summary>The list of excluded entities that the rule does not apply to.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240901Preview.IUsersOrServicePrincipalSet[] PimOnlyModeSettingExclude { get; set; }
        /// <summary>The list of excluded assignment types allowed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.ExcludedPrincipalTypes[] PimOnlyModeSettingExcludedAssignmentType { get; set; }
        /// <summary>Determines whether the setting is enabled, disabled or report only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? PimOnlyModeSettingMode { get; set; }

    }
}