// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220501Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Role definition permissions.</summary>
    public partial class Permission :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220501Preview.IPermission,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220501Preview.IPermissionInternal
    {

        /// <summary>Backing field for <see cref="Action" /> property.</summary>
        private string[] _action;

        /// <summary>Allowed actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string[] Action { get => this._action; set => this._action = value; }

        /// <summary>Backing field for <see cref="Condition" /> property.</summary>
        private string _condition;

        /// <summary>
        /// The conditions on the role definition. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
        /// StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Condition { get => this._condition; }

        /// <summary>Backing field for <see cref="ConditionVersion" /> property.</summary>
        private string _conditionVersion;

        /// <summary>Version of the condition. Currently the only accepted value is '2.0'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string ConditionVersion { get => this._conditionVersion; }

        /// <summary>Backing field for <see cref="DataAction" /> property.</summary>
        private string[] _dataAction;

        /// <summary>Allowed Data actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string[] DataAction { get => this._dataAction; set => this._dataAction = value; }

        /// <summary>Internal Acessors for Condition</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220501Preview.IPermissionInternal.Condition { get => this._condition; set { {_condition = value;} } }

        /// <summary>Internal Acessors for ConditionVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20220501Preview.IPermissionInternal.ConditionVersion { get => this._conditionVersion; set { {_conditionVersion = value;} } }

        /// <summary>Backing field for <see cref="NotAction" /> property.</summary>
        private string[] _notAction;

        /// <summary>Denied actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string[] NotAction { get => this._notAction; set => this._notAction = value; }

        /// <summary>Backing field for <see cref="NotDataAction" /> property.</summary>
        private string[] _notDataAction;

        /// <summary>Denied Data actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string[] NotDataAction { get => this._notDataAction; set => this._notDataAction = value; }

        /// <summary>Creates an new <see cref="Permission" /> instance.</summary>
        public Permission()
        {

        }
    }
    /// Role definition permissions.
    public partial interface IPermission :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>Allowed actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed actions.",
        SerializedName = @"actions",
        PossibleTypes = new [] { typeof(string) })]
        string[] Action { get; set; }
        /// <summary>
        /// The conditions on the role definition. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
        /// StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The conditions on the role definition. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'",
        SerializedName = @"condition",
        PossibleTypes = new [] { typeof(string) })]
        string Condition { get;  }
        /// <summary>Version of the condition. Currently the only accepted value is '2.0'</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Version of the condition. Currently the only accepted value is '2.0'",
        SerializedName = @"conditionVersion",
        PossibleTypes = new [] { typeof(string) })]
        string ConditionVersion { get;  }
        /// <summary>Allowed Data actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Allowed Data actions.",
        SerializedName = @"dataActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] DataAction { get; set; }
        /// <summary>Denied actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Denied actions.",
        SerializedName = @"notActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotAction { get; set; }
        /// <summary>Denied Data actions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Denied Data actions.",
        SerializedName = @"notDataActions",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotDataAction { get; set; }

    }
    /// Role definition permissions.
    internal partial interface IPermissionInternal

    {
        /// <summary>Allowed actions.</summary>
        string[] Action { get; set; }
        /// <summary>
        /// The conditions on the role definition. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName]
        /// StringEqualsIgnoreCase 'foo_storage_container'
        /// </summary>
        string Condition { get; set; }
        /// <summary>Version of the condition. Currently the only accepted value is '2.0'</summary>
        string ConditionVersion { get; set; }
        /// <summary>Allowed Data actions.</summary>
        string[] DataAction { get; set; }
        /// <summary>Denied actions.</summary>
        string[] NotAction { get; set; }
        /// <summary>Denied Data actions.</summary>
        string[] NotDataAction { get; set; }

    }
}