// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>The PIM Only Mode settings.</summary>
    public partial class PimOnlyModeSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240201Preview.IPimOnlyModeSettings,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20240201Preview.IPimOnlyModeSettingsInternal
    {

        /// <summary>Backing field for <see cref="Exclude" /> property.</summary>
        private string[] _exclude;

        /// <summary>The list of object IDs that the rule does not apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string[] Exclude { get => this._exclude; set => this._exclude = value; }

        /// <summary>Backing field for <see cref="ExcludeAllServicePrincipal" /> property.</summary>
        private bool? _excludeAllServicePrincipal;

        /// <summary>Exclude all service principals from this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public bool? ExcludeAllServicePrincipal { get => this._excludeAllServicePrincipal; set => this._excludeAllServicePrincipal = value; }

        /// <summary>Backing field for <see cref="Mode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? _mode;

        /// <summary>Determines whether the setting is enabled, disabled or report only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? Mode { get => this._mode; set => this._mode = value; }

        /// <summary>Creates an new <see cref="PimOnlyModeSettings" /> instance.</summary>
        public PimOnlyModeSettings()
        {

        }
    }
    /// The PIM Only Mode settings.
    public partial interface IPimOnlyModeSettings :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The list of object IDs that the rule does not apply to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of object IDs that the rule does not apply to.",
        SerializedName = @"excludes",
        PossibleTypes = new [] { typeof(string) })]
        string[] Exclude { get; set; }
        /// <summary>Exclude all service principals from this rule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Exclude all service principals from this rule.",
        SerializedName = @"excludeAllServicePrincipals",
        PossibleTypes = new [] { typeof(bool) })]
        bool? ExcludeAllServicePrincipal { get; set; }
        /// <summary>Determines whether the setting is enabled, disabled or report only.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines whether the setting is enabled, disabled or report only.",
        SerializedName = @"mode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? Mode { get; set; }

    }
    /// The PIM Only Mode settings.
    internal partial interface IPimOnlyModeSettingsInternal

    {
        /// <summary>The list of object IDs that the rule does not apply to.</summary>
        string[] Exclude { get; set; }
        /// <summary>Exclude all service principals from this rule.</summary>
        bool? ExcludeAllServicePrincipal { get; set; }
        /// <summary>Determines whether the setting is enabled, disabled or report only.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.PimOnlyMode? Mode { get; set; }

    }
}