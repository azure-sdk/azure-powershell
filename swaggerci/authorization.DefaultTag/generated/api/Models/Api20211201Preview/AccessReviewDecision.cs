// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Access Review.</summary>
    public partial class AccessReviewDecision :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecision,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal
    {

        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string AppliedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalId; }

        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string AppliedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalName; }

        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? AppliedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalType; }

        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string AppliedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByUserPrincipalName; }

        /// <summary>The date and time when the review decision was applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? AppliedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedDateTime; }

        /// <summary>The outcome of applying the decision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? ApplyResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ApplyResult; }

        /// <summary>
        /// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? Decision { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Decision; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Decision = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult)""); }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The access review decision id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Id { get => this._id; }

        /// <summary>This is the collection of insights for this decision item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInsight[] Insight { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Insight; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Insight = value ?? null /* arrayOf */; }

        /// <summary>Justification provided by approvers for their action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string Justification { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Justification; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Justification = value ?? null; }

        /// <summary>Internal Acessors for AppliedBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewActorIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.AppliedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedBy = value; }

        /// <summary>Internal Acessors for AppliedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.AppliedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalId = value; }

        /// <summary>Internal Acessors for AppliedByPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.AppliedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalName = value; }

        /// <summary>Internal Acessors for AppliedByPrincipalType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.AppliedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByPrincipalType = value; }

        /// <summary>Internal Acessors for AppliedByUserPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.AppliedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByUserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedByUserPrincipalName = value; }

        /// <summary>Internal Acessors for AppliedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.AppliedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).AppliedDateTime = value; }

        /// <summary>Internal Acessors for ApplyResult</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ApplyResult { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ApplyResult; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ApplyResult = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Id { get => this._id; set { {_id = value;} } }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Name { get => this._name; set { {_name = value;} } }

        /// <summary>Internal Acessors for Principal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Principal { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Principal; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Principal = value; }

        /// <summary>Internal Acessors for PrincipalDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.PrincipalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalDisplayName = value; }

        /// <summary>Internal Acessors for PrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.PrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalId = value; }

        /// <summary>Internal Acessors for PrincipalResourceMembership</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPrincipalResourceMembership Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.PrincipalResourceMembership { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalResourceMembership; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalResourceMembership = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionProperties Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.AccessReviewDecisionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Recommendation</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Recommendation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Recommendation; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Recommendation = value; }

        /// <summary>Internal Acessors for Resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionResource Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Resource { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Resource; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Resource = value; }

        /// <summary>Internal Acessors for ResourceDisplayName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ResourceDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceDisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceDisplayName = value; }

        /// <summary>Internal Acessors for ResourceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceId = value; }

        /// <summary>Internal Acessors for ResourceType</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceType = value; }

        /// <summary>Internal Acessors for ReviewedBy</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewActorIdentity Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ReviewedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedBy = value; }

        /// <summary>Internal Acessors for ReviewedByPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ReviewedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalId = value; }

        /// <summary>Internal Acessors for ReviewedByPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ReviewedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalName = value; }

        /// <summary>Internal Acessors for ReviewedByPrincipalType</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ReviewedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalType = value; }

        /// <summary>Internal Acessors for ReviewedByUserPrincipalName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ReviewedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByUserPrincipalName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByUserPrincipalName = value; }

        /// <summary>Internal Acessors for ReviewedDateTime</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.ReviewedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedDateTime; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedDateTime = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInternal.Type { get => this._type; set { {_type = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The access review decision name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Name { get => this._name; }

        /// <summary>The display name of the user whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string PrincipalDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalDisplayName; }

        /// <summary>The id of principal whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string PrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalId; }

        /// <summary>
        /// Every decision item in an access review represents a principal's membership to a resource. This property represents details
        /// of the membership. Examples of this detail might be whether the principal has direct access or indirect access
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewDecisionPrincipalResourceMembershipType[] PrincipalResourceMembershipType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalResourceMembershipType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalResourceMembershipType = value ?? null /* arrayOf */; }

        /// <summary>The type of decision target : User/ServicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType? PrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).PrincipalType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType)""); }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionProperties _property;

        /// <summary>Access Review Decision properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.AccessReviewDecisionProperties()); set => this._property = value; }

        /// <summary>The feature- generated recommendation shown to the reviewer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Recommendation { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).Recommendation; }

        /// <summary>The display name of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ResourceDisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceDisplayName; }

        /// <summary>The id of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceId; }

        /// <summary>The type of resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ResourceType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ResourceType; }

        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ReviewedByPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalId; }

        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ReviewedByPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalName; }

        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? ReviewedByPrincipalType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByPrincipalType; }

        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string ReviewedByUserPrincipalName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedByUserPrincipalName; }

        /// <summary>Date Time when a decision was taken.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public global::System.DateTime? ReviewedDateTime { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPropertiesInternal)Property).ReviewedDateTime; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Type { get => this._type; }

        /// <summary>Creates an new <see cref="AccessReviewDecision" /> instance.</summary>
        public AccessReviewDecision()
        {

        }
    }
    /// Access Review.
    public partial interface IAccessReviewDecision :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity id",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedByPrincipalId { get;  }
        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity display name",
        SerializedName = @"principalName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedByPrincipalName { get;  }
        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity type : user/servicePrincipal",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? AppliedByPrincipalType { get;  }
        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The user principal name(if valid)",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string AppliedByUserPrincipalName { get;  }
        /// <summary>The date and time when the review decision was applied.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The date and time when the review decision was applied.",
        SerializedName = @"appliedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? AppliedDateTime { get;  }
        /// <summary>The outcome of applying the decision.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The outcome of applying the decision.",
        SerializedName = @"applyResult",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? ApplyResult { get;  }
        /// <summary>
        /// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny",
        SerializedName = @"decision",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? Decision { get; set; }
        /// <summary>The access review decision id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The access review decision id.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get;  }
        /// <summary>This is the collection of insights for this decision item.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This is the collection of insights for this decision item.",
        SerializedName = @"insights",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInsight) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInsight[] Insight { get; set; }
        /// <summary>Justification provided by approvers for their action</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Justification provided by approvers for their action",
        SerializedName = @"justification",
        PossibleTypes = new [] { typeof(string) })]
        string Justification { get; set; }
        /// <summary>The access review decision name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The access review decision name.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get;  }
        /// <summary>The display name of the user whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of the user whose access was reviewed.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalDisplayName { get;  }
        /// <summary>The id of principal whose access was reviewed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of principal whose access was reviewed.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string PrincipalId { get;  }
        /// <summary>
        /// Every decision item in an access review represents a principal's membership to a resource. This property represents details
        /// of the membership. Examples of this detail might be whether the principal has direct access or indirect access
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Every decision item in an access review represents a principal's membership to a resource. This property represents details of the membership. Examples of this detail might be whether the principal has direct access or indirect access",
        SerializedName = @"membershipTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewDecisionPrincipalResourceMembershipType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewDecisionPrincipalResourceMembershipType[] PrincipalResourceMembershipType { get; set; }
        /// <summary>The type of decision target : User/ServicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of decision target : User/ServicePrincipal",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType? PrincipalType { get; set; }
        /// <summary>The feature- generated recommendation shown to the reviewer.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The feature- generated recommendation shown to the reviewer.",
        SerializedName = @"recommendation",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Recommendation { get;  }
        /// <summary>The display name of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The display name of resource associated with a decision record.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceDisplayName { get;  }
        /// <summary>The id of resource associated with a decision record.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The id of resource associated with a decision record.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get;  }
        /// <summary>The type of resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The type of resource",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get;  }
        /// <summary>The identity id</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity id",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string ReviewedByPrincipalId { get;  }
        /// <summary>The identity display name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity display name",
        SerializedName = @"principalName",
        PossibleTypes = new [] { typeof(string) })]
        string ReviewedByPrincipalName { get;  }
        /// <summary>The identity type : user/servicePrincipal</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The identity type : user/servicePrincipal",
        SerializedName = @"principalType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? ReviewedByPrincipalType { get;  }
        /// <summary>The user principal name(if valid)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The user principal name(if valid)",
        SerializedName = @"userPrincipalName",
        PossibleTypes = new [] { typeof(string) })]
        string ReviewedByUserPrincipalName { get;  }
        /// <summary>Date Time when a decision was taken.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date Time when a decision was taken.",
        SerializedName = @"reviewedDateTime",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ReviewedDateTime { get;  }
        /// <summary>The resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get;  }

    }
    /// Access Review.
    internal partial interface IAccessReviewDecisionInternal

    {
        /// <summary>Details of the approver.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewActorIdentity AppliedBy { get; set; }
        /// <summary>The identity id</summary>
        string AppliedByPrincipalId { get; set; }
        /// <summary>The identity display name</summary>
        string AppliedByPrincipalName { get; set; }
        /// <summary>The identity type : user/servicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? AppliedByPrincipalType { get; set; }
        /// <summary>The user principal name(if valid)</summary>
        string AppliedByUserPrincipalName { get; set; }
        /// <summary>The date and time when the review decision was applied.</summary>
        global::System.DateTime? AppliedDateTime { get; set; }
        /// <summary>The outcome of applying the decision.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewApplyResult? ApplyResult { get; set; }
        /// <summary>
        /// The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewResult? Decision { get; set; }
        /// <summary>The access review decision id.</summary>
        string Id { get; set; }
        /// <summary>This is the collection of insights for this decision item.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionInsight[] Insight { get; set; }
        /// <summary>Justification provided by approvers for their action</summary>
        string Justification { get; set; }
        /// <summary>The access review decision name.</summary>
        string Name { get; set; }
        /// <summary>
        /// Principal associated with the decision record. Can be AccessReviewDecisionUserIdentity or AccessReviewDecisionServicePrincipalIdentity
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionIdentity Principal { get; set; }
        /// <summary>The display name of the user whose access was reviewed.</summary>
        string PrincipalDisplayName { get; set; }
        /// <summary>The id of principal whose access was reviewed.</summary>
        string PrincipalId { get; set; }
        /// <summary>Details of the membership type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionPrincipalResourceMembership PrincipalResourceMembership { get; set; }
        /// <summary>
        /// Every decision item in an access review represents a principal's membership to a resource. This property represents details
        /// of the membership. Examples of this detail might be whether the principal has direct access or indirect access
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewDecisionPrincipalResourceMembershipType[] PrincipalResourceMembershipType { get; set; }
        /// <summary>The type of decision target : User/ServicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.DecisionTargetType? PrincipalType { get; set; }
        /// <summary>Access Review Decision properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionProperties Property { get; set; }
        /// <summary>The feature- generated recommendation shown to the reviewer.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessRecommendationType? Recommendation { get; set; }
        /// <summary>Resource associated with this decision record.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewDecisionResource Resource { get; set; }
        /// <summary>The display name of resource associated with a decision record.</summary>
        string ResourceDisplayName { get; set; }
        /// <summary>The id of resource associated with a decision record.</summary>
        string ResourceId { get; set; }
        /// <summary>The type of resource</summary>
        string ResourceType { get; set; }
        /// <summary>Details of the approver.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20211201Preview.IAccessReviewActorIdentity ReviewedBy { get; set; }
        /// <summary>The identity id</summary>
        string ReviewedByPrincipalId { get; set; }
        /// <summary>The identity display name</summary>
        string ReviewedByPrincipalName { get; set; }
        /// <summary>The identity type : user/servicePrincipal</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Support.AccessReviewActorIdentityType? ReviewedByPrincipalType { get; set; }
        /// <summary>The user principal name(if valid)</summary>
        string ReviewedByUserPrincipalName { get; set; }
        /// <summary>Date Time when a decision was taken.</summary>
        global::System.DateTime? ReviewedDateTime { get; set; }
        /// <summary>The resource type.</summary>
        string Type { get; set; }

    }
}