// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Extensions;

    /// <summary>Classic Administrators</summary>
    public partial class ClassicAdministrator :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministrator,
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorInternal
    {

        /// <summary>The email address of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string EmailAddress { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorPropertiesInternal)Property).EmailAddress; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorPropertiesInternal)Property).EmailAddress = value ?? null; }

        /// <summary>Backing field for <see cref="Id" /> property.</summary>
        private string _id;

        /// <summary>The ID of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Id { get => this._id; set => this._id = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorProperties Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.ClassicAdministratorProperties()); set { {_property = value;} } }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>The name of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorProperties _property;

        /// <summary>Properties for the classic administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.ClassicAdministratorProperties()); set => this._property = value; }

        /// <summary>The role of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Inlined)]
        public string Role { get => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorPropertiesInternal)Property).Role; set => ((Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorPropertiesInternal)Property).Role = value ?? null; }

        /// <summary>Backing field for <see cref="Type" /> property.</summary>
        private string _type;

        /// <summary>The type of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Origin(Microsoft.Azure.PowerShell.Cmdlets.Authorization.PropertyOrigin.Owned)]
        public string Type { get => this._type; set => this._type = value; }

        /// <summary>Creates an new <see cref="ClassicAdministrator" /> instance.</summary>
        public ClassicAdministrator()
        {

        }
    }
    /// Classic Administrators
    public partial interface IClassicAdministrator :
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.IJsonSerializable
    {
        /// <summary>The email address of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The email address of the administrator.",
        SerializedName = @"emailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string EmailAddress { get; set; }
        /// <summary>The ID of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the administrator.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string Id { get; set; }
        /// <summary>The name of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the administrator.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>The role of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The role of the administrator.",
        SerializedName = @"role",
        PossibleTypes = new [] { typeof(string) })]
        string Role { get; set; }
        /// <summary>The type of the administrator.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Authorization.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of the administrator.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(string) })]
        string Type { get; set; }

    }
    /// Classic Administrators
    internal partial interface IClassicAdministratorInternal

    {
        /// <summary>The email address of the administrator.</summary>
        string EmailAddress { get; set; }
        /// <summary>The ID of the administrator.</summary>
        string Id { get; set; }
        /// <summary>The name of the administrator.</summary>
        string Name { get; set; }
        /// <summary>Properties for the classic administrator.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Authorization.Models.Api20150701.IClassicAdministratorProperties Property { get; set; }
        /// <summary>The role of the administrator.</summary>
        string Role { get; set; }
        /// <summary>The type of the administrator.</summary>
        string Type { get; set; }

    }
}