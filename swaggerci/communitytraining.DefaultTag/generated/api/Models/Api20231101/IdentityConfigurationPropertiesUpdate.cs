// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Community.Models.Api20231101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Extensions;

    /// <summary>Details of the Community CommunityTraining Identity Configuration</summary>
    public partial class IdentityConfigurationPropertiesUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Community.Models.Api20231101.IIdentityConfigurationPropertiesUpdate,
        Microsoft.Azure.PowerShell.Cmdlets.Community.Models.Api20231101.IIdentityConfigurationPropertiesUpdateInternal
    {

        /// <summary>Backing field for <see cref="B2CAuthenticationPolicy" /> property.</summary>
        private string _b2CAuthenticationPolicy;

        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string B2CAuthenticationPolicy { get => this._b2CAuthenticationPolicy; set => this._b2CAuthenticationPolicy = value; }

        /// <summary>Backing field for <see cref="B2CPasswordResetPolicy" /> property.</summary>
        private string _b2CPasswordResetPolicy;

        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string B2CPasswordResetPolicy { get => this._b2CPasswordResetPolicy; set => this._b2CPasswordResetPolicy = value; }

        /// <summary>Backing field for <see cref="ClientId" /> property.</summary>
        private string _clientId;

        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string ClientId { get => this._clientId; set => this._clientId = value; }

        /// <summary>Backing field for <see cref="ClientSecret" /> property.</summary>
        private System.Security.SecureString _clientSecret;

        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public System.Security.SecureString ClientSecret { get => this._clientSecret; set => this._clientSecret = value; }

        /// <summary>Backing field for <see cref="CustomLoginParameter" /> property.</summary>
        private string _customLoginParameter;

        /// <summary>The custom login parameters for the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string CustomLoginParameter { get => this._customLoginParameter; set => this._customLoginParameter = value; }

        /// <summary>Backing field for <see cref="DomainName" /> property.</summary>
        private string _domainName;

        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string DomainName { get => this._domainName; set => this._domainName = value; }

        /// <summary>Backing field for <see cref="IdentityType" /> property.</summary>
        private string _identityType;

        /// <summary>The identity type of the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string IdentityType { get => this._identityType; set => this._identityType = value; }

        /// <summary>Backing field for <see cref="TeamsEnabled" /> property.</summary>
        private bool? _teamsEnabled;

        /// <summary>To indicate whether the Community Training Resource has Teams enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public bool? TeamsEnabled { get => this._teamsEnabled; set => this._teamsEnabled = value; }

        /// <summary>Backing field for <see cref="TenantId" /> property.</summary>
        private string _tenantId;

        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Origin(Microsoft.Azure.PowerShell.Cmdlets.Community.PropertyOrigin.Owned)]
        public string TenantId { get => this._tenantId; set => this._tenantId = value; }

        /// <summary>Creates an new <see cref="IdentityConfigurationPropertiesUpdate" /> instance.</summary>
        public IdentityConfigurationPropertiesUpdate()
        {

        }
    }
    /// Details of the Community CommunityTraining Identity Configuration
    public partial interface IIdentityConfigurationPropertiesUpdate :
        Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the authentication policy registered in ADB2C for the Community Training Resource",
        SerializedName = @"b2cAuthenticationPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string B2CAuthenticationPolicy { get; set; }
        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the password reset policy registered in ADB2C for the Community Training Resource",
        SerializedName = @"b2cPasswordResetPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string B2CPasswordResetPolicy { get; set; }
        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The clientId of the application registered in the selected identity provider for the Community Training Resource",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string ClientId { get; set; }
        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client secret of the application registered in the selected identity provider for the Community Training Resource",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString ClientSecret { get; set; }
        /// <summary>The custom login parameters for the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom login parameters for the Community Training Resource",
        SerializedName = @"customLoginParameters",
        PossibleTypes = new [] { typeof(string) })]
        string CustomLoginParameter { get; set; }
        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The domain name of the selected identity provider for the Community Training Resource",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string DomainName { get; set; }
        /// <summary>The identity type of the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type of the Community Training Resource",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityType { get; set; }
        /// <summary>To indicate whether the Community Training Resource has Teams enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To indicate whether the Community Training Resource has Teams enabled",
        SerializedName = @"teamsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TeamsEnabled { get; set; }
        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Community.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The tenantId of the selected identity provider for the Community Training Resource",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string TenantId { get; set; }

    }
    /// Details of the Community CommunityTraining Identity Configuration
    internal partial interface IIdentityConfigurationPropertiesUpdateInternal

    {
        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        string B2CAuthenticationPolicy { get; set; }
        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        string B2CPasswordResetPolicy { get; set; }
        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        string ClientId { get; set; }
        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        System.Security.SecureString ClientSecret { get; set; }
        /// <summary>The custom login parameters for the Community Training Resource</summary>
        string CustomLoginParameter { get; set; }
        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        string DomainName { get; set; }
        /// <summary>The identity type of the Community Training Resource</summary>
        string IdentityType { get; set; }
        /// <summary>To indicate whether the Community Training Resource has Teams enabled</summary>
        bool? TeamsEnabled { get; set; }
        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        string TenantId { get; set; }

    }
}