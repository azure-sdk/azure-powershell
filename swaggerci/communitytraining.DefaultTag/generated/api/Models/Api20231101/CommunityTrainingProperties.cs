// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Extensions;

    /// <summary>Details of the Community CommunityTraining.</summary>
    public partial class CommunityTrainingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.ICommunityTrainingProperties,
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.ICommunityTrainingPropertiesInternal
    {

        /// <summary>Backing field for <see cref="DisasterRecoveryEnabled" /> property.</summary>
        private bool _disasterRecoveryEnabled;

        /// <summary>
        /// To indicate whether the Community Training instance has Disaster Recovery enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public bool DisasterRecoveryEnabled { get => this._disasterRecoveryEnabled; set => this._disasterRecoveryEnabled = value; }

        /// <summary>Backing field for <see cref="IdentityConfiguration" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationProperties _identityConfiguration;

        /// <summary>The identity configuration of the Community Training resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationProperties IdentityConfiguration { get => (this._identityConfiguration = this._identityConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IdentityConfigurationProperties()); set => this._identityConfiguration = value; }

        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationB2CAuthenticationPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).B2CAuthenticationPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).B2CAuthenticationPolicy = value ?? null; }

        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationB2CPasswordResetPolicy { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).B2CPasswordResetPolicy; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).B2CPasswordResetPolicy = value ?? null; }

        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).ClientId = value ; }

        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public System.Security.SecureString IdentityConfigurationClientSecret { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).ClientSecret; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).ClientSecret = value ; }

        /// <summary>The custom login parameters for the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationCustomLoginParameter { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).CustomLoginParameter; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).CustomLoginParameter = value ?? null; }

        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationDomainName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).DomainName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).DomainName = value ; }

        /// <summary>The identity type of the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).IdentityType; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).IdentityType = value ; }

        /// <summary>To indicate whether the Community Training Resource has Teams enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public bool? IdentityConfigurationTeamsEnabled { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).TeamsEnabled; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).TeamsEnabled = value ?? default(bool); }

        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Inlined)]
        public string IdentityConfigurationTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationPropertiesInternal)IdentityConfiguration).TenantId = value ; }

        /// <summary>Internal Acessors for IdentityConfiguration</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationProperties Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.ICommunityTrainingPropertiesInternal.IdentityConfiguration { get => (this._identityConfiguration = this._identityConfiguration ?? new Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IdentityConfigurationProperties()); set { {_identityConfiguration = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.ICommunityTrainingPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="PortalAdminEmailAddress" /> property.</summary>
        private string _portalAdminEmailAddress;

        /// <summary>The email address of the portal admin</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public string PortalAdminEmailAddress { get => this._portalAdminEmailAddress; set => this._portalAdminEmailAddress = value; }

        /// <summary>Backing field for <see cref="PortalName" /> property.</summary>
        private string _portalName;

        /// <summary>The portal name (website name) of the Community Training instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public string PortalName { get => this._portalName; set => this._portalName = value; }

        /// <summary>Backing field for <see cref="PortalOwnerEmailAddress" /> property.</summary>
        private string _portalOwnerEmailAddress;

        /// <summary>The email address of the portal owner. Will be used as the primary contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public string PortalOwnerEmailAddress { get => this._portalOwnerEmailAddress; set => this._portalOwnerEmailAddress = value; }

        /// <summary>Backing field for <see cref="PortalOwnerOrganizationName" /> property.</summary>
        private string _portalOwnerOrganizationName;

        /// <summary>The organization name of the portal owner</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public string PortalOwnerOrganizationName { get => this._portalOwnerOrganizationName; set => this._portalOwnerOrganizationName = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Support.ProvisioningState? _provisioningState;

        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ZoneRedundancyEnabled" /> property.</summary>
        private bool _zoneRedundancyEnabled;

        /// <summary>To indicate whether the Community Training instance has Zone Redundancy enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Origin(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.PropertyOrigin.Owned)]
        public bool ZoneRedundancyEnabled { get => this._zoneRedundancyEnabled; set => this._zoneRedundancyEnabled = value; }

        /// <summary>Creates an new <see cref="CommunityTrainingProperties" /> instance.</summary>
        public CommunityTrainingProperties()
        {

        }
    }
    /// Details of the Community CommunityTraining.
    public partial interface ICommunityTrainingProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.IJsonSerializable
    {
        /// <summary>
        /// To indicate whether the Community Training instance has Disaster Recovery enabled
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"To indicate whether the Community Training instance has Disaster Recovery enabled",
        SerializedName = @"disasterRecoveryEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool DisasterRecoveryEnabled { get; set; }
        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the authentication policy registered in ADB2C for the Community Training Resource",
        SerializedName = @"b2cAuthenticationPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationB2CAuthenticationPolicy { get; set; }
        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the password reset policy registered in ADB2C for the Community Training Resource",
        SerializedName = @"b2cPasswordResetPolicy",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationB2CPasswordResetPolicy { get; set; }
        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The clientId of the application registered in the selected identity provider for the Community Training Resource",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationClientId { get; set; }
        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The client secret of the application registered in the selected identity provider for the Community Training Resource",
        SerializedName = @"clientSecret",
        PossibleTypes = new [] { typeof(System.Security.SecureString) })]
        System.Security.SecureString IdentityConfigurationClientSecret { get; set; }
        /// <summary>The custom login parameters for the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The custom login parameters for the Community Training Resource",
        SerializedName = @"customLoginParameters",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationCustomLoginParameter { get; set; }
        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The domain name of the selected identity provider for the Community Training Resource",
        SerializedName = @"domainName",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationDomainName { get; set; }
        /// <summary>The identity type of the Community Training Resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The identity type of the Community Training Resource",
        SerializedName = @"identityType",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationIdentityType { get; set; }
        /// <summary>To indicate whether the Community Training Resource has Teams enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"To indicate whether the Community Training Resource has Teams enabled",
        SerializedName = @"teamsEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IdentityConfigurationTeamsEnabled { get; set; }
        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The tenantId of the selected identity provider for the Community Training Resource",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string IdentityConfigurationTenantId { get; set; }
        /// <summary>The email address of the portal admin</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The email address of the portal admin",
        SerializedName = @"portalAdminEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PortalAdminEmailAddress { get; set; }
        /// <summary>The portal name (website name) of the Community Training instance</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The portal name (website name) of the Community Training instance",
        SerializedName = @"portalName",
        PossibleTypes = new [] { typeof(string) })]
        string PortalName { get; set; }
        /// <summary>The email address of the portal owner. Will be used as the primary contact</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The email address of the portal owner. Will be used as the primary contact",
        SerializedName = @"portalOwnerEmailAddress",
        PossibleTypes = new [] { typeof(string) })]
        string PortalOwnerEmailAddress { get; set; }
        /// <summary>The organization name of the portal owner</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The organization name of the portal owner",
        SerializedName = @"portalOwnerOrganizationName",
        PossibleTypes = new [] { typeof(string) })]
        string PortalOwnerOrganizationName { get; set; }
        /// <summary>The status of the last operation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the last operation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>To indicate whether the Community Training instance has Zone Redundancy enabled</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"To indicate whether the Community Training instance has Zone Redundancy enabled",
        SerializedName = @"zoneRedundancyEnabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool ZoneRedundancyEnabled { get; set; }

    }
    /// Details of the Community CommunityTraining.
    internal partial interface ICommunityTrainingPropertiesInternal

    {
        /// <summary>
        /// To indicate whether the Community Training instance has Disaster Recovery enabled
        /// </summary>
        bool DisasterRecoveryEnabled { get; set; }
        /// <summary>The identity configuration of the Community Training resource</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Models.Api20231101.IIdentityConfigurationProperties IdentityConfiguration { get; set; }
        /// <summary>
        /// The name of the authentication policy registered in ADB2C for the Community Training Resource
        /// </summary>
        string IdentityConfigurationB2CAuthenticationPolicy { get; set; }
        /// <summary>
        /// The name of the password reset policy registered in ADB2C for the Community Training Resource
        /// </summary>
        string IdentityConfigurationB2CPasswordResetPolicy { get; set; }
        /// <summary>
        /// The clientId of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        string IdentityConfigurationClientId { get; set; }
        /// <summary>
        /// The client secret of the application registered in the selected identity provider for the Community Training Resource
        /// </summary>
        System.Security.SecureString IdentityConfigurationClientSecret { get; set; }
        /// <summary>The custom login parameters for the Community Training Resource</summary>
        string IdentityConfigurationCustomLoginParameter { get; set; }
        /// <summary>
        /// The domain name of the selected identity provider for the Community Training Resource
        /// </summary>
        string IdentityConfigurationDomainName { get; set; }
        /// <summary>The identity type of the Community Training Resource</summary>
        string IdentityConfigurationIdentityType { get; set; }
        /// <summary>To indicate whether the Community Training Resource has Teams enabled</summary>
        bool? IdentityConfigurationTeamsEnabled { get; set; }
        /// <summary>
        /// The tenantId of the selected identity provider for the Community Training Resource
        /// </summary>
        string IdentityConfigurationTenantId { get; set; }
        /// <summary>The email address of the portal admin</summary>
        string PortalAdminEmailAddress { get; set; }
        /// <summary>The portal name (website name) of the Community Training instance</summary>
        string PortalName { get; set; }
        /// <summary>The email address of the portal owner. Will be used as the primary contact</summary>
        string PortalOwnerEmailAddress { get; set; }
        /// <summary>The organization name of the portal owner</summary>
        string PortalOwnerOrganizationName { get; set; }
        /// <summary>The status of the last operation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CommunityTest.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>To indicate whether the Community Training instance has Zone Redundancy enabled</summary>
        bool ZoneRedundancyEnabled { get; set; }

    }
}