// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Extensions;

    /// <summary>
    /// The list of subscriptions and it's monitoring status by current Datadog monitor.
    /// </summary>
    public partial class MonitoredSubscription :
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoredSubscription,
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoredSubscriptionInternal
    {

        /// <summary>Backing field for <see cref="Error" /> property.</summary>
        private string _error;

        /// <summary>The reason of not monitoring the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Owned)]
        public string Error { get => this._error; set => this._error = value; }

        /// <summary>
        /// List of filtering tags to be used for capturing logs. This only takes effect if SendResourceLogs flag is enabled. If empty,
        /// all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available
        /// resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag[] LogRuleFilteringTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleFilteringTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleFilteringTag = value ?? null /* arrayOf */; }

        /// <summary>Flag specifying if AAD logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public bool? LogRuleSendAadLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendAadLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendAadLog = value ?? default(bool); }

        /// <summary>Flag specifying if Azure resource logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public bool? LogRuleSendResourceLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendResourceLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendResourceLog = value ?? default(bool); }

        /// <summary>
        /// Flag specifying if Azure subscription logs should be sent for the Monitor resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public bool? LogRuleSendSubscriptionLog { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendSubscriptionLog; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRuleSendSubscriptionLog = value ?? default(bool); }

        /// <summary>
        /// List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action
        /// is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules
        /// will only include resources with the associated tags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag[] MetricRuleFilteringTag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).MetricRuleFilteringTag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).MetricRuleFilteringTag = value ?? null /* arrayOf */; }

        /// <summary>Internal Acessors for TagRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesProperties Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoredSubscriptionInternal.TagRule { get => (this._tagRule = this._tagRule ?? new Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.MonitoringTagRulesProperties()); set { {_tagRule = value;} } }

        /// <summary>Internal Acessors for TagRuleLogRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.ILogRules Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoredSubscriptionInternal.TagRuleLogRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).LogRule = value; }

        /// <summary>Internal Acessors for TagRuleMetricRule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMetricRules Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoredSubscriptionInternal.TagRuleMetricRule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).MetricRule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).MetricRule = value; }

        /// <summary>Internal Acessors for TagRuleProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoredSubscriptionInternal.TagRuleProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).ProvisioningState = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.Status? _status;

        /// <summary>The state of monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.Status? Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>The subscriptionId to be monitored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; set => this._subscriptionId = value; }

        /// <summary>Backing field for <see cref="TagRule" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesProperties _tagRule;

        /// <summary>Definition of the properties for a TagRules resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesProperties TagRule { get => (this._tagRule = this._tagRule ?? new Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.MonitoringTagRulesProperties()); set => this._tagRule = value; }

        /// <summary>Configuration to enable/disable auto-muting flag</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public bool? TagRuleAutomuting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).Automuting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).Automuting = value ?? default(bool); }

        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Origin(Microsoft.Azure.PowerShell.Cmdlets.Datadog.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.ProvisioningState? TagRuleProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesPropertiesInternal)TagRule).ProvisioningState; }

        /// <summary>Creates an new <see cref="MonitoredSubscription" /> instance.</summary>
        public MonitoredSubscription()
        {

        }
    }
    /// The list of subscriptions and it's monitoring status by current Datadog monitor.
    public partial interface IMonitoredSubscription :
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.IJsonSerializable
    {
        /// <summary>The reason of not monitoring the subscription.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The reason of not monitoring the subscription.",
        SerializedName = @"error",
        PossibleTypes = new [] { typeof(string) })]
        string Error { get; set; }
        /// <summary>
        /// List of filtering tags to be used for capturing logs. This only takes effect if SendResourceLogs flag is enabled. If empty,
        /// all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available
        /// resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of filtering tags to be used for capturing logs. This only takes effect if SendResourceLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
        SerializedName = @"filteringTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag[] LogRuleFilteringTag { get; set; }
        /// <summary>Flag specifying if AAD logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag specifying if AAD logs should be sent for the Monitor resource.",
        SerializedName = @"sendAadLogs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogRuleSendAadLog { get; set; }
        /// <summary>Flag specifying if Azure resource logs should be sent for the Monitor resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag specifying if Azure resource logs should be sent for the Monitor resource.",
        SerializedName = @"sendResourceLogs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogRuleSendResourceLog { get; set; }
        /// <summary>
        /// Flag specifying if Azure subscription logs should be sent for the Monitor resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag specifying if Azure subscription logs should be sent for the Monitor resource.",
        SerializedName = @"sendSubscriptionLogs",
        PossibleTypes = new [] { typeof(bool) })]
        bool? LogRuleSendSubscriptionLog { get; set; }
        /// <summary>
        /// List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action
        /// is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules
        /// will only include resources with the associated tags.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.",
        SerializedName = @"filteringTags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag) })]
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag[] MetricRuleFilteringTag { get; set; }
        /// <summary>The state of monitoring.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The state of monitoring.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.Status) })]
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.Status? Status { get; set; }
        /// <summary>The subscriptionId to be monitored.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The subscriptionId to be monitored.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get; set; }
        /// <summary>Configuration to enable/disable auto-muting flag</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration to enable/disable auto-muting flag",
        SerializedName = @"automuting",
        PossibleTypes = new [] { typeof(bool) })]
        bool? TagRuleAutomuting { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Datadog.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.ProvisioningState? TagRuleProvisioningState { get;  }

    }
    /// The list of subscriptions and it's monitoring status by current Datadog monitor.
    internal partial interface IMonitoredSubscriptionInternal

    {
        /// <summary>The reason of not monitoring the subscription.</summary>
        string Error { get; set; }
        /// <summary>
        /// List of filtering tags to be used for capturing logs. This only takes effect if SendResourceLogs flag is enabled. If empty,
        /// all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available
        /// resources. If Include actions are specified, the rules will only include resources with the associated tags.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag[] LogRuleFilteringTag { get; set; }
        /// <summary>Flag specifying if AAD logs should be sent for the Monitor resource.</summary>
        bool? LogRuleSendAadLog { get; set; }
        /// <summary>Flag specifying if Azure resource logs should be sent for the Monitor resource.</summary>
        bool? LogRuleSendResourceLog { get; set; }
        /// <summary>
        /// Flag specifying if Azure subscription logs should be sent for the Monitor resource.
        /// </summary>
        bool? LogRuleSendSubscriptionLog { get; set; }
        /// <summary>
        /// List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action
        /// is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules
        /// will only include resources with the associated tags.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IFilteringTag[] MetricRuleFilteringTag { get; set; }
        /// <summary>The state of monitoring.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.Status? Status { get; set; }
        /// <summary>The subscriptionId to be monitored.</summary>
        string SubscriptionId { get; set; }
        /// <summary>Definition of the properties for a TagRules resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMonitoringTagRulesProperties TagRule { get; set; }
        /// <summary>Configuration to enable/disable auto-muting flag</summary>
        bool? TagRuleAutomuting { get; set; }
        /// <summary>Set of rules for sending logs for the Monitor resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.ILogRules TagRuleLogRule { get; set; }
        /// <summary>Set of rules for sending metrics for the Monitor resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Models.Api202301.IMetricRules TagRuleMetricRule { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Datadog.Support.ProvisioningState? TagRuleProvisioningState { get; set; }

    }
}