// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>Scheduled action definition.</summary>
    public partial class ScheduledAction :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledAction,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResource __scheduledActionProxyResource = new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ScheduledActionProxyResource();

        /// <summary>Scheduled action name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string DisplayName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).DisplayName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).DisplayName = value ?? null; }

        /// <summary>Resource Etag.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).ETag; }

        /// <summary>Destination of the view data. Currently only csv format is supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.FileFormat[] FileDestinationFileFormat { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).FileDestinationFileFormat; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).FileDestinationFileFormat = value ?? null /* arrayOf */; }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Id; }

        /// <summary>Kind of the scheduled action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionKind? Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Kind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionKind)""); }

        /// <summary>Internal Acessors for FileDestination</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IFileDestination Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionInternal.FileDestination { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).FileDestination; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).FileDestination = value; }

        /// <summary>Internal Acessors for Notification</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.INotificationProperties Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionInternal.Notification { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Notification; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Notification = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProperties Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ScheduledActionProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for Schedule</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduleProperties Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionInternal.Schedule { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Schedule; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Schedule = value; }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal.ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).ETag = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Name; }

        /// <summary>Optional message to be added in the email. Length is limited to 250 characters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string NotificationMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).NotificationMessage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).NotificationMessage = value ?? null; }

        /// <summary>Subject of the email. Length is limited to 70 characters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string NotificationSubject { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).NotificationSubject; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).NotificationSubject = value ?? null; }

        /// <summary>Array of email addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string[] NotificationTo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).NotificationTo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).NotificationTo = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProperties _property;

        /// <summary>The properties of the scheduled action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ScheduledActionProperties()); set => this._property = value; }

        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
        /// is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public int? ScheduleDayOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleDayOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleDayOfMonth = value ?? default(int); }

        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
        /// or Monthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] ScheduleDaysOfWeek { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleDaysOfWeek; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleDaysOfWeek = value ?? null /* arrayOf */; }

        /// <summary>The end date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? ScheduleEndDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleEndDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleEndDate = value ?? default(global::System.DateTime); }

        /// <summary>Frequency of the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency? ScheduleFrequency { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleFrequency; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleFrequency = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency)""); }

        /// <summary>UTC time at which cost analysis data will be emailed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public int? ScheduleHourOfDay { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleHourOfDay; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleHourOfDay = value ?? default(int); }

        /// <summary>The start date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? ScheduleStartDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleStartDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleStartDate = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
        /// with daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] ScheduleWeeksOfMonth { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleWeeksOfMonth; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ScheduleWeeksOfMonth = value ?? null /* arrayOf */; }

        /// <summary>
        /// Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for
        /// ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}'
        /// for ExternalSubscription scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Scope = value ?? null; }

        /// <summary>Status of the scheduled action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionStatus? Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).Status = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionStatus)""); }

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.CreatedByType)""); }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal)__scheduledActionProxyResource).Type; }

        /// <summary>
        /// Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string ViewId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ViewId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionPropertiesInternal)Property).ViewId = value ?? null; }

        /// <summary>Creates an new <see cref="ScheduledAction" /> instance.</summary>
        public ScheduledAction()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__scheduledActionProxyResource), __scheduledActionProxyResource);
            await eventListener.AssertObjectIsValid(nameof(__scheduledActionProxyResource), __scheduledActionProxyResource);
        }
    }
    /// Scheduled action definition.
    public partial interface IScheduledAction :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResource
    {
        /// <summary>Scheduled action name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Scheduled action name.",
        SerializedName = @"displayName",
        PossibleTypes = new [] { typeof(string) })]
        string DisplayName { get; set; }
        /// <summary>Destination of the view data. Currently only csv format is supported.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Destination of the view data. Currently only csv format is supported.",
        SerializedName = @"fileFormats",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.FileFormat) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.FileFormat[] FileDestinationFileFormat { get; set; }
        /// <summary>Optional message to be added in the email. Length is limited to 250 characters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Optional message to be added in the email. Length is limited to 250 characters.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationMessage { get; set; }
        /// <summary>Subject of the email. Length is limited to 70 characters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Subject of the email. Length is limited to 70 characters.",
        SerializedName = @"subject",
        PossibleTypes = new [] { typeof(string) })]
        string NotificationSubject { get; set; }
        /// <summary>Array of email addresses.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Array of email addresses.",
        SerializedName = @"to",
        PossibleTypes = new [] { typeof(string) })]
        string[] NotificationTo { get; set; }
        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
        /// is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        SerializedName = @"dayOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleDayOfMonth { get; set; }
        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
        /// or Monthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] ScheduleDaysOfWeek { get; set; }
        /// <summary>The end date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The end date and time of the scheduled action (UTC).",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ScheduleEndDate { get; set; }
        /// <summary>Frequency of the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Frequency of the schedule.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency? ScheduleFrequency { get; set; }
        /// <summary>UTC time at which cost analysis data will be emailed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC time at which cost analysis data will be emailed.",
        SerializedName = @"hourOfDay",
        PossibleTypes = new [] { typeof(int) })]
        int? ScheduleHourOfDay { get; set; }
        /// <summary>The start date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The start date and time of the scheduled action (UTC).",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ScheduleStartDate { get; set; }
        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
        /// with daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        SerializedName = @"weeksOfMonth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] ScheduleWeeksOfMonth { get; set; }
        /// <summary>
        /// Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for
        /// ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}'
        /// for ExternalSubscription scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Status of the scheduled action.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status of the scheduled action.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionStatus? Status { get; set; }
        /// <summary>
        /// Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'",
        SerializedName = @"viewId",
        PossibleTypes = new [] { typeof(string) })]
        string ViewId { get; set; }

    }
    /// Scheduled action definition.
    internal partial interface IScheduledActionInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProxyResourceInternal
    {
        /// <summary>Scheduled action name.</summary>
        string DisplayName { get; set; }
        /// <summary>Destination format of the view data. This is optional.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IFileDestination FileDestination { get; set; }
        /// <summary>Destination of the view data. Currently only csv format is supported.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.FileFormat[] FileDestinationFileFormat { get; set; }
        /// <summary>Notification properties based on scheduled action kind.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.INotificationProperties Notification { get; set; }
        /// <summary>Optional message to be added in the email. Length is limited to 250 characters.</summary>
        string NotificationMessage { get; set; }
        /// <summary>Subject of the email. Length is limited to 70 characters.</summary>
        string NotificationSubject { get; set; }
        /// <summary>Array of email addresses.</summary>
        string[] NotificationTo { get; set; }
        /// <summary>The properties of the scheduled action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduledActionProperties Property { get; set; }
        /// <summary>Schedule of the scheduled action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IScheduleProperties Schedule { get; set; }
        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
        /// is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        int? ScheduleDayOfMonth { get; set; }
        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
        /// or Monthly.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] ScheduleDaysOfWeek { get; set; }
        /// <summary>The end date and time of the scheduled action (UTC).</summary>
        global::System.DateTime? ScheduleEndDate { get; set; }
        /// <summary>Frequency of the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency? ScheduleFrequency { get; set; }
        /// <summary>UTC time at which cost analysis data will be emailed.</summary>
        int? ScheduleHourOfDay { get; set; }
        /// <summary>The start date and time of the scheduled action (UTC).</summary>
        global::System.DateTime? ScheduleStartDate { get; set; }
        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
        /// with daysOfWeek.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] ScheduleWeeksOfMonth { get; set; }
        /// <summary>
        /// Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        /// for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}'
        /// for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}'
        /// for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}'
        /// for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}'
        /// for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for
        /// ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}'
        /// for ExternalSubscription scope.
        /// </summary>
        string Scope { get; set; }
        /// <summary>Status of the scheduled action.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduledActionStatus? Status { get; set; }
        /// <summary>
        /// Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'
        /// </summary>
        string ViewId { get; set; }

    }
}