// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>The properties of the tag inheritance setting.</summary>
    public partial class TagInheritanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ITagInheritanceProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ITagInheritancePropertiesInternal
    {

        /// <summary>Backing field for <see cref="PreferContainerTag" /> property.</summary>
        private bool _preferContainerTag;

        /// <summary>
        /// Prefer Container tags to overide container tags with resource tags in case of conflicts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public bool PreferContainerTag { get => this._preferContainerTag; set => this._preferContainerTag = value; }

        /// <summary>Creates an new <see cref="TagInheritanceProperties" /> instance.</summary>
        public TagInheritanceProperties()
        {

        }
    }
    /// The properties of the tag inheritance setting.
    public partial interface ITagInheritanceProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Prefer Container tags to overide container tags with resource tags in case of conflicts.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Prefer Container tags to overide container tags with resource tags in case of conflicts.",
        SerializedName = @"preferContainerTags",
        PossibleTypes = new [] { typeof(bool) })]
        bool PreferContainerTag { get; set; }

    }
    /// The properties of the tag inheritance setting.
    internal partial interface ITagInheritancePropertiesInternal

    {
        /// <summary>
        /// Prefer Container tags to overide container tags with resource tags in case of conflicts.
        /// </summary>
        bool PreferContainerTag { get; set; }

    }
}