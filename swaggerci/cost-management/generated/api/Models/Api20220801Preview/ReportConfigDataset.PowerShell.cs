// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview
{
    using Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.PowerShell;

    /// <summary>The definition of data present in the report.</summary>
    [System.ComponentModel.TypeConverter(typeof(ReportConfigDatasetTypeConverter))]
    public partial class ReportConfigDataset
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDataset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDataset" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDataset DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new ReportConfigDataset(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDataset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDataset" />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDataset DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new ReportConfigDataset(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="ReportConfigDataset" />, deserializing the content from a json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>an instance of the <see cref="ReportConfigDataset" /> model class.</returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDataset FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDataset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal ReportConfigDataset(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Configuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Configuration = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetConfiguration) content.GetValueForProperty("Configuration",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Configuration, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDatasetConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Filter = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Filter, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigFilterTypeConverter.ConvertFrom);
            }
            if (content.Contains("Granularity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Granularity = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ReportGranularityType?) content.GetValueForProperty("Granularity",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Granularity, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ReportGranularityType.CreateFrom);
            }
            if (content.Contains("Aggregation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Aggregation = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetAggregation) content.GetValueForProperty("Aggregation",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Aggregation, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDatasetAggregationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Grouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Grouping = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigGrouping[]) content.GetValueForProperty("Grouping",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Grouping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigGrouping>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigGroupingTypeConverter.ConvertFrom));
            }
            if (content.Contains("Sorting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Sorting = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigSorting[]) content.GetValueForProperty("Sorting",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Sorting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigSorting>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigSortingTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConfigurationColumn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).ConfigurationColumn = (string[]) content.GetValueForProperty("ConfigurationColumn",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).ConfigurationColumn, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("FilterDimension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterDimension = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigComparisonExpression) content.GetValueForProperty("FilterDimension",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterDimension, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigComparisonExpressionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FilterTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterTag = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigComparisonExpression) content.GetValueForProperty("FilterTag",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterTag, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigComparisonExpressionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FilterAnd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterAnd = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter[]) content.GetValueForProperty("FilterAnd",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterAnd, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigFilterTypeConverter.ConvertFrom));
            }
            if (content.Contains("FilterOr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterOr = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter[]) content.GetValueForProperty("FilterOr",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterOr, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigFilterTypeConverter.ConvertFrom));
            }
            if (content.Contains("DimensionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionName = (string) content.GetValueForProperty("DimensionName",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionName, global::System.Convert.ToString);
            }
            if (content.Contains("DimensionOperator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionOperator = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType) content.GetValueForProperty("DimensionOperator",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionOperator, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType.CreateFrom);
            }
            if (content.Contains("DimensionValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionValue = (string[]) content.GetValueForProperty("DimensionValue",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionValue, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TagName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagName = (string) content.GetValueForProperty("TagName",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagName, global::System.Convert.ToString);
            }
            if (content.Contains("TagOperator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagOperator = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType) content.GetValueForProperty("TagOperator",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagOperator, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType.CreateFrom);
            }
            if (content.Contains("TagValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagValue = (string[]) content.GetValueForProperty("TagValue",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagValue, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDataset"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal ReportConfigDataset(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("Configuration"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Configuration = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetConfiguration) content.GetValueForProperty("Configuration",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Configuration, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDatasetConfigurationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Filter"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Filter = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter) content.GetValueForProperty("Filter",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Filter, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigFilterTypeConverter.ConvertFrom);
            }
            if (content.Contains("Granularity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Granularity = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ReportGranularityType?) content.GetValueForProperty("Granularity",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Granularity, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ReportGranularityType.CreateFrom);
            }
            if (content.Contains("Aggregation"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Aggregation = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetAggregation) content.GetValueForProperty("Aggregation",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Aggregation, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigDatasetAggregationTypeConverter.ConvertFrom);
            }
            if (content.Contains("Grouping"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Grouping = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigGrouping[]) content.GetValueForProperty("Grouping",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Grouping, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigGrouping>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigGroupingTypeConverter.ConvertFrom));
            }
            if (content.Contains("Sorting"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Sorting = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigSorting[]) content.GetValueForProperty("Sorting",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).Sorting, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigSorting>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigSortingTypeConverter.ConvertFrom));
            }
            if (content.Contains("ConfigurationColumn"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).ConfigurationColumn = (string[]) content.GetValueForProperty("ConfigurationColumn",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).ConfigurationColumn, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("FilterDimension"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterDimension = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigComparisonExpression) content.GetValueForProperty("FilterDimension",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterDimension, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigComparisonExpressionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FilterTag"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterTag = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigComparisonExpression) content.GetValueForProperty("FilterTag",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterTag, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigComparisonExpressionTypeConverter.ConvertFrom);
            }
            if (content.Contains("FilterAnd"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterAnd = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter[]) content.GetValueForProperty("FilterAnd",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterAnd, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigFilterTypeConverter.ConvertFrom));
            }
            if (content.Contains("FilterOr"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterOr = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter[]) content.GetValueForProperty("FilterOr",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).FilterOr, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigFilter>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.ReportConfigFilterTypeConverter.ConvertFrom));
            }
            if (content.Contains("DimensionName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionName = (string) content.GetValueForProperty("DimensionName",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionName, global::System.Convert.ToString);
            }
            if (content.Contains("DimensionOperator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionOperator = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType) content.GetValueForProperty("DimensionOperator",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionOperator, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType.CreateFrom);
            }
            if (content.Contains("DimensionValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionValue = (string[]) content.GetValueForProperty("DimensionValue",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).DimensionValue, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            if (content.Contains("TagName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagName = (string) content.GetValueForProperty("TagName",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagName, global::System.Convert.ToString);
            }
            if (content.Contains("TagOperator"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagOperator = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType) content.GetValueForProperty("TagOperator",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagOperator, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.OperatorType.CreateFrom);
            }
            if (content.Contains("TagValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagValue = (string[]) content.GetValueForProperty("TagValue",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220801Preview.IReportConfigDatasetInternal)this).TagValue, __y => TypeConverterExtensions.SelectToArray<string>(__y, global::System.Convert.ToString));
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The definition of data present in the report.
    [System.ComponentModel.TypeConverter(typeof(ReportConfigDatasetTypeConverter))]
    public partial interface IReportConfigDataset

    {

    }
}