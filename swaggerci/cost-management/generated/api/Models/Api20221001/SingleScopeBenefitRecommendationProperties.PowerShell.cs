// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001
{
    using Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.PowerShell;

    /// <summary>The properties of the benefit plan recommendation when scope is 'Single'.</summary>
    [System.ComponentModel.TypeConverter(typeof(SingleScopeBenefitRecommendationPropertiesTypeConverter))]
    public partial class SingleScopeBenefitRecommendationProperties
    {

        /// <summary>
        /// <c>AfterDeserializeDictionary</c> will be called after the deserialization has finished, allowing customization of the
        /// object before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>

        partial void AfterDeserializeDictionary(global::System.Collections.IDictionary content);

        /// <summary>
        /// <c>AfterDeserializePSObject</c> will be called after the deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>

        partial void AfterDeserializePSObject(global::System.Management.Automation.PSObject content);

        /// <summary>
        /// <c>BeforeDeserializeDictionary</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializeDictionary(global::System.Collections.IDictionary content, ref bool returnNow);

        /// <summary>
        /// <c>BeforeDeserializePSObject</c> will be called before the deserialization has commenced, allowing complete customization
        /// of the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeDeserializePSObject(global::System.Management.Automation.PSObject content, ref bool returnNow);

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.SingleScopeBenefitRecommendationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationProperties DeserializeFromDictionary(global::System.Collections.IDictionary content)
        {
            return new SingleScopeBenefitRecommendationProperties(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.SingleScopeBenefitRecommendationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        /// <returns>
        /// an instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationProperties"
        /// />.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationProperties DeserializeFromPSObject(global::System.Management.Automation.PSObject content)
        {
            return new SingleScopeBenefitRecommendationProperties(content);
        }

        /// <summary>
        /// Creates a new instance of <see cref="SingleScopeBenefitRecommendationProperties" />, deserializing the content from a
        /// json string.
        /// </summary>
        /// <param name="jsonText">a string containing a JSON serialized instance of this model.</param>
        /// <returns>
        /// an instance of the <see cref="SingleScopeBenefitRecommendationProperties" /> model class.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationProperties FromJsonString(string jsonText) => FromJson(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode.Parse(jsonText));

        /// <summary>
        /// Deserializes a <see cref="global::System.Collections.IDictionary" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.SingleScopeBenefitRecommendationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Collections.IDictionary content that should be used.</param>
        internal SingleScopeBenefitRecommendationProperties(global::System.Collections.IDictionary content)
        {
            bool returnNow = false;
            BeforeDeserializeDictionary(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).ResourceGroup = (string) content.GetValueForProperty("ResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).ResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("UsageGrain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageGrain = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain?) content.GetValueForProperty("UsageGrain",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageGrain, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain.CreateFrom);
            }
            if (content.Contains("UsageCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageCharge = (decimal[]) content.GetValueForProperty("UsageCharge",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageCharge, __y => TypeConverterExtensions.SelectToArray<decimal>(__y, (__w)=> (decimal) global::System.Convert.ChangeType(__w, typeof(decimal))));
            }
            if (content.Contains("RecommendationDetailOverageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailOverageCost = (decimal?) content.GetValueForProperty("RecommendationDetailOverageCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailOverageCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailBenefitCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailBenefitCost = (decimal?) content.GetValueForProperty("RecommendationDetailBenefitCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailBenefitCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailTotalCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailTotalCost = (decimal?) content.GetValueForProperty("RecommendationDetailTotalCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailTotalCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailSavingsAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsAmount = (decimal?) content.GetValueForProperty("RecommendationDetailSavingsAmount",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsAmount, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailSavingsPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsPercentage = (decimal?) content.GetValueForProperty("RecommendationDetailSavingsPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsPercentage, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailCoveragePercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCoveragePercentage = (decimal?) content.GetValueForProperty("RecommendationDetailCoveragePercentage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCoveragePercentage, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailCommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCommitmentAmount = (decimal?) content.GetValueForProperty("RecommendationDetailCommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCommitmentAmount, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailAverageUtilizationPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailAverageUtilizationPercentage = (decimal?) content.GetValueForProperty("RecommendationDetailAverageUtilizationPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailAverageUtilizationPercentage, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailWastageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailWastageCost = (decimal?) content.GetValueForProperty("RecommendationDetailWastageCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailWastageCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("AllRecommendationDetailValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailValue = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails[]) content.GetValueForProperty("AllRecommendationDetailValue",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailValue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.AllSavingsBenefitDetailsTypeConverter.ConvertFrom));
            }
            if (content.Contains("AllRecommendationDetailNextLink"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailNextLink = (string) content.GetValueForProperty("AllRecommendationDetailNextLink",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailNextLink, global::System.Convert.ToString);
            }
            if (content.Contains("Usage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Usage = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IRecommendationUsageDetails) content.GetValueForProperty("Usage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Usage, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.RecommendationUsageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecommendationDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetail = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails) content.GetValueForProperty("RecommendationDetail",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetail, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.AllSavingsBenefitDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllRecommendationDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetail = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsList) content.GetValueForProperty("AllRecommendationDetail",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetail, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.AllSavingsListTypeConverter.ConvertFrom);
            }
            if (content.Contains("FirstConsumptionDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).FirstConsumptionDate = (global::System.DateTime?) content.GetValueForProperty("FirstConsumptionDate",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).FirstConsumptionDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastConsumptionDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LastConsumptionDate = (global::System.DateTime?) content.GetValueForProperty("LastConsumptionDate",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LastConsumptionDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LookBackPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LookBackPeriod = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.LookBackPeriod?) content.GetValueForProperty("LookBackPeriod",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LookBackPeriod, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.LookBackPeriod.CreateFrom);
            }
            if (content.Contains("TotalHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).TotalHour = (int?) content.GetValueForProperty("TotalHour",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).TotalHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ArmSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).ArmSkuName = (string) content.GetValueForProperty("ArmSkuName",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).ArmSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("Term"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Term = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Term?) content.GetValueForProperty("Term",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Term, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Term.CreateFrom);
            }
            if (content.Contains("CommitmentGranularity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CommitmentGranularity = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain?) content.GetValueForProperty("CommitmentGranularity",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CommitmentGranularity, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain.CreateFrom);
            }
            if (content.Contains("CurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CurrencyCode = (string) content.GetValueForProperty("CurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("CostWithoutBenefit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CostWithoutBenefit = (decimal?) content.GetValueForProperty("CostWithoutBenefit",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CostWithoutBenefit, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Scope = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Scope) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Scope, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Scope.CreateFrom);
            }
            AfterDeserializeDictionary(content);
        }

        /// <summary>
        /// Deserializes a <see cref="global::System.Management.Automation.PSObject" /> into a new instance of <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.SingleScopeBenefitRecommendationProperties"
        /// />.
        /// </summary>
        /// <param name="content">The global::System.Management.Automation.PSObject content that should be used.</param>
        internal SingleScopeBenefitRecommendationProperties(global::System.Management.Automation.PSObject content)
        {
            bool returnNow = false;
            BeforeDeserializePSObject(content, ref returnNow);
            if (returnNow)
            {
                return;
            }
            // actually deserialize
            if (content.Contains("SubscriptionId"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).SubscriptionId = (string) content.GetValueForProperty("SubscriptionId",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).SubscriptionId, global::System.Convert.ToString);
            }
            if (content.Contains("ResourceGroup"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).ResourceGroup = (string) content.GetValueForProperty("ResourceGroup",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal)this).ResourceGroup, global::System.Convert.ToString);
            }
            if (content.Contains("UsageGrain"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageGrain = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain?) content.GetValueForProperty("UsageGrain",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageGrain, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain.CreateFrom);
            }
            if (content.Contains("UsageCharge"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageCharge = (decimal[]) content.GetValueForProperty("UsageCharge",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).UsageCharge, __y => TypeConverterExtensions.SelectToArray<decimal>(__y, (__w)=> (decimal) global::System.Convert.ChangeType(__w, typeof(decimal))));
            }
            if (content.Contains("RecommendationDetailOverageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailOverageCost = (decimal?) content.GetValueForProperty("RecommendationDetailOverageCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailOverageCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailBenefitCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailBenefitCost = (decimal?) content.GetValueForProperty("RecommendationDetailBenefitCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailBenefitCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailTotalCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailTotalCost = (decimal?) content.GetValueForProperty("RecommendationDetailTotalCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailTotalCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailSavingsAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsAmount = (decimal?) content.GetValueForProperty("RecommendationDetailSavingsAmount",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsAmount, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailSavingsPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsPercentage = (decimal?) content.GetValueForProperty("RecommendationDetailSavingsPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailSavingsPercentage, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailCoveragePercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCoveragePercentage = (decimal?) content.GetValueForProperty("RecommendationDetailCoveragePercentage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCoveragePercentage, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailCommitmentAmount"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCommitmentAmount = (decimal?) content.GetValueForProperty("RecommendationDetailCommitmentAmount",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailCommitmentAmount, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailAverageUtilizationPercentage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailAverageUtilizationPercentage = (decimal?) content.GetValueForProperty("RecommendationDetailAverageUtilizationPercentage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailAverageUtilizationPercentage, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("RecommendationDetailWastageCost"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailWastageCost = (decimal?) content.GetValueForProperty("RecommendationDetailWastageCost",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetailWastageCost, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("AllRecommendationDetailValue"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailValue = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails[]) content.GetValueForProperty("AllRecommendationDetailValue",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailValue, __y => TypeConverterExtensions.SelectToArray<Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails>(__y, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.AllSavingsBenefitDetailsTypeConverter.ConvertFrom));
            }
            if (content.Contains("AllRecommendationDetailNextLink"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailNextLink = (string) content.GetValueForProperty("AllRecommendationDetailNextLink",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetailNextLink, global::System.Convert.ToString);
            }
            if (content.Contains("Usage"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Usage = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IRecommendationUsageDetails) content.GetValueForProperty("Usage",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Usage, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.RecommendationUsageDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("RecommendationDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetail = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails) content.GetValueForProperty("RecommendationDetail",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).RecommendationDetail, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.AllSavingsBenefitDetailsTypeConverter.ConvertFrom);
            }
            if (content.Contains("AllRecommendationDetail"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetail = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsList) content.GetValueForProperty("AllRecommendationDetail",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).AllRecommendationDetail, Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.AllSavingsListTypeConverter.ConvertFrom);
            }
            if (content.Contains("FirstConsumptionDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).FirstConsumptionDate = (global::System.DateTime?) content.GetValueForProperty("FirstConsumptionDate",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).FirstConsumptionDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LastConsumptionDate"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LastConsumptionDate = (global::System.DateTime?) content.GetValueForProperty("LastConsumptionDate",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LastConsumptionDate, (v) => v is global::System.DateTime _v ? _v : global::System.Xml.XmlConvert.ToDateTime( v.ToString() , global::System.Xml.XmlDateTimeSerializationMode.Unspecified));
            }
            if (content.Contains("LookBackPeriod"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LookBackPeriod = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.LookBackPeriod?) content.GetValueForProperty("LookBackPeriod",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).LookBackPeriod, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.LookBackPeriod.CreateFrom);
            }
            if (content.Contains("TotalHour"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).TotalHour = (int?) content.GetValueForProperty("TotalHour",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).TotalHour, (__y)=> (int) global::System.Convert.ChangeType(__y, typeof(int)));
            }
            if (content.Contains("ArmSkuName"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).ArmSkuName = (string) content.GetValueForProperty("ArmSkuName",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).ArmSkuName, global::System.Convert.ToString);
            }
            if (content.Contains("Term"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Term = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Term?) content.GetValueForProperty("Term",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Term, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Term.CreateFrom);
            }
            if (content.Contains("CommitmentGranularity"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CommitmentGranularity = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain?) content.GetValueForProperty("CommitmentGranularity",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CommitmentGranularity, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain.CreateFrom);
            }
            if (content.Contains("CurrencyCode"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CurrencyCode = (string) content.GetValueForProperty("CurrencyCode",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CurrencyCode, global::System.Convert.ToString);
            }
            if (content.Contains("CostWithoutBenefit"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CostWithoutBenefit = (decimal?) content.GetValueForProperty("CostWithoutBenefit",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).CostWithoutBenefit, (__y)=> (decimal) global::System.Convert.ChangeType(__y, typeof(decimal)));
            }
            if (content.Contains("Scope"))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Scope = (Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Scope) content.GetValueForProperty("Scope",((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)this).Scope, Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Scope.CreateFrom);
            }
            AfterDeserializePSObject(content);
        }

        /// <summary>Serializes this instance to a json string.</summary>

        /// <returns>a <see cref="System.String" /> containing this model serialized to JSON text.</returns>
        public string ToJsonString() => ToJson(null, Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeAll)?.ToString();
    }
    /// The properties of the benefit plan recommendation when scope is 'Single'.
    [System.ComponentModel.TypeConverter(typeof(SingleScopeBenefitRecommendationPropertiesTypeConverter))]
    public partial interface ISingleScopeBenefitRecommendationProperties

    {

    }
}