// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>Savings plan utilization summary resource.</summary>
    public partial class SavingsPlanUtilizationSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummary,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummary"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummary __benefitUtilizationSummary = new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.BenefitUtilizationSummary();

        /// <summary>
        /// ARM SKU name. For example, Standard_D1_V2 for reservations and ComputeSavingsPlan for savings plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string ArmSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).ArmSkuName; }

        /// <summary>This is the average utilization percentage for the benefit ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public decimal? AvgUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).AvgUtilizationPercentage; }

        /// <summary>The benefit ID is the identifier of a benefit within a benefit order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string BenefitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitId; }

        /// <summary>
        /// The benefit order ID is the identifier for a benefit purchase. Each benefit order ID represents a single purchase transaction.
        /// For example: A reservation order contains reservations. The reservation order specifies the VM size and region for the
        /// reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string BenefitOrderId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitOrderId; }

        /// <summary>The benefit type. For example, reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.BenefitKind? BenefitType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.BenefitKind)""); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Id; }

        /// <summary>Reservation, SavingsPlan or IncludedQuantity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.BenefitKind Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryInternal)__benefitUtilizationSummary).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryInternal)__benefitUtilizationSummary).Kind = value ; }

        /// <summary>
        /// This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017
        /// and on that for hour 4, utilization was 100%, this field will return 100% for that day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public decimal? MaxUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).MaxUtilizationPercentage; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Type = value; }

        /// <summary>Internal Acessors for ArmSkuName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.ArmSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).ArmSkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).ArmSkuName = value; }

        /// <summary>Internal Acessors for AvgUtilizationPercentage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.AvgUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).AvgUtilizationPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).AvgUtilizationPercentage = value; }

        /// <summary>Internal Acessors for BenefitId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.BenefitId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitId = value; }

        /// <summary>Internal Acessors for BenefitOrderId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.BenefitOrderId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitOrderId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).BenefitOrderId = value; }

        /// <summary>Internal Acessors for MaxUtilizationPercentage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.MaxUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).MaxUtilizationPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).MaxUtilizationPercentage = value; }

        /// <summary>Internal Acessors for MinUtilizationPercentage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.MinUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).MinUtilizationPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).MinUtilizationPercentage = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryProperties Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.SavingsPlanUtilizationSummaryProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for UsageDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryInternal.UsageDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).UsageDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).UsageDate = value; }

        /// <summary>
        /// This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017
        /// and on that for hour 4, utilization was 10%, this field will return 10% for that day
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public decimal? MinUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryPropertiesInternal)Property).MinUtilizationPercentage; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryProperties _property;

        /// <summary>Savings plan utilization summary properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.SavingsPlanUtilizationSummaryProperties()); set => this._property = value; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20.IResourceInternal)__benefitUtilizationSummary).Type; }

        /// <summary>
        /// Date corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? UsageDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryPropertiesInternal)Property).UsageDate; }

        /// <summary>Creates an new <see cref="SavingsPlanUtilizationSummary" /> instance.</summary>
        public SavingsPlanUtilizationSummary()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__benefitUtilizationSummary), __benefitUtilizationSummary);
            await eventListener.AssertObjectIsValid(nameof(__benefitUtilizationSummary), __benefitUtilizationSummary);
        }
    }
    /// Savings plan utilization summary resource.
    public partial interface ISavingsPlanUtilizationSummary :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummary
    {
        /// <summary>
        /// ARM SKU name. For example, Standard_D1_V2 for reservations and ComputeSavingsPlan for savings plan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"ARM SKU name. For example, Standard_D1_V2 for reservations and ComputeSavingsPlan for savings plan.",
        SerializedName = @"armSkuName",
        PossibleTypes = new [] { typeof(string) })]
        string ArmSkuName { get;  }
        /// <summary>This is the average utilization percentage for the benefit ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the average utilization percentage for the benefit ID.",
        SerializedName = @"avgUtilizationPercentage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? AvgUtilizationPercentage { get;  }
        /// <summary>The benefit ID is the identifier of a benefit within a benefit order.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The benefit ID is the identifier of a benefit within a benefit order.",
        SerializedName = @"benefitId",
        PossibleTypes = new [] { typeof(string) })]
        string BenefitId { get;  }
        /// <summary>
        /// The benefit order ID is the identifier for a benefit purchase. Each benefit order ID represents a single purchase transaction.
        /// For example: A reservation order contains reservations. The reservation order specifies the VM size and region for the
        /// reservations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The benefit order ID is the identifier for a benefit purchase. Each benefit order ID represents a single purchase transaction. For example: A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
        SerializedName = @"benefitOrderId",
        PossibleTypes = new [] { typeof(string) })]
        string BenefitOrderId { get;  }
        /// <summary>The benefit type. For example, reservation or savings plan</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The benefit type. For example, reservation or savings plan",
        SerializedName = @"benefitType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.BenefitKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.BenefitKind? BenefitType { get; set; }
        /// <summary>
        /// This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017
        /// and on that for hour 4, utilization was 100%, this field will return 100% for that day.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4, utilization was 100%, this field will return 100% for that day.",
        SerializedName = @"maxUtilizationPercentage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? MaxUtilizationPercentage { get;  }
        /// <summary>
        /// This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017
        /// and on that for hour 4, utilization was 10%, this field will return 10% for that day
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4, utilization was 10%, this field will return 10% for that day",
        SerializedName = @"minUtilizationPercentage",
        PossibleTypes = new [] { typeof(decimal) })]
        decimal? MinUtilizationPercentage { get;  }
        /// <summary>
        /// Date corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Date corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.",
        SerializedName = @"usageDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? UsageDate { get;  }

    }
    /// Savings plan utilization summary resource.
    internal partial interface ISavingsPlanUtilizationSummaryInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitUtilizationSummaryInternal
    {
        /// <summary>
        /// ARM SKU name. For example, Standard_D1_V2 for reservations and ComputeSavingsPlan for savings plan.
        /// </summary>
        string ArmSkuName { get; set; }
        /// <summary>This is the average utilization percentage for the benefit ID.</summary>
        decimal? AvgUtilizationPercentage { get; set; }
        /// <summary>The benefit ID is the identifier of a benefit within a benefit order.</summary>
        string BenefitId { get; set; }
        /// <summary>
        /// The benefit order ID is the identifier for a benefit purchase. Each benefit order ID represents a single purchase transaction.
        /// For example: A reservation order contains reservations. The reservation order specifies the VM size and region for the
        /// reservations.
        /// </summary>
        string BenefitOrderId { get; set; }
        /// <summary>The benefit type. For example, reservation or savings plan</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.BenefitKind? BenefitType { get; set; }
        /// <summary>
        /// This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017
        /// and on that for hour 4, utilization was 100%, this field will return 100% for that day.
        /// </summary>
        decimal? MaxUtilizationPercentage { get; set; }
        /// <summary>
        /// This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017
        /// and on that for hour 4, utilization was 10%, this field will return 10% for that day
        /// </summary>
        decimal? MinUtilizationPercentage { get; set; }
        /// <summary>Savings plan utilization summary properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISavingsPlanUtilizationSummaryProperties Property { get; set; }
        /// <summary>
        /// Date corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.
        /// </summary>
        global::System.DateTime? UsageDate { get; set; }

    }
}