// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>The properties of the benefit plan recommendation details for a saving.</summary>
    public partial class AllSavingsBenefitDetails
    {

        /// <summary>
        /// <c>AfterFromJson</c> will be called after the json deserialization has finished, allowing customization of the object
        /// before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>

        partial void AfterFromJson(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject json);

        /// <summary>
        /// <c>AfterToJson</c> will be called after the json serialization has finished, allowing customization of the <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject"
        /// /> before it is returned. Implement this method in a partial class to enable this behavior
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>

        partial void AfterToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject container);

        /// <summary>
        /// <c>BeforeFromJson</c> will be called before the json deserialization has commenced, allowing complete customization of
        /// the object before it is deserialized.
        /// If you wish to disable the default deserialization entirely, return <c>true</c> in the <paramref name= "returnNow" />
        /// output parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="json">The JsonNode that should be deserialized into this object.</param>
        /// <param name="returnNow">Determines if the rest of the deserialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeFromJson(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject json, ref bool returnNow);

        /// <summary>
        /// <c>BeforeToJson</c> will be called before the json serialization has commenced, allowing complete customization of the
        /// object before it is serialized.
        /// If you wish to disable the default serialization entirely, return <c>true</c> in the <paramref name="returnNow" /> output
        /// parameter.
        /// Implement this method in a partial class to enable this behavior.
        /// </summary>
        /// <param name="container">The JSON container that the serialization result will be placed in.</param>
        /// <param name="returnNow">Determines if the rest of the serialization should be processed, or if the method should return
        /// instantly.</param>

        partial void BeforeToJson(ref Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject container, ref bool returnNow);

        /// <summary>
        /// Deserializes a Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject into a new instance of <see cref="AllSavingsBenefitDetails" />.
        /// </summary>
        /// <param name="json">A Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject instance to deserialize from.</param>
        internal AllSavingsBenefitDetails(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject json)
        {
            bool returnNow = false;
            BeforeFromJson(json, ref returnNow);
            if (returnNow)
            {
                return;
            }
            {_overageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("overageCost"), out var __jsonOverageCost) ? (decimal?)__jsonOverageCost : OverageCost;}
            {_benefitCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("benefitCost"), out var __jsonBenefitCost) ? (decimal?)__jsonBenefitCost : BenefitCost;}
            {_totalCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("totalCost"), out var __jsonTotalCost) ? (decimal?)__jsonTotalCost : TotalCost;}
            {_savingsAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("savingsAmount"), out var __jsonSavingsAmount) ? (decimal?)__jsonSavingsAmount : SavingsAmount;}
            {_savingsPercentage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("savingsPercentage"), out var __jsonSavingsPercentage) ? (decimal?)__jsonSavingsPercentage : SavingsPercentage;}
            {_coveragePercentage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("coveragePercentage"), out var __jsonCoveragePercentage) ? (decimal?)__jsonCoveragePercentage : CoveragePercentage;}
            {_commitmentAmount = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("commitmentAmount"), out var __jsonCommitmentAmount) ? (decimal?)__jsonCommitmentAmount : CommitmentAmount;}
            {_averageUtilizationPercentage = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("averageUtilizationPercentage"), out var __jsonAverageUtilizationPercentage) ? (decimal?)__jsonAverageUtilizationPercentage : AverageUtilizationPercentage;}
            {_wastageCost = If( json?.PropertyT<Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber>("wastageCost"), out var __jsonWastageCost) ? (decimal?)__jsonWastageCost : WastageCost;}
            AfterFromJson(json);
        }

        /// <summary>
        /// Deserializes a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode"/> into an instance of Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails.
        /// </summary>
        /// <param name="node">a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode" /> to deserialize from.</param>
        /// <returns>
        /// an instance of Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails.
        /// </returns>
        public static Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails FromJson(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode node)
        {
            return node is Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject json ? new AllSavingsBenefitDetails(json) : null;
        }

        /// <summary>
        /// Serializes this instance of <see cref="AllSavingsBenefitDetails" /> into a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode" />.
        /// </summary>
        /// <param name="container">The <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject"/> container to serialize this object into. If the caller
        /// passes in <c>null</c>, a new instance will be created and returned to the caller.</param>
        /// <param name="serializationMode">Allows the caller to choose the depth of the serialization. See <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode"/>.</param>
        /// <returns>
        /// a serialized instance of <see cref="AllSavingsBenefitDetails" /> as a <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode" />.
        /// </returns>
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode ToJson(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject container, Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode serializationMode)
        {
            container = container ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonObject();

            bool returnNow = false;
            BeforeToJson(ref container, ref returnNow);
            if (returnNow)
            {
                return container;
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._overageCost ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._overageCost) : null, "overageCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._benefitCost ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._benefitCost) : null, "benefitCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._totalCost ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._totalCost) : null, "totalCost" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._savingsAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._savingsAmount) : null, "savingsAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._savingsPercentage ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._savingsPercentage) : null, "savingsPercentage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._coveragePercentage ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._coveragePercentage) : null, "coveragePercentage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._commitmentAmount ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._commitmentAmount) : null, "commitmentAmount" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._averageUtilizationPercentage ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._averageUtilizationPercentage) : null, "averageUtilizationPercentage" ,container.Add );
            }
            if (serializationMode.HasFlag(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.SerializationMode.IncludeReadOnly))
            {
                AddIf( null != this._wastageCost ? (Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNode)new Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Json.JsonNumber((decimal)this._wastageCost) : null, "wastageCost" ,container.Add );
            }
            AfterToJson(ref container);
            return container;
        }
    }
}