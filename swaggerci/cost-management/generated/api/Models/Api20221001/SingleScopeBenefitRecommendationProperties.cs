// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>The properties of the benefit plan recommendation when scope is 'Single'.</summary>
    public partial class SingleScopeBenefitRecommendationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationProperties"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationProperties __benefitRecommendationProperties = new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.BenefitRecommendationProperties();

        /// <summary>The list of all benefit recommendations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsList AllRecommendationDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetail; }

        /// <summary>The link (URL) to the next page of results.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string AllRecommendationDetailNextLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetailNextLink; }

        /// <summary>The list of benefit recommendations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails[] AllRecommendationDetailValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetailValue; }

        /// <summary>
        /// ARM SKU name. For example, Standard_D1_V2 for Reservations and Compute_Savings_Plan for SavingsPlan.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string ArmSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).ArmSkuName; }

        /// <summary>Grain of the proposed commitment amount. For example, hourly, monthly etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain? CommitmentGranularity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CommitmentGranularity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CommitmentGranularity = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain)""); }

        /// <summary>
        /// The current cost without benefit corresponds to 'totalHours' property in a given look-back period.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? CostWithoutBenefit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CostWithoutBenefit; }

        /// <summary>An ISO 4217 currency code identifier for the costs and savings amounts.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string CurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CurrencyCode; }

        /// <summary>The first usage date used for looking back for computing the recommendation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public global::System.DateTime? FirstConsumptionDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).FirstConsumptionDate; }

        /// <summary>The last usage date used for looking back for computing the recommendation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public global::System.DateTime? LastConsumptionDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).LastConsumptionDate; }

        /// <summary>The number of days of usage used to look back for computing the recommendation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.LookBackPeriod? LookBackPeriod { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).LookBackPeriod; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).LookBackPeriod = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.LookBackPeriod)""); }

        /// <summary>Internal Acessors for AllRecommendationDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsList Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.AllRecommendationDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetail = value; }

        /// <summary>Internal Acessors for AllRecommendationDetailNextLink</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.AllRecommendationDetailNextLink { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetailNextLink; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetailNextLink = value; }

        /// <summary>Internal Acessors for AllRecommendationDetailValue</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails[] Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.AllRecommendationDetailValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetailValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).AllRecommendationDetailValue = value; }

        /// <summary>Internal Acessors for ArmSkuName</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.ArmSkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).ArmSkuName; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).ArmSkuName = value; }

        /// <summary>Internal Acessors for CostWithoutBenefit</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.CostWithoutBenefit { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CostWithoutBenefit; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CostWithoutBenefit = value; }

        /// <summary>Internal Acessors for CurrencyCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.CurrencyCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CurrencyCode; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).CurrencyCode = value; }

        /// <summary>Internal Acessors for FirstConsumptionDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.FirstConsumptionDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).FirstConsumptionDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).FirstConsumptionDate = value; }

        /// <summary>Internal Acessors for LastConsumptionDate</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.LastConsumptionDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).LastConsumptionDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).LastConsumptionDate = value; }

        /// <summary>Internal Acessors for RecommendationDetailAverageUtilizationPercentage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailAverageUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailAverageUtilizationPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailAverageUtilizationPercentage = value; }

        /// <summary>Internal Acessors for RecommendationDetailBenefitCost</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailBenefitCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailBenefitCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailBenefitCost = value; }

        /// <summary>Internal Acessors for RecommendationDetailCommitmentAmount</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailCommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailCommitmentAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailCommitmentAmount = value; }

        /// <summary>Internal Acessors for RecommendationDetailCoveragePercentage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailCoveragePercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailCoveragePercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailCoveragePercentage = value; }

        /// <summary>Internal Acessors for RecommendationDetailOverageCost</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailOverageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailOverageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailOverageCost = value; }

        /// <summary>Internal Acessors for RecommendationDetailSavingsAmount</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailSavingsAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailSavingsAmount; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailSavingsAmount = value; }

        /// <summary>Internal Acessors for RecommendationDetailSavingsPercentage</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailSavingsPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailSavingsPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailSavingsPercentage = value; }

        /// <summary>Internal Acessors for RecommendationDetailTotalCost</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailTotalCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailTotalCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailTotalCost = value; }

        /// <summary>Internal Acessors for RecommendationDetailWastageCost</summary>
        decimal? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.RecommendationDetailWastageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailWastageCost; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailWastageCost = value; }

        /// <summary>Internal Acessors for TotalHour</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.TotalHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).TotalHour; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).TotalHour = value; }

        /// <summary>Internal Acessors for UsageCharge</summary>
        decimal[] Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal.UsageCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).UsageCharge; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).UsageCharge = value; }

        /// <summary>Internal Acessors for ResourceGroup</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal.ResourceGroup { get => this._resourceGroup; set { {_resourceGroup = value;} } }

        /// <summary>Internal Acessors for SubscriptionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.ISingleScopeBenefitRecommendationPropertiesInternal.SubscriptionId { get => this._subscriptionId; set { {_subscriptionId = value;} } }

        /// <summary>The details of the proposed recommendation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IAllSavingsBenefitDetails RecommendationDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetail = value ?? null /* model class */; }

        /// <summary>Estimated average utilization percentage at this commitment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailAverageUtilizationPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailAverageUtilizationPercentage; }

        /// <summary>
        /// The exact cost of the estimated usage using plan. It's equal to (commitmentAmount * totalHours)
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailBenefitCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailBenefitCost; }

        /// <summary>The commitment amount for the benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailCommitmentAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailCommitmentAmount; }

        /// <summary>Expected coverage at this commitment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailCoveragePercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailCoveragePercentage; }

        /// <summary>The difference between total cost and benefit cost.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailOverageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailOverageCost; }

        /// <summary>The amount saved by purchasing the recommended quantity of benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailSavingsAmount { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailSavingsAmount; }

        /// <summary>The savings in percentage by purchasing the recommended quantity of benefit.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailSavingsPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailSavingsPercentage; }

        /// <summary>The cost of the suggested commitment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailTotalCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailTotalCost; }

        /// <summary>Wastage cost at this commitment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal? RecommendationDetailWastageCost { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).RecommendationDetailWastageCost; }

        /// <summary>Backing field for <see cref="ResourceGroup" /> property.</summary>
        private string _resourceGroup;

        /// <summary>
        /// The resource group that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope
        /// and 'ResourceGroup' request scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string ResourceGroup { get => this._resourceGroup; }

        /// <summary>Scope of the benefit. For example, Single or Shared.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Scope Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).Scope = value ; }

        /// <summary>Backing field for <see cref="SubscriptionId" /> property.</summary>
        private string _subscriptionId;

        /// <summary>
        /// The subscription ID that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string SubscriptionId { get => this._subscriptionId; }

        /// <summary>Term period of the benefit. For example, P1Y or P3Y.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Term? Term { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).Term; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).Term = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Term)""); }

        /// <summary>
        /// The total hours for which the cost is covered. Its equal to number of records in a property 'properties/usage/charges'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public int? TotalHour { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).TotalHour; }

        /// <summary>
        /// The additional details about the usage which are considered while computing benefit recommendations.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IRecommendationUsageDetails Usage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).Usage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).Usage = value ?? null /* model class */; }

        /// <summary>current cost without benefit i.e. charges at the specified grain.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public decimal[] UsageCharge { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).UsageCharge; }

        /// <summary>The grain of the usage. For example, hourly or monthly etc.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain? UsageGrain { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).UsageGrain; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal)__benefitRecommendationProperties).UsageGrain = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.Grain)""); }

        /// <summary>
        /// Creates an new <see cref="SingleScopeBenefitRecommendationProperties" /> instance.
        /// </summary>
        public SingleScopeBenefitRecommendationProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__benefitRecommendationProperties), __benefitRecommendationProperties);
            await eventListener.AssertObjectIsValid(nameof(__benefitRecommendationProperties), __benefitRecommendationProperties);
        }
    }
    /// The properties of the benefit plan recommendation when scope is 'Single'.
    public partial interface ISingleScopeBenefitRecommendationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationProperties
    {
        /// <summary>
        /// The resource group that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope
        /// and 'ResourceGroup' request scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource group that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope and 'ResourceGroup' request scope.",
        SerializedName = @"resourceGroup",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceGroup { get;  }
        /// <summary>
        /// The subscription ID that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The subscription ID that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope.",
        SerializedName = @"subscriptionId",
        PossibleTypes = new [] { typeof(string) })]
        string SubscriptionId { get;  }

    }
    /// The properties of the benefit plan recommendation when scope is 'Single'.
    internal partial interface ISingleScopeBenefitRecommendationPropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20221001.IBenefitRecommendationPropertiesInternal
    {
        /// <summary>
        /// The resource group that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope
        /// and 'ResourceGroup' request scope.
        /// </summary>
        string ResourceGroup { get; set; }
        /// <summary>
        /// The subscription ID that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope.
        /// </summary>
        string SubscriptionId { get; set; }

    }
}