// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>The properties of the schedule.</summary>
    public partial class ScheduleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220601Preview.IScheduleProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20220601Preview.ISchedulePropertiesInternal
    {

        /// <summary>Backing field for <see cref="DayOfMonth" /> property.</summary>
        private int? _dayOfMonth;

        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
        /// is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public int? DayOfMonth { get => this._dayOfMonth; set => this._dayOfMonth = value; }

        /// <summary>Backing field for <see cref="DaysOfWeek" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] _daysOfWeek;

        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
        /// or Monthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] DaysOfWeek { get => this._daysOfWeek; set => this._daysOfWeek = value; }

        /// <summary>Backing field for <see cref="EndDate" /> property.</summary>
        private global::System.DateTime _endDate;

        /// <summary>The end date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime EndDate { get => this._endDate; set => this._endDate = value; }

        /// <summary>Backing field for <see cref="Frequency" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency _frequency;

        /// <summary>Frequency of the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency Frequency { get => this._frequency; set => this._frequency = value; }

        /// <summary>Backing field for <see cref="HourOfDay" /> property.</summary>
        private int? _hourOfDay;

        /// <summary>UTC time at which cost analysis data will be emailed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public int? HourOfDay { get => this._hourOfDay; set => this._hourOfDay = value; }

        /// <summary>Backing field for <see cref="StartDate" /> property.</summary>
        private global::System.DateTime _startDate;

        /// <summary>The start date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime StartDate { get => this._startDate; set => this._startDate = value; }

        /// <summary>Backing field for <see cref="WeeksOfMonth" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] _weeksOfMonth;

        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
        /// with daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] WeeksOfMonth { get => this._weeksOfMonth; set => this._weeksOfMonth = value; }

        /// <summary>Creates an new <see cref="ScheduleProperties" /> instance.</summary>
        public ScheduleProperties()
        {

        }
    }
    /// The properties of the schedule.
    public partial interface IScheduleProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable
    {
        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
        /// is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek.",
        SerializedName = @"dayOfMonth",
        PossibleTypes = new [] { typeof(int) })]
        int? DayOfMonth { get; set; }
        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
        /// or Monthly.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
        SerializedName = @"daysOfWeek",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] DaysOfWeek { get; set; }
        /// <summary>The end date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The end date and time of the scheduled action (UTC).",
        SerializedName = @"endDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime EndDate { get; set; }
        /// <summary>Frequency of the schedule.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"Frequency of the schedule.",
        SerializedName = @"frequency",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency Frequency { get; set; }
        /// <summary>UTC time at which cost analysis data will be emailed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"UTC time at which cost analysis data will be emailed.",
        SerializedName = @"hourOfDay",
        PossibleTypes = new [] { typeof(int) })]
        int? HourOfDay { get; set; }
        /// <summary>The start date and time of the scheduled action (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The start date and time of the scheduled action (UTC).",
        SerializedName = @"startDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime StartDate { get; set; }
        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
        /// with daysOfWeek.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
        SerializedName = @"weeksOfMonth",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] WeeksOfMonth { get; set; }

    }
    /// The properties of the schedule.
    internal partial interface ISchedulePropertiesInternal

    {
        /// <summary>
        /// UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency
        /// is Monthly and overrides weeksOfMonth or daysOfWeek.
        /// </summary>
        int? DayOfMonth { get; set; }
        /// <summary>
        /// Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly
        /// or Monthly.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.DaysOfWeek[] DaysOfWeek { get; set; }
        /// <summary>The end date and time of the scheduled action (UTC).</summary>
        global::System.DateTime EndDate { get; set; }
        /// <summary>Frequency of the schedule.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.ScheduleFrequency Frequency { get; set; }
        /// <summary>UTC time at which cost analysis data will be emailed.</summary>
        int? HourOfDay { get; set; }
        /// <summary>The start date and time of the scheduled action (UTC).</summary>
        global::System.DateTime StartDate { get; set; }
        /// <summary>
        /// Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination
        /// with daysOfWeek.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Support.WeeksOfMonth[] WeeksOfMonth { get; set; }

    }
}