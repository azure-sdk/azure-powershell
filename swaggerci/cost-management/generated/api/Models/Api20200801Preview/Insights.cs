// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>
    /// Important cost-related details about the scope. This can include critical alerts, change advisories, important data points,
    /// or tips to optimize costs and facilitate cost management.
    /// </summary>
    public partial class Insights :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsights,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKind"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKind __resourceWithKind = new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.ResourceWithKind();

        /// <summary>
        /// Lower-level background information about this insight. Note that details schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Detail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Detail = value ?? null /* model class */; }

        /// <summary>ETag of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).ETag; }

        /// <summary>The day the insight pertains to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? EventDate { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).EventDate; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).EventDate = value ?? default(global::System.DateTime); }

        /// <summary>Resource Id.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Id; }

        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? ImpactResolution { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).ImpactResolution; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).ImpactResolution = value ?? default(global::System.DateTime); }

        /// <summary>The period where the impact was observed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string ImpactTerm { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).ImpactTerm; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).ImpactTerm = value ?? null; }

        /// <summary>
        /// High-level summary information about this insight. Note that justification schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Justification { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Justification; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Justification = value ?? null /* model class */; }

        /// <summary>
        /// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Kind; }

        /// <summary>Location of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Location; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsProperties Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.InsightsProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ETag</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.ETag { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).ETag; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).ETag = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Id = value; }

        /// <summary>Internal Acessors for Kind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Kind; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Kind = value; }

        /// <summary>Internal Acessors for Location</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.Location { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Location = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Name = value; }

        /// <summary>Internal Acessors for Sku</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Sku; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Sku = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsProperties _property;

        /// <summary>The properties of the Insights.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.InsightsProperties()); set => this._property = value; }

        /// <summary>
        /// Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string Scope { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Scope; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Scope = value ?? null; }

        /// <summary>Severity of anomaly to be used for surfacing High severity anomalies first.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string Severity { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Severity; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Severity = value ?? null; }

        /// <summary>SKU of the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Sku { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Sku; }

        /// <summary>Insight status kept from storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public string Status { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Status; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).Status = value ?? null; }

        /// <summary>The datetime when this anomaly was detected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inlined)]
        public global::System.DateTime? TimeDetected { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).TimeDetected; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal)Property).TimeDetected = value ?? default(global::System.DateTime); }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal)__resourceWithKind).Type; }

        /// <summary>Creates an new <see cref="Insights" /> instance.</summary>
        public Insights()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resourceWithKind), __resourceWithKind);
            await eventListener.AssertObjectIsValid(nameof(__resourceWithKind), __resourceWithKind);
        }
    }
    /// Important cost-related details about the scope. This can include critical alerts, change advisories, important data points,
    /// or tips to optimize costs and facilitate cost management.
    public partial interface IInsights :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKind
    {
        /// <summary>
        /// Lower-level background information about this insight. Note that details schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Lower-level background information about this insight. Note that details schema changes based on kind.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Detail { get; set; }
        /// <summary>The day the insight pertains to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The day the insight pertains to.",
        SerializedName = @"eventDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EventDate { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date when the user last modified this view.",
        SerializedName = @"impactResolution",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImpactResolution { get; set; }
        /// <summary>The period where the impact was observed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The period where the impact was observed.",
        SerializedName = @"impactTerm",
        PossibleTypes = new [] { typeof(string) })]
        string ImpactTerm { get; set; }
        /// <summary>
        /// High-level summary information about this insight. Note that justification schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"High-level summary information about this insight. Note that justification schema changes based on kind.",
        SerializedName = @"justification",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Justification { get; set; }
        /// <summary>
        /// Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Severity of anomaly to be used for surfacing High severity anomalies first.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Severity of anomaly to be used for surfacing High severity anomalies first.",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(string) })]
        string Severity { get; set; }
        /// <summary>Insight status kept from storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Insight status kept from storage.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>The datetime when this anomaly was detected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The datetime when this anomaly was detected.",
        SerializedName = @"timeDetected",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeDetected { get; set; }

    }
    /// Important cost-related details about the scope. This can include critical alerts, change advisories, important data points,
    /// or tips to optimize costs and facilitate cost management.
    internal partial interface IInsightsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IResourceWithKindInternal
    {
        /// <summary>
        /// Lower-level background information about this insight. Note that details schema changes based on kind.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Detail { get; set; }
        /// <summary>The day the insight pertains to.</summary>
        global::System.DateTime? EventDate { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        global::System.DateTime? ImpactResolution { get; set; }
        /// <summary>The period where the impact was observed.</summary>
        string ImpactTerm { get; set; }
        /// <summary>
        /// High-level summary information about this insight. Note that justification schema changes based on kind.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Justification { get; set; }
        /// <summary>The properties of the Insights.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsProperties Property { get; set; }
        /// <summary>
        /// Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope
        /// </summary>
        string Scope { get; set; }
        /// <summary>Severity of anomaly to be used for surfacing High severity anomalies first.</summary>
        string Severity { get; set; }
        /// <summary>Insight status kept from storage.</summary>
        string Status { get; set; }
        /// <summary>The datetime when this anomaly was detected.</summary>
        global::System.DateTime? TimeDetected { get; set; }

    }
}