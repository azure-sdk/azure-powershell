// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Extensions;

    /// <summary>The properties of the Insights.</summary>
    public partial class InsightsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Api20200801Preview.IInsightsPropertiesInternal
    {

        /// <summary>Backing field for <see cref="Detail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny _detail;

        /// <summary>
        /// Lower-level background information about this insight. Note that details schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Detail { get => (this._detail = this._detail ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Any()); set => this._detail = value; }

        /// <summary>Backing field for <see cref="EventDate" /> property.</summary>
        private global::System.DateTime? _eventDate;

        /// <summary>The day the insight pertains to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime? EventDate { get => this._eventDate; set => this._eventDate = value; }

        /// <summary>Backing field for <see cref="ImpactResolution" /> property.</summary>
        private global::System.DateTime? _impactResolution;

        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime? ImpactResolution { get => this._impactResolution; set => this._impactResolution = value; }

        /// <summary>Backing field for <see cref="ImpactTerm" /> property.</summary>
        private string _impactTerm;

        /// <summary>The period where the impact was observed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string ImpactTerm { get => this._impactTerm; set => this._impactTerm = value; }

        /// <summary>Backing field for <see cref="Justification" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny _justification;

        /// <summary>
        /// High-level summary information about this insight. Note that justification schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Justification { get => (this._justification = this._justification ?? new Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.Any()); set => this._justification = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private string _scope;

        /// <summary>
        /// Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string Scope { get => this._scope; set => this._scope = value; }

        /// <summary>Backing field for <see cref="Severity" /> property.</summary>
        private string _severity;

        /// <summary>Severity of anomaly to be used for surfacing High severity anomalies first.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string Severity { get => this._severity; set => this._severity = value; }

        /// <summary>Backing field for <see cref="Status" /> property.</summary>
        private string _status;

        /// <summary>Insight status kept from storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public string Status { get => this._status; set => this._status = value; }

        /// <summary>Backing field for <see cref="TimeDetected" /> property.</summary>
        private global::System.DateTime? _timeDetected;

        /// <summary>The datetime when this anomaly was detected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cost.PropertyOrigin.Owned)]
        public global::System.DateTime? TimeDetected { get => this._timeDetected; set => this._timeDetected = value; }

        /// <summary>Creates an new <see cref="InsightsProperties" /> instance.</summary>
        public InsightsProperties()
        {

        }
    }
    /// The properties of the Insights.
    public partial interface IInsightsProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Lower-level background information about this insight. Note that details schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Lower-level background information about this insight. Note that details schema changes based on kind.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Detail { get; set; }
        /// <summary>The day the insight pertains to.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The day the insight pertains to.",
        SerializedName = @"eventDate",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? EventDate { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Date when the user last modified this view.",
        SerializedName = @"impactResolution",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ImpactResolution { get; set; }
        /// <summary>The period where the impact was observed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The period where the impact was observed.",
        SerializedName = @"impactTerm",
        PossibleTypes = new [] { typeof(string) })]
        string ImpactTerm { get; set; }
        /// <summary>
        /// High-level summary information about this insight. Note that justification schema changes based on kind.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"High-level summary information about this insight. Note that justification schema changes based on kind.",
        SerializedName = @"justification",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Justification { get; set; }
        /// <summary>
        /// Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope",
        SerializedName = @"scope",
        PossibleTypes = new [] { typeof(string) })]
        string Scope { get; set; }
        /// <summary>Severity of anomaly to be used for surfacing High severity anomalies first.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Severity of anomaly to be used for surfacing High severity anomalies first.",
        SerializedName = @"severity",
        PossibleTypes = new [] { typeof(string) })]
        string Severity { get; set; }
        /// <summary>Insight status kept from storage.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Insight status kept from storage.",
        SerializedName = @"status",
        PossibleTypes = new [] { typeof(string) })]
        string Status { get; set; }
        /// <summary>The datetime when this anomaly was detected.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cost.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The datetime when this anomaly was detected.",
        SerializedName = @"timeDetected",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? TimeDetected { get; set; }

    }
    /// The properties of the Insights.
    internal partial interface IInsightsPropertiesInternal

    {
        /// <summary>
        /// Lower-level background information about this insight. Note that details schema changes based on kind.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Detail { get; set; }
        /// <summary>The day the insight pertains to.</summary>
        global::System.DateTime? EventDate { get; set; }
        /// <summary>Date when the user last modified this view.</summary>
        global::System.DateTime? ImpactResolution { get; set; }
        /// <summary>The period where the impact was observed.</summary>
        string ImpactTerm { get; set; }
        /// <summary>
        /// High-level summary information about this insight. Note that justification schema changes based on kind.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cost.Models.IAny Justification { get; set; }
        /// <summary>
        /// Cost Management scope for Insights in storage. This includes 'subscriptions/{subscriptionId}' for subscription scope
        /// </summary>
        string Scope { get; set; }
        /// <summary>Severity of anomaly to be used for surfacing High severity anomalies first.</summary>
        string Severity { get; set; }
        /// <summary>Insight status kept from storage.</summary>
        string Status { get; set; }
        /// <summary>The datetime when this anomaly was detected.</summary>
        global::System.DateTime? TimeDetected { get; set; }

    }
}