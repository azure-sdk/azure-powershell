// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20230501
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Extensions;

    /// <summary>Cognitive Services RaiPolicy ContentFilter.</summary>
    public partial class RaiPolicyContentFilter :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20230501.IRaiPolicyContentFilter,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20230501.IRaiPolicyContentFilterInternal
    {

        /// <summary>Backing field for <see cref="AllowedContentLevel" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentLevel? _allowedContentLevel;

        /// <summary>Cognitive Services RaiPolicy ContentFilter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentLevel? AllowedContentLevel { get => this._allowedContentLevel; set => this._allowedContentLevel = value; }

        /// <summary>Backing field for <see cref="Blocking" /> property.</summary>
        private bool? _blocking;

        /// <summary>If blocking would occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public bool? Blocking { get => this._blocking; set => this._blocking = value; }

        /// <summary>Backing field for <see cref="Enabled" /> property.</summary>
        private bool? _enabled;

        /// <summary>If the ContentFilter is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public bool? Enabled { get => this._enabled; set => this._enabled = value; }

        /// <summary>Backing field for <see cref="Name" /> property.</summary>
        private string _name;

        /// <summary>Name of ContentFilter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public string Name { get => this._name; set => this._name = value; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? _source;

        /// <summary>Cognitive Services RaiPolicy ContentSource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? Source { get => this._source; set => this._source = value; }

        /// <summary>Creates an new <see cref="RaiPolicyContentFilter" /> instance.</summary>
        public RaiPolicyContentFilter()
        {

        }
    }
    /// Cognitive Services RaiPolicy ContentFilter.
    public partial interface IRaiPolicyContentFilter :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IJsonSerializable
    {
        /// <summary>Cognitive Services RaiPolicy ContentFilter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cognitive Services RaiPolicy ContentFilter.",
        SerializedName = @"allowedContentLevel",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentLevel) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentLevel? AllowedContentLevel { get; set; }
        /// <summary>If blocking would occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If blocking would occur.",
        SerializedName = @"blocking",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Blocking { get; set; }
        /// <summary>If the ContentFilter is enabled.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the ContentFilter is enabled.",
        SerializedName = @"enabled",
        PossibleTypes = new [] { typeof(bool) })]
        bool? Enabled { get; set; }
        /// <summary>Name of ContentFilter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Name of ContentFilter.",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string Name { get; set; }
        /// <summary>Cognitive Services RaiPolicy ContentSource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Cognitive Services RaiPolicy ContentSource.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? Source { get; set; }

    }
    /// Cognitive Services RaiPolicy ContentFilter.
    internal partial interface IRaiPolicyContentFilterInternal

    {
        /// <summary>Cognitive Services RaiPolicy ContentFilter.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentLevel? AllowedContentLevel { get; set; }
        /// <summary>If blocking would occur.</summary>
        bool? Blocking { get; set; }
        /// <summary>If the ContentFilter is enabled.</summary>
        bool? Enabled { get; set; }
        /// <summary>Name of ContentFilter.</summary>
        string Name { get; set; }
        /// <summary>Cognitive Services RaiPolicy ContentSource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? Source { get; set; }

    }
}