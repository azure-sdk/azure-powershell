// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Extensions;

    /// <summary>Properties to EncryptionScope</summary>
    public partial class EncryptionScopeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionScopeProperties,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionScopePropertiesInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryption"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryption __encryption = new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.Encryption();

        /// <summary>Enumerates the possible value of keySource for Encryption</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource? KeySource { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeySource; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeySource = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.KeySource)""); }

        /// <summary>Properties of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IKeyVaultProperties KeyVaultProperty { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultProperty; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultProperty = value ?? null /* model class */; }

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string KeyVaultPropertyIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyIdentityClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyIdentityClientId = value ?? null; }

        /// <summary>Name of the Key from KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string KeyVaultPropertyKeyName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyKeyName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyKeyName = value ?? null; }

        /// <summary>Uri of KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string KeyVaultPropertyKeyVaultUri { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyKeyVaultUri; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyKeyVaultUri = value ?? null; }

        /// <summary>Version of the Key from KeyVault</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string KeyVaultPropertyKeyVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyKeyVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal)__encryption).KeyVaultPropertyKeyVersion = value ?? null; }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionScopePropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeProvisioningState? _provisioningState;

        /// <summary>Gets the status of the resource at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="State" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeState? _state;

        /// <summary>The encryptionScope state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeState? State { get => this._state; set => this._state = value; }

        /// <summary>Creates an new <see cref="EncryptionScopeProperties" /> instance.</summary>
        public EncryptionScopeProperties()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__encryption), __encryption);
            await eventListener.AssertObjectIsValid(nameof(__encryption), __encryption);
        }
    }
    /// Properties to EncryptionScope
    public partial interface IEncryptionScopeProperties :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryption
    {
        /// <summary>Gets the status of the resource at the time the operation was called.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Gets the status of the resource at the time the operation was called.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeProvisioningState? ProvisioningState { get;  }
        /// <summary>The encryptionScope state.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The encryptionScope state.",
        SerializedName = @"state",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeState? State { get; set; }

    }
    /// Properties to EncryptionScope
    internal partial interface IEncryptionScopePropertiesInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240401Preview.IEncryptionInternal
    {
        /// <summary>Gets the status of the resource at the time the operation was called.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeProvisioningState? ProvisioningState { get; set; }
        /// <summary>The encryptionScope state.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.EncryptionScopeState? State { get; set; }

    }
}