// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Extensions;

    /// <summary>Azure Resource Manager resource envelope.</summary>
    public partial class CapabilityHost :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHost,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IValidates,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IHeaderSerializable
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.Resource();

        /// <summary>List of AI services connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string[] AiServicesConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).AiServicesConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).AiServicesConnection = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="AzureAsyncOperation" /> property.</summary>
        private string _azureAsyncOperation;

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public string AzureAsyncOperation { get => this._azureAsyncOperation; set => this._azureAsyncOperation = value; }

        /// <summary>Customer subnet info to help set up this capability host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string CustomerSubnet { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).CustomerSubnet; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).CustomerSubnet = value ?? null; }

        /// <summary>The asset description text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string Description { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseInternal)Property).Description; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseInternal)Property).Description = value ?? null; }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Id; }

        /// <summary>Kind of this capability host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostKind? Kind { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).CapabilityHostKind; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).CapabilityHostKind = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostKind)""); }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostProperties Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.CapabilityHostProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Name; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostProperties _property;

        /// <summary>[Required] Additional attributes of the entity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.CapabilityHostProperties()); set => this._property = value; }

        /// <summary>Provisioning state for the CapabilityHost.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostProvisioningState? ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).ProvisioningState; }

        /// <summary>
        /// List of connection names from those available in the account or project to be used as a storage resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string[] StorageConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).StorageConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).StorageConnection = value ?? null /* arrayOf */; }

        /// <summary>Tag dictionary. Tags can be added, removed, and updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseTags Tag { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseInternal)Property).Tag; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseInternal)Property).Tag = value ?? null /* model class */; }

        /// <summary>
        /// List of connection names from those available in the account or project to be used for Thread storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string[] ThreadStorageConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).ThreadStorageConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).ThreadStorageConnection = value ?? null /* arrayOf */; }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal)__resource).Type; }

        /// <summary>
        /// List of connection names from those available in the account or project to be used for vector database (e.g. CosmosDB).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string[] VectorStoreConnection { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).VectorStoreConnection; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostPropertiesInternal)Property).VectorStoreConnection = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="XmsAsyncOperationTimeout" /> property.</summary>
        private global::System.TimeSpan? _xmsAsyncOperationTimeout;

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public global::System.TimeSpan? XmsAsyncOperationTimeout { get => this._xmsAsyncOperationTimeout; set => this._xmsAsyncOperationTimeout = value; }

        /// <summary>Creates an new <see cref="CapabilityHost" /> instance.</summary>
        public CapabilityHost()
        {

        }

        /// <param name="headers"></param>
        void Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IHeaderSerializable.ReadHeaders(global::System.Net.Http.Headers.HttpResponseHeaders headers)
        {
            if (headers.TryGetValues("x-ms-async-operation-timeout", out var __xMSAsyncOperationTimeoutHeader0))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostInternal)this).XmsAsyncOperationTimeout = System.Linq.Enumerable.FirstOrDefault(__xMSAsyncOperationTimeoutHeader0) is string __headerXMSAsyncOperationTimeoutHeader0 ? global::System.TimeSpan.TryParse( __headerXMSAsyncOperationTimeoutHeader0, out global::System.TimeSpan __headerXMSAsyncOperationTimeoutHeader0Value ) ? __headerXMSAsyncOperationTimeoutHeader0Value : default(global::System.TimeSpan?) : default(global::System.TimeSpan?);
            }
            if (headers.TryGetValues("Azure-AsyncOperation", out var __azureAsyncOperationHeader1))
            {
                ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostInternal)this).AzureAsyncOperation = System.Linq.Enumerable.FirstOrDefault(__azureAsyncOperationHeader1) is string __headerAzureAsyncOperationHeader1 ? __headerAzureAsyncOperationHeader1 : (string)null;
            }
        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Azure Resource Manager resource envelope.
    public partial interface ICapabilityHost :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResource
    {
        /// <summary>List of AI services connections.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of AI services connections.",
        SerializedName = @"aiServicesConnections",
        PossibleTypes = new [] { typeof(string) })]
        string[] AiServicesConnection { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"Azure-AsyncOperation",
        PossibleTypes = new [] { typeof(string) })]
        string AzureAsyncOperation { get; set; }
        /// <summary>Customer subnet info to help set up this capability host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Customer subnet info to help set up this capability host.",
        SerializedName = @"customerSubnet",
        PossibleTypes = new [] { typeof(string) })]
        string CustomerSubnet { get; set; }
        /// <summary>The asset description text.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The asset description text.",
        SerializedName = @"description",
        PossibleTypes = new [] { typeof(string) })]
        string Description { get; set; }
        /// <summary>Kind of this capability host.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Kind of this capability host.",
        SerializedName = @"capabilityHostKind",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostKind) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostKind? Kind { get; set; }
        /// <summary>Provisioning state for the CapabilityHost.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning state for the CapabilityHost.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// List of connection names from those available in the account or project to be used as a storage resource.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of connection names from those available in the account or project to be used as a storage resource.",
        SerializedName = @"storageConnections",
        PossibleTypes = new [] { typeof(string) })]
        string[] StorageConnection { get; set; }
        /// <summary>Tag dictionary. Tags can be added, removed, and updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Tag dictionary. Tags can be added, removed, and updated.",
        SerializedName = @"tags",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseTags) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseTags Tag { get; set; }
        /// <summary>
        /// List of connection names from those available in the account or project to be used for Thread storage.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of connection names from those available in the account or project to be used for Thread storage.",
        SerializedName = @"threadStorageConnections",
        PossibleTypes = new [] { typeof(string) })]
        string[] ThreadStorageConnection { get; set; }
        /// <summary>
        /// List of connection names from those available in the account or project to be used for vector database (e.g. CosmosDB).
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"List of connection names from those available in the account or project to be used for vector database (e.g. CosmosDB).",
        SerializedName = @"vectorStoreConnections",
        PossibleTypes = new [] { typeof(string) })]
        string[] VectorStoreConnection { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"x-ms-async-operation-timeout",
        PossibleTypes = new [] { typeof(global::System.TimeSpan) })]
        global::System.TimeSpan? XmsAsyncOperationTimeout { get; set; }

    }
    /// Azure Resource Manager resource envelope.
    internal partial interface ICapabilityHostInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20.IResourceInternal
    {
        /// <summary>List of AI services connections.</summary>
        string[] AiServicesConnection { get; set; }

        string AzureAsyncOperation { get; set; }
        /// <summary>Customer subnet info to help set up this capability host.</summary>
        string CustomerSubnet { get; set; }
        /// <summary>The asset description text.</summary>
        string Description { get; set; }
        /// <summary>Kind of this capability host.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostKind? Kind { get; set; }
        /// <summary>[Required] Additional attributes of the entity.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.ICapabilityHostProperties Property { get; set; }
        /// <summary>Provisioning state for the CapabilityHost.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.CapabilityHostProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// List of connection names from those available in the account or project to be used as a storage resource.
        /// </summary>
        string[] StorageConnection { get; set; }
        /// <summary>Tag dictionary. Tags can be added, removed, and updated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20250601.IResourceBaseTags Tag { get; set; }
        /// <summary>
        /// List of connection names from those available in the account or project to be used for Thread storage.
        /// </summary>
        string[] ThreadStorageConnection { get; set; }
        /// <summary>
        /// List of connection names from those available in the account or project to be used for vector database (e.g. CosmosDB).
        /// </summary>
        string[] VectorStoreConnection { get; set; }

        global::System.TimeSpan? XmsAsyncOperationTimeout { get; set; }

    }
}