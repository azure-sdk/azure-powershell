// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Extensions;

    /// <summary>Properties of Cognitive Services account resource sku resource properties.</summary>
    public partial class SkuResource :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuResource,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuResourceInternal
    {

        /// <summary>Backing field for <see cref="Capacity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfig _capacity;

        /// <summary>The capacity configuration.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfig Capacity { get => (this._capacity = this._capacity ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.CapacityConfig()); set => this._capacity = value; }

        /// <summary>The array of allowed values for capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public int[] CapacityAllowedValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).AllowedValue; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).AllowedValue = value ?? null /* arrayOf */; }

        /// <summary>The default capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public int? CapacityDefault { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Default; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Default = value ?? default(int); }

        /// <summary>The maximum capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public int? CapacityMaximum { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Maximum; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Maximum = value ?? default(int); }

        /// <summary>The minimum capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public int? CapacityMinimum { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Minimum; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Minimum = value ?? default(int); }

        /// <summary>The minimal incremental between allowed values for capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public int? CapacityStep { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Step; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfigInternal)Capacity).Step = value ?? default(int); }

        /// <summary>Internal Acessors for Capacity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfig Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuResourceInternal.Capacity { get => (this._capacity = this._capacity ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.CapacityConfig()); set { {_capacity = value;} } }

        /// <summary>Internal Acessors for Sku</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISku Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuResourceInternal.Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.Sku()); set { {_sku = value;} } }

        /// <summary>Backing field for <see cref="ResourceType" /> property.</summary>
        private string _resourceType;

        /// <summary>The resource type name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public string ResourceType { get => this._resourceType; set => this._resourceType = value; }

        /// <summary>Backing field for <see cref="Sku" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISku _sku;

        /// <summary>The resource model definition representing SKU</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISku Sku { get => (this._sku = this._sku ?? new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.Sku()); set => this._sku = value; }

        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public int? SkuCapacity { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Capacity; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Capacity = value ?? default(int); }

        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string SkuFamily { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Family; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Family = value ?? null; }

        /// <summary>The name of the SKU. Ex - P3. It is typically a letter+number code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string SkuName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Name = value ?? null; }

        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public string SkuSize { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Size; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Size = value ?? null; }

        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.SkuTier? SkuTier { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Tier; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISkuInternal)Sku).Tier = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.SkuTier)""); }

        /// <summary>Creates an new <see cref="SkuResource" /> instance.</summary>
        public SkuResource()
        {

        }
    }
    /// Properties of Cognitive Services account resource sku resource properties.
    public partial interface ISkuResource :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IJsonSerializable
    {
        /// <summary>The array of allowed values for capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The array of allowed values for capacity.",
        SerializedName = @"allowedValues",
        PossibleTypes = new [] { typeof(int) })]
        int[] CapacityAllowedValue { get; set; }
        /// <summary>The default capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The default capacity.",
        SerializedName = @"default",
        PossibleTypes = new [] { typeof(int) })]
        int? CapacityDefault { get; set; }
        /// <summary>The maximum capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The maximum capacity.",
        SerializedName = @"maximum",
        PossibleTypes = new [] { typeof(int) })]
        int? CapacityMaximum { get; set; }
        /// <summary>The minimum capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimum capacity.",
        SerializedName = @"minimum",
        PossibleTypes = new [] { typeof(int) })]
        int? CapacityMinimum { get; set; }
        /// <summary>The minimal incremental between allowed values for capacity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The minimal incremental between allowed values for capacity.",
        SerializedName = @"step",
        PossibleTypes = new [] { typeof(int) })]
        int? CapacityStep { get; set; }
        /// <summary>The resource type name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource type name.",
        SerializedName = @"resourceType",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceType { get; set; }
        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
        SerializedName = @"capacity",
        PossibleTypes = new [] { typeof(int) })]
        int? SkuCapacity { get; set; }
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"If the service has different generations of hardware, for the same SKU, then that can be captured here.",
        SerializedName = @"family",
        PossibleTypes = new [] { typeof(string) })]
        string SkuFamily { get; set; }
        /// <summary>The name of the SKU. Ex - P3. It is typically a letter+number code</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The name of the SKU. Ex - P3. It is typically a letter+number code",
        SerializedName = @"name",
        PossibleTypes = new [] { typeof(string) })]
        string SkuName { get; set; }
        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. ",
        SerializedName = @"size",
        PossibleTypes = new [] { typeof(string) })]
        string SkuSize { get; set; }
        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
        SerializedName = @"tier",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.SkuTier) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.SkuTier? SkuTier { get; set; }

    }
    /// Properties of Cognitive Services account resource sku resource properties.
    internal partial interface ISkuResourceInternal

    {
        /// <summary>The capacity configuration.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICapacityConfig Capacity { get; set; }
        /// <summary>The array of allowed values for capacity.</summary>
        int[] CapacityAllowedValue { get; set; }
        /// <summary>The default capacity.</summary>
        int? CapacityDefault { get; set; }
        /// <summary>The maximum capacity.</summary>
        int? CapacityMaximum { get; set; }
        /// <summary>The minimum capacity.</summary>
        int? CapacityMinimum { get; set; }
        /// <summary>The minimal incremental between allowed values for capacity.</summary>
        int? CapacityStep { get; set; }
        /// <summary>The resource type name.</summary>
        string ResourceType { get; set; }
        /// <summary>The resource model definition representing SKU</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ISku Sku { get; set; }
        /// <summary>
        /// If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the
        /// resource this may be omitted.
        /// </summary>
        int? SkuCapacity { get; set; }
        /// <summary>
        /// If the service has different generations of hardware, for the same SKU, then that can be captured here.
        /// </summary>
        string SkuFamily { get; set; }
        /// <summary>The name of the SKU. Ex - P3. It is typically a letter+number code</summary>
        string SkuName { get; set; }
        /// <summary>
        /// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.
        /// </summary>
        string SkuSize { get; set; }
        /// <summary>
        /// This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required
        /// on a PUT.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.SkuTier? SkuTier { get; set; }

    }
}