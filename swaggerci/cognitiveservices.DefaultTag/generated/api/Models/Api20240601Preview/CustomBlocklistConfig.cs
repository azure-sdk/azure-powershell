// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview
{
    using static Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Extensions;

    /// <summary>Gets or sets the source to which filter applies.</summary>
    public partial class CustomBlocklistConfig :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICustomBlocklistConfig,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.ICustomBlocklistConfigInternal,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfig"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfig __raiBlocklistConfig = new Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.RaiBlocklistConfig();

        /// <summary>If blocking would occur.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public bool? Blocking { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfigInternal)__raiBlocklistConfig).Blocking; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfigInternal)__raiBlocklistConfig).Blocking = value ?? default(bool); }

        /// <summary>Name of ContentFilter.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Inherited)]
        public string BlocklistName { get => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfigInternal)__raiBlocklistConfig).BlocklistName; set => ((Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfigInternal)__raiBlocklistConfig).BlocklistName = value ?? null; }

        /// <summary>Backing field for <see cref="Source" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? _source;

        /// <summary>Content source to apply the Content Filters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Origin(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? Source { get => this._source; set => this._source = value; }

        /// <summary>Creates an new <see cref="CustomBlocklistConfig" /> instance.</summary>
        public CustomBlocklistConfig()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__raiBlocklistConfig), __raiBlocklistConfig);
            await eventListener.AssertObjectIsValid(nameof(__raiBlocklistConfig), __raiBlocklistConfig);
        }
    }
    /// Gets or sets the source to which filter applies.
    public partial interface ICustomBlocklistConfig :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfig
    {
        /// <summary>Content source to apply the Content Filters.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Content source to apply the Content Filters.",
        SerializedName = @"source",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource) })]
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? Source { get; set; }

    }
    /// Gets or sets the source to which filter applies.
    internal partial interface ICustomBlocklistConfigInternal :
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Models.Api20240601Preview.IRaiBlocklistConfigInternal
    {
        /// <summary>Content source to apply the Content Filters.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.CognitiveServices.Support.RaiPolicyContentSource? Source { get; set; }

    }
}