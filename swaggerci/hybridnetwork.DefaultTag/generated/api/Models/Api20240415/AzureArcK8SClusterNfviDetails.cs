// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Extensions;

    /// <summary>The AzureArcK8sCluster NFVI detail.</summary>
    public partial class AzureArcK8SClusterNfviDetails :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IAzureArcK8SClusterNfviDetails,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IAzureArcK8SClusterNfviDetailsInternal,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIs"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIs __nfvIs = new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.NfvIs();

        /// <summary>Backing field for <see cref="CustomLocationReference" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IReferencedResource _customLocationReference;

        /// <summary>The reference to the custom location.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IReferencedResource CustomLocationReference { get => (this._customLocationReference = this._customLocationReference ?? new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.ReferencedResource()); set => this._customLocationReference = value; }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string CustomLocationReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IReferencedResourceInternal)CustomLocationReference).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IReferencedResourceInternal)CustomLocationReference).Id = value ?? null; }

        /// <summary>Internal Acessors for CustomLocationReference</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IReferencedResource Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IAzureArcK8SClusterNfviDetailsInternal.CustomLocationReference { get => (this._customLocationReference = this._customLocationReference ?? new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.ReferencedResource()); set { {_customLocationReference = value;} } }

        /// <summary>Name of the nfvi.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIsInternal)__nfvIs).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIsInternal)__nfvIs).Name = value ?? null; }

        /// <summary>The NFVI type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Support.NfviType NfviType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIsInternal)__nfvIs).NfviType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIsInternal)__nfvIs).NfviType = value ; }

        /// <summary>Creates an new <see cref="AzureArcK8SClusterNfviDetails" /> instance.</summary>
        public AzureArcK8SClusterNfviDetails()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__nfvIs), __nfvIs);
            await eventListener.AssertObjectIsValid(nameof(__nfvIs), __nfvIs);
        }
    }
    /// The AzureArcK8sCluster NFVI detail.
    public partial interface IAzureArcK8SClusterNfviDetails :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIs
    {
        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Resource ID.",
        SerializedName = @"id",
        PossibleTypes = new [] { typeof(string) })]
        string CustomLocationReferenceId { get; set; }

    }
    /// The AzureArcK8sCluster NFVI detail.
    internal partial interface IAzureArcK8SClusterNfviDetailsInternal :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.INfvIsInternal
    {
        /// <summary>The reference to the custom location.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IReferencedResource CustomLocationReference { get; set; }
        /// <summary>Resource ID.</summary>
        string CustomLocationReferenceId { get; set; }

    }
}