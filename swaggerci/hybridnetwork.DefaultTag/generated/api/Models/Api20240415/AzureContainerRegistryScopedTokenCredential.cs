// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Extensions;

    /// <summary>The azure container registry scoped token credential definition.</summary>
    public partial class AzureContainerRegistryScopedTokenCredential :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IAzureContainerRegistryScopedTokenCredential,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IAzureContainerRegistryScopedTokenCredentialInternal,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IArtifactAccessCredential"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IArtifactAccessCredential __artifactAccessCredential = new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.ArtifactAccessCredential();

        /// <summary>Backing field for <see cref="AcrServerUrl" /> property.</summary>
        private string _acrServerUrl;

        /// <summary>The Acr server url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        public string AcrServerUrl { get => this._acrServerUrl; set => this._acrServerUrl = value; }

        /// <summary>Backing field for <see cref="AcrToken" /> property.</summary>
        private string _acrToken;

        /// <summary>The credential value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        public string AcrToken { get => this._acrToken; set => this._acrToken = value; }

        /// <summary>The credential type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Support.CredentialType CredentialType { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IArtifactAccessCredentialInternal)__artifactAccessCredential).CredentialType; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IArtifactAccessCredentialInternal)__artifactAccessCredential).CredentialType = value ; }

        /// <summary>Backing field for <see cref="Expiry" /> property.</summary>
        private global::System.DateTime? _expiry;

        /// <summary>The UTC time when credential will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        public global::System.DateTime? Expiry { get => this._expiry; set => this._expiry = value; }

        /// <summary>Backing field for <see cref="Repository" /> property.</summary>
        private string[] _repository;

        /// <summary>The repositories that could be accessed using the current credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        public string[] Repository { get => this._repository; set => this._repository = value; }

        /// <summary>Backing field for <see cref="Username" /> property.</summary>
        private string _username;

        /// <summary>The username of the credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        public string Username { get => this._username; set => this._username = value; }

        /// <summary>
        /// Creates an new <see cref="AzureContainerRegistryScopedTokenCredential" /> instance.
        /// </summary>
        public AzureContainerRegistryScopedTokenCredential()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__artifactAccessCredential), __artifactAccessCredential);
            await eventListener.AssertObjectIsValid(nameof(__artifactAccessCredential), __artifactAccessCredential);
        }
    }
    /// The azure container registry scoped token credential definition.
    public partial interface IAzureContainerRegistryScopedTokenCredential :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IArtifactAccessCredential
    {
        /// <summary>The Acr server url</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The Acr server url",
        SerializedName = @"acrServerUrl",
        PossibleTypes = new [] { typeof(string) })]
        string AcrServerUrl { get; set; }
        /// <summary>The credential value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The credential value.",
        SerializedName = @"acrToken",
        PossibleTypes = new [] { typeof(string) })]
        string AcrToken { get; set; }
        /// <summary>The UTC time when credential will expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The UTC time when credential will expire.",
        SerializedName = @"expiry",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? Expiry { get; set; }
        /// <summary>The repositories that could be accessed using the current credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The repositories that could be accessed using the current credential.",
        SerializedName = @"repositories",
        PossibleTypes = new [] { typeof(string) })]
        string[] Repository { get; set; }
        /// <summary>The username of the credential.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The username of the credential.",
        SerializedName = @"username",
        PossibleTypes = new [] { typeof(string) })]
        string Username { get; set; }

    }
    /// The azure container registry scoped token credential definition.
    internal partial interface IAzureContainerRegistryScopedTokenCredentialInternal :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20240415.IArtifactAccessCredentialInternal
    {
        /// <summary>The Acr server url</summary>
        string AcrServerUrl { get; set; }
        /// <summary>The credential value.</summary>
        string AcrToken { get; set; }
        /// <summary>The UTC time when credential will expire.</summary>
        global::System.DateTime? Expiry { get; set; }
        /// <summary>The repositories that could be accessed using the current credential.</summary>
        string[] Repository { get; set; }
        /// <summary>The username of the credential.</summary>
        string Username { get; set; }

    }
}