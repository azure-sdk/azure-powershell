// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901
{
    using static Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Extensions;

    /// <summary>Azure arc kubernetes deploy mapping rule profile.</summary>
    public partial class AzureArcKubernetesDeployMappingRuleProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IAzureArcKubernetesDeployMappingRuleProfile,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IAzureArcKubernetesDeployMappingRuleProfileInternal,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IMappingRuleProfile"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IMappingRuleProfile __mappingRuleProfile = new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.MappingRuleProfile();

        /// <summary>The application enablement.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Support.ApplicationEnablement? ApplicationEnablement { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IMappingRuleProfileInternal)__mappingRuleProfile).ApplicationEnablement; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IMappingRuleProfileInternal)__mappingRuleProfile).ApplicationEnablement = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Support.ApplicationEnablement)""); }

        /// <summary>Backing field for <see cref="HelmMappingRuleProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfile _helmMappingRuleProfile;

        /// <summary>The helm mapping rule profile.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfile HelmMappingRuleProfile { get => (this._helmMappingRuleProfile = this._helmMappingRuleProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.HelmMappingRuleProfile()); set => this._helmMappingRuleProfile = value; }

        /// <summary>Helm package version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string HelmMappingRuleProfileHelmPackageVersion { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).HelmPackageVersion; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).HelmPackageVersion = value ?? null; }

        /// <summary>Helm release name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string HelmMappingRuleProfileReleaseName { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).ReleaseName; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).ReleaseName = value ?? null; }

        /// <summary>Helm release namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string HelmMappingRuleProfileReleaseNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).ReleaseNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).ReleaseNamespace = value ?? null; }

        /// <summary>Helm release values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string HelmMappingRuleProfileValue { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).Value; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).Value = value ?? null; }

        /// <summary>The helm deployment atomic options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string InstallOptionAtomic { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).InstallOptionAtomic; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).InstallOptionAtomic = value ?? null; }

        /// <summary>The helm deployment timeout options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string InstallOptionTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).InstallOptionTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).InstallOptionTimeout = value ?? null; }

        /// <summary>The helm deployment wait options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string InstallOptionWait { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).InstallOptionWait; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).InstallOptionWait = value ?? null; }

        /// <summary>Internal Acessors for HelmMappingRuleProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfile Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IAzureArcKubernetesDeployMappingRuleProfileInternal.HelmMappingRuleProfile { get => (this._helmMappingRuleProfile = this._helmMappingRuleProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.HelmMappingRuleProfile()); set { {_helmMappingRuleProfile = value;} } }

        /// <summary>Internal Acessors for HelmMappingRuleProfileOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileOptions Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IAzureArcKubernetesDeployMappingRuleProfileInternal.HelmMappingRuleProfileOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).Option; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).Option = value; }

        /// <summary>Internal Acessors for OptionInstallOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmInstallOptions Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IAzureArcKubernetesDeployMappingRuleProfileInternal.OptionInstallOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).OptionInstallOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).OptionInstallOption = value; }

        /// <summary>Internal Acessors for OptionUpgradeOption</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmUpgradeOptions Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IAzureArcKubernetesDeployMappingRuleProfileInternal.OptionUpgradeOption { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).OptionUpgradeOption; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).OptionUpgradeOption = value; }

        /// <summary>The helm deployment atomic options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string UpgradeOptionAtomic { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).UpgradeOptionAtomic; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).UpgradeOptionAtomic = value ?? null; }

        /// <summary>The helm deployment timeout options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string UpgradeOptionTimeout { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).UpgradeOptionTimeout; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).UpgradeOptionTimeout = value ?? null; }

        /// <summary>The helm deployment wait options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Origin(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.PropertyOrigin.Inlined)]
        public string UpgradeOptionWait { get => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).UpgradeOptionWait; set => ((Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileInternal)HelmMappingRuleProfile).UpgradeOptionWait = value ?? null; }

        /// <summary>
        /// Creates an new <see cref="AzureArcKubernetesDeployMappingRuleProfile" /> instance.
        /// </summary>
        public AzureArcKubernetesDeployMappingRuleProfile()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__mappingRuleProfile), __mappingRuleProfile);
            await eventListener.AssertObjectIsValid(nameof(__mappingRuleProfile), __mappingRuleProfile);
        }
    }
    /// Azure arc kubernetes deploy mapping rule profile.
    public partial interface IAzureArcKubernetesDeployMappingRuleProfile :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IMappingRuleProfile
    {
        /// <summary>Helm package version.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Helm package version.",
        SerializedName = @"helmPackageVersion",
        PossibleTypes = new [] { typeof(string) })]
        string HelmMappingRuleProfileHelmPackageVersion { get; set; }
        /// <summary>Helm release name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Helm release name.",
        SerializedName = @"releaseName",
        PossibleTypes = new [] { typeof(string) })]
        string HelmMappingRuleProfileReleaseName { get; set; }
        /// <summary>Helm release namespace.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Helm release namespace.",
        SerializedName = @"releaseNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string HelmMappingRuleProfileReleaseNamespace { get; set; }
        /// <summary>Helm release values.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Helm release values.",
        SerializedName = @"values",
        PossibleTypes = new [] { typeof(string) })]
        string HelmMappingRuleProfileValue { get; set; }
        /// <summary>The helm deployment atomic options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The helm deployment atomic options",
        SerializedName = @"atomic",
        PossibleTypes = new [] { typeof(string) })]
        string InstallOptionAtomic { get; set; }
        /// <summary>The helm deployment timeout options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The helm deployment timeout options",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(string) })]
        string InstallOptionTimeout { get; set; }
        /// <summary>The helm deployment wait options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The helm deployment wait options",
        SerializedName = @"wait",
        PossibleTypes = new [] { typeof(string) })]
        string InstallOptionWait { get; set; }
        /// <summary>The helm deployment atomic options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The helm deployment atomic options",
        SerializedName = @"atomic",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeOptionAtomic { get; set; }
        /// <summary>The helm deployment timeout options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The helm deployment timeout options",
        SerializedName = @"timeout",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeOptionTimeout { get; set; }
        /// <summary>The helm deployment wait options</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The helm deployment wait options",
        SerializedName = @"wait",
        PossibleTypes = new [] { typeof(string) })]
        string UpgradeOptionWait { get; set; }

    }
    /// Azure arc kubernetes deploy mapping rule profile.
    internal partial interface IAzureArcKubernetesDeployMappingRuleProfileInternal :
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IMappingRuleProfileInternal
    {
        /// <summary>The helm mapping rule profile.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfile HelmMappingRuleProfile { get; set; }
        /// <summary>Helm package version.</summary>
        string HelmMappingRuleProfileHelmPackageVersion { get; set; }
        /// <summary>The helm deployment options</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmMappingRuleProfileOptions HelmMappingRuleProfileOption { get; set; }
        /// <summary>Helm release name.</summary>
        string HelmMappingRuleProfileReleaseName { get; set; }
        /// <summary>Helm release namespace.</summary>
        string HelmMappingRuleProfileReleaseNamespace { get; set; }
        /// <summary>Helm release values.</summary>
        string HelmMappingRuleProfileValue { get; set; }
        /// <summary>The helm deployment atomic options</summary>
        string InstallOptionAtomic { get; set; }
        /// <summary>The helm deployment timeout options</summary>
        string InstallOptionTimeout { get; set; }
        /// <summary>The helm deployment wait options</summary>
        string InstallOptionWait { get; set; }
        /// <summary>The helm deployment install options</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmInstallOptions OptionInstallOption { get; set; }
        /// <summary>The helm deployment upgrade options</summary>
        Microsoft.Azure.PowerShell.Cmdlets.HybridNetwork.Models.Api20230901.IHelmUpgradeOptions OptionUpgradeOption { get; set; }
        /// <summary>The helm deployment atomic options</summary>
        string UpgradeOptionAtomic { get; set; }
        /// <summary>The helm deployment timeout options</summary>
        string UpgradeOptionTimeout { get; set; }
        /// <summary>The helm deployment wait options</summary>
        string UpgradeOptionWait { get; set; }

    }
}