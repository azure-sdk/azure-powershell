// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>The remediation properties.</summary>
    public partial class RemediationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationProperties,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal
    {

        /// <summary>Backing field for <see cref="CorrelationId" /> property.</summary>
        private string _correlationId;

        /// <summary>
        /// The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string CorrelationId { get => this._correlationId; }

        /// <summary>Backing field for <see cref="CreatedOn" /> property.</summary>
        private global::System.DateTime? _createdOn;

        /// <summary>The time at which the remediation was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? CreatedOn { get => this._createdOn; }

        /// <summary>Backing field for <see cref="DeploymentStatus" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummary _deploymentStatus;

        /// <summary>The deployment status summary for all deployments created by the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummary DeploymentStatus { get => (this._deploymentStatus = this._deploymentStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.RemediationDeploymentSummary()); }

        /// <summary>The number of deployments required by the remediation that have failed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? DeploymentStatusFailedDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).FailedDeployment; }

        /// <summary>The number of deployments required by the remediation that have succeeded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? DeploymentStatusSuccessfulDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).SuccessfulDeployment; }

        /// <summary>The number of deployments required by the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? DeploymentStatusTotalDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).TotalDeployment; }

        /// <summary>Backing field for <see cref="FailureThreshold" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesFailureThreshold _failureThreshold;

        /// <summary>The remediation failure threshold settings</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesFailureThreshold FailureThreshold { get => (this._failureThreshold = this._failureThreshold ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.RemediationPropertiesFailureThreshold()); set => this._failureThreshold = value; }

        /// <summary>
        /// A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage
        /// of failed remediation operations (i.e. failed deployments) exceeds this threshold.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public float? FailureThresholdPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesFailureThresholdInternal)FailureThreshold).Percentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesFailureThresholdInternal)FailureThreshold).Percentage = value ?? default(float); }

        /// <summary>Backing field for <see cref="Filter" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationFilters _filter;

        /// <summary>The filters that will be applied to determine which resources to remediate.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationFilters Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.RemediationFilters()); set => this._filter = value; }

        /// <summary>The resource locations that will be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string[] FilterLocation { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationFiltersInternal)Filter).Location; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationFiltersInternal)Filter).Location = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="LastUpdatedOn" /> property.</summary>
        private global::System.DateTime? _lastUpdatedOn;

        /// <summary>The time at which the remediation was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public global::System.DateTime? LastUpdatedOn { get => this._lastUpdatedOn; }

        /// <summary>Internal Acessors for CorrelationId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.CorrelationId { get => this._correlationId; set { {_correlationId = value;} } }

        /// <summary>Internal Acessors for CreatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.CreatedOn { get => this._createdOn; set { {_createdOn = value;} } }

        /// <summary>Internal Acessors for DeploymentStatus</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummary Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.DeploymentStatus { get => (this._deploymentStatus = this._deploymentStatus ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.RemediationDeploymentSummary()); set { {_deploymentStatus = value;} } }

        /// <summary>Internal Acessors for DeploymentStatusFailedDeployment</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.DeploymentStatusFailedDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).FailedDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).FailedDeployment = value; }

        /// <summary>Internal Acessors for DeploymentStatusSuccessfulDeployment</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.DeploymentStatusSuccessfulDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).SuccessfulDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).SuccessfulDeployment = value; }

        /// <summary>Internal Acessors for DeploymentStatusTotalDeployment</summary>
        int? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.DeploymentStatusTotalDeployment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).TotalDeployment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummaryInternal)DeploymentStatus).TotalDeployment = value; }

        /// <summary>Internal Acessors for FailureThreshold</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesFailureThreshold Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.FailureThreshold { get => (this._failureThreshold = this._failureThreshold ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.RemediationPropertiesFailureThreshold()); set { {_failureThreshold = value;} } }

        /// <summary>Internal Acessors for Filter</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationFilters Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.Filter { get => (this._filter = this._filter ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.RemediationFilters()); set { {_filter = value;} } }

        /// <summary>Internal Acessors for LastUpdatedOn</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.LastUpdatedOn { get => this._lastUpdatedOn; set { {_lastUpdatedOn = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for StatusMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesInternal.StatusMessage { get => this._statusMessage; set { {_statusMessage = value;} } }

        /// <summary>Backing field for <see cref="ParallelDeployment" /> property.</summary>
        private int? _parallelDeployment;

        /// <summary>
        /// Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation.
        /// If not provided, the default parallel deployments value is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public int? ParallelDeployment { get => this._parallelDeployment; set => this._parallelDeployment = value; }

        /// <summary>Backing field for <see cref="PolicyAssignmentId" /> property.</summary>
        private string _policyAssignmentId;

        /// <summary>The resource ID of the policy assignment that should be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string PolicyAssignmentId { get => this._policyAssignmentId; set => this._policyAssignmentId = value; }

        /// <summary>Backing field for <see cref="PolicyDefinitionReferenceId" /> property.</summary>
        private string _policyDefinitionReferenceId;

        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment
        /// being remediated assigns a policy set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string PolicyDefinitionReferenceId { get => this._policyDefinitionReferenceId; set => this._policyDefinitionReferenceId = value; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private string _provisioningState;

        /// <summary>The status of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ResourceCount" /> property.</summary>
        private int? _resourceCount;

        /// <summary>
        /// Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource
        /// count is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public int? ResourceCount { get => this._resourceCount; set => this._resourceCount = value; }

        /// <summary>Backing field for <see cref="ResourceDiscoveryMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? _resourceDiscoveryMode;

        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? ResourceDiscoveryMode { get => this._resourceDiscoveryMode; set => this._resourceDiscoveryMode = value; }

        /// <summary>Backing field for <see cref="StatusMessage" /> property.</summary>
        private string _statusMessage;

        /// <summary>
        /// The remediation status message. Provides additional details regarding the state of the remediation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string StatusMessage { get => this._statusMessage; }

        /// <summary>Creates an new <see cref="RemediationProperties" /> instance.</summary>
        public RemediationProperties()
        {

        }
    }
    /// The remediation properties.
    public partial interface IRemediationProperties :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable
    {
        /// <summary>
        /// The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The remediation correlation Id. Can be used to find events related to the remediation in the activity log.",
        SerializedName = @"correlationId",
        PossibleTypes = new [] { typeof(string) })]
        string CorrelationId { get;  }
        /// <summary>The time at which the remediation was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the remediation was created.",
        SerializedName = @"createdOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? CreatedOn { get;  }
        /// <summary>The number of deployments required by the remediation that have failed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of deployments required by the remediation that have failed.",
        SerializedName = @"failedDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? DeploymentStatusFailedDeployment { get;  }
        /// <summary>The number of deployments required by the remediation that have succeeded.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of deployments required by the remediation that have succeeded.",
        SerializedName = @"successfulDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? DeploymentStatusSuccessfulDeployment { get;  }
        /// <summary>The number of deployments required by the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The number of deployments required by the remediation.",
        SerializedName = @"totalDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? DeploymentStatusTotalDeployment { get;  }
        /// <summary>
        /// A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage
        /// of failed remediation operations (i.e. failed deployments) exceeds this threshold.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold.",
        SerializedName = @"percentage",
        PossibleTypes = new [] { typeof(float) })]
        float? FailureThresholdPercentage { get; set; }
        /// <summary>The resource locations that will be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource locations that will be remediated.",
        SerializedName = @"locations",
        PossibleTypes = new [] { typeof(string) })]
        string[] FilterLocation { get; set; }
        /// <summary>The time at which the remediation was last updated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time at which the remediation was last updated.",
        SerializedName = @"lastUpdatedOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastUpdatedOn { get;  }
        /// <summary>
        /// Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation.
        /// If not provided, the default parallel deployments value is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used.",
        SerializedName = @"parallelDeployments",
        PossibleTypes = new [] { typeof(int) })]
        int? ParallelDeployment { get; set; }
        /// <summary>The resource ID of the policy assignment that should be remediated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The resource ID of the policy assignment that should be remediated.",
        SerializedName = @"policyAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyAssignmentId { get; set; }
        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment
        /// being remediated assigns a policy set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.",
        SerializedName = @"policyDefinitionReferenceId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionReferenceId { get; set; }
        /// <summary>The status of the remediation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the remediation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>
        /// Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource
        /// count is used.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used.",
        SerializedName = @"resourceCount",
        PossibleTypes = new [] { typeof(int) })]
        int? ResourceCount { get; set; }
        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.",
        SerializedName = @"resourceDiscoveryMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? ResourceDiscoveryMode { get; set; }
        /// <summary>
        /// The remediation status message. Provides additional details regarding the state of the remediation.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The remediation status message. Provides additional details regarding the state of the remediation.",
        SerializedName = @"statusMessage",
        PossibleTypes = new [] { typeof(string) })]
        string StatusMessage { get;  }

    }
    /// The remediation properties.
    internal partial interface IRemediationPropertiesInternal

    {
        /// <summary>
        /// The remediation correlation Id. Can be used to find events related to the remediation in the activity log.
        /// </summary>
        string CorrelationId { get; set; }
        /// <summary>The time at which the remediation was created.</summary>
        global::System.DateTime? CreatedOn { get; set; }
        /// <summary>The deployment status summary for all deployments created by the remediation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationDeploymentSummary DeploymentStatus { get; set; }
        /// <summary>The number of deployments required by the remediation that have failed.</summary>
        int? DeploymentStatusFailedDeployment { get; set; }
        /// <summary>The number of deployments required by the remediation that have succeeded.</summary>
        int? DeploymentStatusSuccessfulDeployment { get; set; }
        /// <summary>The number of deployments required by the remediation.</summary>
        int? DeploymentStatusTotalDeployment { get; set; }
        /// <summary>The remediation failure threshold settings</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationPropertiesFailureThreshold FailureThreshold { get; set; }
        /// <summary>
        /// A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage
        /// of failed remediation operations (i.e. failed deployments) exceeds this threshold.
        /// </summary>
        float? FailureThresholdPercentage { get; set; }
        /// <summary>The filters that will be applied to determine which resources to remediate.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediationFilters Filter { get; set; }
        /// <summary>The resource locations that will be remediated.</summary>
        string[] FilterLocation { get; set; }
        /// <summary>The time at which the remediation was last updated.</summary>
        global::System.DateTime? LastUpdatedOn { get; set; }
        /// <summary>
        /// Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation.
        /// If not provided, the default parallel deployments value is used.
        /// </summary>
        int? ParallelDeployment { get; set; }
        /// <summary>The resource ID of the policy assignment that should be remediated.</summary>
        string PolicyAssignmentId { get; set; }
        /// <summary>
        /// The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment
        /// being remediated assigns a policy set definition.
        /// </summary>
        string PolicyDefinitionReferenceId { get; set; }
        /// <summary>The status of the remediation.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource
        /// count is used.
        /// </summary>
        int? ResourceCount { get; set; }
        /// <summary>
        /// The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode? ResourceDiscoveryMode { get; set; }
        /// <summary>
        /// The remediation status message. Provides additional details regarding the state of the remediation.
        /// </summary>
        string StatusMessage { get; set; }

    }
}