// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>
    /// The result of a non-compliant policy evaluation against the given resource content.
    /// </summary>
    public partial class PolicyEvaluationResult :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResult,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal
    {

        /// <summary>Backing field for <see cref="EvaluationDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGenerated _evaluationDetail;

        /// <summary>The detailed results of the policy expressions and values that were evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGenerated EvaluationDetail { get => (this._evaluationDetail = this._evaluationDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.PolicyEvaluationDetailsAutoGenerated()); }

        /// <summary>Details of the evaluated expressions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] EvaluationDetailEvaluatedExpression { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).EvaluatedExpression; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).EvaluatedExpression = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="EvaluationResult" /> property.</summary>
        private string _evaluationResult;

        /// <summary>
        /// The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other
        /// values if errors were encountered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string EvaluationResult { get => this._evaluationResult; }

        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string IfNotExistDetailResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).IfNotExistDetailResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).IfNotExistDetailResourceId = value ?? null; }

        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? IfNotExistDetailTotalResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).IfNotExistDetailTotalResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).IfNotExistDetailTotalResource = value ?? default(int); }

        /// <summary>Internal Acessors for EvaluationDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGenerated Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.EvaluationDetail { get => (this._evaluationDetail = this._evaluationDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.PolicyEvaluationDetailsAutoGenerated()); set { {_evaluationDetail = value;} } }

        /// <summary>Internal Acessors for EvaluationDetailIfNotExistsDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.EvaluationDetailIfNotExistsDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).IfNotExistsDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal)EvaluationDetail).IfNotExistsDetail = value; }

        /// <summary>Internal Acessors for EvaluationResult</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.EvaluationResult { get => this._evaluationResult; set { {_evaluationResult = value;} } }

        /// <summary>Internal Acessors for PolicyInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReference Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.PolicyInfo { get => (this._policyInfo = this._policyInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.PolicyReference()); set { {_policyInfo = value;} } }

        /// <summary>Internal Acessors for PolicyInfoPolicyAssignmentId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.PolicyInfoPolicyAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyAssignmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyAssignmentId = value; }

        /// <summary>Internal Acessors for PolicyInfoPolicyDefinitionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.PolicyInfoPolicyDefinitionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyDefinitionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyDefinitionId = value; }

        /// <summary>Internal Acessors for PolicyInfoPolicyDefinitionReferenceId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.PolicyInfoPolicyDefinitionReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyDefinitionReferenceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyDefinitionReferenceId = value; }

        /// <summary>Internal Acessors for PolicyInfoPolicySetDefinitionId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyEvaluationResultInternal.PolicyInfoPolicySetDefinitionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicySetDefinitionId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicySetDefinitionId = value; }

        /// <summary>Backing field for <see cref="PolicyInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReference _policyInfo;

        /// <summary>The details of the policy that was evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReference PolicyInfo { get => (this._policyInfo = this._policyInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.PolicyReference()); }

        /// <summary>The resource identifier of the policy assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyInfoPolicyAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyAssignmentId; }

        /// <summary>The resource identifier of the policy definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyInfoPolicyDefinitionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyDefinitionId; }

        /// <summary>
        /// The reference identifier of a specific policy definition within a policy set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyInfoPolicyDefinitionReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicyDefinitionReferenceId; }

        /// <summary>The resource identifier of the policy set definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyInfoPolicySetDefinitionId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReferenceInternal)PolicyInfo).PolicySetDefinitionId; }

        /// <summary>Creates an new <see cref="PolicyEvaluationResult" /> instance.</summary>
        public PolicyEvaluationResult()
        {

        }
    }
    /// The result of a non-compliant policy evaluation against the given resource content.
    public partial interface IPolicyEvaluationResult :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable
    {
        /// <summary>Details of the evaluated expressions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details of the evaluated expressions.",
        SerializedName = @"evaluatedExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] EvaluationDetailEvaluatedExpression { get; set; }
        /// <summary>
        /// The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other
        /// values if errors were encountered.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.",
        SerializedName = @"evaluationResult",
        PossibleTypes = new [] { typeof(string) })]
        string EvaluationResult { get;  }
        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the last evaluated resource for IfNotExists effect.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IfNotExistDetailResourceId { get; set; }
        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total number of resources to which the existence condition is applicable.",
        SerializedName = @"totalResources",
        PossibleTypes = new [] { typeof(int) })]
        int? IfNotExistDetailTotalResource { get; set; }
        /// <summary>The resource identifier of the policy assignment.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource identifier of the policy assignment.",
        SerializedName = @"policyAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyInfoPolicyAssignmentId { get;  }
        /// <summary>The resource identifier of the policy definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource identifier of the policy definition.",
        SerializedName = @"policyDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyInfoPolicyDefinitionId { get;  }
        /// <summary>
        /// The reference identifier of a specific policy definition within a policy set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The reference identifier of a specific policy definition within a policy set definition.",
        SerializedName = @"policyDefinitionReferenceId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyInfoPolicyDefinitionReferenceId { get;  }
        /// <summary>The resource identifier of the policy set definition.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The resource identifier of the policy set definition.",
        SerializedName = @"policySetDefinitionId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyInfoPolicySetDefinitionId { get;  }

    }
    /// The result of a non-compliant policy evaluation against the given resource content.
    internal partial interface IPolicyEvaluationResultInternal

    {
        /// <summary>The detailed results of the policy expressions and values that were evaluated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGenerated EvaluationDetail { get; set; }
        /// <summary>Details of the evaluated expressions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] EvaluationDetailEvaluatedExpression { get; set; }
        /// <summary>Evaluation details of IfNotExists effect.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails EvaluationDetailIfNotExistsDetail { get; set; }
        /// <summary>
        /// The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other
        /// values if errors were encountered.
        /// </summary>
        string EvaluationResult { get; set; }
        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        string IfNotExistDetailResourceId { get; set; }
        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        int? IfNotExistDetailTotalResource { get; set; }
        /// <summary>The details of the policy that was evaluated.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20200701.IPolicyReference PolicyInfo { get; set; }
        /// <summary>The resource identifier of the policy assignment.</summary>
        string PolicyInfoPolicyAssignmentId { get; set; }
        /// <summary>The resource identifier of the policy definition.</summary>
        string PolicyInfoPolicyDefinitionId { get; set; }
        /// <summary>
        /// The reference identifier of a specific policy definition within a policy set definition.
        /// </summary>
        string PolicyInfoPolicyDefinitionReferenceId { get; set; }
        /// <summary>The resource identifier of the policy set definition.</summary>
        string PolicyInfoPolicySetDefinitionId { get; set; }

    }
}