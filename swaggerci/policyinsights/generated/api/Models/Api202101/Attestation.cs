// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>An attestation resource.</summary>
    public partial class Attestation :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestation,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationInternal,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResource"
        /// />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.Resource();

        /// <summary>Comments describing why this attestation was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string Comment { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).Comment; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).Comment = value ?? null; }

        /// <summary>The compliance state that should be set on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ComplianceState? ComplianceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ComplianceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ComplianceState = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ComplianceState)""); }

        /// <summary>The evidence supporting the compliance state set in this attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationEvidence[] Evidence { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).Evidence; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).Evidence = value ?? null /* arrayOf */; }

        /// <summary>The time the compliance state should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? ExpiresOn { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ExpiresOn; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ExpiresOn = value ?? default(global::System.DateTime); }

        /// <summary>
        /// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Id; }

        /// <summary>The time the compliance state was last changed in this attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? LastComplianceStateChangeAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).LastComplianceStateChangeAt; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Type = value; }

        /// <summary>Internal Acessors for LastComplianceStateChangeAt</summary>
        global::System.DateTime? Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationInternal.LastComplianceStateChangeAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).LastComplianceStateChangeAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).LastComplianceStateChangeAt = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationProperties Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.AttestationProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationInternal.SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.SystemData()); set { {_systemData = value;} } }

        /// <summary>The name of the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Name; }

        /// <summary>
        /// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object
        /// ID.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string Owner { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).Owner; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).Owner = value ?? null; }

        /// <summary>
        /// The resource ID of the policy assignment that the attestation is setting the state for.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyAssignmentId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).PolicyAssignmentId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).PolicyAssignmentId = value ; }

        /// <summary>
        /// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the
        /// policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with
        /// this property or omit this and set the state for the entire set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string PolicyDefinitionReferenceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).PolicyDefinitionReferenceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).PolicyDefinitionReferenceId = value ?? null; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationProperties _property;

        /// <summary>Properties for the attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.AttestationProperties()); set => this._property = value; }

        /// <summary>The status of the attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Backing field for <see cref="SystemData" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData _systemData;

        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData SystemData { get => (this._systemData = this._systemData ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.SystemData()); }

        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).CreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemDataInternal)SystemData).LastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType)""); }

        /// <summary>
        /// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="Attestation" /> instance.</summary>
        public Attestation()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A <see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// An attestation resource.
    public partial interface IAttestation :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResource
    {
        /// <summary>Comments describing why this attestation was created.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Comments describing why this attestation was created.",
        SerializedName = @"comments",
        PossibleTypes = new [] { typeof(string) })]
        string Comment { get; set; }
        /// <summary>The compliance state that should be set on the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The compliance state that should be set on the resource.",
        SerializedName = @"complianceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ComplianceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ComplianceState? ComplianceState { get; set; }
        /// <summary>The evidence supporting the compliance state set in this attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The evidence supporting the compliance state set in this attestation.",
        SerializedName = @"evidence",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationEvidence) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationEvidence[] Evidence { get; set; }
        /// <summary>The time the compliance state should expire.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The time the compliance state should expire.",
        SerializedName = @"expiresOn",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? ExpiresOn { get; set; }
        /// <summary>The time the compliance state was last changed in this attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The time the compliance state was last changed in this attestation.",
        SerializedName = @"lastComplianceStateChangeAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? LastComplianceStateChangeAt { get;  }
        /// <summary>
        /// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object
        /// ID.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID.",
        SerializedName = @"owner",
        PossibleTypes = new [] { typeof(string) })]
        string Owner { get; set; }
        /// <summary>
        /// The resource ID of the policy assignment that the attestation is setting the state for.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The resource ID of the policy assignment that the attestation is setting the state for.",
        SerializedName = @"policyAssignmentId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyAssignmentId { get; set; }
        /// <summary>
        /// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the
        /// policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with
        /// this property or omit this and set the state for the entire set definition.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition.",
        SerializedName = @"policyDefinitionReferenceId",
        PossibleTypes = new [] { typeof(string) })]
        string PolicyDefinitionReferenceId { get; set; }
        /// <summary>The status of the attestation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The status of the attestation.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource creation (UTC).",
        SerializedName = @"createdAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that created the resource.",
        SerializedName = @"createdBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that created the resource.",
        SerializedName = @"createdByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The timestamp of resource last modification (UTC)",
        SerializedName = @"lastModifiedAt",
        PossibleTypes = new [] { typeof(global::System.DateTime) })]
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity that last modified the resource.",
        SerializedName = @"lastModifiedBy",
        PossibleTypes = new [] { typeof(string) })]
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of identity that last modified the resource.",
        SerializedName = @"lastModifiedByType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
    /// An attestation resource.
    internal partial interface IAttestationInternal :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.IResourceInternal
    {
        /// <summary>Comments describing why this attestation was created.</summary>
        string Comment { get; set; }
        /// <summary>The compliance state that should be set on the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ComplianceState? ComplianceState { get; set; }
        /// <summary>The evidence supporting the compliance state set in this attestation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationEvidence[] Evidence { get; set; }
        /// <summary>The time the compliance state should expire.</summary>
        global::System.DateTime? ExpiresOn { get; set; }
        /// <summary>The time the compliance state was last changed in this attestation.</summary>
        global::System.DateTime? LastComplianceStateChangeAt { get; set; }
        /// <summary>
        /// The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object
        /// ID.
        /// </summary>
        string Owner { get; set; }
        /// <summary>
        /// The resource ID of the policy assignment that the attestation is setting the state for.
        /// </summary>
        string PolicyAssignmentId { get; set; }
        /// <summary>
        /// The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the
        /// policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with
        /// this property or omit this and set the state for the entire set definition.
        /// </summary>
        string PolicyDefinitionReferenceId { get; set; }
        /// <summary>Properties for the attestation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api202101.IAttestationProperties Property { get; set; }
        /// <summary>The status of the attestation.</summary>
        string ProvisioningState { get; set; }
        /// <summary>
        /// Azure Resource Manager metadata containing createdBy and modifiedBy information.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api10.ISystemData SystemData { get; set; }
        /// <summary>The timestamp of resource creation (UTC).</summary>
        global::System.DateTime? SystemDataCreatedAt { get; set; }
        /// <summary>The identity that created the resource.</summary>
        string SystemDataCreatedBy { get; set; }
        /// <summary>The type of identity that created the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataCreatedByType { get; set; }
        /// <summary>The timestamp of resource last modification (UTC)</summary>
        global::System.DateTime? SystemDataLastModifiedAt { get; set; }
        /// <summary>The identity that last modified the resource.</summary>
        string SystemDataLastModifiedBy { get; set; }
        /// <summary>The type of identity that last modified the resource.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.CreatedByType? SystemDataLastModifiedByType { get; set; }

    }
}