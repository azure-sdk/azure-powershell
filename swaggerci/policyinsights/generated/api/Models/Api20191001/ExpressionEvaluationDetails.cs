// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>Evaluation details of policy language expressions.</summary>
    public partial class ExpressionEvaluationDetails :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetailsInternal
    {

        /// <summary>Backing field for <see cref="Expression" /> property.</summary>
        private string _expression;

        /// <summary>Expression evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Expression { get => this._expression; set => this._expression = value; }

        /// <summary>Backing field for <see cref="ExpressionKind" /> property.</summary>
        private string _expressionKind;

        /// <summary>The kind of expression that was evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string ExpressionKind { get => this._expressionKind; }

        /// <summary>Backing field for <see cref="ExpressionValue" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny _expressionValue;

        /// <summary>Value of the expression.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny ExpressionValue { get => (this._expressionValue = this._expressionValue ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Any()); set => this._expressionValue = value; }

        /// <summary>Internal Acessors for ExpressionKind</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetailsInternal.ExpressionKind { get => this._expressionKind; set { {_expressionKind = value;} } }

        /// <summary>Backing field for <see cref="Operator" /> property.</summary>
        private string _operator;

        /// <summary>Operator to compare the expression value and the target value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Operator { get => this._operator; set => this._operator = value; }

        /// <summary>Backing field for <see cref="Path" /> property.</summary>
        private string _path;

        /// <summary>Property path if the expression is a field or an alias.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Path { get => this._path; set => this._path = value; }

        /// <summary>Backing field for <see cref="Result" /> property.</summary>
        private string _result;

        /// <summary>Evaluation result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string Result { get => this._result; set => this._result = value; }

        /// <summary>Backing field for <see cref="TargetValue" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny _targetValue;

        /// <summary>Target value to be compared with the expression value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny TargetValue { get => (this._targetValue = this._targetValue ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Any()); set => this._targetValue = value; }

        /// <summary>Creates an new <see cref="ExpressionEvaluationDetails" /> instance.</summary>
        public ExpressionEvaluationDetails()
        {

        }
    }
    /// Evaluation details of policy language expressions.
    public partial interface IExpressionEvaluationDetails :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable
    {
        /// <summary>Expression evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Expression evaluated.",
        SerializedName = @"expression",
        PossibleTypes = new [] { typeof(string) })]
        string Expression { get; set; }
        /// <summary>The kind of expression that was evaluated.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The kind of expression that was evaluated.",
        SerializedName = @"expressionKind",
        PossibleTypes = new [] { typeof(string) })]
        string ExpressionKind { get;  }
        /// <summary>Value of the expression.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Value of the expression.",
        SerializedName = @"expressionValue",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny ExpressionValue { get; set; }
        /// <summary>Operator to compare the expression value and the target value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Operator to compare the expression value and the target value.",
        SerializedName = @"operator",
        PossibleTypes = new [] { typeof(string) })]
        string Operator { get; set; }
        /// <summary>Property path if the expression is a field or an alias.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Property path if the expression is a field or an alias.",
        SerializedName = @"path",
        PossibleTypes = new [] { typeof(string) })]
        string Path { get; set; }
        /// <summary>Evaluation result.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Evaluation result.",
        SerializedName = @"result",
        PossibleTypes = new [] { typeof(string) })]
        string Result { get; set; }
        /// <summary>Target value to be compared with the expression value.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Target value to be compared with the expression value.",
        SerializedName = @"targetValue",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny TargetValue { get; set; }

    }
    /// Evaluation details of policy language expressions.
    internal partial interface IExpressionEvaluationDetailsInternal

    {
        /// <summary>Expression evaluated.</summary>
        string Expression { get; set; }
        /// <summary>The kind of expression that was evaluated.</summary>
        string ExpressionKind { get; set; }
        /// <summary>Value of the expression.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny ExpressionValue { get; set; }
        /// <summary>Operator to compare the expression value and the target value.</summary>
        string Operator { get; set; }
        /// <summary>Property path if the expression is a field or an alias.</summary>
        string Path { get; set; }
        /// <summary>Evaluation result.</summary>
        string Result { get; set; }
        /// <summary>Target value to be compared with the expression value.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IAny TargetValue { get; set; }

    }
}