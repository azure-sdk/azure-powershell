// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>Evaluation details of IfNotExists effect.</summary>
    public partial class IfNotExistsEvaluationDetails :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetailsInternal
    {

        /// <summary>Backing field for <see cref="ResourceId" /> property.</summary>
        private string _resourceId;

        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public string ResourceId { get => this._resourceId; set => this._resourceId = value; }

        /// <summary>Backing field for <see cref="TotalResource" /> property.</summary>
        private int? _totalResource;

        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public int? TotalResource { get => this._totalResource; set => this._totalResource = value; }

        /// <summary>Creates an new <see cref="IfNotExistsEvaluationDetails" /> instance.</summary>
        public IfNotExistsEvaluationDetails()
        {

        }
    }
    /// Evaluation details of IfNotExists effect.
    public partial interface IIfNotExistsEvaluationDetails :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable
    {
        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the last evaluated resource for IfNotExists effect.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string ResourceId { get; set; }
        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total number of resources to which the existence condition is applicable.",
        SerializedName = @"totalResources",
        PossibleTypes = new [] { typeof(int) })]
        int? TotalResource { get; set; }

    }
    /// Evaluation details of IfNotExists effect.
    internal partial interface IIfNotExistsEvaluationDetailsInternal

    {
        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        string ResourceId { get; set; }
        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        int? TotalResource { get; set; }

    }
}