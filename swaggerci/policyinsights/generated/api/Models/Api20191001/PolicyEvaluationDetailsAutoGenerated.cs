// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001
{
    using static Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Extensions;

    /// <summary>Policy evaluation details.</summary>
    public partial class PolicyEvaluationDetailsAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGenerated,
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal
    {

        /// <summary>Backing field for <see cref="EvaluatedExpression" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] _evaluatedExpression;

        /// <summary>Details of the evaluated expressions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] EvaluatedExpression { get => this._evaluatedExpression; set => this._evaluatedExpression = value; }

        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public string IfNotExistDetailResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetailsInternal)IfNotExistsDetail).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetailsInternal)IfNotExistsDetail).ResourceId = value ?? null; }

        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Inlined)]
        public int? IfNotExistDetailTotalResource { get => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetailsInternal)IfNotExistsDetail).TotalResource; set => ((Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetailsInternal)IfNotExistsDetail).TotalResource = value ?? default(int); }

        /// <summary>Backing field for <see cref="IfNotExistsDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails _ifNotExistsDetail;

        /// <summary>Evaluation details of IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Origin(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails IfNotExistsDetail { get => (this._ifNotExistsDetail = this._ifNotExistsDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IfNotExistsEvaluationDetails()); set => this._ifNotExistsDetail = value; }

        /// <summary>Internal Acessors for IfNotExistsDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IPolicyEvaluationDetailsAutoGeneratedInternal.IfNotExistsDetail { get => (this._ifNotExistsDetail = this._ifNotExistsDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IfNotExistsEvaluationDetails()); set { {_ifNotExistsDetail = value;} } }

        /// <summary>Creates an new <see cref="PolicyEvaluationDetailsAutoGenerated" /> instance.</summary>
        public PolicyEvaluationDetailsAutoGenerated()
        {

        }
    }
    /// Policy evaluation details.
    public partial interface IPolicyEvaluationDetailsAutoGenerated :
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.IJsonSerializable
    {
        /// <summary>Details of the evaluated expressions.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Details of the evaluated expressions.",
        SerializedName = @"evaluatedExpressions",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails) })]
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] EvaluatedExpression { get; set; }
        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ID of the last evaluated resource for IfNotExists effect.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string IfNotExistDetailResourceId { get; set; }
        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Total number of resources to which the existence condition is applicable.",
        SerializedName = @"totalResources",
        PossibleTypes = new [] { typeof(int) })]
        int? IfNotExistDetailTotalResource { get; set; }

    }
    /// Policy evaluation details.
    internal partial interface IPolicyEvaluationDetailsAutoGeneratedInternal

    {
        /// <summary>Details of the evaluated expressions.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IExpressionEvaluationDetails[] EvaluatedExpression { get; set; }
        /// <summary>ID of the last evaluated resource for IfNotExists effect.</summary>
        string IfNotExistDetailResourceId { get; set; }
        /// <summary>Total number of resources to which the existence condition is applicable.</summary>
        int? IfNotExistDetailTotalResource { get; set; }
        /// <summary>Evaluation details of IfNotExists effect.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20191001.IIfNotExistsEvaluationDetails IfNotExistsDetail { get; set; }

    }
}