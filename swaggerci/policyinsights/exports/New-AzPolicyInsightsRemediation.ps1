
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Creates or updates a remediation at subscription scope.
.Description
Creates or updates a remediation at subscription scope.
.Example
{{ Add code here }}
.Example
{{ Add code here }}

.Inputs
Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediation
.Inputs
Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IPolicyInsightsIdentity
.Outputs
Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediation
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IPolicyInsightsIdentity>: Identity Parameter
  [AttestationName <String>]: The name of the attestation.
  [AuthorizationNamespace <String>]: The namespace for Microsoft Authorization resource provider; only "Microsoft.Authorization" is allowed.
  [Id <String>]: Resource identity path
  [ManagementGroupId <String>]: Management group ID.
  [ManagementGroupName <String>]: Management group name.
  [ManagementGroupsNamespace <ManagementGroupsNamespaceType?>]: The namespace for Microsoft Management RP; only "Microsoft.Management" is allowed.
  [PolicyAssignmentName <String>]: Policy assignment name.
  [PolicyDefinitionName <String>]: Policy definition name.
  [PolicyEventsResource <String>]: The name of the virtual resource under PolicyEvents resource type; only "default" is allowed.
  [PolicySetDefinitionName <String>]: Policy set definition name.
  [PolicyStatesResource <PolicyStatesResource?>]: The virtual resource under PolicyStates resource type. In a given time range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy state(s).
  [PolicyStatesSummaryResource <String>]: The virtual resource under PolicyStates resource type for summarize action. In a given time range, 'latest' represents the latest policy state(s) and is the only allowed value.
  [PolicyTrackedResourcesResource <PolicyTrackedResourcesResourceType?>]: The name of the virtual resource under PolicyTrackedResources resource type; only "default" is allowed.
  [RemediationName <String>]: The name of the remediation.
  [ResourceGroupName <String>]: Resource group name.
  [ResourceId <String>]: Resource ID.
  [ResourceName <String>]: The name of the policy metadata resource.
  [SubscriptionId <String>]: Microsoft Azure subscription ID.

PARAMETER <IRemediation>: The remediation definition.
  [FailureThresholdPercentage <Single?>]: A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold.
  [FilterLocation <String[]>]: The resource locations that will be remediated.
  [ParallelDeployment <Int32?>]: Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used.
  [PolicyAssignmentId <String>]: The resource ID of the policy assignment that should be remediated.
  [PolicyDefinitionReferenceId <String>]: The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition.
  [ResourceCount <Int32?>]: Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used.
  [ResourceDiscoveryMode <ResourceDiscoveryMode?>]: The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified.
  [SystemDataCreatedAt <DateTime?>]: The timestamp of resource creation (UTC).
  [SystemDataCreatedBy <String>]: The identity that created the resource.
  [SystemDataCreatedByType <CreatedByType?>]: The type of identity that created the resource.
  [SystemDataLastModifiedAt <DateTime?>]: The timestamp of resource last modification (UTC)
  [SystemDataLastModifiedBy <String>]: The identity that last modified the resource.
  [SystemDataLastModifiedByType <CreatedByType?>]: The type of identity that last modified the resource.
.Link
https://docs.microsoft.com/en-us/powershell/module/az.policyinsights/new-azpolicyinsightsremediation
#>
function New-AzPolicyInsightsRemediation {
[OutputType([Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediation])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='Create2', Mandatory)]
    [Parameter(ParameterSetName='Create3', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded2', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded3', Mandatory)]
    [Alias('RemediationName')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Path')]
    [System.String]
    # The name of the remediation.
    ${Name},

    [Parameter(ParameterSetName='Create1')]
    [Parameter(ParameterSetName='Create2')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.DefaultInfo(Script='(Get-AzContext).Subscription.Id')]
    [System.String]
    # Microsoft Azure subscription ID.
    ${SubscriptionId},

    [Parameter(ParameterSetName='Create2', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded2', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Path')]
    [System.String]
    # Resource group name.
    ${ResourceGroupName},

    [Parameter(ParameterSetName='Create3', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded3', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Path')]
    [System.String]
    # Resource ID.
    ${ResourceId},

    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Path')]
    [System.String]
    # Management group ID.
    ${ManagementGroupId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity2', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity3', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Path')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.IPolicyInsightsIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='Create2', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='Create3', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity2', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity3', Mandatory, ValueFromPipeline)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Models.Api20211001.IRemediation]
    # The remediation definition.
    # To construct, see NOTES section for PARAMETER properties and create a hash table.
    ${Parameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [System.Single]
    # A number between 0.0 to 1.0 representing the percentage failure threshold.
    # The remediation will fail if the percentage of failed remediation operations (i.e.
    # failed deployments) exceeds this threshold.
    ${FailureThresholdPercentage},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [AllowEmptyCollection()]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [System.String[]]
    # The resource locations that will be remediated.
    ${FilterLocation},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [System.Int32]
    # Determines how many resources to remediate at any given time.
    # Can be used to increase or reduce the pace of the remediation.
    # If not provided, the default parallel deployments value is used.
    ${ParallelDeployment},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [System.String]
    # The resource ID of the policy assignment that should be remediated.
    ${PolicyAssignmentId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [System.String]
    # The policy definition reference ID of the individual definition that should be remediated.
    # Required when the policy assignment being remediated assigns a policy set definition.
    ${PolicyDefinitionReferenceId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [System.Int32]
    # Determines the max number of resources that can be remediated by the remediation job.
    # If not provided, the default resource count is used.
    ${ResourceCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateExpanded2')]
    [Parameter(ParameterSetName='CreateExpanded3')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded2')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded3')]
    [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode])]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Body')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Support.ResourceDiscoveryMode]
    # The way resources to remediate are discovered.
    # Defaults to ExistingNonCompliant if not specified.
    ${ResourceDiscoveryMode},

    [Parameter()]
    [Alias('AzureRMContext', 'AzureCredential')]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Azure')]
    [System.Management.Automation.PSObject]
    # The credentials, account, tenant, and subscription used for communication with Azure.
    ${DefaultProfile},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Runtime')]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName

        if ($null -eq [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion) {
            [Microsoft.WindowsAzure.Commands.Utilities.Common.AzurePSCmdlet]::PowerShellVersion = $Host.Version.ToString()
        }         
        $preTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        if ($preTelemetryId -eq '') {
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId =(New-Guid).ToString()
            [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.module]::Instance.Telemetry.Invoke('Create', $MyInvocation, $parameterSet, $PSCmdlet)
        } else {
            $internalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
            if ($internalCalledCmdlets -eq '') {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $MyInvocation.MyCommand.Name
            } else {
                [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets += ',' + $MyInvocation.MyCommand.Name
            }
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = 'internal'
        }

        $mapping = @{
            Create1 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_Create1';
            Create2 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_Create2';
            Create3 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_Create3';
            CreateExpanded = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateExpanded';
            CreateExpanded1 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateExpanded1';
            CreateExpanded2 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateExpanded2';
            CreateExpanded3 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateExpanded3';
            CreateViaIdentity1 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateViaIdentity1';
            CreateViaIdentity2 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateViaIdentity2';
            CreateViaIdentity3 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateViaIdentity3';
            CreateViaIdentityExpanded1 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateViaIdentityExpanded1';
            CreateViaIdentityExpanded2 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateViaIdentityExpanded2';
            CreateViaIdentityExpanded3 = 'Az.PolicyInsights.private\New-AzPolicyInsightsRemediation_CreateViaIdentityExpanded3';
        }
        if (('Create1', 'Create2', 'CreateExpanded1', 'CreateExpanded2') -contains $parameterSet -and -not $PSBoundParameters.ContainsKey('SubscriptionId')) {
            $PSBoundParameters['SubscriptionId'] = (Get-AzContext).Subscription.Id
        }
        $cmdInfo = Get-Command -Name $mapping[$parameterSet]
        [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.Runtime.MessageAttributeHelper]::ProcessCustomAttributesAtRuntime($cmdInfo, $MyInvocation, $parameterSet, $PSCmdlet)
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }

    finally {
        $backupTelemetryId = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId
        $backupInternalCalledCmdlets = [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
    }

}
end {
    try {
        $steppablePipeline.End()

        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $backupTelemetryId
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::InternalCalledCmdlets = $backupInternalCalledCmdlets
        if ($preTelemetryId -eq '') {
            [Microsoft.Azure.PowerShell.Cmdlets.PolicyInsights.module]::Instance.Telemetry.Invoke('Send', $MyInvocation, $parameterSet, $PSCmdlet)
            [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        }
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::TelemetryId = $preTelemetryId

    } catch {
        [Microsoft.WindowsAzure.Commands.Common.MetricHelper]::ClearTelemetryContext()
        throw
    }
} 
}
