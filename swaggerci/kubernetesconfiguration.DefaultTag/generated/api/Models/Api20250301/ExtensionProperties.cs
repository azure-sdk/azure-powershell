// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Extensions;

    /// <summary>Properties of an Extension resource</summary>
    public partial class ExtensionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal
    {

        /// <summary>Backing field for <see cref="AdditionalDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetails _additionalDetail;

        /// <summary>Additional details provided by the publisher of the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetails AdditionalDetail { get => (this._additionalDetail = this._additionalDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.AdditionalDetails()); }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AdditionalDetailDoc { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetailsInternal)AdditionalDetail).Doc; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetailsInternal)AdditionalDetail).Doc = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AdditionalDetailReleaseNote { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetailsInternal)AdditionalDetail).ReleaseNote; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetailsInternal)AdditionalDetail).ReleaseNote = value ?? null; }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AdditionalDetailTroubleshootingGuide { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetailsInternal)AdditionalDetail).TroubleshootingGuide; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetailsInternal)AdditionalDetail).TroubleshootingGuide = value ?? null; }

        /// <summary>The client ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AkAssignedIdentityClientId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).ClientId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).ClientId = value ?? null; }

        /// <summary>The object ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AkAssignedIdentityObjectId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).ObjectId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).ObjectId = value ?? null; }

        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AkAssignedIdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).PrincipalId; }

        /// <summary>The ID of the resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AkAssignedIdentityResourceId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).ResourceId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).ResourceId = value ?? null; }

        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string AkAssignedIdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).TenantId; }

        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AksIdentityType? AkAssignedIdentityType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).Type = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AksIdentityType)""); }

        /// <summary>Backing field for <see cref="AksAssignedIdentity" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentity _aksAssignedIdentity;

        /// <summary>Identity of the Extension resource in an AKS cluster</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentity AksAssignedIdentity { get => (this._aksAssignedIdentity = this._aksAssignedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ExtensionPropertiesAksAssignedIdentity()); set => this._aksAssignedIdentity = value; }

        /// <summary>Backing field for <see cref="AutoUpgradeMinorVersion" /> property.</summary>
        private bool? _autoUpgradeMinorVersion;

        /// <summary>
        /// Flag to note if this extension participates in auto upgrade of minor version, or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public bool? AutoUpgradeMinorVersion { get => this._autoUpgradeMinorVersion; set => this._autoUpgradeMinorVersion = value; }

        /// <summary>Backing field for <see cref="AutoUpgradeMode" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AutoUpgradeMode? _autoUpgradeMode;

        /// <summary>The upgrade mode for auto upgrade. The default is 'compatible'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AutoUpgradeMode? AutoUpgradeMode { get => this._autoUpgradeMode; set => this._autoUpgradeMode = value; }

        /// <summary>
        /// Namespace where the extension Release must be placed, for a Cluster scoped extension. If this namespace does not exist,
        /// it will be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string ClusterReleaseNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).ClusterReleaseNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).ClusterReleaseNamespace = value ?? null; }

        /// <summary>Backing field for <see cref="ConfigurationProtectedSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationProtectedSettings _configurationProtectedSetting;

        /// <summary>
        /// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationProtectedSettings ConfigurationProtectedSetting { get => (this._configurationProtectedSetting = this._configurationProtectedSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ExtensionPropertiesConfigurationProtectedSettings()); set => this._configurationProtectedSetting = value; }

        /// <summary>Backing field for <see cref="ConfigurationSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationSettings _configurationSetting;

        /// <summary>Configuration settings, as name-value pairs for configuring this extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationSettings ConfigurationSetting { get => (this._configurationSetting = this._configurationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ExtensionPropertiesConfigurationSettings()); set => this._configurationSetting = value; }

        /// <summary>Backing field for <see cref="CurrentVersion" /> property.</summary>
        private string _currentVersion;

        /// <summary>Currently installed version of the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public string CurrentVersion { get => this._currentVersion; }

        /// <summary>Backing field for <see cref="CustomLocationSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesCustomLocationSettings _customLocationSetting;

        /// <summary>Custom Location settings properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesCustomLocationSettings CustomLocationSetting { get => (this._customLocationSetting = this._customLocationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ExtensionPropertiesCustomLocationSettings()); }

        /// <summary>Backing field for <see cref="ErrorInfo" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail _errorInfo;

        /// <summary>Error information from the Agent - e.g. errors during installation.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail ErrorInfo { get => (this._errorInfo = this._errorInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.ErrorDetail()); }

        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorAdditionalInfo[] ErrorInfoAdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).AdditionalInfo; }

        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string ErrorInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Code; }

        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail[] ErrorInfoDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Detail; }

        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string ErrorInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Message; }

        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string ErrorInfoTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Target; }

        /// <summary>Backing field for <see cref="ExtensionState" /> property.</summary>
        private string _extensionState;

        /// <summary>State of the extension on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public string ExtensionState { get => this._extensionState; }

        /// <summary>Backing field for <see cref="ExtensionType" /> property.</summary>
        private string _extensionType;

        /// <summary>
        /// Type of the Extension, of which this resource is an instance of. It must be one of the Extension Types registered with
        /// Microsoft.KubernetesConfiguration by the Extension publisher.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public string ExtensionType { get => this._extensionType; set => this._extensionType = value; }

        /// <summary>Backing field for <see cref="IsSystemExtension" /> property.</summary>
        private bool? _isSystemExtension;

        /// <summary>Flag to note if this extension is a system extension</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public bool? IsSystemExtension { get => this._isSystemExtension; }

        /// <summary>Backing field for <see cref="ManagementDetail" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetails _managementDetail;

        /// <summary>Metadata about the managing entity and the permitted operations.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetails ManagementDetail { get => (this._managementDetail = this._managementDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ManagementDetails()); }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsAccessDetailsItem[] ManagementDetailAccessDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsInternal)ManagementDetail).AccessDetail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsInternal)ManagementDetail).AccessDetail = value ?? null /* arrayOf */; }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string ManagementDetailCategory { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsInternal)ManagementDetail).Category; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsInternal)ManagementDetail).Category = value ?? null; }

        /// <summary>Internal Acessors for AdditionalDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetails Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.AdditionalDetail { get => (this._additionalDetail = this._additionalDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.AdditionalDetails()); set { {_additionalDetail = value;} } }

        /// <summary>Internal Acessors for AkAssignedIdentityPrincipalId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.AkAssignedIdentityPrincipalId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).PrincipalId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).PrincipalId = value; }

        /// <summary>Internal Acessors for AkAssignedIdentityTenantId</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.AkAssignedIdentityTenantId { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).TenantId; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentityInternal)AksAssignedIdentity).TenantId = value; }

        /// <summary>Internal Acessors for AksAssignedIdentity</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentity Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.AksAssignedIdentity { get => (this._aksAssignedIdentity = this._aksAssignedIdentity ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ExtensionPropertiesAksAssignedIdentity()); set { {_aksAssignedIdentity = value;} } }

        /// <summary>Internal Acessors for CurrentVersion</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.CurrentVersion { get => this._currentVersion; set { {_currentVersion = value;} } }

        /// <summary>Internal Acessors for CustomLocationSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesCustomLocationSettings Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.CustomLocationSetting { get => (this._customLocationSetting = this._customLocationSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ExtensionPropertiesCustomLocationSettings()); set { {_customLocationSetting = value;} } }

        /// <summary>Internal Acessors for ErrorInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ErrorInfo { get => (this._errorInfo = this._errorInfo ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.ErrorDetail()); set { {_errorInfo = value;} } }

        /// <summary>Internal Acessors for ErrorInfoAdditionalInfo</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorAdditionalInfo[] Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ErrorInfoAdditionalInfo { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).AdditionalInfo; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).AdditionalInfo = value; }

        /// <summary>Internal Acessors for ErrorInfoCode</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ErrorInfoCode { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Code; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Code = value; }

        /// <summary>Internal Acessors for ErrorInfoDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail[] Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ErrorInfoDetail { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Detail; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Detail = value; }

        /// <summary>Internal Acessors for ErrorInfoMessage</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ErrorInfoMessage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Message; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Message = value; }

        /// <summary>Internal Acessors for ErrorInfoTarget</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ErrorInfoTarget { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Target; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetailInternal)ErrorInfo).Target = value; }

        /// <summary>Internal Acessors for ExtensionState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ExtensionState { get => this._extensionState; set { {_extensionState = value;} } }

        /// <summary>Internal Acessors for IsSystemExtension</summary>
        bool? Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.IsSystemExtension { get => this._isSystemExtension; set { {_isSystemExtension = value;} } }

        /// <summary>Internal Acessors for ManagementDetail</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetails Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ManagementDetail { get => (this._managementDetail = this._managementDetail ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.ManagementDetails()); set { {_managementDetail = value;} } }

        /// <summary>Internal Acessors for PackageUri</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.PackageUri { get => this._packageUri; set { {_packageUri = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.ProvisioningState? Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ProvisioningState { get => this._provisioningState; set { {_provisioningState = value;} } }

        /// <summary>Internal Acessors for Scope</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScope Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.Scope { get => (this._scope = this._scope ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.Scope()); set { {_scope = value;} } }

        /// <summary>Internal Acessors for ScopeCluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeCluster Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ScopeCluster { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).Cluster; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).Cluster = value; }

        /// <summary>Internal Acessors for ScopeNamespace</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeNamespace Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesInternal.ScopeNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).Namespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).Namespace = value; }

        /// <summary>
        /// Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it
        /// will be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Inlined)]
        public string NamespaceTargetNamespace { get => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).NamespaceTargetNamespace; set => ((Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeInternal)Scope).NamespaceTargetNamespace = value ?? null; }

        /// <summary>Backing field for <see cref="PackageUri" /> property.</summary>
        private string _packageUri;

        /// <summary>Uri of the Helm package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public string PackageUri { get => this._packageUri; }

        /// <summary>Backing field for <see cref="ProvisioningState" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.ProvisioningState? _provisioningState;

        /// <summary>Status of installation of this extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.ProvisioningState? ProvisioningState { get => this._provisioningState; }

        /// <summary>Backing field for <see cref="ReleaseTrain" /> property.</summary>
        private string _releaseTrain;

        /// <summary>
        /// ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion
        /// is 'true'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public string ReleaseTrain { get => this._releaseTrain; set => this._releaseTrain = value; }

        /// <summary>Backing field for <see cref="Scope" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScope _scope;

        /// <summary>Scope at which the extension is installed.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScope Scope { get => (this._scope = this._scope ?? new Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.Scope()); set => this._scope = value; }

        /// <summary>Backing field for <see cref="Statuses" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionStatus[] _statuses;

        /// <summary>Status from this extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionStatus[] Statuses { get => this._statuses; set => this._statuses = value; }

        /// <summary>Backing field for <see cref="Version" /> property.</summary>
        private string _version;

        /// <summary>
        /// User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be
        /// 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Origin(Microsoft.Azure.PowerShell.Cmdlets.Extensions.PropertyOrigin.Owned)]
        public string Version { get => this._version; set => this._version = value; }

        /// <summary>Creates an new <see cref="ExtensionProperties" /> instance.</summary>
        public ExtensionProperties()
        {

        }
    }
    /// Properties of an Extension resource
    public partial interface IExtensionProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.IJsonSerializable
    {
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"docs",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalDetailDoc { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"releaseNotes",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalDetailReleaseNote { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"troubleshootingGuide",
        PossibleTypes = new [] { typeof(string) })]
        string AdditionalDetailTroubleshootingGuide { get; set; }
        /// <summary>The client ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The client ID of resource identity.",
        SerializedName = @"clientId",
        PossibleTypes = new [] { typeof(string) })]
        string AkAssignedIdentityClientId { get; set; }
        /// <summary>The object ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The object ID of resource identity.",
        SerializedName = @"objectId",
        PossibleTypes = new [] { typeof(string) })]
        string AkAssignedIdentityObjectId { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The principal ID of resource identity.",
        SerializedName = @"principalId",
        PossibleTypes = new [] { typeof(string) })]
        string AkAssignedIdentityPrincipalId { get;  }
        /// <summary>The ID of the resource identity.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The ID of the resource identity.",
        SerializedName = @"resourceId",
        PossibleTypes = new [] { typeof(string) })]
        string AkAssignedIdentityResourceId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The tenant ID of resource.",
        SerializedName = @"tenantId",
        PossibleTypes = new [] { typeof(string) })]
        string AkAssignedIdentityTenantId { get;  }
        /// <summary>The identity type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The identity type.",
        SerializedName = @"type",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AksIdentityType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AksIdentityType? AkAssignedIdentityType { get; set; }
        /// <summary>
        /// Flag to note if this extension participates in auto upgrade of minor version, or not.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Flag to note if this extension participates in auto upgrade of minor version, or not.",
        SerializedName = @"autoUpgradeMinorVersion",
        PossibleTypes = new [] { typeof(bool) })]
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>The upgrade mode for auto upgrade. The default is 'compatible'.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The upgrade mode for auto upgrade. The default is 'compatible'.",
        SerializedName = @"autoUpgradeMode",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AutoUpgradeMode) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AutoUpgradeMode? AutoUpgradeMode { get; set; }
        /// <summary>
        /// Namespace where the extension Release must be placed, for a Cluster scoped extension. If this namespace does not exist,
        /// it will be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this namespace does not exist, it will be created",
        SerializedName = @"releaseNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string ClusterReleaseNamespace { get; set; }
        /// <summary>
        /// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration settings that are sensitive, as name-value pairs for configuring this extension.",
        SerializedName = @"configurationProtectedSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationProtectedSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationProtectedSettings ConfigurationProtectedSetting { get; set; }
        /// <summary>Configuration settings, as name-value pairs for configuring this extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Configuration settings, as name-value pairs for configuring this extension.",
        SerializedName = @"configurationSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationSettings ConfigurationSetting { get; set; }
        /// <summary>Currently installed version of the extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Currently installed version of the extension.",
        SerializedName = @"currentVersion",
        PossibleTypes = new [] { typeof(string) })]
        string CurrentVersion { get;  }
        /// <summary>Custom Location settings properties.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Custom Location settings properties.",
        SerializedName = @"customLocationSettings",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesCustomLocationSettings) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesCustomLocationSettings CustomLocationSetting { get;  }
        /// <summary>The error additional info.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error additional info.",
        SerializedName = @"additionalInfo",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorAdditionalInfo) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorAdditionalInfo[] ErrorInfoAdditionalInfo { get;  }
        /// <summary>The error code.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error code.",
        SerializedName = @"code",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorInfoCode { get;  }
        /// <summary>The error details.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error details.",
        SerializedName = @"details",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail[] ErrorInfoDetail { get;  }
        /// <summary>The error message.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error message.",
        SerializedName = @"message",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorInfoMessage { get;  }
        /// <summary>The error target.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"The error target.",
        SerializedName = @"target",
        PossibleTypes = new [] { typeof(string) })]
        string ErrorInfoTarget { get;  }
        /// <summary>State of the extension on the cluster.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"State of the extension on the cluster.",
        SerializedName = @"extensionState",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionState { get;  }
        /// <summary>
        /// Type of the Extension, of which this resource is an instance of. It must be one of the Extension Types registered with
        /// Microsoft.KubernetesConfiguration by the Extension publisher.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.",
        SerializedName = @"extensionType",
        PossibleTypes = new [] { typeof(string) })]
        string ExtensionType { get; set; }
        /// <summary>Flag to note if this extension is a system extension</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Flag to note if this extension is a system extension",
        SerializedName = @"isSystemExtension",
        PossibleTypes = new [] { typeof(bool) })]
        bool? IsSystemExtension { get;  }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"accessDetails",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsAccessDetailsItem) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsAccessDetailsItem[] ManagementDetailAccessDetail { get; set; }

        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"",
        SerializedName = @"category",
        PossibleTypes = new [] { typeof(string) })]
        string ManagementDetailCategory { get; set; }
        /// <summary>
        /// Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it
        /// will be created
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created",
        SerializedName = @"targetNamespace",
        PossibleTypes = new [] { typeof(string) })]
        string NamespaceTargetNamespace { get; set; }
        /// <summary>Uri of the Helm package</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Uri of the Helm package",
        SerializedName = @"packageUri",
        PossibleTypes = new [] { typeof(string) })]
        string PackageUri { get;  }
        /// <summary>Status of installation of this extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Status of installation of this extension.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.ProvisioningState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.ProvisioningState? ProvisioningState { get;  }
        /// <summary>
        /// ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion
        /// is 'true'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.",
        SerializedName = @"releaseTrain",
        PossibleTypes = new [] { typeof(string) })]
        string ReleaseTrain { get; set; }
        /// <summary>Status from this extension.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Status from this extension.",
        SerializedName = @"statuses",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionStatus) })]
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionStatus[] Statuses { get; set; }
        /// <summary>
        /// User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be
        /// 'false'.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Extensions.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'.",
        SerializedName = @"version",
        PossibleTypes = new [] { typeof(string) })]
        string Version { get; set; }

    }
    /// Properties of an Extension resource
    internal partial interface IExtensionPropertiesInternal

    {
        /// <summary>Additional details provided by the publisher of the extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IAdditionalDetails AdditionalDetail { get; set; }

        string AdditionalDetailDoc { get; set; }

        string AdditionalDetailReleaseNote { get; set; }

        string AdditionalDetailTroubleshootingGuide { get; set; }
        /// <summary>The client ID of resource identity.</summary>
        string AkAssignedIdentityClientId { get; set; }
        /// <summary>The object ID of resource identity.</summary>
        string AkAssignedIdentityObjectId { get; set; }
        /// <summary>The principal ID of resource identity.</summary>
        string AkAssignedIdentityPrincipalId { get; set; }
        /// <summary>The ID of the resource identity.</summary>
        string AkAssignedIdentityResourceId { get; set; }
        /// <summary>The tenant ID of resource.</summary>
        string AkAssignedIdentityTenantId { get; set; }
        /// <summary>The identity type.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AksIdentityType? AkAssignedIdentityType { get; set; }
        /// <summary>Identity of the Extension resource in an AKS cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesAksAssignedIdentity AksAssignedIdentity { get; set; }
        /// <summary>
        /// Flag to note if this extension participates in auto upgrade of minor version, or not.
        /// </summary>
        bool? AutoUpgradeMinorVersion { get; set; }
        /// <summary>The upgrade mode for auto upgrade. The default is 'compatible'.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.AutoUpgradeMode? AutoUpgradeMode { get; set; }
        /// <summary>
        /// Namespace where the extension Release must be placed, for a Cluster scoped extension. If this namespace does not exist,
        /// it will be created
        /// </summary>
        string ClusterReleaseNamespace { get; set; }
        /// <summary>
        /// Configuration settings that are sensitive, as name-value pairs for configuring this extension.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationProtectedSettings ConfigurationProtectedSetting { get; set; }
        /// <summary>Configuration settings, as name-value pairs for configuring this extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesConfigurationSettings ConfigurationSetting { get; set; }
        /// <summary>Currently installed version of the extension.</summary>
        string CurrentVersion { get; set; }
        /// <summary>Custom Location settings properties.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionPropertiesCustomLocationSettings CustomLocationSetting { get; set; }
        /// <summary>Error information from the Agent - e.g. errors during installation.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail ErrorInfo { get; set; }
        /// <summary>The error additional info.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorAdditionalInfo[] ErrorInfoAdditionalInfo { get; set; }
        /// <summary>The error code.</summary>
        string ErrorInfoCode { get; set; }
        /// <summary>The error details.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20.IErrorDetail[] ErrorInfoDetail { get; set; }
        /// <summary>The error message.</summary>
        string ErrorInfoMessage { get; set; }
        /// <summary>The error target.</summary>
        string ErrorInfoTarget { get; set; }
        /// <summary>State of the extension on the cluster.</summary>
        string ExtensionState { get; set; }
        /// <summary>
        /// Type of the Extension, of which this resource is an instance of. It must be one of the Extension Types registered with
        /// Microsoft.KubernetesConfiguration by the Extension publisher.
        /// </summary>
        string ExtensionType { get; set; }
        /// <summary>Flag to note if this extension is a system extension</summary>
        bool? IsSystemExtension { get; set; }
        /// <summary>Metadata about the managing entity and the permitted operations.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetails ManagementDetail { get; set; }

        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IManagementDetailsAccessDetailsItem[] ManagementDetailAccessDetail { get; set; }

        string ManagementDetailCategory { get; set; }
        /// <summary>
        /// Namespace where the extension will be created for an Namespace scoped extension. If this namespace does not exist, it
        /// will be created
        /// </summary>
        string NamespaceTargetNamespace { get; set; }
        /// <summary>Uri of the Helm package</summary>
        string PackageUri { get; set; }
        /// <summary>Status of installation of this extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Support.ProvisioningState? ProvisioningState { get; set; }
        /// <summary>
        /// ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion
        /// is 'true'.
        /// </summary>
        string ReleaseTrain { get; set; }
        /// <summary>Scope at which the extension is installed.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScope Scope { get; set; }
        /// <summary>Specifies that the scope of the extension is Cluster</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeCluster ScopeCluster { get; set; }
        /// <summary>Specifies that the scope of the extension is Namespace</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IScopeNamespace ScopeNamespace { get; set; }
        /// <summary>Status from this extension.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Extensions.Models.Api20250301.IExtensionStatus[] Statuses { get; set; }
        /// <summary>
        /// User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be
        /// 'false'.
        /// </summary>
        string Version { get; set; }

    }
}