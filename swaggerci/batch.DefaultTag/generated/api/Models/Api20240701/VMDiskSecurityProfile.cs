// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    /// <summary>
    /// Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and is
    /// required when using Confidential VMs.
    /// </summary>
    public partial class VMDiskSecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfile,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfileInternal
    {

        /// <summary>Backing field for <see cref="SecurityEncryptionType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? _securityEncryptionType;

        /// <summary>
        /// Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState
        /// blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only
        /// Confidential VMs and required when using Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? SecurityEncryptionType { get => this._securityEncryptionType; set => this._securityEncryptionType = value; }

        /// <summary>Creates an new <see cref="VMDiskSecurityProfile" /> instance.</summary>
        public VMDiskSecurityProfile()
        {

        }
    }
    /// Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and is
    /// required when using Confidential VMs.
    public partial interface IVMDiskSecurityProfile :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState
        /// blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only
        /// Confidential VMs and required when using Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and required when using Confidential VMs.",
        SerializedName = @"securityEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? SecurityEncryptionType { get; set; }

    }
    /// Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and is
    /// required when using Confidential VMs.
    internal partial interface IVMDiskSecurityProfileInternal

    {
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState
        /// blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only
        /// Confidential VMs and required when using Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? SecurityEncryptionType { get; set; }

    }
}