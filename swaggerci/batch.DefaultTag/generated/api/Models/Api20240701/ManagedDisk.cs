// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Extensions;

    public partial class ManagedDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IManagedDisk,
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IManagedDiskInternal
    {

        /// <summary>Internal Acessors for SecurityProfile</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfile Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IManagedDiskInternal.SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.VMDiskSecurityProfile()); set { {_securityProfile = value;} } }

        /// <summary>Backing field for <see cref="SecurityProfile" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfile _securityProfile;

        /// <summary>
        /// Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and is
        /// required when using Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfile SecurityProfile { get => (this._securityProfile = this._securityProfile ?? new Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.VMDiskSecurityProfile()); set => this._securityProfile = value; }

        /// <summary>
        /// Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState
        /// blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only
        /// Confidential VMs and required when using Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfileInternal)SecurityProfile).SecurityEncryptionType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfileInternal)SecurityProfile).SecurityEncryptionType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes)""); }

        /// <summary>Backing field for <see cref="StorageAccountType" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? _storageAccountType;

        /// <summary>The storage account type for use in creating data disks or OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Origin(Microsoft.Azure.PowerShell.Cmdlets.Batch.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? StorageAccountType { get => this._storageAccountType; set => this._storageAccountType = value; }

        /// <summary>Creates an new <see cref="ManagedDisk" /> instance.</summary>
        public ManagedDisk()
        {

        }
    }
    public partial interface IManagedDisk :
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.IJsonSerializable
    {
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState
        /// blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only
        /// Confidential VMs and required when using Confidential VMs.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only Confidential VMs and required when using Confidential VMs.",
        SerializedName = @"securityEncryptionType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>The storage account type for use in creating data disks or OS disk.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Batch.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The storage account type for use in creating data disks or OS disk.",
        SerializedName = @"storageAccountType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? StorageAccountType { get; set; }

    }
    internal partial interface IManagedDiskInternal

    {
        /// <summary>
        /// Specifies the security profile settings for the managed disk. **Note**: It can only be set for Confidential VMs and is
        /// required when using Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Models.Api20240701.IVMDiskSecurityProfile SecurityProfile { get; set; }
        /// <summary>
        /// Specifies the EncryptionType of the managed disk. It is set to VMGuestStateOnly for encryption of just the VMGuestState
        /// blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob. **Note**: It can be set for only
        /// Confidential VMs and required when using Confidential VMs.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.SecurityEncryptionTypes? SecurityProfileSecurityEncryptionType { get; set; }
        /// <summary>The storage account type for use in creating data disks or OS disk.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.StorageAccountType? StorageAccountType { get; set; }

    }
}