// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Batch.Support
{

    /// <summary>Determines how a pool communicates with the Batch service.</summary>
    public partial struct NodeCommunicationMode :
        System.IEquatable<NodeCommunicationMode>
    {
        /// <summary>
        /// Nodes using the Classic communication mode require inbound TCP communication on ports 29876 and 29877 from the "BatchNodeManagement.{region}"
        /// service tag and outbound TCP communication on port 443 to the "Storage.region" and "BatchNodeManagement.{region}" service
        /// tags.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode Classic = @"Classic";

        /// <summary>The node communication mode is automatically set by the Batch service.</summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode Default = @"Default";

        /// <summary>
        /// Nodes using the Simplified communication mode require outbound TCP communication on port 443 to the "BatchNodeManagement.{region}"
        /// service tag. No open inbound ports are required.
        /// </summary>
        public static Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode Simplified = @"Simplified";

        /// <summary>the value for an instance of the <see cref="NodeCommunicationMode" /> Enum.</summary>
        private string _value { get; set; }

        /// <summary>Conversion from arbitrary object to NodeCommunicationMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="NodeCommunicationMode" />.</param>
        internal static object CreateFrom(object value)
        {
            return new NodeCommunicationMode(global::System.Convert.ToString(value));
        }

        /// <summary>Compares values of enum type NodeCommunicationMode</summary>
        /// <param name="e">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public bool Equals(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode e)
        {
            return _value.Equals(e._value);
        }

        /// <summary>Compares values of enum type NodeCommunicationMode (override for Object)</summary>
        /// <param name="obj">the value to compare against this instance.</param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public override bool Equals(object obj)
        {
            return obj is NodeCommunicationMode && Equals((NodeCommunicationMode)obj);
        }

        /// <summary>Returns hashCode for enum NodeCommunicationMode</summary>
        /// <returns>The hashCode of the value</returns>
        public override int GetHashCode()
        {
            return this._value.GetHashCode();
        }

        /// <summary>Creates an instance of the <see cref="NodeCommunicationMode"/> Enum class.</summary>
        /// <param name="underlyingValue">the value to create an instance for.</param>
        private NodeCommunicationMode(string underlyingValue)
        {
            this._value = underlyingValue;
        }

        /// <summary>Returns string representation for NodeCommunicationMode</summary>
        /// <returns>A string for this value.</returns>
        public override string ToString()
        {
            return this._value;
        }

        /// <summary>Implicit operator to convert string to NodeCommunicationMode</summary>
        /// <param name="value">the value to convert to an instance of <see cref="NodeCommunicationMode" />.</param>

        public static implicit operator NodeCommunicationMode(string value)
        {
            return new NodeCommunicationMode(value);
        }

        /// <summary>Implicit operator to convert NodeCommunicationMode to string</summary>
        /// <param name="e">the value to convert to an instance of <see cref="NodeCommunicationMode" />.</param>

        public static implicit operator string(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode e)
        {
            return e._value;
        }

        /// <summary>Overriding != operator for enum NodeCommunicationMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are not equal to the same value</returns>
        public static bool operator !=(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode e1, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>Overriding == operator for enum NodeCommunicationMode</summary>
        /// <param name="e1">the value to compare against <paramref name="e2" /></param>
        /// <param name="e2">the value to compare against <paramref name="e1" /></param>
        /// <returns><c>true</c> if the two instances are equal to the same value</returns>
        public static bool operator ==(Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode e1, Microsoft.Azure.PowerShell.Cmdlets.Batch.Support.NodeCommunicationMode e2)
        {
            return e2.Equals(e1);
        }
    }
}